{"version":3,"sources":["PageNotFound/PageNotFound.module.scss","utilities/components/Header.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","NewsletterForm/NewsletterForm.module.scss","TwitterShareButton/TwitterShareButton.module.scss","MenuAccount/MenuAccount.module.scss","CryptoInput/CryptoInput.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","Governance/ProposalListFilters/ProposalListFilters.module.scss","Tos/Tos.module.scss","Governance/NewProposal/NewProposal.module.scss","DashboardCard/DashboardCard.module.scss","colors.js","theme.js","ExtLink/ExtLink.js","utilities/IdleGovToken.js","SmartNumber/SmartNumber.js","FlexLoader/FlexLoader.js","GenericChart/GenericChart.js","VariationNumber/VariationNumber.js","AllocationChart/AllocationChart.js","AssetField/AssetField.js","DashboardCard/DashboardCard.js","GenericSelector/GenericSelector.js","AssetSelector/AssetSelector.js","TokenSwap/TokenSwap.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","NexusMutual/NexusMutual.js","Title/Title.js","TableRow/TableRow.js","TableCellHeader/TableCellHeader.js","TableHeader/TableHeader.js","AssetsList/AssetsList.js","PortfolioDonut/PortfolioDonut.js","ChartCustomTooltip/ChartCustomTooltip.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","utilities/components/ShortHash.js","TransactionField/TransactionField.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","EarningsEstimation/EarningsEstimation.js","StrategyPage/StrategyPage.js","utilities/components/ModalCard.js","ImageButton/ImageButton.js","utilities/components/BuyModal.js","RoundButton/RoundButton.js","TxProgressBar/TxProgressBar.js","FastBalanceSelector/FastBalanceSelector.js","Migrate/Migrate.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/FunctionsUtil.js","Footer/Footer.js","Tos/Tos.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","Faquestion/Faquestion.js","Faq/Faq.js","FlexCards/FlexCards.js","AuditCard/AuditCard.js","HowItWorks/HowItWorks.js","StrategyBox/StrategyBox.js","NewsletterForm/NewsletterForm.js","RoundIconButton/RoundIconButton.js","FloatingToastMessage/FloatingToastMessage.js","AssetsUnderManagement/AssetsUnderManagement.js","Landing/Landing.js","DashboardMenu/DashboardMenu.js","Stats/StatsChart.js","Rebalance/Rebalance.js","StatsCard/StatsCard.js","Breadcrumb/Breadcrumb.js","utilities/components/DateRangeModal.js","Stats/Stats.js","Utils/Utils.js","FundsOverview/FundsOverview.js","ConnectBox/ConnectBox.js","CurveRedeem/CurveRedeem.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","DepositRedeem/DepositRedeem.js","CardIconButton/CardIconButton.js","EstimatedEarnings/EstimatedEarnings.js","AssetPage/AssetPage.js","CurveDeposit/CurveDeposit.js","PortfolioEquityCurve/PortfolioEquityCurve.js","FundsOverviewCurve/FundsOverviewCurve.js","CurveStrategy/CurveStrategy.js","utilities/components/WelcomeModal.js","utilities/components/TooltipModal.js","utilities/components/MigrateModal.js","utilities/components/UpgradeModal.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","DashboardHeader/DashboardHeader.js","Dashboard/Dashboard.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/GovernanceUtil.js","Governance/ProposalField/ProposalField.js","Governance/ProposalListFilters/ProposalListFilters.js","Governance/ProposalsList/ProposalsList.js","Governance/DelegateField/DelegateField.js","Governance/DelegatesList/DelegatesList.js","Governance/Overview.js","Governance/DelegateVote/DelegateVote.js","Governance/Delegate.js","Governance/NewProposal/NewProposal.js","Governance/CastVote/CastVote.js","Governance/ProposalDetails/ProposalDetails.js","Governance/Proposals.js","Governance/DelegateDetails/DelegateDetails.js","Governance/Leaderboard.js","Governance/Governance.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/tokens/DAI.js","abis/compound/cDAI.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","Footer/Footer.module.scss","LoadingSpinner/LoadingSpinner.module.scss","HowItWorks/HowItWorks.module.scss","GenericSelector/GenericSelector.module.scss","Landing/Landing.module.scss"],"names":["module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","gradientButton","empty","tooltip","radioBtn","bg","twitterIcon","balanceButton","newLink","newPill","mainInput","button","newPillContainerAnim","input","defaultOpacity","hidden","interactive","active","rainbow","disabled","baseColors","black","white","blue","darkBlue","green","yellow","red","blurple","consensysblue","colors","base","text","readableColor","light","tint","dark","shade","theme","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","fonts","serif","sansSerif","counter","space","radii","width","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","gradient-bg","primary-light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","transparent","lineChartStroke","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider","redeem","deposit","migrate","legend","cardBg","transactions","action","send","swap","swapout","boost","receive","default","withdraw","actionBg","status","completed","pending","failed","blacks","whites","zIndices","messageStyle","color","backgroundColor","borderColor","success","warning","danger","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","fontSize","height","minWidth","padding","medium","large","borderRadius","ExtLink","react_default","a","createElement","index_es","Object","assign","target","rel","this","props","children","Component","IdleGovToken","_this","classCallCheck","tokenName","tokenConfig","functionsUtil","setProps","FunctionsUtil","getGlobalConfig","getBalance","asyncToGenerator","regenerator_default","mark","_callee","balance","wrap","_context","prev","next","getTokenBalance","account","sent","BNify","isNaN","abrupt","stop","claimRewards","_ref2","_callee2","callback","callbackReceipt","_context2","contractMethodSendWrapper","_x","_x2","apply","arguments","delegateVesting","_callee3","delegate","founderVesting","_args3","_context3","length","undefined","genericContractCall","console","log","parseInt","initContract","VesterABI","getUnclaimedTokens","_callee4","rewards","_context4","fixTokenDecimals","decimals","getAPR","_ref5","_callee5","token","conversionRate","IDLETokenConfig","cachedDataKey","APR","_ref6","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args5","_context5","enabled","concat","idle","Promise","all","getDistribution","getTokenAllocation","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","times","div","setCachedData","_x3","_x4","getSpeed","_ref8","_callee6","idleTokenAddress","idleSpeeds","_context6","_x5","_ref9","_callee7","cachedData","blocksPerYear","distribution","_context7","getCachedData","address","_x6","getUserDistribution","_callee9","availableTokens","totalSpeed","_args9","_context9","selectedStrategy","availableStrategies","asyncForEach","keys","_ref11","_callee8","_ref12","_ref13","idleSpeed","userPoolShare","tokenSpeed","_context8","getUserPoolShare","plus","_x7","getAvgApr","_callee11","output","totalAllocation","_args11","_context11","_ref15","_callee10","_ref16","_ref17","idleApr","_context10","_x8","SmartNumber","loadUtils","_this2","formattedNumber","number","type","formatMoney","precision","abbreviateNumber","maxPrecision","minPrecision","flexProps","alignItems","flexDirection","justifyContent","forEach","p","showUnit","unitPos","unit","unitProps","FlexLoader","loaderProps","textProps","GenericChart","state","componentUnmounted","window","addEventListener","handleWindowSizeChange","bind","removeEventListener","prevProps","isMobile","newState","objectSpread","parentId","chartContainer","document","getElementById","chartWidth","parseFloat","offsetWidth","parentIdHeight","chartContainerH","chartHeight","setState","ChartType","chartProps","showLoader","data","src_FlexLoader_FlexLoader","minHeight","size","ml","loaderText","VariationNumber","IconDirection","direction","name","iconSize","iconPos","AllocationChart","chartData","selectedSlice","protocolsAllocations","protocolsAllocationsPerc","loadData","prevState","selectedToken","setStateSafe","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","e","_this3","onMouseLeave","sliceLabel","value","tooltipFormat","v","radialLabel","container","inline","display","labels","fontWeight","fontFamily","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","modifiers","margin","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","toLowerCase","protocolAllocationPercParsed","toFixed","push","id","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","position","zIndex","textAlign","mb","src","src_SmartNumber_SmartNumber","src_GenericChart_GenericChart","Pie","AssetField","ready","loadField","fieldName","isRisk","fieldInfo","fieldProps","addGovTokens","govTokens","getGovTokensDistributionSpeed","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","earningsCounter","feePercentage","feesStart","feesEnd","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","_ref10","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","oldTokenConfig","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","startTimestamp","y","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","_args","loadAssetField","tokenBalance","toString","getTokenGovTokens","tokenPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","getTokenFees","getCurveAPY","gt","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","earningsPerc","tokenAPR","migration","oldContract","values","oldProtocols","oldProtocol","foundProtocol","find","protocolPos","indexOf","oldAPY","tokenAPYNoGov","curveAvgSlippage","tokenAPY","allocationChartRowElement","rowId","$allocationChartRowElement","jQuery","innerWidth","css","innerHeight","Math","min","assertThisInitialized","max","strToMoment","Date","format","subtract","_d","getTime","add","random","getFrequencySeconds","getTokenApiData","timestamp","idleRate","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","curve","axisBottom","enableArea","areaOpacity","enableGridX","enableGridY","pointBorderWidth","enableSlices","isInteractive","defs","linearGradientDef","offset","fill","match","PerformanceChartRowElement","$PerformanceChartRowElement","clone","map","idlePrice","minus","blocknumber","pointLabelYOffset","defineProperty","tokenChanged","accountChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","filter","tx","loader","funcProps","icon1","placement","message","tooltipProps","icon2","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","style","ref","_ref14","govTokenConfig","govTokenIndex","key","boxShadow","showDirection","src_VariationNumber_VariationNumber","earningsCurve","distributionSpeed","idleTokenEnabled","apyLong","showTooltip","iconProps","buttonLabel","onClick","handleClick","src_AllocationChart_AllocationChart","formattedValue","_isBigNumber","DashboardCard","isDisabled","isActive","isVisible","isRainbow","cardProps","background","className","styles","mt","titleParentProps","h4","lineHeight","titleProps","description","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","JSON","stringify","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","menuIsOpen","src_DashboardCard_DashboardCard","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","searchInput","searchInputHidden","CustomOption","selectedValue","o","px","py","genericSelector","isFocused","react_select_browser_esm","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","AssetSelector","toUpperCase","src_AssetField_AssetField","mr","showCustomField","showBalance","flex","src_GenericSelector_GenericSelector","changeToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","remoteResources","url","j","split","pop","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","href","loadTokens","toolProps","getContractByName","abi","fromTokenChanged","destTokenChanged","loadKyberWidget","_this4","src_AssetSelector_AssetSelector","my","mx","mainColor","LoadingSpinner","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","NexusMutual","step","steps","1","2","3","loading","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","stepIndex","flexBasis","textDecoration","hoverColor","activeColor","changeSelectedToken","required","border","placeholder","src_ButtonLoader_ButtonLoader","getQuote","Title","HeadingComponent","component","Heading","h1","TableRow","FieldComponent","fieldComponent","cardId","rowProps","cols","colInfo","colIndex","visible","mobile","parentProps","fields","fieldIndex","overflow","colProps","TableCellHeader","ColTitle","whiteSpace","desc","openTooltipModal","TableHeader","pb","src_TableCellHeader_TableCellHeader","AssetsList","enabledTokens","src_TableHeader_TableHeader","src_TableRow_TableRow","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","_ref","getIdleTokenPrice","getGovTokensUserBalances","govTokensUserBalances","govToken","govTokenBalance","tokenPercentage","tokenColorHsl","substr","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","Fragment","ChartCustomTooltip","point","itemPos","xFormatted","ChartCustomTooltipRow","pr","textTransform","dangerouslySetInnerHTML","__html","PortfolioEquity","startDate","chartwidth","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","filteredTxs","index","hash","timeStamp","tokenAmount","lt","idleTokens","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTx","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","momentDate","isSameOrAfter","isAfter","formattedDate","_loop","aggregatedBalances","date","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","strokeDasharray","sliceTooltip","slideData","slice","points","src_ChartCustomTooltip_ChartCustomTooltip","src_ChartCustomTooltipRow_ChartCustomTooltipRow","serieId","yFormatted","formattedBalance","ShortHash","shortenHash","shortHash","txStart","txEnd","React","TransactionField","hashChanged","bgColor","transaction","maxWidth","textOverflow","align","components_ShortHash","amount","tokenSymbol","TransactionListFilters","maxHeight","isOpened","activeFilters","assets","actions","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","borderTop","filters","filterCategory","filterValues","filterValue","filterLabel","isChecked","checked","Text","filterName","TransactionsList","page","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","txsIndexes","includes","sort","b","getTxAction","parsedValue","preventDefault","loadTxs","count","firstBlockNumber","enabledActions","hashKey","blockNumber","hasActiveFilters","m","pt","src_TransactionListFilters_TransactionListFilters","txHash","txHashKey","open","prevPage","nextPage","h3","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","getAmountLent","amountLents","aggregatedEarnings","earningsYear","avgBuyPrice","idleTokenPrice","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAvgBuyPrice","getTokenAprs","avgApr","avgApy","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","estimationLabel","StrategyPage","tokensToMigrate","aggregatedValues","depositedTokens","remainingTokens","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","portfolioEquityQuickSelection","getAccountPortfolio","avgAPY","avgScore","totalEarnings","totalAmountLent","amountLentToken","tokenWeight","tokenEarningsPerc","totalBalance","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","showAPYDisclaimer","getTokensToMigrate","IDLE","showAPR","riskScore","yieldFarming","src_Title_Title","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","src_PortfolioEquity_PortfolioEquity","borderBottom","src_AssetsList_AssetsList","src_EarningsEstimation_EarningsEstimation","src_TransactionsList_TransactionsList","textSize","ModalCard","closeFunc","objectWithoutProperties","icononly","bgLayer","backgroundSize","Header","iconHeight","subtitle","subtitleProps","subtitle2","Body","Footer","BackButton","Outline","ImageButton","image","imageSrc","imageProps","iconName","caption","contrastColor","buttonStyle","badge","captionPos","subcaption","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","provider","buyParams","onSuccess","onClose","currentState","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","providers","analytics","google","events","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","defaultProvider","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","methods","method","loadAvailableMethods","toConsumableArray","showAllTokens","InnerComponent","flexWrap","src_ImageButton_ImageButton","methodInfo","imagePropsExtended","noOptionsMessage","inputValue","isOpen","components_ModalCard","RoundButton","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","initProgressBar","getTransaction","resolve","reject","customLog","web3","eth","err","getBlockTime","blockTime","axios","get","getPredictionTable","predictTable","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","secondsPassed","timePassed","setTimeout","updateProgressBar","getTxInfo","txProgressBarKey","txProgressBarData","localStorage","getItem","parse","setLocalStorage","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","textColor","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","cancelTransaction","cancelTextColor","cancelTextHoverColor","FastBalanceSelector","onMouseDown","replaceArrayProps","Migrate","approve","oldTokenName","oldIdleTokens","skipMigration","buttonDisabled","migrationEnabled","fastBalanceSelector","oldContractBalance","biconomyLimitReached","metaTransactionsEnabled","oldContractTokenDecimals","migrationContractApproved","setAction","toggleSkipMigration","changeInputValue","checkButtonDisabled","setInputValue","selectedPercentage","setFastBalanceSelector","executeAction","oldContractName","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","normalizeTokenAmount","txSucceeded","eventData","eventValue","getTransactionError","transactionHash","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractInfo","migrationContractName","tokenApproved","migrationContract","checkTokenApproved","oldIdleTokensConverted","oldTokenPrice","getTokenPrice","oldContractInfo","oldContractABI","biconomyLimits","getTokenDecimals","getContractBalance","biconomy","checkBiconomyLimits","allowed","disapproveMigration","disableERC20","approveMigration","callbackApprove","callbackReceiptApprove","enableERC20","migrationMethod","params","callbackMigrate","callbackReceiptMigrate","useMetaTx","toMigrate","_skipRebalance","minAmountForRebalance","migrationParams","_migrationContract$me","functionSignature","migrationCallback","integerValue","skipMintForDeposit","encodeABI","sendBiconomyTxWithPersonalSign","biconomyChanged","actionChanged","fastBalanceSelectorChanged","batchMigrationInfo","batchMigrationEnabled","batchMigrationDepositEnabled","depositEnabled","SkipMigrationComponent","biconomyEnabled","isMigrationTool","migrateTextBefore","migrateText","showActions","src_TransactionField_TransactionField","route","src_TxProgressBar_TxProgressBar","migrationImage","migrationIcon","migrationText","migrationTextProps","functions","functionInfo","functionName","src_RoundButton_RoundButton","approveText","src_FastBalanceSelector_FastBalanceSelector","TokenMigration","migrationSucceeded","changeFromToken","convertTool","goToSection","tokenInfo","strategy","baseTokenConfig","destTokenConfig","migrateFunction","setStrategyToken","urlParams","param2","src_Migrate_Migrate","connectAndValidateAccount","BatchMigration","canClaim","batchTotals","canDeposit","batchDeposits","claim","hasDeposited","batchCompleted","claimSucceeded","strategyAvailableTokens","batchId","callbackClaim","callbackReceiptClaim","checkBatchs","currBatchIndex","batchIndex","batchTotal","batchDeposit","env","process","appName","version","baseURL","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","logs","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","govTokenApr","userDistributionSpeed","govTokenRedeemableBalance","curveInstructions","addPostfixForTestnet","debugEnabled","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","governance","test","startBlock","availableContracts","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","path","poolContract","CurvePool","depositContract","CurveDeposit","zapContract","CurveZap","CurveSwap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","idleTUSDYield","protocol","COMP","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","tokens","DAI","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","USDC","strategies","best","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","descLong","descShort","risk","new","TTL","scores","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","YDAI+YUSDC+YUSDT+YTUSD","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d","9599092","9599138","9599263","9599267","9599295","9599299","9599307","9599315","9599579","9599866","9600156","9600433","9600704","9600982","9601051","9601073","9601077","9601345","9601619","9601891","9602144","9602429","9602724","9602993","9603272","9603536","9603826","9603840","9604038","9604182","9604457","9604701","9604979","9605247","9605505","9605793","9606073","9606368","9606639","9606896","9607147","9607406","9607722","9608130","9608395","9608656","9608959","9609544","9609811","9610073","9610341","9610601","9610871","9611120","9611386","9611665","9611949","9612210","9612487","9612758","9613012","9613276","9613542","9613824","9614069","9614327","9614596","9614864","9615111","9615394","9615679","9615958","9616245","9616531","9616803","9617053","9617326","0x9ba00d6856a4edf4665bca2c2309936572473b7e","9598633","9598646","9598684","9598823","9598869","9598915","contract","skipRebalance","skipMint","minAmountForMint","skipMintCheckboxEnabled","proxyContract","IdleProxyMinter","function","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","isForked","requiredNetwork","requiredConfirmations","accountBalanceMinimum","infura","etherscan","endpoints","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","tools","batchMigration","claimEnabled","subComponent","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","insurance","ETH","ens","tokenSwap","USDS","WETH","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","bank","card","wallet","wyre","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","event","payload","purchase","pow","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","connectorName","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","mode","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","ethereumjsABI","require","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","BNify_obj","s","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","contractName","c","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","_args2","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","_args4","prevAvgBuyPrice","_args6","idleTokensBalance","getDepositTimestamp","deposits","_args7","depositTimestamp","getAmountDeposited","userAvgPrice","amountDeposited","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","results","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","_args10","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveCachedRequest","filterCurveTxs","_callee12","allAvailableTokens","etherscanTxsToStore","cachedRequestData","_args12","_context12","processStoredTxs","txInfo","_callee13","_args13","_context13","_callee14","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args14","_context14","tokenMigrationToolParams","curveEnabled","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","isSwapOutTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref18","_callee19","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args19","_context19","baseTokenAddress","_ref19","_callee18","minedTxs","_context18","_ref20","_callee17","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context17","getCurveTokenPrice","t1","_ref21","_callee15","_context15","getTransactionReceipt","_x11","_x12","topics","baseTokensConfig","t2","_ref22","_callee16","_context16","_x13","_x14","_x9","_x10","_ref23","_callee25","txsToProcess","_args25","_context25","_ref24","_callee24","_context24","_ref25","_callee23","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context23","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref26","_callee20","_context20","txReceipt","_x19","_x20","_ref27","_callee21","_context21","_x21","_x22","raw","_ref28","_callee22","_context22","_x23","_x24","decodeLog","_token","_x17","_x18","_x16","_x15","alias","cachedRequests","_ref29","_callee26","error_callback","config","_args26","_context26","catch","_x25","_ref30","_callee27","return_data","_args27","_context27","_x26","code","errorCode","getArrayPath","array","prop","shift","configs","checkUrlOrigin","_ref31","_callee29","googleEventsInfo","originOk","currentNetwork","_args29","_context29","ga","_ref32","_callee28","_context28","hitCallback","hitCallbackFail","_x28","_x29","_x27","createContract","_ref33","_callee30","_context30","Contract","_x30","_x31","_x32","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","_ref34","_callee31","forceStartTimestamp","order","limit","filteredCachedData","filteredData","apiInfo","_args31","_context31","_x33","_ref35","_callee32","_context32","_x34","aprs","allocations","reduce","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","addr","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee33","contractPaused","_args33","_context33","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref37","_callee36","rebalancer","idleRebalancerInstance","allocationsPromises","availableTokensPromises","protocolIndex","nextAllocations","newTotalAllocation","newProtocolsAllocations","shouldRebalance","_context36","allocationPromise","_ref38","_callee34","_context34","lastAmounts","call","_x36","_x37","availableTokenPromise","_ref39","_callee35","_context35","_x38","_x39","accumulator","availableTokenInfo","nextAllocation","protocolAllocation","protocolAllocationPerc","newProtocolAllocation","_x35","_ref40","_callee37","_context37","_x40","_x41","_ref41","_callee38","signedParameters","callback_receipt","_contract$methods","_context38","getGasPrice","once","confirmationNumber","receipt","_x42","_x43","_x44","_x45","_x46","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","soliditySHA3","toBuffer","_ref42","_callee39","biconomyInfo","res","_context39","headers","x-api-key","_x47","_ref43","_callee40","messageToSign","_this$getSignaturePar","_context40","getNonce","_address","personal","sign","_x48","_x49","_x50","_x51","sendBiconomyTx","_ref44","_callee41","EIP712Domain","MetaTransaction","domainData","dataToSign","_context41","getChainId","verifyingContract","types","domain","primaryType","currentProvider","jsonrpc","response","_x52","_x53","_x54","_x55","_x56","_ref45","_callee42","contractAddr","walletAddr","allowance","_context42","getAllowance","_x57","_x58","_x59","_ref46","_callee43","_context43","_x60","_x61","_x62","methodName","txData","toTwosComplement","_ref47","_callee44","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref48","_ref49","curveAvgBuyPrice","curveTokenBalance","_ref50","_ref51","amountLentCurve1","redeemableBalanceCurve","_ref52","_ref53","earningPerYear","_ref54","_ref55","amountLent1","redeemableBalance1","cTokenInfo","_idleGovToken","_idleGovToken2","tokenApys","curveAPY","_ref56","_ref57","daysFirstDeposit","depositTimestamps","_ref58","_ref59","tokenAPY1","_earningPerYear","_govTokenConfig","_ref60","_ref61","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref62","_ref63","amountLentCurve2","redeemableBalanceCurve1","_ref64","_ref65","redeemableBalance2","_args44","_context44","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getCompUserDistribution","getIdleGovToken","getCompSpeed","t3","getCompAvgApr","t4","t5","t6","getUserTokenFees","t7","t8","getGovTokenUserBalance","_x63","_x64","_x65","_x66","_ref66","_callee45","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args45","_context45","_x67","clearCachedData","expirationDate","_ref67","_callee46","_ref68","_ref69","idleTokensTotalSupply","userShare","_context46","_x68","_x69","_ref70","_callee47","fixDecimals","_ref71","_ref72","_args47","_context47","_x70","_x71","copyToClipboard","copyText","select","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref73","_callee48","_context48","getProtocolBalance","_x72","_x73","_ref74","_callee49","_context49","_x74","_x75","getAprs","_ref75","_callee50","_context50","_x76","genericIdleCall","_ref76","_callee51","callParams","_args51","_context51","_x77","estimateGas","_ref77","_callee52","_contract$methods2","_args52","_context52","_x78","_x79","getTxDecodedLogs","_ref78","_callee54","logAddr","decodeLogs","internalTransfers","_context54","_ref79","_callee53","_context53","_x84","_x85","_x80","_x81","_x82","_x83","getBlockNumber","_callee55","_context55","getContractPastEvents","_ref81","_callee56","_args56","_context56","getPastEvents","_x86","_x87","_ref82","_callee57","_contract$methods3","_args57","_context57","_x88","_x89","_ref83","_callee58","_args58","_context58","_x90","_x91","apr2apy","getUnlentBalance","_ref84","_callee59","unlentBalance","_context59","_x92","_ref85","_callee61","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args61","_context61","_ref86","_callee60","_ref87","_ref88","protocolBalance","_context60","_x94","_x95","getGovTokensBalances","total","getTokenConversionRate","_x93","getUniswapConversionRate_path","_ref89","_callee62","unires","_context62","_x96","_ref90","_callee63","tokenConfigFrom","tokenConfigDest","_context63","_x97","_x98","getCurveDepositedTokens","_ref91","_callee64","idleTokensBalances","remainingCurveTokens","_args64","_context64","_x99","getCurveUnevenTokenAmounts","_ref92","_callee65","amounts","max_burn_amount","unevenAmounts","_context65","getCurveSwapContract","_x100","_x101","_callee66","curveRatesInfo","_context66","strategyTokens","getCurveAPYContract","_callee67","blocksForPrevTokenPrice","_ref95","_ref96","_tokenPrice","prevTokenPrice","blocksMultiplier","curveAPR","_context67","getCurveTokenSupply","_callee68","_context68","getCurvePoolContract","_callee69","_args69","_context69","_callee70","_args70","_context70","_ref100","_callee71","_ref101","_ref102","_context71","_x102","getCurveDepositContract","_callee72","depositContractInfo","_context72","getCurveZapContract","_callee73","zapContractInfo","_context73","_callee74","poolContractInfo","_context74","_callee75","_context75","getCurveIdleTokensAmounts","_callee77","max_slippage","curveTokenSupply","curveTokenShare","_args77","_context77","_ref108","_callee76","curveIdleTokens","_context76","_x103","getCurveTokensAmounts","_callee79","_args79","_context79","_ref110","_callee78","_ref111","_ref112","totalTokenSupply","_context78","_x104","getCurveAmounts","_ref113","_callee81","_args81","_context81","_ref114","_callee80","_context80","_x107","_x105","_x106","getCurveTokenAmount","_ref115","_callee82","_args82","_context82","_x108","getCurveSlippage","_ref116","_callee83","uneven_amounts","_ref117","_ref118","virtualPrice","Sv","_args83","_context83","_x109","_x110","getCompAPR","_ref119","_callee84","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","compoundAllocation","_ref120","_ref121","_args84","_context84","getCompDistribution","_x111","_x112","_ref122","_callee85","cTokenAddress","compSpeed","_context85","_x113","_ref123","_callee86","compoundAllocationPerc","_ref124","_ref125","cTokenTotalSupply","_args86","_context86","_x114","_callee88","_args88","_context88","_ref127","_callee87","_ref128","_ref129","_context87","_x115","_callee90","_args90","_context90","_ref131","_callee89","_ref132","_ref133","compApr","_context89","_x116","getTokensCsv","_callee93","csv","_context93","prototype","sum","pv","cv","avg","_ref135","_callee92","_context92","_ref136","_callee91","header","rows","aprAvg","scoreAvg","lastRow","_context91","protocolsData","p1","p2","rate","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x118","_x117","_callee95","_args95","_context95","_ref138","_callee94","compTokenBalance","_context94","_x119","_ref139","_callee97","govTokensDistribution","_args97","_context97","_ref140","_callee96","govSpeed","_context96","_x121","_x120","getGovTokensAprs","_ref141","_callee99","govTokensAprs","_args99","_context99","_ref142","_callee98","_ref143","_ref144","compoundInfo","_context98","_x124","_x122","_x123","_callee101","_args101","_context101","_ref146","_callee100","tokenConversionRate","fromTokenConfig","_context100","_x125","getGovTokenConfigByAddress","_callee102","govTokensEarnings","_args102","_context102","acc","govTokenAmount","_callee105","govTokenConfigForced","_args105","_context105","_ref149","_callee104","idleTokenConfig","govTokensAmounts","_context104","_ref150","_callee103","govTokenAddress","_context103","_x127","_x128","_x126","_callee106","_args106","_context106","_callee107","_ref153","_ref154","gain","fees","_args107","_context107","_ref155","_callee108","_args108","_context108","_x129","getAggregatedStats","_callee111","avgAPR","totalAUM","_args111","_context111","_ref157","_callee110","_context110","_ref158","_callee109","oldTokenAllocation","oldTokenTotalAllocation","_context109","_x131","_x130","getTokenApy","_ref159","_callee112","_context112","_x132","_callee115","_args115","_context115","_ref161","_callee114","_context114","_ref162","_callee113","_ref163","_context113","_x134","_x133","getProtocolsTokensBalances","_callee117","tokenBalances","minTokenBalance","protocolsTokens","_args117","_context117","_ref165","_callee116","tokenContract","_context116","_x135","_ref166","_callee118","_args118","_context118","_x136","_x137","_x138","_ref167","_callee119","_args119","_context119","_x139","_x140","_ref168","_callee120","_ref169","_ref170","_context120","protocolScore","getTokenScoreApi","_x141","_x142","_ref171","_callee121","_context121","_x143","_x144","_ref172","_callee123","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args123","_context123","_ref173","_callee122","addrIndex","protocolApr","protocolApy","_context122","_x146","_x147","_x145","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","currYear","getFullYear","governanceEnabled","columnWidth","footer","src_ExtLink_ExtLink","react_router_dom","link","Tos","h2","listStyle","src_Footer_Footer","TorusConnector","kwargs","Torus","api","rest","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","Faquestion","isShowingAnswer","question","answer","Faq","openedAnswer","selectedSection","generalQuestions","q","guidelinesQuestions","ratesQuestions","section","_this$state","generalDivs","src_Faquestion_Faquestion","toggleAnswer","guidelinesDivs","ratesDivs","isGeneralSelected","isGuidelinesSelected","isRatesSelected","setSection","FlexCards","itemPerc","itemsPerRow","cards","AuditCard","transform","HowItWorks","bulletCard","StrategyBox","getHighestAprToken","highestValue","tokensAprs","strategyUrl","fontStyle","NewsletterForm","validated","privacy","handleSubmit","handleValidation","messageColor","post","then","parentNode","classList","onSubmit","Field","outline","toggleCheckbox","RoundIconButton","FloatingToastMessage","ToastComponent","ToastMessage","Success","Processing","Failure","closeElem","handleClose","AssetsUnderManagement","totalAUMEndOfYear","loadTotalAUM","counterStyle","scrolling","Landing","carouselMax","carouselIndex","activeCarousel","runConfetti","activeBullet","testPerformed","carouselOffsetLeft","setActiveCarousel","carouselIntervalID","randomAllocationEnabled","handleCarousel","multiplier","$element","processScrolling","bulletCards","getElementsByClassName","offsetParent","offsetY","offsetTop","getAllocations","remainingAllocation","totProtocols","alloc","startLending","updateSelectedTab","setConfetti","connectAndGoToRoute","goToLocation","processCustomParam","mainViewport","paddingBottom","isCorrectNetwork","textAlignLast","overflowY","strategyIndex","src_StrategyBox_StrategyBox","src_RoundIconButton_RoundIconButton","src_HowItWorks_HowItWorks","src_AssetsUnderManagement_AssetsUnderManagement","src_AuditCard_AuditCard","gradientBackground","h5","sandbox","src_FlexCards_FlexCards","src_Faq_Faq","src_NewsletterForm_NewsletterForm","toastMessageProps","src_FloatingToastMessage_FloatingToastMessage","closeToastMessage","DashboardMenu","buyModalOpened","menu","visibleLinks","menuLink","showMobile","menuIndex","LinkComponent","isExternalLink","RouterLink","selected","StatsChart","chartType","parseAum","loadApiData","CustomTooltipRow","CustomTooltip","maxGridLines","apiResults","apiResults_unfiltered","totalItems","versionInfo","tempData","axisBottomIndex","idleChartData","divergingData","maxRange","_i","_i2","_i3","prevValue","_i4","prevApr","prevData","startBalance","currentBalance","_i5","_i6","chartMode","idleVersion","redeems","idleSupply","idleTokensPrev","eq","diff","Bar","indexBy","enableLabel","minValue","maxValue","axisRight","markers","lineStyle","strokeOpacity","textStyle","legendOrientation","legendOffsetX","labelTextColor","labelSkipWidth","labelSkipHeight","dataFrom","translateX","itemsSpacing","indexValue","depositFormatted","redeemFormatted","aum","z","foundItem","pos","showAdvanced","serieColor","protocolColor","protocolAllocationFormatted","protocolData","protocolPaused","borderCollapse","allocationPerc","protocolEarning","apy","earning","additionalProtocol","unshift","chartRow","baseProfit","firstProtocolData","firstProtocolBlock","protocolRate","idlePerformance","d1","rowData","lastRowData","lastTokenPrice","tokenExchangeRate","tokenPriceFixed","lastYDiff","showAdvancedChanged","apiResultsChanged","Rebalance","StatsCard","titleMinHeight","valueProps","labelTooltip","Breadcrumb","showPathMobile","pathLink","Link","borderLeft","DateRangeModal","quickSelection","ranges","endDate","componentDidUpdate","selection","handleSelect","startTimestampObj","endTimestampObj","handleQuickSelect","react_date_range_dist","minDate","maxDate","Stats","delta","rebalances","buttonGroups","statsVersions","minStartTime","govTokensPool","dateRangeModalOpened","quickSelections","weeks","month","setDateRange","isSame","isBefore","maxEndDate","toggleAdvancedCharts","setDateRangeModal","filterTokenData","setIdleVersion","firstResult","lastResult","firstIdlePrice","lastIdlePrice","firstCompoundData","lastCompoundData","compoundWithCOMPInfo","compoundAvgApr","firstCompoundPrice","lastCompoundPrice","compoundApr","compoundData","compoundRate","prevRow","prevTotalAllocation","hasRebalanced","prevP","prevAllocation","loadParams","latestVersion","versionInfoExtra","param","currentNetworkAvailableTokens","customToken","getLatestAvailableVersion","getVersionInfo","newEndTimestampObj","newStartTimestampObj","initWeb3","loadCarousel","strategyChanged","dateChanged","versionChanged","versionsOptions","versionDefaultValue","src_Breadcrumb_Breadcrumb","src_StatsCard_StatsCard","Stats_StatsChart","src_Rebalance_Rebalance","components_DateRangeModal","statsTokens","statsProtocols","Utils","SubComponent","selectedSubsection","submenu","tool","toolIndex","FundsOverview","govTokensTotalApr","govTokensTotalAprTooltip","totBalance","totApr","ConnectBox","CurveRedeem","maxSlippage","showMaxSlippage","curveTokensAmounts","redeemUnevenAmounts","curveRedeemableIdleTokens","toggleUnevenAmounts","initToken","curveConfig","withdrawSlippage","_amount","min_amounts","coin_index","min_amount","_token_amount","calculateSlippage","isGreaterThan","getFastBalanceSelector","setMaxSlippage","normalizedAmount","curveIdleTokensAmounts","redeemUnevenAmountsChanged","inputChanged","maxSlippageChanged","showSlippage","curveTokenName","TwitterShareButton","share","parent","w","tweet","ShareModal","escape","customText","confettiEnabled","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","DepositRedeem","txError","canRedeem","activeModal","showBuyFlow","showRedeemFlow","canRedeemCurve","canDepositCurve","actionProxyContract","componentMounted","redeemCurveEnabled","depositCurveBalance","depositCurveEnabled","showAdvancedOptions","depositCurveSlippage","setShowRedeemFlow","setShowBuyFlow","toggleShowAdvancedOptions","toggleRedeemCurve","toggleDepositCurve","toggleSkipMint","toggleRedeemGovTokens","setActiveModal","approveContract","approveToken","loadTokenInfo","curveTokenEnabled","checkAction","loadAPY","contractSendResult","callbackDeposit","callbackReceiptDeposit","curvePoolContractInfo","tokensToDeposit","minMintAmount","depositParams","_tokensToDeposit","depositMetaTransactionsEnabled","_depositParams","mintProxyContractInfo","mintProxyContract","_mintProxyContract$me","_skipMint","maxUnlentPerc","depositPerc","_callbackRedeem","_callbackReceiptRedeem","redeemParams","lendingProcessing","lendAmount","genericError","loadProxyContracts","hasProxyContract","approved","tokenBalanceChanged","depositCurveChanged","calculateCurveSlippage","govTokensDisabled","skipMintForDepositEnabled","redeemGovTokenEnabled","metaTransactionsAvailable","depositCurve","showDepositOptions","canPerformAction","showDepositCurve","showRedeemCurve","showActionFlow","showCurveSlippage","showRebalanceOption","showAdvancedDepositOptions","tokenFeesPercentage","src_ConnectBox_ConnectBox","src_CurveRedeem_CurveRedeem","components_BuyModal","components_ShareModal","CardIconButton","EstimatedEarnings","tokenApy","maxInputValue","loadChart","amountMonth","amount3Months","amount6Months","amountYear","monthColor","month3","month3Color","month6","month6Color","year","yearColor","verticalAlign","AssetPage","tokenFees","loadTokensInfo","userHasFunds","src_CardIconButton_CardIconButton","src_DepositRedeem_DepositRedeem","src_FundsOverview_FundsOverview","src_EstimatedEarnings_EstimatedEarnings","depositSlippage","approveCallback","normalizeIdleTokenBalance","idleTokenBalanceChanged","hasCurveTokens","getMigrationParams","PortfolioEquityCurve","aggregatedBalanceParsed","FundsOverviewCurve","src_PortfolioEquityCurve_PortfolioEquityCurve","redeemBalance","depositBalance","setSelectedToken","getSelectedToken","param1","updateAssetSelector","curveTokensToRedeem","src_CurveDeposit_CurveDeposit","src_FundsOverviewCurve_FundsOverviewCurve","WelcomeModal","subscribed","sendingForm","sendUserInfo","sendEmail","walletProvider","lastLogin","signedUp","header_styles","TooltipModal","content","MigrateModal","dontShowAgain","toggleDontShowAgain","tokenMigrationRoute","protocolsTokensBalances","UpgradeModal","convert","oldIdleTokensToMigrate","AccountModal","loadBalances","strategyToken","setConnector","context","acccount","renderBalances","MenuAccount","isModalOpen","toggleModal","modalName","loadIdleTokenBalance","unclaimed","connectorInfo","walletIcon","alt","setGovModal","components_AccountModal","GovModal","txStatus","claimCallback","DashboardHeader","govModalOpened","isDashboard","isGovernance","dashboardRoute","governanceRoute","src_MenuAccount_MenuAccount","components_GovModal","Dashboard","currentRoute","pageComponent","currentSection","showResetButton","timeoutId","modalTitle","modalContent","curveParams","CurveStrategy","u","section_is_strategy","param1_is_strategy","param1_is_token","param2_is_token","sectionRoute","subm","loadMenu","accountInizialized","initAccount","initializeContracts","checkModals","prevParams","checkTokensToMigrate","checkWelcomeModal","checkProtocolsTokensBalances","showUpgradeModal","welcomeIsOpen","welcomeModalProps","currTime","lastTime","migrateModalEnabled","showMigrateModal","newRoute","routeParts","PageComponent","src_DashboardMenu_DashboardMenu","overflowX","src_DashboardHeader_DashboardHeader","components_UpgradeModal","components_MigrateModal","components_TooltipModal","components_WelcomeModal","current","baseTokenName","WrongNetworkBanner","NetworkUtil","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","NoWalletModal","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Web3ConnectionButtons","useWeb3Context","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","ConnectionModal","showTxFees","closeRemainingTime","newToEthereumChoice","showInstructions","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","renderModalContent","TOSacceptance","showConnectionButtons","newToEthereum","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","accountBalance","accountBalanceToken","accountBalanceLow","web3Infura","checkPreflight","rejectAccountConnect","accountValidationPending","rejectValidation","enableUnderlyingWithdraw","checkNetwork","userRejectedValidation","transactionConnectionModalIsOpen","openNoWeb3BrowserModal","openConnectionPendingModal","openUserRejectedConnectionModal","closeUserRejectedValidationModal","openUserRejectedValidationModal","openConnectionErrorModal","openTransactionErrorModal","openWrongNetworkModal","openLowFundsModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","updateTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","customAddress","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","notifications","shownNotifications","isError","$crisp","notificationId","Sentry","increaseAmount","contractInfo","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","net","getId","getNetworkName","getNetworkType","contractMethod","gasLimit","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","call_callback","confidenceThreshold","recentEvent","timeout","now","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","GovernanceUtil","getTotalSupply","totalSupply","getTokensBalance","getCurrentDelegate","getCurrentVotes","votes","queueProposal","proposalId","executeProposal","proposeAndVoteFor","targets","signatures","calldatas","batcher","Batcher","propose","args","castVote","_args8","support","setDelegate","getDelegates","delegationsCalls","fromBlock","delegatesContractName","toBlock","all_delegations","delegations","delegateAccounts","all_votes","_e$returnValues","returnValues","getVotes","rank","vote_weight","proposals","voter","splice","getProposalParams","govContractName","proposalThreshold","proposalMaxOperations","governanceContractName","_e$returnValues2","getProposals","voted_by","enumerateProposalState","proposalCount","proposalGets","proposalStateGets","_arr","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_args15","reverse","createdEvent","canceledEvent","executedEvent","queuedEvent","createdBlockInfo","createdState","activeState","canceledBlockInfo","canceledState","queuedBlockInfo","succeededState","queuedState","executedBlockInfo","executedState","endBlockInfo","endState","_createdEvent$returnV","states","getBlock","end_time","start_time","trx_hash","endBlock","eta","executed","canceled","forVotes","proposer","againstVotes","ProposalField","proposal","totalVotes","vote","ProposalListFilters","ProposalsList","rowsPerPage","totalRows","defeated","succeeded","queued","expired","processedRows","processList","pageChanged","proposalsChanged","filtersEnabled","hasRows","Governance_ProposalListFilters_ProposalListFilters","DelegateField","opts","bgcolor","spotcolor","seed","DelegatesList","maxRows","delegatesChanged","delegateId","Overview","dataLoaded","votesDelegated","governanceUtil","Governance_ProposalsList_ProposalsList","Governance_DelegatesList_DelegatesList","DelegateVote","newDelegate","checkNewDelegate","currentDelegate","changeDelegate","loadUserData","isUndelegated","canClose","Delegate","Governance_DelegateVote_DelegateVote","NewProposal","actionValue","customABI","newAction","editAction","actionInputs","actionValid","contractOptions","proposalCreated","functionsOptions","selectedContract","selectedFunction","selectedSignature","availableFunctions","validateForm","checkInputs","loadFunctionsOptions","contractABI","getContractABI","f","constant","inputs","stateMutability","valid","fieldPattern","getPatternByFieldType","returnString","RegExp","inputIndex","inputInfo","inputValid","validateField","inputTypes","calldata","encodeParameters","_this5","handleInput","actionIndex","setEditAction","changeContract","pattern","changeFunction","payable","valueChange","fieldType","inputChange","addAction","deleteAction","setNewAction","CastVote","loaded","userVote","voteSucceed","showDelegateBox","setVote","Governance_ProposalField_ProposalField","toggleDelegateBox","ProposalDetails","showActionParams","lastState","hasVotes","forVotesPerc","againstVotesPerc","forVotesAddrs","againstVotesAddrs","canQueue","canExecute","Governance_CastVote_CastVote","decodedParams","attrs","decodeParameters","toggleShowParams","paramIndex","stateInfo","stateIndex","voteInfo","voteIndex","Proposals","addProposal","selectedProposal","item_id","foundProposal","Governance_ProposalDetails_ProposalDetails","Governance_NewProposal_NewProposal","DelegateDetails","loadProposals","Leaderboard","selectedDelegate","Governance_DelegateDetails_DelegateDetails","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","outputs","anonymous","indexed","ERC20","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","transactionToastMeta","transactionAction","charAt","newMessage","App","selectedTab","connecting","unsubscribeFromHistory","showToastMessage","customParam","setCustomAddress","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","self","hasMetamask","web3_react_dist_default","libraryName","web3Api","web3_react_dist","RimbleWeb3","needsPreflight","react_router","src_Dashboard_Dashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","Governance","components_Header","src_Web3Debugger_Web3Debugger","exact","src_Landing_Landing","react_cookie_consent_build_default","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","loading-dots","loading-dots--dot","dot-keyframes","graySection","whiteSection","howItWork","skewBg","bgHeart","platformLogo","bulletCardFirst","bulletCardActive","bulletPoint","bulletRight","bulletTop","bulletLeft","bulletBottom","bulletBottomLeft","bulletBottomBottom","bulletMobile","carouselItem","pos1","carouselItemMobile","pos2","pos3","bentTube","bounceArrow","bounce","rebalanceCircle","spin","carouselDesc","carouselNav","socialIcon","bentTubeLeft","bentTubeRight","bentTubeActive","bg1"],"mappings":"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","file":"static/js/main.f8611d89.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__1G5iO\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__3HlA5\",\"bgContainer\":\"PageNotFound_bgContainer__16Bn7\",\"list\":\"PageNotFound_list__rJgDr\",\"textContainer\":\"PageNotFound_textContainer__2hI3Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__3RZVU\",\"empty\":\"Header_empty__1vLS-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3loA0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__30U-S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__ciXDw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"NewsletterForm_gradientButton__2Fu1h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__3-tUb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceButton\":\"MenuAccount_balanceButton__fYFu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__Km4rQ\",\"newPill\":\"CryptoInput_newPill__6lu6P\",\"mainInput\":\"CryptoInput_mainInput__H7-Y7\",\"button\":\"CryptoInput_button__2c5mT\",\"gradientButton\":\"CryptoInput_gradientButton__3fhnj\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__33Yn5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__XoI9U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"ProposalListFilters_radioBtn__4jmT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__1Tm4t\",\"headerBgFiller\":\"Tos_headerBgFiller__1Elt6\",\"bgContainer\":\"Tos_bgContainer__Bqzo0\",\"list\":\"Tos_list__2AtPw\",\"textContainer\":\"Tos_textContainer__xCW50\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"NewProposal_input__3aRBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__Bj_aP\",\"hidden\":\"DashboardCard_hidden__13XeU\",\"interactive\":\"DashboardCard_interactive__34cn8\",\"active\":\"DashboardCard_active__3L5-p\",\"rainbow\":\"DashboardCard_rainbow__3z92q\",\"disabled\":\"DashboardCard_disabled__2kZdZ\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #e0e0e0'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    lineChartStroke:'#dbdbdb',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#fff',\n    transactions:{\n      action:{\n        send:'#4f4f4f',\n        swap:'#3d53c0',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        boost:'#ffff00',\n        receive:'#4f4f4f',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        withdraw:'#4f4f4f',\n      },\n      actionBg:{\n        send:'#dadada',\n        swap:'#ced6ff',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        boost:'#ff7979',\n        default:'#dadada',\n        receive:'#dadada',\n        migrate:'#ced6ff',\n        withdraw:'#dadada',\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  delegateVesting = async (account=null,delegate=null) => {\n    account = account ? account : this.props.account;\n\n    const founderVesting = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n    console.log('founderVesting',account,founderVesting);\n\n    if (parseInt(founderVesting) === 0){\n      return false;\n    }\n\n    await this.props.initContract('Vester',founderVesting,VesterABI);\n    // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n    await this.functionsUtil.contractMethodSendWrapper('Vester','setDelegate',[delegate]);\n\n    console.log('delegates vesterFounder to founder');\n  }\n\n  getUnclaimedTokens = async () => {\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds){\n      return this.functionsUtil.BNify(idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      return this.functionsUtil.setCachedData(cachedDataKey,distribution);\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      sliceLabel: d => d.value+'%',\n      tooltipFormat: v => v+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {} : {\n            display: 'none'\n          }\n        },\n        labels:{\n          text:{\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontWeight:600,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()] && globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon : `${this.state.selectedSlice.label.toLowerCase()}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({},() => {\n        this.loadField();\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenPrice:output.toString()\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n          }\n          output = oldContractBalanceFormatted;\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPerc:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenAPR:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            curve:'monotoneX',\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            enableSlices:false,\n            isInteractive:false,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(3)}/block` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}/block</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}%</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n        const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n        const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              idleTokenEnabled && showTooltip && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      message:apyLong,\n                      placement:'top',\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      boxShadow:1,\n      borderRadius:2,\n      position:'relative',\n      minHeight:'initial',\n      background:'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import theme from \"../theme\";\nimport Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={theme.fontSizes[2]}\n          color={theme.colors.copyColor}\n          fontWeight={theme.fontWeights[3]}\n          fontFamily={theme.fonts.sansSerif}\n          className={[styles.searchInput,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? '#fbfbfb' : '#ffffff' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={ fieldInfo.style ? fieldInfo.style : {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  fieldComponent={AssetField}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI');\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'Swap':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null;\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase()) && \n                          (this.state.activeFilters.assets === null || tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase()) &&\n                          ( availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.value);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n    const amountLents = await this.functionsUtil.getAmountLent(this.props.enabledTokens,this.props.account);\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(Object.keys(amountLents),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountLents[token],token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!amountLent.isNaN() && !idleTokenPrice.isNaN() && !earnings.isNaN() && !earningsYear.isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    Object.keys(amountLents).forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${theme.colors.divider}`}\n                            >\n                              <Text\n                                fontWeight={[3,4]}\n                                fontSize={[0,'1.2em']}\n                                style={{\n                                  wordBreak:'break-all'\n                                }}\n                                color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                              >\n                                {estimationStepEarningsFormatted}\n                              </Text>\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? '2.8em' : '2.2em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      alignItems={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'#ffffff'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={[2,3]}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport { Flex, Box, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    depositedTokens:null,\n    remainingTokens:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    // Load portfolio if account is set\n    if (this.props.account){\n\n      const newState = {};\n\n      // Get deposited tokens\n      const portfolio = await this.functionsUtil.getAccountPortfolio(this.props.availableTokens,this.props.account);\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalEarnings = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = this.props.availableTokens[token];\n\n          const [tokenAprs,idleTokenPrice,tokenScore,avgBuyPrice,amountLent] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getIdleTokenPrice(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n            this.functionsUtil.getAmountLent([token],this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n          const tokenEarningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n          const tokenEarnings = amountLentToken ? amountLentToken.times(tokenEarningsPerc) : 0;\n\n          // console.log(token,idleTokenPrice.toFixed(5),avgBuyPrice[token].toFixed(5),amountLentToken.toFixed(5),tokenEarningsPerc.toFixed(5),tokenEarnings.toFixed(5));\n\n          if (tokenEarnings){\n            totalEarnings = totalEarnings.plus(tokenEarnings);\n          }\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,this.props.availableTokens,'DAI');\n\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI');\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `${govToken}: $${balance.toFixed(2)}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        const earningsStart = totalEarnings.plus(govTokensTotalBalance);\n        const earningsEnd = totalAmountLent.times(avgAPY.div(100)).plus(govTokensTotalBalance);\n\n        // debugger;\n\n        const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n        const showAPYDisclaimer = idleTokenEnabled && this.functionsUtil.getGlobalConfig(['govTokens','IDLE','showAPR']);\n\n        newState.aggregatedValues = [\n          {\n            flexProps:{\n              pr:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              label:'',\n              title:'Avg APY',\n              value:avgAPY.toFixed(2)+'<small>%</small>',\n              description:showAPYDisclaimer ? this.functionsUtil.getGlobalConfig(['messages','apyLong']) : null\n            }\n          },\n          {\n            flexProps:{\n              px:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Total Earnings',\n              description:'Total earnings including accrued governance tokens'+(govTokensTotalBalance && govTokensTotalBalance.gt(0) ? ` [ ${govTokensTotalBalanceTooltip.join('; ')} ], earnings can vary depending on the current token spot price from Uniswap` : ''),\n              children:(\n                <CountUp\n                  delay={0}\n                  decimals={8}\n                  decimal={'.'}\n                  separator={''}\n                  useEasing={false}\n                  duration={31536000}\n                  end={parseFloat(earningsEnd)}\n                  start={parseFloat(earningsStart)}\n                  formattingFn={ n => '$ '+this.functionsUtil.abbreviateNumber(n,8,12,8) }\n                >\n                  {({ countUpRef, start }) => (\n                    <span\n                      ref={countUpRef}\n                      style={{\n                        lineHeight:1,\n                        color:this.props.theme.colors.copyColor,\n                        fontFamily:this.props.theme.fonts.counter,\n                        fontWeight: this.props.isMobile ? 600 : 700,\n                        fontSize:this.props.isMobile ? '21px' : '1.7em',\n                      }}\n                    />\n                  )}\n                </CountUp>\n              ),\n              label:'',\n            }\n          },\n          {\n            flexProps:{\n              pl:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Avg Risk Score',\n              value:avgScore.toFixed(1),\n              label:''\n            }\n          },\n        ];\n      }\n\n      // Get tokens to migrate\n      const tokensToMigrate = await this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy);\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(this.props.availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Load and process Etherscan Txs\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n      await this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(this.props.availableTokens))\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(this.props.availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const showAPYDisclaimer = govTokens.IDLE.enabled && govTokens.IDLE.showAPR;\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n\n    return (\n      <Box width={1}>\n        <Title mb={[3,4]}>{this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy</Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <>\n              {\n                this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        this.state.aggregatedValues.map((v,i) => (\n                          <Flex\n                            {...v.flexProps}\n                            flexDirection={'column'}\n                            key={`aggregatedValue_${i}`}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                py:[3,4],\n                                mb:[2,0]\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  v.props.children ? v.props.children : (\n                                    <Text\n                                      lineHeight={1}\n                                      fontWeight={[3,4]}\n                                      color={'copyColor'}\n                                      fontFamily={'counter'}\n                                      fontSize={[4,'1.7em']}\n                                      dangerouslySetInnerHTML={{ __html: v.props.value }}\n                                    >\n                                    </Text>\n                                  )\n                                }\n                                  <Flex\n                                    mt={2}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={[1,2]}\n                                      color={'cellText'}\n                                    >\n                                      {v.props.title}\n                                    </Text>\n                                  {\n                                    v.props.description && (\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={v.props.description}\n                                      >\n                                        <Icon\n                                          ml={2}\n                                          name={\"Info\"}\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                        />\n                                      </Tooltip>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </DashboardCard>\n                          </Flex>\n                        ))\n                      }\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.33]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.66]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              <Flex id=\"available-assets\" width={1} flexDirection={'column'}>\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.3,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:showAPYDisclaimer ? apyLong : null,\n                            props:{\n                              width:[0.2,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'apy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'RISK SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.27,0.16],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:0.16,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.12],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.3,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.1],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:showAPYDisclaimer ? apyLong : null,\n                            props:{\n                              width:[0.18,0.08],\n                            },\n                            fields:[\n                              {\n                                name:'apy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'RISK SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.25,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.12],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.3,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:showAPYDisclaimer ? apyLong : null,\n                            props:{\n                              width:[0.2,this.state.depositedTokens.length>0 ? 0.10 : 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'apy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'RISK SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.27,0.17],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width: this.state.depositedTokens.length>0 ? 0.28 : 0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.34,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.17],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.45,0.17],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.20,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        background: props.background ? props.background : 'url(images/bg-bottom-right.png) no-repeat bottom right',\n        backgroundSize: !props.background ? '65%' : null\n      }}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          mainColor={'white'}\n          contrastColor={'white'}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          width={ this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px']) }\n          style={ this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null) }\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      availableMethods[method] = globalConfigs.payments.methods[method];\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n                  if (!availableProviders || !availableProviders.length){\n                    return false;\n                  }\n\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton isMobile={ this.props.isMobile } key={`method_${method}`} {...methodInfo.props} imageProps={ imageProps } handleClick={ e => this.selectMethod(e,method) } />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    placeholder={'Select your country'}\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    value={this.state.selectedCountry}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    className={styles.gradientButton}\n                    borderRadius={4}\n                    my={2}\n                    mx={[0, 2]}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                    onClick={ e => this.goBack(e) }\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'primary'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:false,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,this.props.tokenConfig,this.props.account);\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    const newState = {\n      loading,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod,params) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback();\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // console.log('Migration params',oldIdleTokens,minAmountForRebalance,migrationContractInfo.name, migrationMethod, migrationParams);\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          // Send migration tx\n          this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                    }}\n                  >\n                    {\n                      this.state.migrationContractApproved ? (\n                        this.state.processing.migrate.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              hash={this.state.processing.migrate.txHash}\n                              endMessage={`Finalizing migration request...`}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                              waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                              sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                            />\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        )\n                      ) : (\n                        this.state.processing.approve.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              waitText={`Approve estimated in`}\n                              hash={this.state.processing.approve.txHash}\n                              endMessage={`Finalizing approve request...`}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                            />\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'LockOpen'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.approveText ? this.props.approveText : (\n                                  <>To migrate your { !this.props.isMigrationTool ? 'old' : '' } {this.state.oldTokenName} you need to approve our Smart-Contract first.</>\n                                )\n                              }\n                            </Text>\n                            <RoundButton\n                              buttonProps={{\n                                mt:3,\n                                width:[1,1/2]\n                              }}\n                              handleClick={this.approveMigration.bind(this)}\n                            >\n                              Approve\n                            </RoundButton>\n                          </Flex>\n                        )\n                      )\n                    }\n                  </DashboardCard>\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import IDLE from '../contracts/IDLE.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\n// import GovernorAlphaComp from '../contracts/GovernorAlpha.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.1',\n  baseURL: 'https://idle.finance',\n  baseToken: 'ETH',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed each block for the entire pool.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed each block for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    apyLong:'APY is based on (i) the current yield advertised by the underlying protocol, (ii) the current distribution rate of IDLE based on percentage share of liquidity pool and (iii) the current estimated price of IDLE and other governance tokens from Uniswap spot prices.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        addPostfixForTestnet:true, // Append testnet to eventCategory\n        debugEnabled:false // Enable sending for test environments\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:4,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','y'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'YDAI+YUSDC+YUSDT+YTUSD',\n      token:'YDAI+YUSDC+YUSDT+YTUSD',\n      address:'0xdf5e0e81dff6faf3a7e52ba697820c5e32d806a8'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0xbbc81d23ea2c3ec7e56d39296f0cbb648873a5d3'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveSwap,\n      name:'idleCurveSwap',\n      address:'0x45F783CCE6B7FF23B2ab2D70e416cdb7D6055f51',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x16de59092dae5ccf4a1e6439d611fd0653f0bd01',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:6,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0xd6ad7a6750a7593e092a9b218d66c0a814a3436e',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:6,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0x83f798e925bcd4017eb265844fddabb448f1707d',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:2\n        },\n      },\n      idleTUSDYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'TUSD',\n        token:'idleTUSDYield',\n        address:'0x73a052500105205d34daf004eab301916da8190f',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:3\n        },\n      },\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAPR:true, // Include IDLE Apr\n      protocol:'idle',\n      showBalance:true, // Include IDLE balance in earnings\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAPR:true, // Include COMP Apr\n      showBalance:true, // Include COMP balance in earnings\n      protocol:'compound',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    /*\n    GovernanceCompound:{\n      abi:GovernorAlphaComp,\n      address:'0xc0da01a04c3f3e0be433606045bb7017a7323e38'\n    },\n    */\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#002868',\n          rgb:[0, 40, 104],\n          hsl:['217', '100%', '20%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'YDAI+YUSDC+YUSDT+YTUSD':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        label:'DyDx',\n        legend:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'iEarn'\n      },\n      aave:{\n        label:'Aave',\n        legend:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        },\n        data:{\n          '0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d':{},\n          '0x9ba00d6856a4edf4665bca2c2309936572473b7e':{\"9598633\":\"1000000\",\"9598646\":\"1000001\",\"9598684\":\"1000002\",\"9598823\":\"1000003\",\"9598869\":\"1000004\",\"9598915\":\"1000005\",\"9599092\":\"1000008\",\"9599138\":\"1000009\",\"9599263\":\"1000011\",\"9599267\":\"1000011\",\"9599295\":\"1000012\",\"9599299\":\"1000012\",\"9599307\":\"1000012\",\"9599315\":\"1000012\",\"9599579\":\"1000017\",\"9599866\":\"1000022\",\"9600156\":\"1000026\",\"9600433\":\"1000031\",\"9600704\":\"1000036\",\"9600982\":\"1000042\",\"9601051\":\"1000044\",\"9601073\":\"1000045\",\"9601077\":\"1000045\",\"9601345\":\"1000053\",\"9601619\":\"1000058\",\"9601891\":\"1000063\",\"9602144\":\"1000068\",\"9602429\":\"1000073\",\"9602724\":\"1000078\",\"9602993\":\"1000083\",\"9603272\":\"1000088\",\"9603536\":\"1000093\",\"9603826\":\"1000098\",\"9603840\":\"1000098\",\"9604038\":\"1000102\",\"9604182\":\"1000104\",\"9604457\":\"1000109\",\"9604701\":\"1000114\",\"9604979\":\"1000119\",\"9605247\":\"1000124\",\"9605505\":\"1000129\",\"9605793\":\"1000134\",\"9606073\":\"1000139\",\"9606368\":\"1000144\",\"9606639\":\"1000149\",\"9606896\":\"1000153\",\"9607147\":\"1000158\",\"9607406\":\"1000163\",\"9607722\":\"1000168\",\"9608130\":\"1000175\",\"9608395\":\"1000180\",\"9608656\":\"1000185\",\"9608959\":\"1000190\",\"9609544\":\"1000260\",\"9609811\":\"1000293\",\"9610073\":\"1000314\",\"9610341\":\"1000331\",\"9610601\":\"1000332\",\"9610871\":\"1000333\",\"9611120\":\"1000335\",\"9611386\":\"1000336\",\"9611665\":\"1000337\",\"9611949\":\"1000339\",\"9612210\":\"1000340\",\"9612487\":\"1000341\",\"9612758\":\"1000343\",\"9613012\":\"1000344\",\"9613276\":\"1000346\",\"9613542\":\"1000347\",\"9613824\":\"1000349\",\"9614069\":\"1000351\",\"9614327\":\"1000353\",\"9614596\":\"1000355\",\"9614864\":\"1000356\",\"9615111\":\"1000358\",\"9615394\":\"1000360\",\"9615679\":\"1000361\",\"9615958\":\"1000363\",\"9616245\":\"1000365\",\"9616531\":\"1000367\",\"9616803\":\"1000369\",\"9617053\":\"1000371\",\"9617326\":\"1000373\"}\n        }\n      },\n      curve:{\n        label:'',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:5000,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        1: 'https://mainnet.infura.io/v3/',\n        42: 'https://kovan.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY,\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829'\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  tools:{\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until it is converted to the Idle Token V4.',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens with Kyber Widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedCountries:['GBR','EUR'],\n        supportedTokens:['ETH','DAI','USDC'],\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      totalBalance:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Withdraw':\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let depositTimestamp = null;\n      deposits[selectedToken] = depositTimestamp;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!depositTimestamp){\n                depositTimestamp = tx.timeStamp;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            depositTimestamp = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = depositTimestamp;\n    });\n\n    return deposits;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n    const etherscanInfo = globalConfigs.network.providers.etherscan;\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hash.toLowerCase());\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hash.toLowerCase()] = tx;\n                }\n              });\n\n              // Save new etherscan txs\n              this.saveCachedRequest(etherscanBaseEndpoint,false,etherscanBaseTxs);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n\n        const etherscanTxsToStore = {};\n\n        Object.keys(etherscanTxs).forEach(txHash => {\n          const txInfo = etherscanTxs[txHash];\n          if (txInfo.blockNumber){\n            etherscanTxsToStore[txHash] = txInfo;\n          }\n        });\n\n        const cachedRequestData = {\n          data:{\n            result:etherscanTxsToStore\n          }\n        };\n\n        this.saveCachedRequest(etherscanBaseEndpoint,false,cachedRequestData);\n      }\n    }\n\n    // this.customLog('etherscanTxs',etherscanTxs);\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (enabledTokens.includes(tx.token.toUpperCase())) )\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true) => {\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        const isSwapOutTx = !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveEnabled && curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = curveEnabled && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = curveEnabled && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x2aa8f408dd1d4653ef3c5c38a4c9241e615d94b7208bbbe1d2e19b3053fae8de'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens);\n    }\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[]) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:new Date().getTime(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase()){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice/* && txHash.toLowerCase() !== '0x000000000000000000000000000'.toLowerCase()*/){\n          return false;\n        }\n        // const txFound = etherscanTxs.find(etherscanTx => (etherscanTx.hash === tx.transactionHash && etherscanTx.status === tx.status) );\n        // if (txFound){\n        //   return false;\n        // }\n\n        if (txPending && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = {};\n    // Check if already exists\n    if (localStorage && localStorage.getItem('cachedRequests')){\n      cachedRequests = JSON.parse(localStorage.getItem('cachedRequests'));\n    }\n\n    if (localStorage) {\n      const timestamp = parseInt(new Date().getTime()/1000);\n      cachedRequests[key] = {\n        data,\n        timestamp\n      };\n      return this.setLocalStorage('cachedRequests',JSON.stringify(cachedRequests));\n    }\n    return false;\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = {};\n    // Check if already exists\n    if (localStorage && localStorage.getItem('cachedRequests')){\n      cachedRequests = JSON.parse(localStorage.getItem('cachedRequests'));\n      // Check if it's not expired\n      if (cachedRequests && cachedRequests[key]){\n        return cachedRequests[key].data;\n      }\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=0,return_data=false,alias=false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(new Date().getTime()/1000);\n    let cachedRequests = {};\n    // Check if already exists\n    if (localStorage && localStorage.getItem('cachedRequests')){\n      cachedRequests = JSON.parse(localStorage.getItem('cachedRequests'));\n      // Check if it's not expired\n      if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n        return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n      }\n    }\n\n    const data = await axios\n                        .get(endpoint)\n                        .catch(err => {\n                          console.error('Error getting request');\n                        });\n    if (localStorage) {\n      cachedRequests[key] = {\n        data,\n        timestamp\n      };\n      this.setLocalStorage('cachedRequests',JSON.stringify(cachedRequests));\n    }\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = () => {\n    return this.getStoredItem('walletProvider',false,null);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    let output = await this.makeRequest(endpoint);\n    if (!output){\n      return [];\n    }\n\n    let data = output.data;\n    if (isRisk !== null){\n      data = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      data,\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n\n    if (!globalConfigs.contract.methods.rebalance.enabled || !tokenConfig){\n      return false;\n    }\n\n    const rebalancer = await this.genericContractCall(tokenConfig.idle.token, 'rebalancer');\n\n    if (!rebalancer){\n      return false;\n    }\n\n    const idleRebalancerInstance = await this.createContract('idleRebalancerInstance',rebalancer,globalConfigs.contract.methods.rebalance.abi);\n\n\n    if (!idleRebalancerInstance || !idleRebalancerInstance.contract){\n      return false;\n    }\n\n    // Take next protocols allocations\n    const allocationsPromises = [];\n    const availableTokensPromises = [];\n\n    for (let protocolIndex=0;protocolIndex<tokenConfig.protocols.length;protocolIndex++){\n      const allocationPromise = new Promise( async (resolve, reject) => {\n        try{\n          const allocation = await idleRebalancerInstance.contract.methods.lastAmounts(protocolIndex).call();\n          resolve({\n            allocation,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      allocationsPromises.push(allocationPromise);\n\n      const availableTokenPromise = new Promise( async (resolve, reject) => {\n        try {\n          const protocolAddr = await this.genericContractCall(tokenConfig.idle.token, 'allAvailableTokens', [protocolIndex]);\n          resolve({\n            protocolAddr,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      availableTokensPromises.push(availableTokenPromise);\n    }\n\n    let nextAllocations = null;\n    let allAvailableTokens = null;\n\n    try{\n      nextAllocations = await Promise.all(allocationsPromises);\n      allAvailableTokens = await Promise.all(availableTokensPromises);\n    } catch (error){\n      \n    }\n\n    nextAllocations = nextAllocations && nextAllocations.length ? nextAllocations.filter(v => (v !== null)) : null;\n    allAvailableTokens = allAvailableTokens && allAvailableTokens.length ? allAvailableTokens.filter(v => (v !== null)) : null;\n\n    if ((!allAvailableTokens || !allAvailableTokens.length) || (!nextAllocations || !nextAllocations.length)){\n      return false;\n    }\n\n    // Merge nextAllocations and allAvailableTokens\n    let newTotalAllocation = this.BNify(0);\n    const newProtocolsAllocations = allAvailableTokens.reduce((accumulator,availableTokenInfo) => {\n      if (availableTokenInfo.protocolAddr){\n        const nextAllocation = nextAllocations.find(v => { return v.protocolIndex === availableTokenInfo.protocolIndex; });\n        if (nextAllocation){\n          const allocation = this.BNify(nextAllocation.allocation);\n          accumulator[availableTokenInfo.protocolAddr.toLowerCase()] = allocation;\n          newTotalAllocation = newTotalAllocation.plus(allocation);\n        }\n      }\n      return accumulator;\n    },{});\n\n    // Check if newAllocations differs from currentAllocations\n    let shouldRebalance = false;\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    const protocolsAllocationsPerc = tokenAllocation ? tokenAllocation.protocolsAllocationsPerc : null;\n\n    if (typeof protocolsAllocationsPerc === 'object'){\n      Object.keys(protocolsAllocationsPerc).forEach((protocolAddr) => {\n\n        // Get current protocol allocation percentage\n        const protocolAllocation = protocolsAllocationsPerc[protocolAddr];\n        const protocolAllocationPerc = parseFloat(protocolAllocation).toFixed(3);\n        \n        // Calculate new protocol allocation percentage\n        const newProtocolAllocation = newProtocolsAllocations[protocolAddr.toLowerCase()] ? newProtocolsAllocations[protocolAddr.toLowerCase()] : this.BNify(0);\n        const newProtocolAllocationPerc = newProtocolAllocation ? parseFloat(newProtocolAllocation.div(newTotalAllocation)).toFixed(3) : this.BNify(0);\n\n        // this.customLog(protocolAddr,protocolAllocation.toString(),newProtocolAllocation.toString(),newTotalAllocation.toString(),protocolAllocationPerc,newProtocolAllocationPerc);\n\n        if (protocolAllocationPerc !== newProtocolAllocationPerc){\n          shouldRebalance = true;\n        }\n      });\n    }\n\n    return shouldRebalance;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      // this.customLog('executeMetaTransaction', [userAddress, functionSignature, messageToSign, `${messageToSign.length}`, r, s, v]);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  sendBiconomyTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const value = this.props.web3.utils.toWei('0','ether');\n    const allowance = await this.getAllowance(contractName,contractAddr,walletAddr);\n    return allowance && this.BNify(allowance).gt(this.BNify(value.toString()));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    // const contract = this.getContractByName(contractName);\n    // this.customLog('enableERC20',contractName,contract,address);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(new Date().getTime()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n          if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n            output = tokenAllocation.totalAllocationWithUnlent;\n          }\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            const cTokenInfo = selectedTokenConfig.protocols.find( p => (p.name === 'compound') );\n            if (cTokenInfo){\n              output = await this.getCompSpeed(cTokenInfo.address);\n            }\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // this.customLog('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [daysFirstDeposit,earningsPerc] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        // output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        const amountLents = account ? await this.getAmountLent([token],account) : false;\n        if (amountLents && amountLents[token]){\n          output = amountLents[token];\n        }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account),\n          this.loadAssetField('amountLent',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [idleTokenPrice1,idleTokenBalance2,govTokensBalance] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token),\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n\n            let redeemableBalance = tokenBalance;\n\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n\n            output = redeemableBalance;\n\n            // this.customLog('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance.toFixed(4),output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedData(cachedDataKey);\n      if (cachedData !== null && !this.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    if (blockNumber !== 'latest'){\n      this.setCachedData(cachedDataKey,tokenPrice);\n    }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=120) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      // this.customLog('setCachedData',key);\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  getCachedData = (key,defaultValue=null) => {\n    if (this.props.cachedData && this.props.cachedData[key.toLowerCase()]){\n      const cachedData = this.props.cachedData[key.toLowerCase()];\n      if (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(new Date().getTime()/1000)){\n        return cachedData.data;\n      }\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      // Set cached data\n      return this.setCachedData(cachedDataKey,tokenBalance);\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address !== null ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address) => {\n    return await this.getProtocolBalance(contractName,address);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationWithUnlent:null\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.protocolsBalances = protocolsBalances;\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n    try {\n      const WETHAddr = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n      const one = this.normalizeTokenDecimals(18);\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),[tokenConfigFrom.address, WETHAddr, tokenConfigDest.address]]);\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',tokenConfigDest.address,price);\n        return price;\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveSwapContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          return this.setCachedData(cachedDataKey,curveApy);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveSwapContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,tokenConfig.decimals);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = tokenBalance;\n      });\n    }\n\n    return tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18)\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [virtualPrice,tokenAmount] = await Promise.all([\n        this.genericContractCall(migrationContract.name,'get_virtual_price'),\n        this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // this.customLog('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    let compAPR = this.BNify(0);\n\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      let compoundAllocation = null;\n\n      cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'totalSupply');\n\n      // this.customLog('getCompAPR',cTokenInfo.token,cTokenIdleSupply ? cTokenIdleSupply.toString() : null);\n\n      if (cTokenIdleSupply){\n        let [tokenDecimals,exchangeRate] = await Promise.all([\n          this.getTokenDecimals(cTokenInfo.token),\n          this.genericContractCall(cTokenInfo.token,cTokenInfo.functions.exchangeRate.name,cTokenInfo.functions.exchangeRate.params)\n        ]);\n\n        if (exchangeRate){\n          exchangeRate = this.fixTokenDecimals(exchangeRate,cTokenInfo.decimals);\n          compoundAllocation = this.fixTokenDecimals(cTokenIdleSupply,tokenDecimals,exchangeRate);\n          // this.customLog('getCompAPR',token,compValue.toString(),cTokenIdleSupply.toString(),exchangeRate.toString(),tokenDecimals.toString(),compoundAllocation.toString());\n        }\n      }\n\n      if (compoundAllocation){\n        compoundAllocation = await this.convertTokenBalance(compoundAllocation,token,tokenConfig,false);\n        compAPR = compValue.div(compoundAllocation).times(100);\n\n        // this.customLog('getCompAPR',cTokenInfo.token,compConversionRate.toString(),compDistribution.toString(),compValue.toString(),cTokenIdleSupply.toString(),compoundAllocation.toString(),compAPR.toString()+'%');\n\n        this.setCachedData(cachedDataKey,compAPR);\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compDistribution = this.BNify(compSpeed).times(this.BNify(blocksPerYear)).div(1e18);\n\n            this.setCachedData(cachedDataKey,compDistribution);\n\n            return compDistribution;\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          compSpeed,\n          userPoolShare\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getUserPoolShare(account,tokenConfig)\n        ]);\n\n        if (compSpeed && userPoolShare){\n          output = output.plus(compSpeed.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || !govTokenConfig.showAPR){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompSpeed(cTokenInfo.address);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n      }\n\n      if (govSpeed){\n        govTokensDistribution[govToken] = govSpeed.div(1e18);\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || !govTokenConfig.showAPR){\n        return;\n      }\n\n      let govTokenApr = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          [govTokenApr,tokenAllocation] = await Promise.all([\n            this.getCompAPR(token,tokenConfig),\n            this.getTokenAllocation(tokenConfig,false,false)\n          ]);\n\n          // Cut the COMP token proportionally on Idle funds allocation in compound\n          if (tokenAllocation){\n            const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n            if (compoundInfo){\n              if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                govTokenApr = govTokenApr.times(compoundAllocationPerc);\n              }\n            }\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken(this.props);\n          govTokenApr = await idleGovToken.getAPR(token,tokenConfig);\n          // console.log('IDLE APR 2',govTokenApr.toFixed());\n        break;\n        default:\n        break;\n      }\n\n      if (govTokenApr !== null && this.BNify(govTokenApr).gt(0)){\n        govTokensAprs[govToken] = govTokenApr;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return govTokensEarnings;\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && govTokenConfig.showBalance && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const totalAllocation = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(totalAllocation);\n          // this.customLog(strategy,token,totalAllocation.toString(),totalAUM.toString());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(totalAllocation.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(totalAllocation.times(tokenAprs.avgApy));\n          }\n        }\n\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // this.customLog(strategy,token,'old',oldTokenTotalAllocation.toString(),totalAUM.toString());\n          }\n\n          // debugger;\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && tokenData[conversionRateField]){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        return this.setCachedData(cachedDataKey,conversionRate);\n      }\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true);\n\n    if (tokenData){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(new Date().getTime()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          return this.setCachedData(cachedDataKey,tokenScore);\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          const compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n\n          if (compAPR){\n            protocolApr = protocolApr.plus(compAPR);\n            protocolApy = protocolApy.plus(compAPR);\n          }\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null,\n      protocolsAprs,\n      protocolsApys\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAprs);\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink pb={[3,2]} href={'https://developers.idle.finance'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Developers</ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Terms of Service</Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Privacy Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Cookie Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Brand Assets</ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Overview</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Proposals</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Leaderboard</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Forum</Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>info@idle.finance</Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'white'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              fontWeight={3}\n              color={this.props.isOpened ? 'blue' : 'dark-gray'}\n              my={0}>\n                {this.props.question}\n              </Heading.h4>\n          </Box>\n          <Flex width={1/5} justifyContent={'flex-end'}>\n            <Icon\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n              color={this.props.isOpened ? 'blue' : 'copyColor'}\n              size={\"1.5em\"}\n            />\n          </Flex>\n        </Flex>\n        <Flex width={1}>\n          {this.props.isOpened &&\n            <Text.p textAlign={'justify'} fontSize={[1,2]} dangerouslySetInnerHTML={{ __html: this.props.answer }}></Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Faquestion from '../Faquestion/Faquestion';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Faq extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection: 'general',\n    generalQuestions: [\n      {\n        q: 'What is Idle?',\n        a: `Idle is a decentralized rebalancing protocol that allows users to automatically and algorithmically manage their digital asset allocation among different third-party DeFi protocols. You can choose to maximize your interest rate returns through our MaxYield strategy or minimize your risk exposure through our RiskAdjusted allocation strategy.`\n      },\n      {\n        q: 'What third-party protocols and assets does Idle support?',\n        a: `Idle connects with Compound, Aave, dYdX, Fulcrum, and DSR, and supports DAI, USDC and USDT.  Security is fundamental at Idle, meaning that our products will only connect to protocols that are audited by a top security firm and battle-tested in terms of time in market and digital assets locked. To add more security, we passed through multiple audit reviews and we use <a href=\"https://defiscore.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">DeFiScore</a> risk assessment to evaluate the risk across DeFi protocols.`\n      },\n      {\n        q: 'Can you walk me through an example?',\n        a: `When utilizing the Idle protocol, a user supplies capital for lending as a part of Idle’s non-custodial smart contract pools; the protocol will automatically rebalance the pool’s current allocation to achieve optimized interest rates, based on the strategy.`\n      }\n    ],\n    guidelinesQuestions: [\n      {\n        q: 'How do I manage my assets?',\n        a: `You can access Idle’s user dashboard where you can deposit funds, monitor performances and see insights, rebalance funds, convert from FIAT to crypto, and redeem back your assets.`\n      },\n      {\n        q: 'How does the rebalancing process work?',\n        a: `A rebalance calculation involves assessing the total assets within a pool, incorporating underlying protocol rate functions and levels of supply and demand, and finally determining an allocation that achieves the optimal interest rate possible after the rebalance takes place, based on the strategy.`\n      },\n      {\n        q: 'What are IdleTokens?',\n        a: `IdleTokens represent your balance in the protocol, and accrue interest over time. As a specific Idle’s pool earns interest, its idleToken becomes convertible into an increasing quantity of the underlying asset. IdleTokens conform to the ERC-20 standard.`\n      }\n    ],\n    ratesQuestions: [\n      {\n        q: 'Has Idle had a security audit?',\n        a: `Idle completed multiple and incremental security audits with Quantstamp in December 2019 and April/May 2020 (<a href=\"https://certificate.quantstamp.com/full/idle-finance\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">view the report</a>). Any issues affecting the performance of the protocol or security of funds have been resolved. Users should review our Terms of Service before using the protocol.`\n      },\n      {\n        q: 'How are digital assets custodied?',\n        a: `Idle does not custody digital assets. When you interact with the Idle protocol, your digital assets will be sent to a smart contract that Idle does not control. The smart contract has the concept of “accounts,” to which only you have access. These accounts have balances for each asset, which then are lent out to underlying protocols. When you want to withdraw, the smart contract interacts with the underlying platforms to withdraw digital assets and route them to your wallet.`\n      },\n      {\n        q: 'Who is the administrator of the Idle smart contract?',\n        a: `We have few administrative privileges (eg pause deposits in case of emergency), but we cannot, in any case, withdraw or move user funds directly. You can read more about here <a href=\"https://developers.idle.finance/advanced/admin-powers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developers.idle.finance/advanced/admin-powers</a>`\n      }\n    ]\n  };\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const {generalQuestions, selectedSection, guidelinesQuestions, ratesQuestions} = this.state;\n    const generalDivs = generalQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`general-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const guidelinesDivs = guidelinesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`guidelines-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const ratesDivs = ratesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`rates-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const isGeneralSelected = selectedSection === 'general';\n    const isGuidelinesSelected = selectedSection === 'guidelines';\n    const isRatesSelected = selectedSection === 'rates';\n    return (\n      <Flex\n        flexDirection={'column'}\n      >\n        <Title\n          mb={3}\n          mt={[3,4]}\n          fontWeight={5}\n          fontSize={[5,6]}\n          component={Heading.h4}\n        >\n          Frequently asked questions\n        </Title>\n\n        <Flex\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n          alignItems={'center'}\n        >\n          <Flex width={[1,3/5]} px={[2,0]} flexDirection={'row'} justifyContent={'space-between'}>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGeneralSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('general')}\n                color={isGeneralSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGeneralSelected ? 'selected' : '']}\n              >\n                General\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGuidelinesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('guidelines')}\n                color={isGuidelinesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGuidelinesSelected ? 'selected' : '']}\n              >\n                Liquidity Providers\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isRatesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('rates')}\n                color={isRatesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isRatesSelected ? 'selected' : '']}\n              >\n                Security\n              </Text>\n            </Flex>\n          </Flex>\n          <Box width={1} mt={[3, 4]} mb={[4, 0]}>\n            {isGeneralSelected && generalDivs}\n            {isGuidelinesSelected && guidelinesDivs}\n            {isRatesSelected && ratesDivs}\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faq;\n","import React, { Component } from 'react';\nimport { Flex, Link, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FlexCards extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    const itemPerc = this.props.itemsPerRow ? Math.floor(100/this.props.itemsPerRow)-2 : Math.floor(100/this.props.cards.length)-1;\n    const justifyContent = this.props.justifyContent ? this.props.justifyContent : 'space-between';\n\n    return (\n      <Flex\n        width={1}\n        px={[3,0]}\n        style={{\n          flexWrap:'wrap'\n        }}\n        alignItems={'flex-start'}\n        justifyContent={justifyContent}\n        flexDirection={['column','row']}\n      >\n        {\n          this.props.cards.map( (p,index) => (\n            <DashboardCard\n              isInteractive={true}\n              key={`card_${index}`}\n              cardProps={{\n                p:2,\n                mb:[2,3],\n                display:'flex',\n                alignItems:'center',\n                height:['65px','80px'],\n                justifyContent:'center',\n                mx: justifyContent !== 'space-between' ? [0,2] : 0,\n                style:{\n                  textAlign:'center',\n                  flex:this.props.isMobile ? null : `0 ${itemPerc}%`,\n                }\n              }}\n            >\n              {\n                p.link ? (\n                  <Link\n                    px={[5,4]}\n                    style={{\n                      width:'100%',\n                      height:'100%',\n                      display:'flex',\n                      alignItems:'center',\n                      justifyContent:'center',\n                    }}\n                    href={p.link}\n                    target={'_blank'}\n                    textAlign={'center'}\n                    rel={'nofollow noopener noreferrer'}\n                  >\n                    <Image\n                      src={p.image}\n                      width={'auto'}\n                      height={'auto'}\n                      maxHeight={'50px'}\n                    />\n                  </Link>\n                ) : (\n                  <Image\n                    src={p.image}\n                    width={'auto'}\n                    height={'auto'}\n                    maxHeight={['35px','50px']}\n                  />\n                )\n              }\n            </DashboardCard>\n            \n          ) )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexCards;","import React, { Component } from 'react';\nimport { Flex, Text, Link, Icon } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass AuditCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          my:[2,0],\n          mx:[0,3],\n          width:[1,'auto']\n        }}\n        isInteractive={this.props.link ? true : false}\n        handleClick={this.props.link ? e => window.open(this.props.link) : null}\n      >\n        <Flex\n          flexDirection={'column'}\n        >\n          <Text\n            mb={2}\n            color={'blue'}\n            fontSize={[1,3]}\n          >\n            {this.props.date}\n          </Text>\n          <Text\n            mb={2}\n            fontSize={4}\n            fontWeight={500}\n          >\n            {this.props.title}\n          </Text>\n          <Link\n            hoverColor={'blue'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'center'\n            }}\n          >\n            VIEW REPORT\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'blue'}\n              style={{\n                transform:'rotate(180deg)'\n              }}\n              name={'KeyboardBackspace'}\n            />\n          </Link>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default AuditCard;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './HowItWorks.module.scss';\nimport { Box, Flex, Heading, Image } from \"rimble-ui\";\n\nclass HowItWorks extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Box\n        p={[3,4]}\n        id={'how-it-works'}\n      >\n        <Flex flexDirection={['column','column']} alignItems={'center'} justifyContent={'center'}>\n          <Title\n            mt={[3,4]}\n            mb={[3,4]}\n            fontWeight={5}\n            fontSize={[5,6]}\n            component={Heading.h4}\n          >\n            How it works\n          </Title>\n          <Flex\n            width={1}\n            alignItems={'center'}\n            maxWidth={['24em','90em']}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/choose-strategy.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Choose your strategy\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Build your portfolio with different allocation strategies that aim to maximize your returns and keeping you in your risk comfort zone\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/deposit-stablecoins.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Deposit your crypto-assets\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Just deposit and relax. Your funds will be automatically allocated among DeFi protocols and you will immediately start earning interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/rebalance.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Automated Rebalancing\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Idle automatically keeps the appropriate allocation mix, depending on the strategy. Idle consistently checks for better opportunities.\n                </Heading.h4>\n              </Box>\n            </Flex>\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/insights-redeem.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Easy insights and redeem\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Monitor your funds’ performance and rebalance events, see your estimated earnings and easlily redeem back your funds + interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default HowItWorks;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Link, Icon, Tooltip, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StrategyBox extends Component {\n\n  state = {\n    selectedToken:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.getHighestAprToken();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.getHighestAprToken();\n    }\n  }\n\n  getHighestAprToken = async () => {\n\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n\n    if (!this.props.contractsInitialized || strategyInfo.comingSoon){\n      return false;\n    }\n\n    let selectedToken = null;\n    let highestValue = null;\n    const tokensAprs = {};\n    const availableTokens = this.props.availableStrategies[this.props.strategy];\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      switch (this.props.strategy){\n        case 'best':\n        default:\n          const tokenAPR = await this.functionsUtil.getTokenAprs(tokenConfig);\n          if (tokenAPR && tokenAPR.avgApr !== null){\n            tokensAprs[token] = tokenAPR.avgApr;\n            if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n              highestValue = tokenAPR.avgApr;\n              selectedToken = token;\n            }\n          }\n        break;\n        case 'risk':\n        const tokenScore = await this.functionsUtil.getTokenScore(tokenConfig,true);\n          if (!highestValue || highestValue.lt(tokenScore)){\n            highestValue = tokenScore;\n            selectedToken = token;\n          }\n        break;\n      }\n    });\n\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n    const strategyUrl = '/#'+this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+this.props.strategy;\n    // const chartColor = strategyInfo.chartColor ? strategyInfo.chartColor : null;\n    const tokenConfig = this.state.selectedToken ? this.props.availableStrategies[this.props.strategy][this.state.selectedToken] : null;\n\n    return (\n      <DashboardCard\n        cardProps={{\n          pt:[3,4],\n          ml:['0.35em',0],\n          width:[1,'21em'],\n          mr:['0.35em','2em'],\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'flex-start',\n          height:['fit-content','400px']\n        }}\n        isVisible={ typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true }\n      >\n        <Flex\n          mb={2}\n          justifyContent={'center'}\n        >\n          <Image\n            src={strategyInfo.icon}\n            height={['2.2em','2.8em']}\n          />\n        </Flex>\n        <Flex\n          my={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n        >\n          <Title\n            fontWeight={5}\n            fontSize={[4,'1.7em']}\n          >\n            {strategyInfo.title}\n          </Title>\n        </Flex>\n        <Flex\n          mt={2}\n          mb={[2,3]}\n          minHeight={'50px'}\n          alignItems={'flex-start'}\n          justifyContent={'center'}\n        >\n          <Text\n            px={[3,4]}\n            fontWeight={500}\n            textAlign={'center'}\n          >\n            {strategyInfo.desc}\n          </Text>\n        </Flex>\n        {\n          strategyInfo.comingSoon ? (\n            <Flex\n              mt={3}\n              mb={[0,3]}\n              height={'126px'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n              alignItems={['flex-end','end']}\n            >\n              <Image\n                width={1}\n                src={'/images/strategy-placeholder.jpg'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              my={3}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                borderRight={`1px solid ${this.props.theme.colors.divider}`}\n              >\n                <AssetField\n                  fieldInfo={{\n                    name:'apy',\n                    showTooltip:false,\n                    props:{\n                      decimals:2,\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    APY\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n              </Flex>\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <AssetField\n                  fieldInfo={{\n                    name:'score',\n                    props:{\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    SCORE\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','scoreShort'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !strategyInfo.comingSoon && \n            <Flex\n              mt={2}\n              width={1}\n              height={'60px'}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n              id={`${this.props.strategy}_performance_chart`}\n            >\n              <Image\n                width={1}\n                height={'60px'}\n                src={`/images/strategies/${this.props.strategy}-chart.png`} />\n              {\n                /*\n                <AssetField\n                  fieldInfo={{\n                    name:'aprChart'\n                  }}\n                  chartProps={{\n                    lineWidth:2\n                  }}\n                  {...this.props}\n                  color={chartColor}\n                  tokenConfig={tokenConfig}\n                  token={this.state.selectedToken}\n                  rowId={`${this.props.strategy}_performance_chart`}\n                />\n                */\n              }\n            </Flex>\n        }\n        <Flex\n          width={1}\n          height={'64px'}\n          position={'relative'}\n          boxShadow={'0px -6px 6px -4px rgba(0,0,0,0.1)'}\n        >\n          {\n            strategyInfo.comingSoon ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mr={2}\n                  fontSize={3}\n                  fontWeight={550}\n                  color={'copyColor'}\n                  style={{\n                    fontStyle:'italic'\n                  }}\n                  hoverColor={'copyColor'}\n                >\n                  Coming Soon\n                </Text>\n              </Flex>\n            ) : (\n              <Link\n                href={strategyUrl}\n                style={{display:'flex',width:'100%'}}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mr={2}\n                      fontSize={3}\n                      fontWeight={4}\n                      color={'copyColor'}\n                      hoverColor={'copyColor'}\n                    >\n                      Start with {strategyInfo.title}\n                    </Text>\n                    <Icon\n                      size={'1.2em'}\n                      color={'copyColor'}\n                      name={'ArrowForward'}\n                    />\n                  </Flex>\n              </Link>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StrategyBox;\n","import React, { Component } from \"react\";\nimport { Flex, Box, Button, Form, Text, Checkbox, Link } from 'rimble-ui';\nimport axios from 'axios';\nimport styles from './NewsletterForm.module.scss';\nimport globalConfigs from '../configs/globalConfigs';\n\nclass NewsletterForm extends Component {\n  state = {\n    validated: false,\n    privacy: false,\n    email: null,\n    message: ''\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { validated: false };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.privacy){\n      this.setState({message:'Please check the privacy policy box to proceed.', messageColor:'red' });\n      return false;\n    }\n\n    this.setState({validated:true });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      if (r.data.status === 'success'){\n        this.setState({message:'Thanks! Check your e-mail and confirm your subscription', messageColor:'green' });\n      } else {\n        this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n      }\n    })\n    .catch(err => {\n      this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n    });\n  }\n\n  toggleCheckbox(e) {\n    this.setState({ privacy: e.target.checked });\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n\n    return (\n        <Box mt={[2,3]} maxWidth={'45em'} width={1}>\n          <Form onSubmit={this.handleSubmit}>\n            <Flex flexDirection={['column','row']} alignItems={['center','flex-start']} justifyContent={'center'}>\n              <Box width={[1,7/10]}>\n                <Form.Field width={1} label={''}>\n                  <Form.Input\n                    type=\"email\"\n                    name=\"EMAIL\"\n                    required\n                    width={1}\n                    outline={'none'}\n                    border={0}\n                    fontSize={[2,5]}\n                    borderRadius={0}\n                    pl={0}\n                    pb={3}\n                    textAlign={['center','left']}\n                    placeholder={'Enter your e-mail'}\n                    boxShadow={'none !important'}\n                    borderBottom={'1px solid #a6a6a6'}\n                    onChange={this.handleValidation}\n                  />\n                </Form.Field>\n                <Flex mb={[3,0]} flexDirection={'row'} alignItems={'center'}>\n                  <Checkbox onClick={ e => this.toggleCheckbox(e) } label={'I\\'ve read and accepted the'} required />\n                  <Link color={'blue'} hoverColor={'blue'} target={'_blank'} rel=\"nofollow noopener noreferrer\" href={\"https://www.iubenda.com/privacy-policy/61211749\"}>Privacy Policy</Link>\n                </Flex>\n                {this.state.message && this.state.message.length &&\n                  <Text.p py={0} mt={[2,3]} mb={3} textAlign={['center','left']} color={this.state.messageColor}>{this.state.message}</Text.p>\n                }\n              </Box>\n              <Box width={[1,3/10]} my={[0,'26px']}>\n                <Button className={styles.gradientButton} type=\"submit\" width={1}>\n                  GET UPDATES\n                </Button>\n              </Box>\n            </Flex>\n          </Form>\n        </Box>\n    );\n  }\n}\nexport default NewsletterForm;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      boxShadow:1,\n      width:'40px',\n      height:'40px',\n      mainColor:'white',\n      borderRadius:'50%',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Flex, ToastMessage, Link, Icon } from \"rimble-ui\";\n\nclass FloatingToastMessage extends Component {\n  state = {}\n\n  render() {\n    let ToastComponent = null;\n\n    switch (this.props.variant){\n      case 'success':\n        ToastComponent = ToastMessage.Success;\n      break;\n      case 'processing':\n        ToastComponent = ToastMessage.Processing;\n      break;\n      case 'failure':\n        ToastComponent = ToastMessage.Failure;\n      break;\n      default:\n      break;\n    }\n\n    if (ToastComponent){\n      return (\n        <Flex width={ !this.props.isMobile ? '420px': '100vw' } position={'fixed'} zIndex={'9999'} p={ !this.props.isMobile ? '1em' : 0 } right={'0'} bottom={'0'}>\n          <ToastComponent\n            style={{width:'100%'}}\n            message={this.props.message}\n            secondaryMessage={this.props.secondaryMessage}\n            closeElem={false}\n          />\n          <Link onClick={this.props.handleClose} style={ this.props.isMobile ? {position:'absolute',top:'10px',right:'10px',width:'20px',height:'20px'} : {position:'absolute',top:'22px',right:'22px',width:'16px',height:'16px'}}>\n            <Icon\n              name={'Close'}\n              color={'dark-gray'}\n              size={ this.props.isMobile ? '20' : '16' }\n            />\n          </Link>\n        </Flex>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default FloatingToastMessage;","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport { Box, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const {\n      avgAPY,\n      totalAUM\n    } = await this.functionsUtil.getAggregatedStats();\n\n    const totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n\n    this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              {\n                this.props.subtitle ? this.props.subtitle : (\n                  <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>Assets Under Management <Text.span color={'cellTitle'} fontWeight={3} fontSize={'70%'}>(V3 + V4)</Text.span></Text.span>\n                )\n              }\n            </Title>\n          )\n        }\n      </Box>\n    ) : null;\n  }\n}\n\nexport default AssetsUnderManagement;\n","import Faq from '../Faq/Faq';\nimport Title from '../Title/Title';\nimport Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport ExtLink from '../ExtLink/ExtLink';\nimport styles from './Landing.module.scss';\nimport FlexCards from '../FlexCards/FlexCards';\nimport AuditCard from '../AuditCard/AuditCard';\nimport HowItWorks from '../HowItWorks/HowItWorks';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport StrategyBox from '../StrategyBox/StrategyBox';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport NewsletterForm from '../NewsletterForm/NewsletterForm';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport { Image, Flex, Box, Heading, Link, Text, Icon } from 'rimble-ui';\nimport FloatingToastMessage from '../FloatingToastMessage/FloatingToastMessage';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nlet scrolling = false;\n\nclass Landing extends Component {\n  state = {\n    avgApr:null,\n    carouselMax:2,\n    carouselIndex:0,\n    activeCarousel:1,\n    runConfetti:false,\n    activeBullet:null,\n    protocolsAprs:null,\n    testPerformed:false,\n    totalAllocation:null,\n    carouselOffsetLeft:0,\n    setActiveCarousel:null,\n    carouselIntervalID:null,\n    protocolsAllocations:null,\n    randomAllocationEnabled:false,\n  };\n\n  // Clear all the timeouts\n  async componentWillUnmount(){\n\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  setActiveCarousel = (activeCarousel) => {\n    activeCarousel = activeCarousel<=3 ? activeCarousel : 1;\n    this.setState({activeCarousel});\n  }\n\n  async componentDidMount(){\n    this.props.processCustomParam(this.props);\n\n    if (this.props.contractsInitialized){\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const multiplier = this.props.isMobile ? 1 : 0.75;\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left*multiplier)+'px';\n\n    this.setState({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n    this.props.processCustomParam(this.props,prevProps);\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (contractsInitialized) {\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  processScrolling = () => {\n    if (scrolling){\n\n      const bulletCards = document.getElementsByClassName('bulletCard');\n      let activeBullet = 0;\n\n      for (let i=0;i<bulletCards.length;i++){\n        const bulletCard = bulletCards[i];\n        if (bulletCard && bulletCard.offsetParent){\n          const offsetY = bulletCard.offsetTop ? bulletCard.offsetTop : bulletCard.offsetParent.offsetTop;\n          if (window.scrollY >= offsetY-200){\n            activeBullet = i+2;\n          }\n        }\n      }\n      scrolling = false;\n\n      if (parseInt(activeBullet) !== parseInt(this.state.activeBullet)){\n        this.setState({activeBullet});\n      }\n    }\n  };\n\n  getAllocations = async () => {\n\n    let totalAllocation = this.functionsUtil.BNify(0);\n\n    const newState = {\n      avgApr: null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.functionsUtil.asyncForEach(this.props.tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [protocolBalance, tokenDecimals, exchangeRate] = await Promise.all([\n        this.functionsUtil.getProtocolBalance(contractName),\n        this.functionsUtil.getTokenDecimals(contractName),\n        ( protocolInfo.functions.exchangeRate ? this.functionsUtil.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.functionsUtil.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      const protocolAllocation = this.functionsUtil.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n    });\n\n    if (this.state.randomAllocationEnabled){\n      let remainingAllocation = parseFloat(totalAllocation.toString());\n      const totProtocols = Object.keys(protocolsAllocations).length;\n      Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n        let alloc = parseFloat(protocolsAllocations[protocolAddr].toString());\n        if (i === totProtocols-1){\n          alloc = remainingAllocation;\n        } else {\n          alloc = parseFloat(Math.random()*(remainingAllocation-(remainingAllocation/3))+(remainingAllocation/3));\n          remainingAllocation -= alloc;\n        }\n        protocolsAllocations[protocolAddr] = this.functionsUtil.BNify(alloc);\n      });\n    }\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    newState.totalAllocation = totalAllocation;\n    newState.protocolsAllocations = protocolsAllocations;\n    newState.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (this.state.protocolsAprs){\n      newState.avgApr = this.functionsUtil.getAvgApr(this.state.protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    this.setState(newState);\n\n    return newState;\n  }\n\n  getAprs = async () => {\n    const Aprs = await this.functionsUtil.genericIdleCall('getAPRs');\n\n    if (!Aprs){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n    const protocolsAprs = {};\n\n    this.props.tokenConfig.protocols.forEach((info,i) => {\n      // const protocolName = info.name;\n      const protocolAddr = info.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        const protocolApr = aprs[addrIndex];\n        protocolsAprs[protocolAddr] = this.functionsUtil.BNify(+this.functionsUtil.toEth(protocolApr));\n      }\n    });\n\n    const newState = {\n      avgApr: null,\n      protocolsAprs\n    };\n\n    if (this.state.protocolsAllocations && this.state.totalAllocation){\n      newState.avgApr = this.functionsUtil.getAvgApr(protocolsAprs,this.state.protocolsAllocations,this.state.totalAllocation);\n    }\n\n    this.setState(newState);\n    return newState;\n  };\n\n  startLending = async e => {\n    this.props.updateSelectedTab(e, '1');\n    window.location.href = '#invest';\n  }\n\n  setConfetti = (runConfetti) => {\n    this.setState({\n      runConfetti\n    })\n  }\n\n  connectAndGoToRoute = (route) => {\n\n    const goToLocation = () => {\n      window.location = \"/#\"+route;\n    }\n\n    if (this.props.account){\n      goToLocation();\n    } else {\n      this.props.connectAndValidateAccount(goToLocation);\n    }\n  }\n\n  render() {\n    const { network } = this.props;\n    const availableTokens = [];\n    Object.values(this.props.availableStrategies).forEach( tokens => {\n      Object.keys(tokens).forEach( token => {\n        if (availableTokens.indexOf(token) === -1){\n          availableTokens.push(token);\n        }\n      });\n    });\n    return (\n      <Box\n        height={'100vh'}\n        className={styles.mainViewport}\n        style={{\n          paddingBottom: !network.isCorrectNetwork ? \"8em\" : \"0\"\n        }}\n      >\n        <Box\n          pl={[3,5]}\n          pr={[3,0]}\n          pt={['2.5em', '3em']}\n          className={styles.headerContainer}\n          minHeight={ Math.max((this.props.innerHeight+this.props.innerHeight*0.025),768) }\n        >\n          <Box position={'relative'} zIndex={10}>\n            <Flex\n              overflow={'hidden'}\n              alignItems={'flex-start'}\n              flexDirection={['column','row']}\n              mt={['7em',Math.max(window.innerHeight*0.225,145)+'px']}\n            >\n              <Flex\n                width={[1,1/3]}\n                justifyContent={['center','flex-end']}\n              >\n                <Flex\n                  pb={3}\n                  width={1}\n                  textAlign={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['50em', '24em']}\n                  alignItems={['center','flex-start']}\n                >\n                  <Heading.h1\n                    fontWeight={5}\n                    color={'white'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    lineHeight={['initial','2.5rem']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    The best place\n                  </Heading.h1>\n                  <Heading.h1\n                    mb={[2,3]}\n                    color={'white'}\n                    fontWeight={300}\n                    lineHeight={'initial'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    for your money\n                  </Heading.h1>\n                  <Heading.h2\n                    style={{\n                      width:'100%',\n                    }}\n                    color={'white'}\n                    fontWeight={400}\n                    fontSize={[2,'1.2em']}\n                    textAlign={['center','justify']}\n                  >\n                    Choose your strategy and earn the yield you deserve without worry about finding the best option, either if you want to optimize returns or risks.\n                  </Heading.h2>\n                  {\n                    !this.props.isMobile && \n                      <Flex\n                        mt={4}\n                      >\n                        <RoundButton\n                          handleClick={ (e) => {\n                            window.location.hash = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.functionsUtil.getGlobalConfig(['strategies']))[0];\n                          }}\n                        >\n                          Go to Dashboard\n                        </RoundButton>\n                      </Flex>\n                  }\n                </Flex>\n              </Flex>\n              <Flex\n                mr={['auto',0]}\n                width={[1,2/3]}\n                ml={[0,'100px']}\n                textAlign={'center'}\n                position={'relative'}\n                flexDirection={'column'}\n                height={['410px','460px']}\n                justifyContent={['flex-start','flex-end']}\n              >\n                <Flex\n                  left={0}\n                  right={0}\n                  width={'100%'}\n                  height={'400px'}\n                  top={['initial','0']}\n                  position={'absolute'}\n                  bottom={['0','initial']}\n                  overflow={this.state.carouselIndex === 0 ? 'visible' : 'hidden'}\n                >\n                  <Flex\n                    top={['initial',0]}\n                    flexDirection={'row'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={[Object.keys(globalConfigs.strategies).length*100+'%','140%']}\n                    height={['auto','400px']}\n                    bottom={['5px','initial']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      overflowY:'visible',\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    {\n                      Object.keys(globalConfigs.strategies).map((strategy,strategyIndex) => (\n                        <StrategyBox\n                          {...this.props}\n                          strategy={strategy}\n                          key={`strategy_${strategy}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  mt={[0,'20px']}\n                  id={'carousel-container'}\n                  justifyContent={['center','flex-start']}\n                >\n                  <RoundIconButton\n                    buttonProps={{\n                      mr:[4,3]\n                    }}\n                    iconName={'ArrowBack'}\n                    disabled={this.state.carouselIndex === 0}\n                    handleClick={ e => this.handleCarousel('back') }\n                  />\n                  <RoundIconButton\n                    iconName={'ArrowForward'}\n                    handleClick={ e => this.handleCarousel('next') }\n                    disabled={this.state.carouselIndex === this.state.carouselMax}\n                  />\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <HowItWorks />\n\n        <Box\n          mb={[3,4]}\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'partners'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Audited and Battle-tested\n            </Title>\n            <Text\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              We take security very seriously, that's why our Smart-Contracts are fully Audited and battle-tested.\n            </Text>\n            <Flex\n              width={1}\n              px={[3,4]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetsUnderManagement\n                {...this.props}\n                counterStyle={{\n                  display:'block',\n                  color:'dark-gray',\n                  overflow: 'hidden',\n                  textAlign: 'center',\n                  whiteSpace: 'nowrap',\n                  textOverflow: 'ellipsis',\n                  fontFamily:this.props.theme.fonts.counter,\n                  fontWeight:this.props.theme.fontWeights[5],\n                  fontSize: this.props.isMobile ? this.props.theme.fontSizes[5] : this.props.theme.fontSizes[8],\n                }}\n                subtitle={null}\n                subtitleProps={{\n                  textAlign:'center'\n                }}\n              />\n              <Link\n                mb={3}\n                target={'_blank'}\n                textAlign={'center'}\n                rel={'nofollow noopener noreferrer'}\n                href={'https://certificate.quantstamp.com/view/idle-finance'}\n              >\n                <Image\n                  width={'15em'}\n                  src={'images/quantstamp-badge.svg'}\n                />\n              </Link>\n              <Title\n                my={[2,3]}\n                mt={[3,4]}\n                fontWeight={3}\n                fontSize={[3,4]}\n                color={'dark-gray'}\n                component={Heading.h4}\n              >\n                Full Audit Report:\n              </Title>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <AuditCard\n                  title={'Idle Finance'}\n                  date={'August 12th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-finance'}\n                />\n                <AuditCard\n                  title={'Idle Goverance'}\n                  date={'November 17th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-goverance'}\n                />\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n        <Box\n          mt={[4,5]}\n          px={[3,4]}\n          py={[4,5]}\n          id={'integrators'}\n          className={styles.gradientBackground}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','75em']}\n          >\n            <Title\n              mb={3}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Build with Idle\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Just few lines of code to integrate the power of Idle into your dApp\n            </Text>\n            <Flex\n              mt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={['center','space-between']}\n            >\n              {\n                /*\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  alignItems={['center','flex-start']}\n                >\n                  <FlexCards\n                    itemsPerRow={4}\n                    cards={[\n                      {\n                        link:'https://zerion.io',\n                        image:'images/integrators/zerion.svg'\n                      },\n                      {\n                        link:'https://gnosis.io',\n                        image:'images/integrators/gnosis.png'\n                      },\n                      {\n                        link:'https://cryptolocally.com',\n                        image:'images/integrators/cryptolocally.png'\n                      },\n                      {\n                        link:'https://www.peepsdemocracy.com',\n                        image:'images/integrators/peeps.png'\n                      }\n                    ]}\n                    {...this.props}\n                  />\n                </Flex>\n                */\n              }\n              <Flex\n                mt={2}\n                width={1}\n                flexDirection={['column','row']}\n                alignItems={['center','flex-start']}\n                justifyContent={['center','flex-start']}\n              >\n                <Flex\n                  mb={[3,0]}\n                  width={[1,0.5]}\n                  flexDirection={'column'}\n                  alignItems={['center','flex-start']}\n                  justifyContent={['center','flex-start']}\n                >\n                  <Title\n                    mb={3}\n                    fontWeight={5}\n                    component={Heading.h5}\n                    fontSize={[4,'1.75em']}\n                  >\n                    Designed for Developers\n                  </Title>\n\n                  <Text\n                    mb={3}\n                    pr={[0,5]}\n                    textAlign={['center','justify']}\n                  >\n                    A fully integrated suite of DeFi yield products easy to integrate into your dApp so your teams don't need to stitch together disparate protocols or spend months integrating and updating yield functionality.<br />One integration to rule them all.\n                  </Text>\n                  <Text\n                    mb={2}\n                    fontWeight={500}\n                  >\n                    Supported Assets:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    flexDirection={'row'}\n                  >\n                    {\n                      availableTokens.map( token => (\n                        <AssetField\n                          token={token}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              width:'2.2em',\n                              height:'2.2em'\n                            }\n                          }}\n                          key={`asset_${token}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={['column','row']}\n                    justifyContent={['center','flex-start']}\n                  >\n                    <RoundButton\n                      buttonProps={{\n                        width:[1,'auto']\n                      }}\n                      handleClick={ (e) => {\n                        window.open('https://developers.idle.finance')\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'flex-end'}\n                        justifyContent={'center'}\n                      >\n                        <Text\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'white'}\n                        >\n                          Read the docs\n                        </Text>\n                        <Icon\n                          ml={2}\n                          size={'1.2em'}\n                          color={'white'}\n                          name={'KeyboardArrowRight'}\n                        />\n                      </Flex>\n                    </RoundButton>\n                    <Text\n                      mt={[2,0]}\n                      ml={[0,2]}\n                    >\n                      or\n                    </Text>\n                    <ExtLink\n                      mt={[2,0]}\n                      ml={[0,2]}\n                      fontSize={2}\n                      hoverColor={'primary'}\n                      href={'https://idlefinance.typeform.com/to/PUC7nO'}\n                    >\n                      Contact Us\n                    </ExtLink>\n                    {\n                      /*\n                      <RoundButton\n                        buttonProps={{\n                          ml:2,\n                          mainColor:'red',\n                          width:[1,'auto']\n                        }}\n                        handleClick={ (e) => {\n                          window.open('https://idlefinance.typeform.com/to/PUC7nO')\n                        }}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'flex-end'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={3}\n                            color={'white'}\n                            fontSize={[1,2]}\n                          >\n                            Contact us\n                          </Text>\n                          <Icon\n                            ml={2}\n                            name={'Send'}\n                            size={'1.2em'}\n                            color={'white'}\n                          />\n                        </Flex>\n                      </RoundButton>\n                      */\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={[1,0.5]}\n                >\n                  <iframe\n                    height={\"350\"}\n                    title={'integrate'}\n                    style={{\n                      border:'0',\n                      width: '100%',\n                      height: '350px',\n                      overflow:'hidden',\n                      transform: 'scale(1)',\n                    }}\n                    sandbox={\"allow-scripts allow-same-origin\"}\n                    src={\"https://carbon.now.sh/embed?bg=rgba%28255%2C255%2C255%2C0%29&t=cobalt&wt=none&l=auto&ds=false&dsyoff=20px&dsblur=68px&wc=true&wa=true&pv=0px&ph=0px&ln=false&fl=1&fm=Fira+Code&fs=13.5px&lh=143%25&si=false&es=2x&wm=false&code=const%2520idleTokenAbi%2520%253D%2520require%28%27idleToken.json%27%29%253B%2520%252F%252F%2520Include%2520idleToken%2520ABI%250Aconst%2520user%2520%253D%2520%270x...%27%253B%2520%252F%252F%2520set%2520user%2520address%2520%250Aconst%2520idleDAI%2520%253D%2520%270x3fE7940616e5Bc47b0775a0dccf6237893353bB4%27%253B%2520%252F%252F%2520idleDAIYield%2520address%250A%250A%252F%252F%2520Initialize%2520web3%2520contract%250Aconst%2520idleToken%2520%253D%2520new%2520web3.eth.Contract%28idleTokenAbi%252C%2520idleDAI%29%253B%250A%250A%252F%252F%2520Approve%2520contract%250Aconst%2520_amount%2520%253D%2520%271000000000000000000%27%253B%2520%252F%252F%25201%2520DAI%250Aawait%2520idleToken.approve%28idleTokenAddress%252C%2520_amount%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B%250A%250A%252F%252F%2520Deposit%2520tokens%250Aawait%2520idleToken.mintIdleToken%28_amount%252C%2520true%252C%2520user%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B\"}\n                  >\n                  </iframe>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'investors'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Backed By\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle has been funded by industry leaders\n            </Text>\n            <FlexCards\n              justifyContent={'center'}\n              itemsPerRow={4}\n              cards={[\n                {\n                  link:'https://consensys.net',\n                  image:'images/investors/consensys.png'\n                },\n                {\n                  link:'https://www.gumi-cryptos.com',\n                  image:'images/investors/gumi.png'\n                },\n                {\n                  link:'https://www.greenfield.one',\n                  image:'images/investors/greenfield.png'\n                },\n                /*\n                {\n                  link:'https://quantstamp.com',\n                  image:'images/investors/quantstamp.png'\n                },\n                */\n                {\n                  link:'https://dialectic.ch',\n                  image:'images/investors/dialectic.png'\n                },\n                {\n                  link:'https://www.thelao.io',\n                  image:'images/investors/the-lao.png'\n                },\n                {\n                  link:'https://br.capital',\n                  image:'images/investors/br-capital.png'\n                },\n                {\n                  link:'https://www.longhashventures.com',\n                  image:'images/investors/lh-ventures.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'protocols'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Built with the best\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle infrastructure rely on the most powerful DeFi protocols\n            </Text>\n            <FlexCards\n              cards={[\n                {\n                  link:'https://app.compound.finance',\n                  image:'images/partners/compound.svg'\n                },\n                /*\n                {\n                  link:'https://fulcrum.trade',\n                  image:'images/partners/fulcrum.svg'\n                },\n                */\n                {\n                  link:'https://aave.com',\n                  image:'images/partners/aave.svg'\n                },\n                {\n                  link:'https://dydx.exchange',\n                  image:'images/partners/dydx.svg'\n                },\n                {\n                  link:'https://oasis.app/',\n                  image:'images/partners/oasis.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box id=\"faq\" pt={[4,5]} pb={[4,6]}>\n          <Box maxWidth={['50em','60em']} mx={'auto'} px={[3,5]}>\n            <Faq selectedToken={this.props.selectedToken} tokenConfig={this.props.tokenConfig} />\n          </Box>\n        </Box>\n\n        <Flex id=\"contacts\" flexDirection={'column'} position={'relative'} justifyContent={'center'} alignItems={'center'} pb={[3,6]} px={[3,6]}>\n          <Flex flexDirection={'column'} justifyContent={['center','flex-start']} alignItems={['center','flex-start']} width={1} maxWidth={['35em','70em']}>\n            <Heading.h3 color={'blue'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Don't be shy, let's talk.\n            </Heading.h3>\n            <Heading.h3 color={'dark-gray'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Let's build something great together.\n            </Heading.h3>\n            <NewsletterForm />\n          </Flex>\n        </Flex>\n\n        <Footer tokenConfig={this.props.tokenConfig} />\n\n        {\n          this.props.toastMessageProps &&\n            <FloatingToastMessage isMobile={this.props.isMobile} {...this.props.toastMessageProps} handleClose={this.props.closeToastMessage} />\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Landing;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Icon, Text, Image } from 'rimble-ui';\n\nclass DashboardMenu extends Component {\n  state = {\n    buyModalOpened:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setBuyModalOpened(buyModalOpened){\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length){\n      return null;\n    }\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return !this.props.isMobile || showMobile;\n    });\n\n    if (!visibleLinks.length){\n      return null;\n    }\n\n    return (\n      <Flex\n        p={0}\n        flexDirection={['row','column']}\n      >\n        {\n          !this.props.isMobile &&\n            <Flex\n              p={3}\n              mb={3}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <RouterLink to=\"/\">\n                <Image\n                  position={'relative'}\n                  height={['35px','38px']}\n                  src=\"images/logo-gradient.svg\"\n                />\n              </RouterLink>\n            </Flex>\n        }\n        {\n          visibleLinks.map((menuLink,menuIndex) => {\n            const isExternalLink = menuLink.isExternalLink;\n            const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n            return (\n              <Box\n                my={[0,3]}\n                key={`menu-${menuIndex}`}\n                width={[1/visibleLinks.length,'auto']}\n              >\n                <LinkComponent\n                  to={menuLink.route}\n                  href={menuLink.route}\n                  style={{textDecoration:'none'}}\n                >\n                  <Flex\n                    p={[2,3]}\n                    borderRadius={[0,2]}\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    backgroundColor={ menuLink.selected ? '#f3f6ff' : 'transparent' }\n                    boxShadow={menuLink.selected ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={['column','row']}\n                      justifyContent={['center','flex-start']}\n                    >\n                      {menuLink.image &&\n                        <Image\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          src={ menuLink.selected ? menuLink.image : (menuLink.imageInactive ? menuLink.imageInactive : menuLink.image)}\n                          height={['1.2em','1.6em']}\n                        />\n                      }\n                      {menuLink.icon &&\n                        <Icon\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          name={menuLink.icon}\n                          size={ this.props.isMobile ? '1.4em' : '1.6em' }\n                          color={ menuLink.selected ? menuLink.bgColor : 'copyColor' }\n                        />\n                      }\n                      <Text\n                        fontWeight={3}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                        fontSize={['11px',2]}\n                        style={{\n                          whiteSpace:'nowrap'\n                        }}\n                      >\n                        {menuLink.label}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </LinkComponent>\n                {\n                  /*\n                  menuLink.submenu.length>0 && (\n                    <Flex className={[styles.submenu]} style={{maxHeight:menuLink.selected ? menuLink.submenu.length*36+'px' : '0' }} flexDirection={'column'} borderLeft={ menuLink.selected ? '2px solid rgba(0,0,0,0.3)' : null }>\n                      {\n                        menuLink.submenu.map((submenuLink,submenuIndex) => {\n                          return (\n                            <RouterLink key={`submenu-${menuIndex}-${submenuIndex}`} to={`${menuLink.route}/${submenuLink.route}`} style={{textDecoration:'none'}}>\n                              <Flex py={2} pl={'40px'} flexDirection={'row'} alignItems={'center'}>\n                                <Text fontSize={'0.85rem'}>{submenuLink.label}</Text>\n                              </Flex>\n                            </RouterLink>\n                          )\n                        })\n                      }\n                    </Flex>\n                  )\n                  */\n                }\n              </Box>\n            );\n          })\n        }\n        {\n        /*\n        !this.props.isMobile  &&\n          <Box\n            width={'auto'}\n            borderTop={`1px solid ${theme.colors.divider}`}\n          >\n            <Flex\n              p={[2,3]}\n              style={{\n                cursor:'pointer'\n              }}\n              borderRadius={[0,2]}\n              flexDirection={'row'}\n              alignItems={'center'}\n              onClick={ e => this.setBuyModalOpened(true) }\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={['column','row']}\n                justifyContent={['center','flex-start']}\n              >\n                <Icon\n                  mr={[0,3]}\n                  ml={[0,2]}\n                  mb={[1,0]}\n                  size={'1.6em'}\n                  align={'center'}\n                  color={'copyColor'}\n                  name={'AddCircleOutline'}\n                />\n                <Text\n                  fontWeight={3}\n                  fontSize={[0,2]}\n                  color={'copyColor'}\n                  textAlign={'center'}\n                  style={{\n                    whiteSpace:'nowrap'\n                  }}\n                >\n                  Add Funds\n                </Text>\n              </Flex>\n            </Flex>\n          </Box>\n        <BuyModal\n          {...this.props}\n          isOpen={this.state.buyModalOpened}\n          closeModal={ e => this.setBuyModalOpened(false) }\n        />\n        */\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default DashboardMenu;","import moment from 'moment';\nimport theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\nimport { Flex, Text, Box } from 'rimble-ui';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StatsChart extends Component {\n  state = {\n    chartProps:{},\n    chartType:null,\n    chartData:null,\n    chartWidth:null\n  };\n\n  async componentDidMount() {\n    this.setState({\n      chartData:null,\n      chartType:null,\n      chartProps:null,\n    });\n    this.loadUtils();\n    this.loadApiData();\n  }\n\n  async componentDidUpdate(prevProps) {\n    const showAdvancedChanged = prevProps.showAdvanced !== this.props.showAdvanced;\n    const apiResultsChanged = prevProps.apiResults !== this.props.apiResults;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (apiResultsChanged || showAdvancedChanged || tokenChanged){\n      this.componentDidMount();\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  parseAum = value => {\n    return (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken || !this.props.chartMode || !this.props.apiResults){\n      return false;\n    }\n\n    const CustomTooltipRow = props => (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n\n    const CustomTooltip = props => {\n      return (\n        <DashboardCard\n          key={props.point.id}\n          cardProps={{\n            py:2,\n            px:3,\n            width:1,\n            left: props.point.data.itemPos>50 ? '-110%' : '0'\n          }}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            {\n              props.point.data.xFormatted && \n                <Text\n                  mb={2}\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                  textAlign={'left'}\n                >\n                  {props.point.data.xFormatted}\n                </Text>\n            }\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const maxGridLines = 4;\n    const apiResults = this.props.apiResults;\n    const apiResults_unfiltered = this.props.apiResults_unfiltered;\n    const totalItems = apiResults.length;\n    const protocols = Object.assign([],this.props.tokenConfig.protocols);\n    // const compoundProtocol = this.props.tokenConfig.protocols.find( p => (p.name === 'compound'));\n\n    const versionInfo = globalConfigs.stats.versions[this.props.idleVersion];\n\n    let keys = {};\n    let tempData = {};\n    let gridYStep = 0;\n    let itemIndex = 0;\n    let chartData = [];\n    let chartProps = {};\n    let chartType = Line;\n    let gridYValues = [];\n    let maxChartValue = 0;\n    let axisBottomIndex = 0;\n    let idleChartData = null;\n    let firstIdleBlock = null;\n\n    switch (this.props.chartMode){\n      case 'VOL':\n        let divergingData = {};\n\n        const startTimestamp = parseInt(apiResults_unfiltered[0].timestamp);\n        const endTimestamp = parseInt(moment()._d.getTime()/1000);\n\n        for (let timestamp=startTimestamp;timestamp<=endTimestamp;timestamp+=86400){\n          const date = moment(timestamp*1000).format(\"YYYY/MM/DD\");\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n        }\n\n        let lastRow = null;\n        apiResults_unfiltered.forEach(row => {\n          const date = moment(row.timestamp*1000).format(\"YYYY/MM/DD\");\n          const idleTokens = this.functionsUtil.fixTokenDecimals(row.idleSupply,18);\n\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp:row.timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n\n          if (lastRow){\n            const idleTokensPrev = this.functionsUtil.fixTokenDecimals(lastRow.idleSupply,18);\n            const idleTokensDiff = !idleTokens.eq(idleTokensPrev);\n            if (idleTokensDiff){\n              const diff = idleTokens.minus(idleTokensPrev);\n              // Deposits\n              if (diff.gte(0)){\n                divergingData[date].deposits+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,divergingData[date].deposits);\n              } else {\n                divergingData[date].redeems+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,Math.abs(divergingData[date].deposits));\n              }\n            }\n\n          } else {\n            divergingData[date].deposits+=parseFloat(idleTokens);\n          }\n\n          lastRow = row;\n        });\n\n        chartData = Object.values(divergingData).filter(v => {\n          return (!this.props.startTimestamp || v.timestamp>=this.props.startTimestamp) && (!this.props.endTimestamp || v.timestamp<=this.props.endTimestamp);\n        });\n\n        let maxRange = 0;\n        chartData.forEach(v => {\n          maxRange = Math.max(maxRange,Math.abs(v.deposits),Math.abs(v.redeems));\n        })\n\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          indexBy: 'date',\n          enableLabel: false,\n          minValue:-maxRange,\n          maxValue:maxRange,\n          label: d => {\n            return Math.abs(d.value);\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days',\n          },\n          axisLeft: null,\n          axisRight: {\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:8,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(Math.abs(v),0)\n          },\n          markers: [\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { strokeOpacity: 0 },\n              textStyle: { fill: theme.colors.transactions.action.deposit },\n              legend: 'deposits',\n              legendPosition: 'top-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { stroke: theme.colors['dark-gray'], strokeDasharray: '5 3' },\n              textStyle: { fill: theme.colors.transactions.action.redeem },\n              legend: 'redeems',\n              legendPosition: 'bottom-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n          ],\n          keys:['deposits','redeems'],\n          padding:0.4,\n          colors:[theme.colors.transactions.action.deposit, theme.colors.transactions.action.redeem],\n          labelTextColor: 'inherit:darker(1.4)',\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 80 : 100,\n              itemHeight: 18,\n              translateX: 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            },\n            tooltip:{\n              container:{\n                boxShadow:null,\n                background:null\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 50, bottom: 45, left: 50 } : { top: 20, right: 70, bottom: 70, left: 50 },\n          tooltip:(data) => {\n            const xFormatted = this.functionsUtil.strToMoment(data.indexValue).format('MMM DD');\n            const point = {\n              id:data.id,\n              data:{\n                xFormatted\n              }\n            };\n            const depositFormatted = this.functionsUtil.abbreviateNumber(data.data.deposits,2)+' '+this.props.selectedToken;\n            const redeemFormatted = this.functionsUtil.abbreviateNumber(data.data.redeems,2)+' '+this.props.selectedToken;\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                <CustomTooltipRow\n                  label={'Deposits'}\n                  color={theme.colors.deposit}\n                  value={depositFormatted}\n                />\n                <CustomTooltipRow\n                  label={'Redeem'}\n                  color={theme.colors.redeem}\n                  value={redeemFormatted}\n                />\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      /*\n      case 'AUM_ALL':\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens[globalConfigs.network.requiredNetwork]),async (tokenName,i) => {\n          const tokenConfig = availableTokens[globalConfigs.network.requiredNetwork][tokenName];\n          const tokenDataApi = await this.props.getTokenData(tokenConfig.address);\n          chartData.push({\n            id:tokenName,\n            color: tokenConfig.color,\n            data: tokenDataApi.map((d,i) => {\n              const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n              const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,tokenConfig.decimals);\n              const aum = idleTokens.times(idlePrice);\n              return {\n                x: moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\"),\n                y: parseInt(aum.toString())\n              };\n            })\n          });\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken,\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v),\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            legendPosition: 'middle'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            format: '%b %d',\n            tickValues: this.props.isMobile ? 'every 4 days' : 'every 3 days',\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 36,\n            legendPosition: 'middle'\n          },\n          enableArea:false,\n          curve:\"linear\",\n          enableSlices:'x',\n          enableGridX:true,\n          enableGridY:false,\n          colors:d => d.color,\n          pointSize:0,\n          pointColor:{ from: 'color', modifiers: []},\n          pointBorderWidth:1,\n          pointLabel:\"y\",\n          pointLabelYOffset:-12,\n          useMesh:true,\n          animate:false,\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 60, bottom: 40, left: 60 },\n        };\n      break;\n      */\n      case 'AUM':\n\n        maxChartValue = 0;\n\n        chartData.push({\n          id:'AUM',\n          color: 'hsl('+globalConfigs.stats.tokens[this.props.selectedToken].color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n            const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n            const aum = idleTokens.times(idlePrice);\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(aum.toString());\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x,y };\n          })\n        });\n\n        // Add allocation\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          apiResults.map((d,i) => {\n            return d.protocolsData.filter((protocolAllocation,x) => {\n                return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            })\n            .map((protocolAllocation,z) => {\n              const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n              if (!protocolPaused){\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals));\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                let foundItem = chartData[0].data.filter(item => { return item.x === x });\n                if (foundItem){\n                  foundItem = foundItem[0];\n                  const pos = chartData[0].data.indexOf(foundItem);\n                  if (!foundItem.allocations){\n                    foundItem.allocations = {};\n                  }\n                  foundItem.allocations[p.name] = y;\n                  chartData[0].data[pos] = foundItem;\n                }\n              }\n              return undefined;\n            })[0]\n          }).filter((v) => { return v !== undefined; } )\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:v => this.functionsUtil.formatMoney(v,v<1 ? 3 :0),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:true,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            if (typeof point === 'object' && typeof point.data === 'object'){\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  <CustomTooltipRow\n                    label={point.serieId}\n                    color={point.serieColor}\n                    value={point.data.yFormatted}\n                  />\n                  {\n                    point.data.allocations && typeof point.data.allocations === 'object' &&\n                      Object.keys(point.data.allocations).map(protocolName => {\n                        const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                        const protocolAllocation = point.data.allocations[protocolName];\n                        const protocolAllocationFormatted = this.functionsUtil.formatMoney(protocolAllocation,protocolAllocation<1 ? 3 : 0);\n                        const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                        return (\n                          <CustomTooltipRow\n                            label={protocolName}\n                            color={protocolColor}\n                            key={`${point.id}_${protocolName}`}\n                            value={`${protocolAllocationFormatted} (${protocolAllocationPerc})`}\n                          />\n                        );\n                      })\n                  }\n                </CustomTooltip>\n              );\n              /*\n              return (\n                <div\n                    key={point.id}\n                    style={{\n                      background: 'white',\n                      color: 'inherit',\n                      fontSize: 'inherit',\n                      borderRadius: '2px',\n                      boxShadow: 'rgba(0, 0, 0, 0.25) 0px 1px 2px',\n                      padding: '5px 9px'\n                    }}\n                >\n                  <div>\n                    <table style={{width:'100%',borderCollapse:'collapse'}}>\n                      <tbody>\n                        <tr>\n                          <td style={{padding:'3px 5px'}}>\n                            <span style={{display:'block', width: '12px', height: '12px', background: point.serieColor}}></span>\n                          </td>\n                          <td style={{padding:'3px 5px'}}>{point.serieId}</td>\n                          <td style={{padding:'3px 5px'}}><strong>{point.data.yFormatted}</strong></td>\n                        </tr>\n                        {\n                          point.data.allocations && typeof point.data.allocations === 'object' &&\n                            Object.keys(point.data.allocations).map(protocolName => {\n                              const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                              const protocolAllocation = this.functionsUtil.formatMoney(point.data.allocations[protocolName],0);\n                              const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                              return (\n                                <tr key={`${point.id}_${protocolName}`}>\n                                  <td style={{padding:'3px 5px'}}>\n                                    <span style={{display:'block', width: '12px', height: '12px', background: protocolColor}}></span>\n                                  </td>\n                                  <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{protocolName}</td>\n                                  <td style={{padding:'3px 5px'}}><strong>{protocolAllocation}</strong> ({protocolAllocationPerc})</td>\n                                </tr>\n                              );\n                            })\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              );\n              */\n            }\n\n            return null;\n          }\n        };\n      break;\n      case 'ALL':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\");\n\n          let row = {\n            date\n          };\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const foundProtocol = this.props.tokenConfig.protocols.find((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() });\n            if (foundProtocol){\n              const protocolName = this.functionsUtil.capitalize(foundProtocol.name);\n              if (!protocolPaused){\n                let allocation = parseFloat(this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals));\n                keys[protocolName] = 1;\n                row[protocolName] = allocation;\n                row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName.toLowerCase()].color.hsl.join(',')+')';\n                // console.log(protocolName,this.functionsUtil.BNify(protocolData.allocation).toString(),this.props.tokenConfig.decimals,allocation);\n                maxChartValue = Math.max(maxChartValue,allocation);\n              } else {\n                row[protocolName] = 0;\n              }\n            }\n          });\n\n\n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n            orient: 'left',\n            tickSize: 0,\n            tickPadding: 10,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            tickValues:gridYValues,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickSize: 0,\n            tickPadding: 10,\n            orient: 'bottom-left',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize:this.props.isMobile ? 12 : 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize:this.props.isMobile ? 12 : 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 60 },\n          tooltip:({ id, value, color }) => {\n            const allocation = this.functionsUtil.formatMoney(value,0);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation} {this.props.selectedToken}</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'ALL_PERC':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\")\n          let row = {\n            date:moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\")\n          };\n          if (tempData[date]){\n            row = tempData[date];\n          }\n\n          const totalAllocation = d.protocolsData.reduce((accumulator,protocolAllocation) => {\n            const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n            return this.functionsUtil.BNify(accumulator).plus(allocation);\n          },0);\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const protocolName = this.props.tokenConfig.protocols.filter((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() })[0].name;\n            if (!protocolPaused){\n              const allocation = this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals);\n              const allocationPerc = parseFloat(allocation.div(totalAllocation).times(100));\n              keys[protocolName] = 1;\n              row[protocolName] = allocationPerc;\n              row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n            } else if (typeof row[protocolName] !== undefined) {\n              row[protocolName] = 0;\n            } \n          });\n          \n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          data: chartData,\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 40, bottom: 40, left: 60 },\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => parseInt(v)+'%'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            orient: 'bottom',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          tooltip:({ id, value, color }) => {\n            const allocation = parseInt(value)===100 ? this.functionsUtil.formatMoney(value,0) : this.functionsUtil.formatMoney(value,2);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation}%</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'APR':\n\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n                if (!protocolPaused){\n                  const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                  const y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.rate,18));\n\n                  maxChartValue = Math.max(maxChartValue,y);\n\n                  return { x, y };\n                }\n                return undefined;\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(2)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    // const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'SCORE':\n\n        let prevValue = 0;\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(protocolAllocation.defiScore);\n\n                y = isNaN(y) || !y ? prevValue : y;\n                prevValue = y;\n                maxChartValue = Math.max(maxChartValue,y);\n\n                return { x, y };\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            let y = parseFloat(d.idleScore);\n            y = isNaN(y) || !y ? prevValue : y;\n            prevValue = y;\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // debugger;\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(1),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE_V4':\n\n        itemIndex = 0;\n        maxChartValue = 0;\n        // let prevApy = null;\n        let prevApr = null;\n        let prevData = null;\n        let startBalance = this.functionsUtil.BNify(1);\n        let currentBalance = this.functionsUtil.BNify(1);\n        let avgApy = this.functionsUtil.BNify(0);\n\n        // console.log('PRICE_V4',apiResults);\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const apr = this.functionsUtil.fixTokenDecimals(d.idleRate,18).div(100);\n          // const apy = this.functionsUtil.apr2apy(apr);\n          \n          avgApy = avgApy.plus(apr.times(100));\n\n          if (prevApr){\n            const days = (d.timestamp-prevData.timestamp)/86400;\n            // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n            const earnings = currentBalance.times(prevApr.times(days).div(365));\n            currentBalance = currentBalance.plus(earnings);\n\n            const earning = currentBalance.div(startBalance).minus(1).times(100);\n            y = parseFloat(earning);\n\n            // apy = earning.times(365).div(totDays).toFixed(2);\n            apy = avgApy.div(i+1).toFixed(2);\n          }\n\n          prevData = d;\n          // prevApy = apy;\n          prevApr = apr;\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        protocols.forEach( p => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          // prevApy = null;\n          prevApr = null;\n          prevData = null;\n          let baseProfit = 0;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n          avgApy = this.functionsUtil.BNify(0);\n          startBalance = this.functionsUtil.BNify(1);\n          currentBalance = this.functionsUtil.BNify(1);\n\n          apiResults.forEach( (d,i) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n                if (protocolData[field]){\n                  return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(protocolData[field]));\n                }\n                return this.functionsUtil.BNify(acc);\n              },0) : this.functionsUtil.BNify(protocolData[rateField]);\n\n              const protocolPaused = protocolRate.eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => (d1.blocknumber>=firstProtocolBlock) );\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n\n                let y = 0;\n                let apy = 0;\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const apr = this.functionsUtil.fixTokenDecimals(protocolRate,18).div(100);\n\n                avgApy = avgApy.plus(apr.times(100));\n                // const apy = this.functionsUtil.apr2apy(apr);\n\n                if (prevData){\n                  const days = (d.timestamp-prevData.timestamp)/86400;\n                  // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n                  const earnings = currentBalance.times(prevApr.times(days).div(365));\n                  currentBalance = currentBalance.plus(earnings);\n\n                  const earning = currentBalance.div(startBalance).minus(1).times(100);\n                  y = parseFloat(earning)+baseProfit;\n\n                  apy = avgApy.div(i+1).toFixed(2);\n                }\n\n                prevData = d;\n                prevApr = apr;\n\n                if (firstIdleBlock === null){\n                  firstIdleBlock = parseInt(d.blocknumber);\n                }\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n                // const blocknumber = d.blocknumber;\n\n                itemIndex++;\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                chartRow.data.push(rowData);\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE':\n        // let prevTokenPrice = null;\n        maxChartValue = 0;\n        let firstTokenPrice = null;\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          let days = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n          if (!firstTokenPrice){\n            firstTokenPrice = tokenPrice;\n          } else {\n            y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n\n            days = (d.timestamp-apiResults[0].timestamp)/86400;\n            const earning = tokenPrice.div(firstTokenPrice).minus(1).times(100);\n            apy = earning.times(365).div(days).toFixed(2);\n\n            // console.log(firstTokenPrice.toString(),tokenPrice.toString(),earning.toString(),days,y,apy);\n          }\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        await this.functionsUtil.asyncForEach(protocols,async (p) => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          let baseProfit = 0;\n          firstTokenPrice = null;\n          let lastRowData = null;\n          let lastTokenPrice = null;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n\n          await this.functionsUtil.asyncForEach(apiResults,async (d) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData && protocolData[rateField]){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolPaused = this.functionsUtil.BNify(protocolData[rateField]).eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => {\n                      return d1.blocknumber>=firstProtocolBlock;\n                    });\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n                let tokenExchangeRate = protocolData.price;\n                let tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n\n                // Take data from\n                if (protocolInfo && protocolInfo.data && protocolInfo.data[p.address.toLowerCase()] && protocolInfo.data[p.address.toLowerCase()][d.blocknumber]){\n                  tokenExchangeRate = this.functionsUtil.BNify(globalConfigs.stats.protocols[p.name].data[p.address.toLowerCase()][d.blocknumber]);\n                  tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                }/* else if (p.name === 'aave'){\n                  // Token holders (aDAI = 0xc025c03e10f656d3ee76685d53d236824d8ef3da , aUSDC = 0xd2c734fbd8f5d1c809185e014016dd4097e94711)\n                  let aaveTokenBalance = await this.functionsUtil.genericContractCall(p.token,'balanceOf',['0xd2c734fbd8f5d1c809185e014016dd4097e94711'],{},d.blocknumber);\n                  if (aaveTokenBalance){\n                    if (!Object.values(aave_data).length){\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(1,p.decimals);\n                      aave_data[d.blocknumber] = aaveTokenBalance.toString();\n                    } else {\n                      const firstBalance = Object.values(aave_data)[0];\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(this.functionsUtil.BNify(aaveTokenBalance).div(this.functionsUtil.BNify(firstBalance)).toFixed(p.decimals),p.decimals);\n                      aave_data[d.blocknumber] = tokenExchangeRate.toString();\n                    }\n                  }\n                }\n                */\n\n                let y = baseProfit;\n                let apy = 0;\n\n                if (!firstTokenPrice){\n                  firstTokenPrice = tokenPriceFixed;\n                } else {\n                  if (tokenPriceFixed.lt(lastTokenPrice)){\n                    firstTokenPrice = tokenPriceFixed;\n                    const lastYDiff = chartRow.data[chartRow.data.length-1].y-chartRow.data[chartRow.data.length-2].y;\n                    y = lastRowData.y+lastYDiff;\n                    baseProfit = y;\n                  } else {\n                    y += parseFloat(tokenPriceFixed.div(firstTokenPrice).minus(1).times(100));\n                  }\n\n                  const days = (d.timestamp-apiResults[0].timestamp)/86400;\n                  const earning = tokenPriceFixed.div(firstTokenPrice).minus(1).times(100);\n                  apy = earning.times(365).div(days).toFixed(2);\n                }\n\n                y = Math.max(0,y);\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                lastRowData = rowData;\n                chartRow.data.push(rowData);\n                lastTokenPrice = tokenPriceFixed;\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      chartType,\n      chartProps,\n      chartData\n    });\n  }\n\n  render() {\n    return(\n      <GenericChart\n        showLoader={true}\n        {...this.state.chartProps}\n        height={this.props.height}\n        type={this.state.chartType}\n        data={this.state.chartData}\n        width={this.state.chartWidth}\n        isMobile={this.props.isMobile}\n        parentId={this.props.parentId}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default StatsChart;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass Rebalance extends Component {\n\n  state = {\n    loading:true,\n    processing:{\n      rebalance:{\n        txHash:null,\n        loading:false\n      },\n    },\n    shouldRebalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.checkRebalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged || accountChanged){\n      this.checkRebalance();\n    }\n  }\n\n  checkRebalance = async () => {\n    this.setState({\n      loading:true,\n    });\n\n    const shouldRebalance = await this.functionsUtil.checkRebalance(this.props.tokenConfig);\n\n    this.setState({\n      loading:false,\n      shouldRebalance\n    });\n  }\n\n  rebalance = async (e) => {\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Rebalance',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      let txDenied = false;\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (tx.status === 'success'){\n        // Toast message\n        window.toastProvider.addMessage(`Rebalance completed`, {\n          secondaryMessage: `Now the pool is balanced!`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"success\",\n        });\n\n      } else if (!txDenied){\n        window.toastProvider.addMessage(`Rebalance error`, {\n          secondaryMessage: `The rebalance has failed, try again...`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"failure\",\n        });\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          rebalance:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n\n      this.checkRebalance();\n    }\n\n    const callback_receipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            rebalance:{\n              ...prevState.processing.rebalance,\n              txHash\n            }\n          }\n        })\n      );\n    };\n\n    this.props.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'rebalance', [], null , callback, callback_receipt);\n\n    this.setState({\n      processing:{\n        rebalance:{\n          txHash:null,\n          loading:true\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        px={3}\n        width={1}\n        minHeight={'100px'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n      {\n        this.state.loading ? (\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking rebalance...'}\n          />\n        ) : (\n          this.state.processing.rebalance.loading ? (\n            <TxProgressBar web3={this.props.web3} waitText={`Rebalance estimated in`} endMessage={`Finalizing rebalance request...`} hash={this.state.processing.rebalance.txHash} />\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                mt={0}\n                mb={3}\n                textAlign={'center'}\n              >\n                {this.state.shouldRebalance ? 'Rebalance the entire pool. All users will bless you.' : 'The pool is already balanced.'}\n              </Text>\n              <RoundButton\n                buttonProps={{\n                  width:'auto',\n                  disabled:!this.state.shouldRebalance\n                }}\n                handleClick={e => this.rebalance(e)}\n              >\n                Rebalance\n              </RoundButton>\n            </Flex>\n          )\n        )\n      }\n      </Flex>\n    )\n  }\n}\n\nexport default Rebalance;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React from \"react\";\nimport {\n  Modal,\n  Button,\n  Flex,\n  Field,\n  Select\n} from \"rimble-ui\";\nimport moment from 'moment';\nimport ModalCard from './ModalCard';\nimport 'react-date-range/dist/styles.css';\nimport { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/theme/default.css';\n\nclass DateRangeModal extends React.Component {\n\n  state = {\n    quickSelection:'',\n    ranges:{\n      startDate: this.props.startDate ? this.props.startDate : new Date(),\n      endDate: this.props.endDate ? this.props.endDate : new Date(),\n      key: 'selection'\n    }\n  }\n\n  handleSelect(ranges){\n    this.setState({\n      quickSelection:'',\n      ranges:ranges.selection\n    });\n  }\n\n  handleQuickSelect(e){\n    let startDate = null;\n    let endDate = moment(new Date());\n    const quickSelection = e.target.value;\n\n    switch (quickSelection){\n      case 'day':\n        startDate = endDate.clone().subtract(1,'day');\n      break;\n      case 'week':\n        startDate = endDate.clone().subtract(1,'week');\n      break;\n      case 'weeks':\n        startDate = endDate.clone().subtract(2,'week');\n      break;\n      case 'month':\n        startDate = endDate.clone().subtract(1,'month');\n      break;\n      default:\n        startDate = null;\n        endDate = null;\n      break;\n    }\n\n    if (startDate && endDate){\n      startDate = startDate._d;\n      endDate = endDate._d;\n\n      const ranges = {\n        startDate,\n        endDate,\n        key:'selection'\n      };\n\n      this.setState({\n        ranges,\n        quickSelection\n      }, () => {\n        this.closeModal();\n      });\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.startDate !== this.props.startDate || prevProps.endDate !== this.props.endDate){\n      this.setState({\n        ranges:{\n          startDate: this.props.startDate ? this.props.startDate : new Date(),\n          endDate: this.props.endDate ? this.props.endDate : new Date(),\n          key: 'selection'\n        }\n      });\n    }\n  }\n\n  closeModal(){\n    const newState = this.props.handleSelect(this.state.ranges,this.state.quickSelection);\n    const ranges = {\n      startDate:newState.startTimestampObj ? newState.startTimestampObj._d : new Date(),\n      endDate:newState.endTimestampObj ? newState.endTimestampObj._d : new Date(),\n      key: 'selection'\n    };\n    this.setState({\n      ranges\n    });\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Header title={'Select Date Range'}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} flexDirection={'column'} alignItems={'center'}>\n              <Field label=\"Quick Date Selection\" style={{display:'flex',width:'100%',alignItems:'stretch',justifyContent:'center'}}>\n                <Select\n                  style={{\n                    color:'#7d888d',\n                    fontSize:'14px',\n                    height:'2.5em',\n                    boxShadow:'none'\n                  }}\n                  width={'100%'}\n                  required={true}\n                  onChange={this.handleQuickSelect.bind(this)}\n                  value={this.state.quickSelection}\n                  options={[\n                    { value: '', label: \"Select an option\" },\n                    { value: \"day\", label: \"Last day\" },\n                    { value: \"week\", label: \"Last week\" },\n                    { value: \"weeks\", label: \"Last 2 weeks\" },\n                    { value: \"month\", label: \"Last month\" }\n                  ]}\n                />\n              </Field>\n              <DateRange\n                ranges={[this.state.ranges]}\n                minDate={this.props.minDate}\n                maxDate={this.props.maxDate}\n                onChange={this.handleSelect.bind(this)}\n              />\n            </Flex>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              APPLY\n              </Button>\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n\n}\n\nexport default DateRangeModal;","import moment from 'moment';\nimport Title from '../Title/Title';\nimport StatsChart from './StatsChart';\nimport React, { Component } from 'react';\n// import Toggler from '../Toggler/Toggler';\nimport Rebalance from '../Rebalance/Rebalance';\nimport StatsCard from '../StatsCard/StatsCard';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Text, Heading, Box, Icon } from 'rimble-ui';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport DateRangeModal from '../utilities/components/DateRangeModal';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nclass Stats extends Component {\n  state = {\n    aum:null,\n    apr:null,\n    days:'-',\n    delta:null,\n    earning:null,\n    minDate:null,\n    maxDate:null,\n    carouselMax:1,\n    rebalances:'-',\n    buttonGroups:[],\n    apiResults:null,\n    carouselIndex:0,\n    idleVersion:null,\n    statsVersions:{},\n    minStartTime:null,\n    endTimestamp:null,\n    showAdvanced:true,\n    govTokensPool:null,\n    unlentBalance:null,\n    quickSelection:null,\n    startTimestamp:null,\n    endTimestampObj:null,\n    shouldRebalance:null,\n    carouselOffsetLeft:0,\n    startTimestampObj:null,\n    apiResults_unfiltered:null,\n    dateRangeModalOpened:false\n  };\n\n  quickSelections = {\n    day:'Last day',\n    week:'Last week',\n    weeks:'Last 2 weeks',\n    month:'Last month'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadParams();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  getLatestAvailableVersion(){\n    const statsVersions = globalConfigs.stats.versions;\n    let latestVersion = null;\n    Object.keys(statsVersions).forEach( version => {\n      const versionInfo = statsVersions[version];\n      if (versionInfo.enabledStrategies.includes(this.props.selectedStrategy)){\n        latestVersion = version;\n      }\n    });\n\n    return latestVersion;\n  }\n\n  getVersionInfo(version){\n    if (!version){\n      version = this.state.idleVersion;\n    }\n\n    if (!globalConfigs.stats.versions[version]){\n      return null;\n    }\n\n    const versionInfo = Object.assign({},globalConfigs.stats.versions[version]);\n\n    if (versionInfo.strategiesParams && versionInfo.strategiesParams[this.props.selectedStrategy]){\n      const versionInfoExtra = versionInfo.strategiesParams[this.props.selectedStrategy];\n      Object.keys(versionInfoExtra).forEach( param => {\n        versionInfo[param] = versionInfoExtra[param];\n      });\n    }\n\n    return versionInfo;\n  }\n\n  async loadParams() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    const newState = {};\n    const { match: { params } } = this.props;\n\n    const currentNetworkAvailableTokens = Object.keys(this.props.availableTokens);\n\n    if (!!params.customToken && currentNetworkAvailableTokens.indexOf(params.customToken.toUpperCase()) !== -1 ){\n      newState.selectedToken = params.customToken.toUpperCase();\n    } else {\n      newState.selectedToken = this.props.selectedToken.toUpperCase();\n    }\n\n    newState.tokenConfig = this.props.availableTokens[newState.selectedToken];\n    newState.minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp,'YYYY-MM-DD');\n    newState.maxEndDate = moment();\n\n    newState.endTimestampObj = moment(moment().format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    newState.latestVersion = this.getLatestAvailableVersion();\n    newState.idleVersion = this.state.idleVersion === null ? newState.latestVersion : this.state.idleVersion;\n\n    const versionInfo = this.getVersionInfo(newState.idleVersion);\n\n    // console.log('loadParams',newState.latestVersion,newState.idleVersion,versionInfo);\n\n    if (newState.idleVersion && versionInfo.endTimestamp){\n      const newEndTimestampObj = moment(moment(versionInfo.endTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.endTimestampObj.isAfter(newEndTimestampObj)){\n        newState.endTimestampObj = newEndTimestampObj;\n        newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n      }\n\n      if (!newState.maxEndDate || newState.maxEndDate.isAfter(newEndTimestampObj)){\n        newState.maxEndDate = newEndTimestampObj;\n      }\n    }\n\n    newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n\n    // Set start date\n    newState.startTimestampObj = newState.endTimestampObj.clone().subtract(1,'month');\n    newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n\n    if (newState.idleVersion && versionInfo.startTimestamp){\n      const newStartTimestampObj = moment(moment(versionInfo.startTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.startTimestampObj.isBefore(newStartTimestampObj)){\n        newState.startTimestampObj = newStartTimestampObj;\n        newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n      }\n\n      if (newState.minStartTime.isBefore(newStartTimestampObj)){\n        newState.minStartTime = newStartTimestampObj;\n      }\n    }\n\n    newState.minDate = newState.minStartTime._d;\n    newState.maxDate = newState.maxEndDate._d;\n\n    if (newState !== this.state){\n      await this.setStateSafe(newState);\n    }\n  }\n\n  setDateRange = (ranges,quickSelection=null) => {\n\n    const minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp);\n\n    let startTimestampObj = moment(ranges.startDate).isSameOrAfter(minStartTime) ? moment(ranges.startDate) : minStartTime;\n    let endTimestampObj = moment(ranges.endDate);\n\n    if (startTimestampObj.isSame(endTimestampObj)){\n      endTimestampObj.add(1,'day');\n    }\n\n    endTimestampObj = moment(endTimestampObj.format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    if (startTimestampObj.isBefore(this.state.minStartTime)){\n      startTimestampObj = this.state.minStartTime;\n    }\n\n    if (endTimestampObj.isAfter(this.state.maxEndDate)){\n      endTimestampObj = this.state.maxEndDate;\n    }\n\n    const startTimestamp = parseInt(startTimestampObj._d.getTime()/1000);\n    const endTimestamp = parseInt(endTimestampObj._d.getTime()/1000);\n\n    const newState = {\n      minStartTime,\n      endTimestamp,\n      quickSelection,\n      startTimestamp,\n      endTimestampObj,\n      startTimestampObj\n    };\n\n    this.setStateSafe(newState);\n\n    return newState;\n  }\n\n  toggleAdvancedCharts = (e) => {\n    e.preventDefault();\n    this.setStateSafe({\n      showAdvanced:!this.state.showAdvanced\n    });\n  }\n\n  setDateRangeModal = (dateRangeModalOpened) => {\n    if (dateRangeModalOpened !== this.state.dateRangeModalOpened){\n      this.setStateSafe({\n        dateRangeModalOpened\n      });\n    }\n  }\n\n  async componentDidMount() {\n\n    if (!this.props.web3){\n      this.props.initWeb3();\n      return false;\n    }\n\n    const style = document.createElement('style');\n    style.id = 'crisp-custom-style';\n    style.type = 'text/css';\n    style.innerHTML = `\n    .crisp-client{\n      display:none !important;\n    }`;\n    document.body.appendChild(style);\n\n    this.loadUtils();\n    await this.loadParams();\n    this.loadApiData();\n    this.loadCarousel();\n  }\n\n  loadCarousel(){\n    const carouselMax = this.props.isMobile ? 3 : 2;\n    this.setStateSafe({\n      carouselMax\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const strategyChanged = prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const dateChanged = prevState.startTimestamp !== this.state.startTimestamp || prevState.endTimestamp !== this.state.endTimestamp;\n    const versionChanged = prevState.idleVersion !== this.state.idleVersion;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n\n    if (mobileChanged){\n      this.loadCarousel();\n    }\n\n    if (contractsInitialized || tokenChanged || strategyChanged || versionChanged){\n      // console.log('componentDidUpdate',this.props.selectedStrategy,this.props.selectedToken);\n      await this.componentDidMount();\n    } else if (dateChanged){\n      this.loadApiData();\n    }\n  }\n\n  filterTokenData = (apiResults) => {\n    return apiResults.filter((r,i) => {\n      return (!this.state.startTimestamp || r.timestamp >= this.state.startTimestamp) && (!this.state.endTimestamp || r.timestamp <= this.state.endTimestamp);\n    });\n  }\n\n  setIdleVersion = idleVersion => {\n    this.setStateSafe({\n      idleVersion\n    });\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    // Get COMP APR\n    // const compAPR = await this.functionsUtil.getCompAPR(this.props.tokenConfig);\n    // console.log('compAPR',compAPR.toString());\n\n    const startTimestamp = this.state.minDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.minDate).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n    const endTimestamp = this.state.maxDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.maxDate).format('DD/MM/YYYY 23:59:59'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n\n    const isRisk = ['v3','v4'].includes(this.state.idleVersion) && this.props.selectedStrategy === 'risk';\n    let apiResults_unfiltered = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    const apiResults = this.filterTokenData(apiResults_unfiltered);\n\n    // console.log('loadApiData',startTimestamp,endTimestamp,new Date(startTimestamp*1000),new Date(endTimestamp*1000),apiResults,apiResults_unfiltered);\n\n    if (!apiResults || !apiResults_unfiltered || !apiResults.length || !apiResults_unfiltered.length){\n      return false;\n    }\n\n    const firstResult = apiResults[0];\n    const lastResult = Object.values(apiResults).pop();\n\n    window.moment = moment;\n\n    let days = (lastResult.timestamp-firstResult.timestamp)/86400;\n    if (days === 0){\n      days = 1;\n    }\n\n    let apr = null;\n    let delta = 'N/A';\n\n    const idleTokens = this.functionsUtil.fixTokenDecimals(lastResult.idleSupply,18);\n    const firstIdlePrice = this.functionsUtil.fixTokenDecimals(firstResult.idlePrice,this.props.tokenConfig.decimals);\n    const lastIdlePrice = this.functionsUtil.fixTokenDecimals(lastResult.idlePrice,this.props.tokenConfig.decimals);\n\n    // Calculate AUM\n    let aum = idleTokens.times(lastIdlePrice);\n    // Convert Token balance\n    aum = await this.functionsUtil.convertTokenBalance(aum,this.props.selectedToken,this.props.tokenConfig,isRisk);\n\n    const compoundInfo = this.props.tokenConfig.protocols.filter((p) => { return p.name === 'compound' })[0];\n    const firstCompoundData = compoundInfo ? firstResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n    const lastCompoundData = compoundInfo ? lastResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n\n    if (this.state.idleVersion === 'v4') {\n\n      apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.functionsUtil.fixTokenDecimals(r.idleRate,18);\n        return this.functionsUtil.BNify(sum).plus(idleRate);\n      },0);\n\n      // Calculate average\n      apr = apr.div(apiResults.length);\n\n      if (compoundInfo){\n        const compoundWithCOMPInfo = globalConfigs.stats.protocols.compoundWithCOMP;\n        const rateField = compoundWithCOMPInfo.rateField ? compoundWithCOMPInfo.rateField : 'rate';\n\n        let compoundAvgApr = apiResults.reduce( (sum,r) => {\n\n          const compoundData = r.protocolsData.find((pData,x) => {\n            return pData.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase()\n          });\n\n          let compoundRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n            if (compoundData[field]){\n              return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(compoundData[field]));\n            }\n            return this.functionsUtil.BNify(acc);\n          },0) : this.functionsUtil.BNify(compoundData[rateField]);\n\n          compoundRate = this.functionsUtil.fixTokenDecimals(compoundRate,18);\n\n          return this.functionsUtil.BNify(sum).plus(compoundRate);\n        },0);\n\n        // Calculate average\n        compoundAvgApr = compoundAvgApr.div(apiResults.length);\n\n        // compoundAvgApr = this.functionsUtil.apr2apy(compoundAvgApr.div(100)).times(100);\n        // apr = this.functionsUtil.apr2apy(apr.div(100)).times(100);\n\n        delta = apr.minus(compoundAvgApr);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n\n      apr = apr.toFixed(2);\n\n    } else {\n      const earning = lastIdlePrice.div(firstIdlePrice).minus(1).times(100);\n      apr = earning.times(365).div(days).toFixed(2);\n      if (firstCompoundData && lastCompoundData){\n        const firstCompoundPrice = this.functionsUtil.fixTokenDecimals(firstCompoundData.price,this.props.tokenConfig.decimals);\n        const lastCompoundPrice = this.functionsUtil.fixTokenDecimals(lastCompoundData.price,this.props.tokenConfig.decimals);\n        const compoundApr = lastCompoundPrice.div(firstCompoundPrice).minus(1).times(100);\n        delta = earning.minus(compoundApr).times(365).div(days);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n    }\n\n    // Count rebalances\n    let rebalances = 0;\n    apiResults.forEach((row,index) => {\n      if (index){\n        const prevRow = apiResults[index-1];\n\n        const totalAllocation = row.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        const prevTotalAllocation = prevRow.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        let hasRebalanced = false;\n        row.protocolsData.forEach( p => {\n          if (hasRebalanced){\n            return;\n          }\n          const prevP = prevRow.protocolsData.find( prevP => (prevP.protocolAddr.toLowerCase() === p.protocolAddr.toLowerCase()) );\n          const allocation = this.functionsUtil.fixTokenDecimals(p.allocation,this.props.tokenConfig.decimals);\n          const prevAllocation = this.functionsUtil.fixTokenDecimals(prevP.allocation,this.props.tokenConfig.decimals);\n          const allocationPerc = parseInt(parseFloat(allocation.div(totalAllocation).times(100)));\n          const prevAllocationPerc = parseInt(parseFloat(prevAllocation.div(prevTotalAllocation).times(100)));\n          if (allocationPerc!==prevAllocationPerc){\n            rebalances++;\n            hasRebalanced = true;\n          }\n        });\n      }\n    });\n\n    // Add gov tokens balance to AUM\n    const govTokensPool = await this.functionsUtil.getGovTokenPool(null,null,'DAI');\n    if (govTokensPool){\n      aum = aum.plus(govTokensPool);\n    }\n\n    // Format AUM\n    aum = this.functionsUtil.formatMoney(parseFloat(aum));\n\n    let unlentBalance = await this.functionsUtil.getUnlentBalance(this.props.tokenConfig);\n    if (unlentBalance){\n      unlentBalance = this.functionsUtil.formatMoney(parseFloat(unlentBalance));\n    }\n\n    this.setStateSafe({\n      aum,\n      apr,\n      days,\n      delta,\n      apiResults,\n      rebalances,\n      govTokensPool,\n      unlentBalance,\n      apiResults_unfiltered\n    });\n  }\n\n  selectToken = async (strategy,token) => {\n    await this.props.setStrategyToken(strategy,token);\n    this.props.changeToken(token);\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left)+'px';\n\n    this.setStateSafe({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  render() {\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const showAPYDisclaimer = idleTokenEnabled && this.functionsUtil.getGlobalConfig(['govTokens','IDLE','showAPR']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n\n    if (!this.props.availableStrategies){\n      return (\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'40px'\n          }}\n          flexProps={{\n            minHeight:'50vh',\n            flexDirection:'column'\n          }}\n          text={'Loading assets...'}\n        />\n      );\n    }\n\n    if (!this.props.selectedToken){\n      const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n      const enabledTokens = [];\n      const statsTokens = this.functionsUtil.getGlobalConfig(['stats','tokens']);\n      const statsProtocols = this.functionsUtil.getGlobalConfig(['stats','protocols']);\n      Object.keys(statsTokens).forEach(token => {\n        const tokenInfo = statsTokens[token];\n        if (tokenInfo.enabled){\n          enabledTokens.push(token);\n        }\n      });\n      return (\n        <Flex\n          mb={3}\n          width={1}\n          flexDirection={'column'}\n        >\n          <AssetsUnderManagement\n            {...this.props}\n          />\n          {\n            Object.keys(strategies).map(strategy => {\n              const strategyInfo = strategies[strategy];\n              const availableTokens = this.props.availableStrategies[strategy];\n              if (!availableTokens){\n                return false;\n              }\n              return (\n                <Box\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  key={`strategy-container-${strategy}`}\n                >\n                  <Title\n                    mt={3}\n                    mb={[3,4]}\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={'baseline'}\n                      justifyContent={'center'}\n                    >\n                      {strategyInfo.title}\n                      {\n                        strategyInfo.titlePostfix &&\n                          <Text\n                            ml={2}\n                            fontWeight={3}\n                            fontSize={[2,4]}\n                            color={'dark-gray'}\n                          >\n                            {strategyInfo.titlePostfix}\n                          </Text>\n                      }\n                    </Flex>\n                  </Title>\n                  <AssetsList\n                    enabledTokens={enabledTokens}\n                    handleClick={(props) => this.selectToken(strategy,props.token)}\n                    cols={[\n                      {\n                        title:'CURRENCY',\n                        props:{\n                          width:[0.3,0.15]\n                        },\n                        fields:[\n                          {\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2.3em']\n                            }\n                          },\n                          {\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.21,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'allocationChart',\n                            mobile:false,\n                            parentProps:{\n                              width:0.3\n                            },\n                            style:{\n                              overflow:'visible'\n                            },\n                            showLoader:false,\n                          },\n                          {\n                            name:'pool',\n                            props:{\n                              ml:1\n                            },\n                            parentProps:{\n                              width:[1,0.7]\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'APY',\n                        desc:showAPYDisclaimer ? apyLong : null,\n                        props:{\n                          width: [0.19,0.11],\n                        },\n                        fields:[\n                          {\n                            name:'apy'\n                          }\n                        ]\n                      },\n                      {\n                        title:'RISK SCORE',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','riskScore']),\n                        mobile:false,\n                        props:{\n                          width:[0.27,0.16],\n                        },\n                        fields:[\n                          {\n                            name:'score'\n                          }\n                        ]\n                      },\n                      {\n                        title:'APR LAST WEEK',\n                        mobile:false,\n                        props:{\n                          width: 0.25,\n                        },\n                        parentProps:{\n                          width:1,\n                          pr:[2,4]\n                        },\n                        fields:[\n                          {\n                            name:'aprChart',\n                          }\n                        ]\n                      },\n                      {\n                        title:'',\n                        props:{\n                          width:[0.3,0.16],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label:'View stats',\n                            props:{\n                              width:1,\n                              fontSize:3,\n                              fontWeight:3,\n                              height:'45px',\n                              borderRadius:4,\n                              boxShadow:null,\n                              mainColor:'redeem',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectToken(strategy,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    selectedStrategy={strategy}\n                    availableTokens={availableTokens}\n                  />\n                  {\n                    !this.props.isMobile &&\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-end'}\n                      >\n                        {\n                          Object.values(statsProtocols).filter( p => (p.legend) ).map( (p,index) => (\n                            <Flex\n                              mr={3}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              key={`legend_${index}`}\n                            >\n                              <Box\n                                mr={1}\n                                width={'10px'}\n                                height={'10px'}\n                                borderRadius={'50%'}\n                                backgroundColor={`rgb(${p.color.rgb.join(',')})`}\n                              >\n                              </Box>\n                              <Text.span\n                                fontSize={1}\n                                color={'cellText'}\n                              >\n                                {p.label}\n                              </Text.span>\n                            </Flex>\n                          ))\n                        }\n                      </Flex>\n                  }\n                </Box>\n              );\n            })\n          }\n        </Flex>\n      );\n    } else {\n      const versionsOptions = Object.keys(globalConfigs.stats.versions).filter( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return versionInfo.enabledTokens.includes(this.props.selectedToken) && versionInfo.enabledStrategies.includes(this.props.selectedStrategy);\n      }).map( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return {\n          value:version,\n          label:versionInfo.label\n        }\n      });\n\n      const versionInfo = this.getVersionInfo(this.state.idleVersion);\n\n      let performanceTooltip = null;\n      if (this.state.idleVersion && versionInfo){\n        const showPerformanceTooltip = this.functionsUtil.getGlobalConfig(['stats','versions',this.state.idleVersion,'showPerformanceTooltip']);\n        performanceTooltip = showPerformanceTooltip ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'performanceTooltip']) : null;\n      }\n\n      const versionDefaultValue = versionsOptions.find( v => (v.value === this.state.idleVersion) );\n\n      return (\n        <Flex\n          p={0}\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n          /*\n          }\n          <Flex position={['absolute','relative']} left={0} px={[3,0]} zIndex={10} width={1} flexDirection={'row'} mb={[0,3]}>\n            <Flex alignItems={'center'} width={[2/3,1/2]}>\n              <RouterLink to=\"/\">\n                <Image src=\"images/logo-gradient.svg\"\n                  height={['35px','48px']}\n                  position={'relative'} />\n              </RouterLink>\n              <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={3} lineHeight={'initial'} fontSize={[4,5]} ml={[1,2]}>\n                <Text.span fontSize={'80%'}>|</Text.span> Stats\n              </Heading.h3>\n            </Flex>\n            <Flex flexDirection={'row'} width={[1/3,1/2]} justifyContent={'flex-end'} alignItems={'center'}>\n              {\n                this.state.buttonGroups && \n                  this.props.isMobile ? (\n                    <ButtonGroup\n                      isMobile={this.props.isMobile}\n                      components={ this.state.buttonGroups.reduce((components,array) => components.concat(array),[]) }\n                      theme={'light'}\n                    />\n                  ) :\n                  this.state.buttonGroups.map((buttonGroup,i) => (\n                    <ButtonGroup\n                      key={`buttonGroup_${i}`}\n                      isMobile={this.props.isMobile}\n                      components={buttonGroup}\n                      theme={'light'}\n                    />\n                  ))\n              }\n            </Flex>\n          </Flex>\n          */\n          }\n          <Box\n            mb={[3,4]}\n          >\n            <Flex\n              flexDirection={['column','row']}\n            >\n              <Flex\n                width={[1,0.4]}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  text={'ASSETS OVERVIEW'}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('stats') }\n                  path={[this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])]}\n                />\n              </Flex>\n              <Flex\n                mt={[3,0]}\n                width={[1,0.6]}\n                flexDirection={['column','row']}\n                justifyContent={['center','space-between']}\n              >\n                <Flex\n                  width={[1,0.26]}\n                  flexDirection={'column'}\n                >\n                  <GenericSelector\n                    innerProps={{\n                      p:1,\n                      height:['100%','46px'],\n                    }}\n                    name={'idle-version'}\n                    options={versionsOptions}\n                    defaultValue={versionDefaultValue}\n                    onChange={ v => this.setIdleVersion(v) }\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.3]}\n                  flexDirection={'column'}\n                >\n                  <AssetSelector\n                    innerProps={{\n                      p:1\n                    }}\n                    {...this.props}\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.39]}\n                  flexDirection={'column'}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:1,\n                      display:'flex',\n                      alignItems:'center',\n                      height:['46px','100%'],\n                      justifyContent:'center'\n                    }}\n                    isInteractive={true}\n                    handleClick={ e => this.setDateRangeModal(true) }\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'copyColor'}\n                    >\n                    {\n                      this.state.quickSelection\n                      ?\n                        this.quickSelections[this.state.quickSelection]\n                      : this.state.startTimestampObj && this.state.endTimestampObj &&\n                        `${this.state.startTimestampObj.format('DD/MM/YY')} - ${this.state.endTimestampObj.format('DD/MM/YY')}`\n                    }\n                    </Text>\n                  </DashboardCard>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n\n          {\n            this.state.idleVersion && (versionInfo.startTimestamp>parseInt(new Date().getTime()/1000)) ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    width:[1,0.5],\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={'AccessTime'}\n                    />\n                    <Text\n                      mt={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Idle Stats {this.state.idleVersion} will be available shortly!\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={[3,0]}\n                  mb={[3,4]}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                    flexDirection={['column','row']}\n                  >\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        value={this.state.aum}\n                        title={'Asset Under Management'}\n                        label={ this.state.unlentBalance ? `Unlent funds: ${this.state.unlentBalance} ${this.props.selectedToken}` : this.props.selectedToken }\n                        labelTooltip={ this.state.unlentBalance ? this.functionsUtil.getGlobalConfig(['messages','cheapRedeem']) : null}\n                      />\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Avg APY'}\n                        label={'Annualized'}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={['column','row']}\n                        >\n                          <VariationNumber\n                            direction={'up'}\n                            iconPos={'right'}\n                            iconSize={'1.8em'}\n                            justifyContent={'flex-start'}\n                            width={1}\n                            >\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                              fontSize={[4,5]}\n                            >\n                              {this.state.apr}\n                              <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                            </Text>\n                          </VariationNumber>\n                        </Flex>\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Overperformance on Compound'}\n                        label={'Annualized'}\n                      >\n                        {\n                          this.state.delta && !isNaN(this.state.delta) ? (\n                            <VariationNumber\n                              direction={'up'}\n                              iconPos={'right'}\n                              iconSize={'1.8em'}\n                              justifyContent={'flex-start'}\n                              >\n                              <Text\n                                lineHeight={1}\n                                fontSize={[4,5]}\n                                fontWeight={[3,4]}\n                                color={'statValue'}\n                              >\n                                {this.state.delta}\n                                <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                              </Text>\n                            </VariationNumber>\n                          ) : (\n                            <Text\n                              lineHeight={1}\n                              fontSize={[4,5]}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                            >\n                              {this.state.delta}\n                            </Text>\n                          )\n                        }\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        label={' '}\n                        title={'Rebalances'}\n                        value={this.state.rebalances.toString()}\n                      />\n                    </Flex>\n                    {\n                    /*\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Current APR</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.currApr}\n                            <Text.span color={'copyColor'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Days Live</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.days}\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    */\n                    }\n                  </Flex>\n                </Box>\n\n                <DashboardCard\n                  title={'Historical Performance'}\n                  description={performanceTooltip}\n                  cardProps={{\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex id='chart-PRICE' width={1} mb={3}>\n                    <StatsChart\n                      height={ 350 }\n                      {...this.state}\n                      parentId={'chart-PRICE'}\n                      isMobile={this.props.isMobile}\n                      contracts={this.props.contracts}\n                      apiResults={this.state.apiResults}\n                      idleVersion={this.state.idleVersion}\n                      apiResults_unfiltered={this.state.apiResults_unfiltered}\n                      chartMode={this.state.idleVersion === this.state.latestVersion ? 'PRICE_V4' : 'PRICE'}\n                    />\n                  </Flex>\n                </DashboardCard>\n\n                <DashboardCard\n                  cardProps={{\n                    pb:3,\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex\n                    flexDirection={['column','row']}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      this.state.idleVersion === this.state.latestVersion && \n                      <Flex\n                        pt={2}\n                        width={[1,1/3]}\n                        id={'allocation-chart'}\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <AllocationChart\n                          height={310}\n                          {...this.props}\n                          parentId={'allocation-chart'}\n                        />\n                        <Rebalance\n                          {...this.props}\n                        />\n                      </Flex>\n                    }\n                    <Flex\n                      mb={[0,3]}\n                      id={'chart-ALL'}\n                      pl={[0,this.state.idleVersion === this.state.latestVersion ? 0 : 3]}\n                      width={[1, this.state.idleVersion === this.state.latestVersion ? 2/3 : 1]}\n                    >\n                      <Flex alignItems={'flex-start'} justifyContent={'flex-start'} flexDirection={'column'} width={1}>\n                        <Heading.h4\n                          mb={2}\n                          ml={3}\n                          mt={[3,4]}\n                          fontWeight={4}\n                          fontSize={[2,3]}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                        >\n                          Allocations over time\n                        </Heading.h4>\n                        <StatsChart\n                          height={350}\n                          {...this.state}\n                          chartMode={'ALL'}\n                          parentId={'chart-ALL'}\n                          isMobile={this.props.isMobile}\n                          contracts={this.props.contracts}\n                          apiResults={this.state.apiResults}\n                          idleVersion={this.state.idleVersion}\n                          apiResults_unfiltered={this.state.apiResults_unfiltered}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n\n                <Flex\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    id={'carousel-container'}\n                    justifyContent={'flex-end'}\n                  >\n                    <RoundIconButton\n                      buttonProps={{\n                        mr:3\n                      }}\n                      iconName={'ArrowBack'}\n                      disabled={this.state.carouselIndex === 0}\n                      handleClick={ e => this.handleCarousel('back') }\n                    />\n                    <RoundIconButton\n                      iconName={'ArrowForward'}\n                      handleClick={ e => this.handleCarousel('next') }\n                      disabled={this.state.carouselIndex === this.state.carouselMax}\n                    />\n                  </Flex>\n                  <Flex\n                    mt={5}\n                    height={'400px'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={['444%','200%']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        id='chart-AUM'\n                      >\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            ml={3}\n                            mt={3}\n                            mb={2}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Asset Under Management\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'AUM'}\n                            parentId={'chart-AUM'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-APR' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            APRs\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'APR'}\n                            parentId={'chart-APR'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                      title={'Risk Score'}\n                      description={'Idle Risk Score is a weighted average of the underlying protocols risks assessed by DeFi Score'}\n                      titleParentProps={{\n                        ml:16,\n                        mt:16\n                      }}\n                    >\n                      <Flex id='chart-SCORE' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'SCORE'}\n                            parentId={'chart-SCORE'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-VOL' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Volume\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'VOL'}\n                            parentId={'chart-VOL'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              </Box>\n            )\n          }\n\n          <DateRangeModal\n            minDate={this.state.minDate}\n            maxDate={this.state.maxDate}\n            handleSelect={this.setDateRange}\n            isOpen={this.state.dateRangeModalOpened}\n            closeModal={e => this.setDateRangeModal(false)}\n            startDate={this.state.startTimestampObj ? this.state.startTimestampObj._d : null}\n            endDate={this.state.endTimestampObj ? this.state.endTimestampObj._d : null}\n          />\n        </Flex>\n      );\n    }\n  }\n}\n\nexport default Stats;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport { Flex, Icon, Text, Box } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Utils extends Component {\n\n  state = {\n\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const SubComponent = this.props.selectedSubsection && this.props.selectedSubsection.subComponent ? this.props.selectedSubsection.subComponent : null;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.props.selectedSubsection ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  isMobile={this.props.isMobile}\n                  path={[this.props.selectedSubsection.label]}\n                  text={this.props.selectedSection.label.toUpperCase()}\n                  handleClick={ e => this.props.goToSection(this.props.selectedSection.route) }\n                />\n              </Flex>\n              <Flex\n                my={[2,3]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Title\n                  mb={2}\n                >\n                  {this.props.selectedSubsection.label}\n                </Title>\n                <Text\n                  textAlign={'center'}\n                >\n                  {this.props.selectedSubsection.desc}\n                </Text>\n              </Flex>\n              <SubComponent\n                {...this.props}\n                {...this.props.selectedSubsection.directProps}\n                toolProps={this.props.selectedSubsection.props}\n              />\n            </Box>\n          ) : (\n            <Flex\n              my={[2,3]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                mb={3}\n              >\n                Tools\n              </Title>\n              <Flex\n                width={1}\n                style={{\n                  flexWrap:'wrap'\n                }}\n              >\n              {\n                this.props.selectedSection.submenu.map( (tool,toolIndex) => (\n                  <DashboardCard\n                    isInteractive={true}\n                    key={`tool_${toolIndex}`}\n                    cardProps={{\n                      p:[3,4],\n                      mb:[3,3],\n                      mr:[0,'2%'],\n                      style:{\n                        flex: this.props.isMobile ? '1 1 100%' : '0 0 31%'\n                      },\n                      alignItems:'center',\n                      flexDirection:'column',\n                      justifyContent:'center'\n                    }}\n                    handleClick={ e => this.props.goToSection(this.props.selectedSection.route+'/'+tool.route) }\n                  >\n                    <Text\n                      fontSize={[3,4]}\n                      textAlign={'center'}\n                    >\n                      {tool.label}\n                    </Text>\n                    <Flex\n                      justifyContent={'center'}\n                    >\n                      <Icon\n                        my={[0,2]}\n                        size={'3em'}\n                        name={tool.icon}\n                      />\n                    </Flex>\n                    <Text\n                      fontSize={[2,2]}\n                      textAlign={'center'}\n                    >\n                      {tool.desc}\n                    </Text>\n                  </DashboardCard>\n                ) )\n              }\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Utils;\n","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Icon, Tooltip } from \"rimble-ui\";\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n\nclass FundsOverview extends Component {\n\n  state = {\n    govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [\n      govTokensAprs,\n      govTokensUserBalance,\n      avgAPY,\n      days\n    ] = await Promise.all([\n      this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,'DAI'),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `${govToken}: $${balance.toFixed(2)}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    // console.log(govTokensTotalBalance,govTokensUserBalance,govTokensTotalBalanceTooltip);\n\n    const govTokensTotalApr = govTokensAprs ? Object.values(govTokensAprs).reduce( (totApr,govTokenApr) => {\n      return totApr.plus(this.functionsUtil.BNify(govTokenApr));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalAprTooltip = govTokensAprs ? Object.keys(govTokensAprs).map( govToken => {\n      const apr = govTokensAprs[govToken];\n      if (apr.gt(0)){\n        return `${govToken}: ${apr.toFixed(2)}%`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      govTokensAprs,\n      aggregatedValues,\n      govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      govTokensTotalAprTooltip,\n      govTokensTotalBalanceTooltip\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquity\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              chartToken={this.props.selectedToken}\n              enabledTokens={[this.props.selectedToken]}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLent',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensUserBalance && Object.keys(this.state.govTokensUserBalance).length===1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      Object.keys(this.state.govTokensUserBalance).map((govToken,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          ml={govTokenIndex ? 2 : 0}\n                          key={`govToken_${govToken}`}\n                        >\n                          ${this.state.govTokensUserBalance[govToken].toFixed(4)} {govToken}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                ) : this.state.govTokensUserBalance && Object.keys(this.state.govTokensUserBalance).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + ${this.state.govTokensTotalBalance.toFixed(4)}\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalBalanceTooltip.join('; ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'apy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length===1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      Object.keys(this.state.govTokensAprs).map((govToken,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          ml={govTokenIndex ? 2 : 0}\n                          key={`govToken_${govToken}`}\n                        >\n                          {this.state.govTokensAprs[govToken].toFixed(2)}% {govToken}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                ) : this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + {this.state.govTokensTotalApr.toFixed(2)}%\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalAprTooltip.join('; ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Risk Score\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'score',\n                  props:{\n                    decimals:1,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverview;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Icon, Checkbox, Box, Link, Input, Tooltip } from \"rimble-ui\";\n\nclass CurveRedeem extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    maxSlippage:0.2,\n    tokenConfig:null,\n    unevenAmounts:null,\n    selectedToken:null,\n    availableTokens:null,\n    buttonDisabled:false,\n    showMaxSlippage:false,\n    curveTokenConfig:null,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    curveTokensAmounts:null,\n    fastBalanceSelector:null,\n    redeemUnevenAmounts:false,\n    curveRedeemableIdleTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.initToken();\n  }\n\n  showMaxSlippage = () => {\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  async calculateSlippage(max_slippage=null){\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n\n    if (!inputValue || inputValue.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n    const [curveTokensAmounts,curveIdleTokensAmounts] = await Promise.all([\n      this.functionsUtil.getCurveTokensAmounts(this.props.account,normalizedAmount,true),\n      this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,normalizedAmount)\n    ])\n\n    const amounts = this.state.redeemUnevenAmounts ? curveIdleTokensAmounts : null;\n\n    let withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,false,amounts);\n    if (withdrawSlippage){\n      withdrawSlippage = withdrawSlippage.times(100);\n    }\n\n    this.setState({\n      withdrawSlippage,\n      curveTokensAmounts,\n      curveIdleTokensAmounts\n    });\n\n    // Add max slippage but don't save in state\n    if (withdrawSlippage && max_slippage){\n      withdrawSlippage = withdrawSlippage.plus(max_slippage);\n    }\n\n    return withdrawSlippage;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.tokenConfig.idle.token !== this.props.tokenConfig.idle.token;\n    if (tokenChanged){\n      await this.initToken();\n    }\n\n    const redeemUnevenAmountsChanged = prevState.redeemUnevenAmounts !== this.state.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    const inputChanged = prevState.inputValue !== this.state.inputValue;\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const maxSlippageChanged = parseFloat(prevState.maxSlippage) !== parseFloat(this.state.maxSlippage);\n    if (inputChanged || selectedTokenChanged || maxSlippageChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n\n    let buttonDisabled = false;\n\n    if (this.state.redeemUnevenAmounts){\n      buttonDisabled = !amount || amount.gt(this.state.curveTokenBalance);\n    } else {\n      buttonDisabled = !amount || amount.gt(this.state.redeemableBalance);\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    let inputValue = null;\n\n    if (this.state.redeemUnevenAmounts){\n      inputValue = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n    } else {\n      inputValue = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n    }\n\n    this.checkButtonDisabled(inputValue);\n\n    this.setState({\n      inputValue\n    });\n  }\n\n  changeToken = selectedToken => {\n    const tokenConfig = this.state.availableTokens[selectedToken];\n    this.setState({\n      tokenConfig,\n      selectedToken\n    });\n  }\n\n  initToken = async () => {\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenConfig = curveConfig.availableTokens[this.props.tokenConfig.idle.token];\n\n    const [curvePoolContract,curveSwapContract] = await Promise.all([\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract()\n    ]);\n\n    const [\n      curveTokenPrice,\n      curveTokenBalance,\n      curveRedeemableIdleTokens,\n    ] = await Promise.all([\n      this.functionsUtil.getCurveTokenPrice(),\n      this.functionsUtil.getCurveTokenBalance(this.props.account),\n      this.functionsUtil.getCurveRedeemableIdleTokens(this.props.account)\n    ]);\n\n    const redeemableBalance = curveTokenBalance ? curveTokenBalance.times(curveTokenPrice) : this.functionsUtil.BNify(0);\n\n    // const max_burn_amount = this.functionsUtil.normalizeTokenAmount(curveTokenBalance,curvePoolContract.decimals).toString();\n    // const amounts = this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,0);\n    // let redeemUnevenAmounts = await this.functionsUtil.getCurveUnevenTokenAmounts(amounts,max_burn_amount);\n\n    const unevenAmounts = [];\n\n    let tokenConfig = this.props.tokenConfig ? this.props.tokenConfig : this.state.tokenConfig;\n    let selectedToken = this.props.selectedToken ? this.props.selectedToken : this.state.selectedToken;\n    let availableTokens = this.state.availableTokens;\n\n    if (!availableTokens){\n      availableTokens = this.functionsUtil.getCurveAvailableTokens();\n      if (!selectedToken){\n        selectedToken = Object.keys(availableTokens)[0];\n        tokenConfig = availableTokens[selectedToken];\n      }\n    }\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      unevenAmounts,\n      curveTokenPrice,\n      availableTokens,\n      curveTokenConfig,\n      curvePoolContract,\n      curveSwapContract,\n      curveTokenBalance,\n      redeemableBalance,\n      curveRedeemableIdleTokens\n    });\n  }\n\n  redeem = async () => {\n\n    if (!this.state.curveTokenBalance){\n      return false;\n    }\n\n    const callbackRedeem = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveRedeem`,\n        eventAction: this.props.selectedToken,\n        eventValue: this.state.curveTokenBalance.toFixed()\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      }));\n\n      if (typeof this.props.callbackRedeem === 'function' && txSucceeded){\n        this.props.callbackRedeem(tx);\n      }\n    };\n\n    const callbackReceiptRedeem = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.state.curveSwapContract.name;\n    const withdrawSlippage = await this.calculateSlippage(this.state.maxSlippage);\n    const max_slippage = this.functionsUtil.BNify(this.state.maxSlippage).div(100);\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n    const curveTokenBalance = this.functionsUtil.normalizeTokenAmount(this.state.curveTokenBalance,this.state.curvePoolContract.decimals);\n\n    if (this.state.redeemUnevenAmounts){\n      const min_amounts = await this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,_amount,max_slippage);\n      console.log('remove_liquidity',_amount.toString(),min_amounts);\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts], null, callbackRedeem, callbackReceiptRedeem);\n    } else {\n      const coin_index = this.state.curveTokenConfig.migrationParams.coinIndex;\n      const amounts = await this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,_amount,false);\n      const min_amount = this.functionsUtil.normalizeTokenAmount(inputValue.minus(inputValue.times(withdrawSlippage.div(100))),this.state.curveTokenConfig.decimals);\n      let _token_amount = await this.functionsUtil.getCurveTokenAmount(amounts,false);\n      _token_amount = this.functionsUtil.BNify(_token_amount).isGreaterThan(curveTokenBalance) ? curveTokenBalance : this.functionsUtil.BNify(_token_amount);\n\n      console.log('remove_liquidity_one_coin',_amount,amounts,coin_index,_token_amount.toFixed(),min_amount);\n\n      // debugger;\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_one_coin', [_token_amount, coin_index, min_amount], null, callbackRedeem, callbackReceiptRedeem);\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  changeInputValue = (e) => {\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(inputValue);\n\n    const fastBalanceSelector = null;\n\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector,\n    }));\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  render() {\n\n    const showSlippage = !this.state.buttonDisabled && this.state.withdrawSlippage;\n    const curveTokenName = this.functionsUtil.getGlobalConfig(['curve','poolContract','token']);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            !this.state.curveTokenBalance ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3,\n                  minHeight:'195px',\n                  style:{\n                    display:'flex',\n                    alignItems:'center',\n                    justifyContent:'center'\n                  }\n                }}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Checking Curve Pool...'}\n                />\n              </DashboardCard>\n            ) : this.state.processing.loading ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    endMessage={`Finalizing redeem request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                    waitText={ this.props.waitText ? this.props.waitText : 'Redeem estimated in'}\n                  />\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    mb:2\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'1.8em'}\n                      color={'cellText'}\n                      name={'FileUpload'}\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Withdraw from the Curve Pool in a specific token or in uneven amounts of tokens (with no slippage).\n                    </Text>\n                    <Flex\n                      mt={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Checkbox\n                        required={false}\n                        label={`Redeem with no slippage`}\n                        checked={this.state.redeemUnevenAmounts}\n                        onChange={ e => this.toggleUnevenAmounts(e.target.checked) }\n                      />\n                      <Tooltip\n                        placement={'top'}\n                        message={`You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.`}\n                      >\n                        <Icon\n                          size={'1em'}\n                          color={'cellTitle'}\n                          name={\"InfoOutline\"}\n                        />\n                      </Tooltip>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n                {\n                  !this.state.redeemUnevenAmounts && (!this.props.selectedToken || (this.state.showMaxSlippage && showSlippage)) ? (\n                    <Box\n                      mb={3}\n                      width={1}\n                    >\n                      {\n                        !this.props.selectedToken && \n                          <Box\n                            width={1}\n                          >\n                            <Text\n                              mb={1}\n                            >\n                              Select destination token:\n                            </Text>\n                            <AssetSelector\n                              {...this.props}\n                              id={'token-from'}\n                              showBalance={false}\n                              onChange={this.changeToken}\n                              tokenConfig={this.state.tokenConfig}\n                              selectedToken={this.state.selectedToken}\n                              availableTokens={this.state.availableTokens}\n                            />\n                          </Box>\n                      }\n                      {\n                        this.state.showMaxSlippage && showSlippage && (\n                          <Box\n                            width={1}\n                            mt={ !this.props.selectedToken ? 2 : 0 }\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text>\n                                Choose max slippage:\n                              </Text>\n                              <Tooltip\n                                placement={'top'}\n                                message={`Max additional slippage on top of the one shown below`}\n                              >\n                                <Icon\n                                  ml={1}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                  name={\"InfoOutline\"}\n                                />\n                              </Tooltip>\n                            </Flex>\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [0.2,0.5,1,5].map( slippage => (\n                                  <FastBalanceSelector\n                                    cardProps={{\n                                      p:1\n                                    }}\n                                    textProps={{\n                                      fontSize:1\n                                    }}\n                                    percentage={slippage}\n                                    key={`selector_${slippage}`}\n                                    onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                    isActive={this.state.maxSlippage === parseFloat(slippage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Box>\n                        )\n                      }\n                    </Box>\n                  ) : this.state.redeemUnevenAmounts && this.state.curveTokensAmounts && !this.state.buttonDisabled && (\n                    <DashboardCard\n                      cardProps={{\n                        mt:1,\n                        mb:2,\n                        py:2,\n                        px:1\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You will receive:\n                        </Text>\n                        <Flex\n                          mt={2}\n                          width={1}\n                          boxShadow={0}\n                          style={{\n                            flexWrap:'wrap'\n                          }}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                          >\n                            {\n                              Object.keys(this.state.curveTokensAmounts).map( token => {\n                                const balance = this.state.curveTokensAmounts[token];\n                                return (\n                                  <Flex\n                                    mb={1}\n                                    mx={1}\n                                    minWidth={'21%'}\n                                    flexDirection={'row'}\n                                    key={`tokenBalance_${token}`}\n                                    justifyContent={'flex-start'}\n                                  >\n                                    <AssetField\n                                      token={token}\n                                      tokenConfig={{\n                                        token:token\n                                      }}\n                                      fieldInfo={{\n                                        name:'icon',\n                                        props:{\n                                          mr:1,\n                                          width:['1.4em','1.6em'],\n                                          height:['1.4em','1.6em']\n                                        }\n                                      }}\n                                    />\n                                    <SmartNumber\n                                      fontSize={[0,1]}\n                                      fontWeight={500}\n                                      maxPrecision={4}\n                                      color={'cellText'}\n                                      number={balance.toString()}\n                                    />\n                                  </Flex>\n                                );\n                            })\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    mb={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'flex-end'}\n                  >\n                    {\n                      showSlippage && (\n                        <Flex\n                          width={1}\n                          maxWidth={'50%'}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            textAlign={'right'}\n                            style={{\n                              whiteSpace:'nowrap'\n                            }}\n                            color={ this.state.withdrawSlippage.gt(0) ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                          >\n                            {\n                              parseFloat(this.state.withdrawSlippage.toFixed(2)) === 0 ?\n                                'No Slippage'\n                              : `${ this.state.withdrawSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.withdrawSlippage.abs().toFixed(2)}%`\n                            }\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={ this.state.redeemUnevenAmounts ? `You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.` : this.state.withdrawSlippage.gt(0) ? 'Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for' : 'Bonus comes as an advantage from current coin prices which usually appears for coins which are high in balance'}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                          {\n                            !this.state.redeemUnevenAmounts &&\n                              <Link\n                                ml={1}\n                                color={'copyColor'}\n                                hoverColor={'primary'}\n                                onClick={this.showMaxSlippage}\n                              >\n                                change\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    <Flex\n                      width={1}\n                      maxWidth={'50%'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                    >\n                      <Link\n                        fontSize={1}\n                        fontWeight={3}\n                        color={'dark-gray'}\n                        textAlign={'right'}\n                        hoverColor={'copyColor'}\n                        onClick={ (e) => this.setFastBalanceSelector(100) }\n                        style={{\n                          maxWidth:'100%',\n                          overflow:'hidden',\n                          whiteSpace:'nowrap',\n                          textOverflow:'ellipsis'\n                        }}\n                      >\n                        {\n                          this.state.redeemUnevenAmounts ? `${this.state.curveTokenBalance.toFixed(this.props.isMobile ? 2 : 4)} ${curveTokenName}` : `${this.state.redeemableBalance.toFixed(this.props.isMobile ? 2 : 4)} ${this.state.selectedToken}`\n                        }\n                      </Link>\n                    </Flex>\n                  </Flex>\n                  <Input\n                    min={0}\n                    type={\"number\"}\n                    required={true}\n                    height={'3.4em'}\n                    borderRadius={2}\n                    fontWeight={500}\n                    boxShadow={'none !important'}\n                    placeholder={`Insert amount`}\n                    onChange={this.changeInputValue.bind(this)}\n                    border={`1px solid ${this.props.theme.colors.divider}`}\n                    value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                  />\n                  <Flex\n                    mt={2}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      [25,50,75,100].map( percentage => (\n                        <FastBalanceSelector\n                          percentage={percentage}\n                          key={`selector_${percentage}`}\n                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                          isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  justifyContent={'center'}\n                >\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2],\n                      disabled:this.state.buttonDisabled\n                    }}\n                    handleClick={this.redeem}\n                  >\n                    Redeem\n                  </RoundButton>\n                </Flex>\n              </Flex>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveRedeem;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import theme from '../theme';\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport ShareModal from '../utilities/components/ShareModal';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Input, Box, Icon, Link, Checkbox, Tooltip, Image } from \"rimble-ui\";\n\nclass DepositRedeem extends Component {\n\n  state = {\n    txError:{},\n    tokenAPY:'-',\n    inputValue:{},\n    processing:{},\n    curveAPY:null,\n    canRedeem:false,\n    maxSlippage:0.2,\n    canDeposit:false,\n    action:'deposit',\n    directMint:false,\n    activeModal:null,\n    showBuyFlow:false,\n    unlentBalance:null,\n    tokenApproved:false,\n    skipMigration:false,\n    showRedeemFlow:false,\n    contractPaused:false,\n    buttonDisabled:false,\n    canRedeemCurve:false,\n    showMaxSlippage:false,\n    redeemGovTokens:false,\n    canDepositCurve:false,\n    fastBalanceSelector:{},\n    actionProxyContract:{},\n    migrationEnabled:false,\n    componentMounted:false,\n    curveTokenBalance:null,\n    redeemCurveEnabled:false,\n    depositCurveBalance:null,\n    depositCurveEnabled:true,\n    showAdvancedOptions:false,\n    depositCurveSlippage:null,\n    metaTransactionsEnabled:true\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadProxyContracts();\n  }\n\n  async componentDidMount(){\n\n  }\n\n  setShowRedeemFlow = (showRedeemFlow) => {\n    this.setState({\n      showRedeemFlow\n    });\n  }\n\n  setShowBuyFlow = (showBuyFlow) => {\n    this.setState({\n      showBuyFlow\n    });\n  }\n\n  toggleShowAdvancedOptions = showAdvancedOptions => {\n    this.setState((prevState) => ({\n      showAdvancedOptions:!prevState.showAdvancedOptions\n    }));\n  }\n\n  toggleSkipMigration = skipMigration => {\n    this.setState({\n      skipMigration\n    });\n  }\n\n  toggleRedeemCurve = redeemCurveEnabled => {\n    this.setState({\n      redeemCurveEnabled\n    });\n  }\n\n  toggleDepositCurve = depositCurveEnabled => {\n    this.setState({\n      depositCurveEnabled\n    });\n  }\n\n  toggleSkipMint = (directMint) => {\n    this.setState({\n      directMint\n    });\n  }\n\n  toggleRedeemGovTokens = (redeemGovTokens) => {\n    this.setState({\n      redeemGovTokens\n    });\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  async loadProxyContracts(){\n    const actions = ['deposit','redeem'];\n    const newState = {\n      actionProxyContract:{}\n    };\n\n    await this.functionsUtil.asyncForEach(actions,async (action) => {\n      const mintProxyContractInfo = this.functionsUtil.getGlobalConfig(['contract','methods',action,'proxyContract']);\n      const hasProxyContract = mintProxyContractInfo && mintProxyContractInfo.enabled;\n      newState.actionProxyContract[action] = hasProxyContract ? mintProxyContractInfo : null;\n      if (hasProxyContract){\n        const proxyContract = await this.props.initContract(mintProxyContractInfo.name,mintProxyContractInfo.address,mintProxyContractInfo.abi);\n        newState.actionProxyContract[action].contract = proxyContract.contract;\n        newState.actionProxyContract[action].approved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,mintProxyContractInfo.address,this.props.account);\n      }\n    });\n\n    this.setState(newState);\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadAPY(){\n    const tokenAprs = await this.functionsUtil.getTokenAprs(this.props.tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy).toFixed(2);\n\n      let curveAPY = null;\n      if (this.state.canDepositCurve){\n        curveAPY = await this.functionsUtil.getCurveAPY();\n        // console.log('curveAPY',curveAPY);\n        if (curveAPY){\n          curveAPY = curveAPY.plus(tokenAPY);\n        }\n      }\n      this.setState({\n        tokenAPY,\n        curveAPY\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    if (this.props.tokenBalance === null){\n      return false;\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance && this.props.tokenBalance !== null;\n\n    if (tokenChanged || tokenBalanceChanged){\n      await this.loadProxyContracts();\n      this.loadTokenInfo();\n      return false;\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const redeemGovTokensChanged = prevState.redeemGovTokens !== this.state.redeemGovTokens;\n    if (redeemGovTokensChanged || actionChanged){\n      this.checkButtonDisabled();\n    }\n\n    const depositCurveChanged = prevState.depositCurveEnabled !== this.state.depositCurveEnabled;\n    const metaTransactionsChanged = prevState.metaTransactionsEnabled !== this.state.metaTransactionsEnabled;\n    if (metaTransactionsChanged || depositCurveChanged){\n      const tokenApproved = await this.checkTokenApproved();\n      this.setState({\n        tokenApproved\n      });\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateCurveSlippage();\n    }\n  }\n\n  async calculateCurveSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,curvePoolContractInfo.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositCurveBalance = amount;\n        newState.depositCurveSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        // newState.redeemBalance = amount;\n        // newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateCurveSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  approveContract = async (callbackApprove,callbackReceiptApprove) => {\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      this.functionsUtil.enableERC20(this.props.selectedToken,curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        this.functionsUtil.enableERC20(this.props.selectedToken,proxyContract.address,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.selectedToken,this.props.tokenConfig.idle.address,callbackApprove,callbackReceiptApprove);\n      }\n    }\n  }\n\n  checkTokenApproved = async () => {\n\n    let tokenApproved = false;\n\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,curveDepositContract.address,this.props.account);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,proxyContract.address,this.props.account);\n      } else {\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,this.props.tokenConfig.idle.address,this.props.account);\n      }\n    }\n    return tokenApproved;\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = await this.checkTokenApproved();\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.approveContract(callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  loadTokenInfo = async () => {\n\n    if (this.state.componentMounted){\n      this.setState({\n        componentMounted:false\n      });\n    }\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token]);\n    const curveTokenEnabled = curveConfig.enabled && curveTokenConfig && curveTokenConfig.enabled;\n\n    const [\n      tokenApproved,\n      contractPaused,\n      curveSwapContract,\n      curveDepositContract,\n      unlentBalance,\n      {migrationEnabled},\n      curveTokenBalance,\n    ] = await Promise.all([\n      this.checkTokenApproved(),\n      this.functionsUtil.checkContractPaused(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract(),\n      this.functionsUtil.getUnlentBalance(this.props.tokenConfig),\n      this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account),\n      curveTokenEnabled ? this.functionsUtil.getCurveTokenBalance(this.props.account) : null\n    ]);\n\n    const canDeposit = this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0);\n    const canRedeem = this.props.idleTokenBalance && this.functionsUtil.BNify(this.props.idleTokenBalance).gt(0);\n\n    const canDepositCurve = curveTokenEnabled && canDeposit;\n    const depositCurveEnabled = canDepositCurve;\n\n    const canRedeemCurve = curveTokenEnabled && curveTokenBalance && curveTokenBalance.gt(0);\n    const redeemCurveEnabled = canRedeemCurve;\n\n    const newState = {...this.state};\n\n    // Check curve deposit enabled\n    if (newState.depositCurveEnabled && !curveTokenEnabled){\n      newState.depositCurveEnabled = false;\n    }\n    \n    newState.canRedeem = canRedeem;\n    newState.canDeposit = canDeposit;\n    newState.unlentBalance = unlentBalance;\n    newState.tokenApproved = tokenApproved;\n    newState.contractPaused = contractPaused;\n    newState.canRedeemCurve = canRedeemCurve;\n    newState.canDepositCurve = canDepositCurve;\n    newState.migrationEnabled = migrationEnabled;\n    newState.curveTokenBalance = curveTokenBalance;\n    newState.curveSwapContract = curveSwapContract;\n    newState.redeemCurveEnabled = redeemCurveEnabled;\n    newState.depositCurveEnabled = depositCurveEnabled;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.txError = {\n      redeem:false,\n      deposit:false\n    };\n    newState.processing = {\n      redeem:{\n        txHash:null,\n        loading:false\n      },\n      deposit:{\n        txHash:null,\n        loading:false\n      },\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      boost:{\n        txHash:null,\n        loading:false\n      }\n    };\n    newState.inputValue = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n    newState.fastBalanceSelector = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n\n    newState.componentMounted = true;\n\n    this.setState(newState,() => {\n      this.checkAction();\n      this.loadAPY();\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const redeemGovTokens = this.state.redeemGovTokens;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        if (!this.state.tokenApproved){\n          return this.approveToken();\n        }\n\n        if (localStorage){\n          this.functionsUtil.setLocalStorage('redirectToFundsAfterLogged',0);\n        }\n\n        this.setState({\n          lendingProcessing: this.props.account,\n          lendAmount: '',\n          genericError: '',\n        });\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n        const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n        // Handle Curve Deposit\n        if (curveTokenEnabled && this.state.depositCurveEnabled){\n\n          const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,curvePoolContractInfo.decimals);\n\n          const amounts = await this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,tokensToDeposit);\n          let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n          if (this.state.maxSlippage){\n            minMintAmount = this.functionsUtil.BNify(minMintAmount);\n            minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n            minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n          }\n          \n          const depositParams = [amounts,minMintAmount];\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, callbackDeposit, callbackReceiptDeposit);\n        } else {\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n          const depositMetaTransactionsEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','metaTransactionsEnabled']);\n          // const gasLimitDeposit = this.functionsUtil.BNify(1000000);\n          let depositParams = [];\n\n          // Use Proxy Contract if enabled\n          const mintProxyContractInfo = this.state.actionProxyContract[this.state.action];\n          if (depositMetaTransactionsEnabled && mintProxyContractInfo && this.props.biconomy && this.state.metaTransactionsEnabled){\n            const mintProxyContract = this.state.actionProxyContract[this.state.action].contract;\n            depositParams = [tokensToDeposit, this.props.tokenConfig.idle.address];\n            // console.log('mintProxyContract',mintProxyContractInfo.function,depositParams);\n            if (this.state.metaTransactionsEnabled){\n              const functionSignature = mintProxyContract.methods[mintProxyContractInfo.function](...depositParams).encodeABI();\n              contractSendResult = await this.functionsUtil.sendBiconomyTxWithPersonalSign(mintProxyContractInfo.name, functionSignature, callbackDeposit, callbackReceiptDeposit);\n            } else {\n              contractSendResult = await this.functionsUtil.contractMethodSendWrapper(mintProxyContractInfo.name, mintProxyContractInfo.function, depositParams, callbackDeposit, callbackReceiptDeposit);\n            }\n          // Use main contract if no proxy contract exists\n          } else {\n            let _skipMint = !this.state.directMint && this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMint']);\n            _skipMint = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : _skipMint;\n\n            // Mint if someone mint over X amount\n            if (_skipMint){\n              let [\n                maxUnlentPerc,\n                totalAUM\n              ] = await Promise.all([\n                this.functionsUtil.genericContractCall('idleDAIYield', 'maxUnlentPerc'),\n                this.functionsUtil.loadAssetField('pool',this.props.selectedToken,this.props.tokenConfig,this.props.account)\n              ]);\n\n              if (maxUnlentPerc && totalAUM){\n                const depositPerc = inputValue.div(totalAUM).times(100);\n                maxUnlentPerc = this.functionsUtil.BNify(maxUnlentPerc).div(1e3);\n                if (depositPerc.gte(maxUnlentPerc.times(2))){\n                  _skipMint = false;\n                }\n                // console.log(maxUnlentPerc.toFixed(5),inputValue.toFixed(5),totalAUM.toFixed(5),depositPerc.toFixed(5),depositPerc.gte(maxUnlentPerc.times(2)),_skipMint);\n              }\n            }\n\n            depositParams = [tokensToDeposit, _skipMint, '0x0000000000000000000000000000000000000000'];\n            contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'mintIdleToken', depositParams, callbackDeposit, callbackReceiptDeposit);\n          }\n        }\n      break;\n      case 'redeem':\n\n        if (redeemGovTokens){\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_gov`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: 0\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', [0], callbackRedeem, callbackReceiptRedeem);\n          \n        } else {\n\n          if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n            return false;\n          }\n\n          const txData = {\n            value:this.functionsUtil.BNify(inputValue)\n          };\n\n          let idleTokenToRedeem = null;\n          if (selectedPercentage){\n            idleTokenToRedeem = this.functionsUtil.BNify(this.props.idleTokenBalance).times(selectedPercentage);\n          } else {\n            const idleTokenPrice = await this.functionsUtil.genericContractCall(this.props.tokenConfig.idle.token, 'tokenPrice');\n            idleTokenToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals)).div(idleTokenPrice);\n          }\n\n          // Normalize number\n          idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(idleTokenToRedeem,18);\n\n          if (!idleTokenToRedeem){\n            return false;\n          }\n\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_partial`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: parseInt(inputValue)\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          let redeemParams = [idleTokenToRedeem];\n          // console.log(redeemParams,idleTokenToRedeem);\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', redeemParams, callbackRedeem, callbackReceiptRedeem, txData);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  showMaxSlippage = () => {\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  checkAction = () => {\n    let action = this.state.action;\n\n    switch(action){\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = 'deposit';\n        }\n      break;\n      default:\n      break;\n    }\n\n    if (action !== this.state.action){\n      this.setState({\n        action\n      },() => {\n        this.checkButtonDisabled();\n      });\n    } else {\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.props.tokenBalance));\n      break;\n      case 'redeem':\n        buttonDisabled = !this.state.canRedeemCurve && !this.state.redeemGovTokens && ( buttonDisabled || (amount && amount.gt(this.props.redeemableBalance)) );\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        amount = this.props.redeemableBalance ? this.functionsUtil.BNify(this.props.redeemableBalance).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem && !this.state.canRedeemCurve){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const govTokensDisabled = this.props.tokenConfig.govTokensDisabled;\n    const govTokensEnabled = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'govTokensEnabled']);\n    const skipMintForDepositEnabled = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : true;\n    const skipMintCheckboxEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMintCheckboxEnabled']) && skipMintForDepositEnabled;\n\n    const redeemGovTokenEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','redeemGovTokens','enabled']) && !govTokensDisabled && govTokensEnabled;\n    const redeemGovTokens = redeemGovTokenEnabled && this.state.redeemGovTokens && this.state.action === 'redeem';\n\n    const metaTransactionsAvailable = this.props.biconomy && this.state.actionProxyContract[this.state.action];\n    const useMetaTx = metaTransactionsAvailable && this.state.metaTransactionsEnabled;\n    const totalBalance = this.state.action === 'deposit' ? this.props.tokenBalance : this.props.redeemableBalance;\n    const migrateText = this.state.migrationEnabled && this.props.tokenConfig.migration.message !== undefined ? this.props.tokenConfig.migration.message : null;\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n    const depositCurve = curveTokenEnabled && this.state.depositCurveEnabled && this.state.action === 'deposit';\n\n    const showDepositOptions = this.state.action === 'deposit' && !this.state.contractPaused && (curveTokenEnabled || this.state.tokenApproved);\n\n    const canPerformAction = /*!depositCurve && !this.state.redeemCurveEnabled && */((this.state.action === 'deposit' && this.state.canDeposit) || (this.state.action === 'redeem' && this.state.canRedeem) || redeemGovTokens);\n    const showDepositCurve = showDepositOptions && curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canDepositCurve && this.state.action === 'deposit';\n    const showRedeemCurve = curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canRedeemCurve && this.state.action === 'redeem';\n\n    const showActionFlow = !redeemGovTokens && canPerformAction;\n    const showBuyFlow = this.state.componentMounted && (!showDepositCurve || this.state.showBuyFlow) && !this.state.depositCurveEnabled && this.state.tokenApproved && !this.state.contractPaused && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.action === 'deposit' && !this.state.canDeposit;\n    const showRedeemFlow = this.state.canRedeem && (!this.state.redeemCurveEnabled || this.state.showRedeemFlow);\n\n    const showCurveSlippage = depositCurve && this.state.depositCurveSlippage && this.state.depositCurveBalance && !this.state.buttonDisabled;\n\n    const showRebalanceOption = showDepositOptions && this.state.canDeposit && skipMintCheckboxEnabled && this.state.action === 'deposit';\n    const showAdvancedDepositOptions = showDepositCurve || showRebalanceOption;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select your asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n            />\n          </Box>\n          <Migrate\n            {...this.props}\n            migrateTextBefore={migrateText}\n            migrateText={migrateText !== null ? '' : null}\n            toggleSkipMigration={this.toggleSkipMigration.bind(this)}\n          >\n            {\n              !this.props.account ? (\n                <ConnectBox\n                  {...this.props}\n                />\n              ) :\n              this.state.componentMounted ? (\n                this.state.action ? (\n                  <Box width={1}>\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'redeem' }\n                          isDisabled={ !this.state.canRedeem && !this.state.canRedeemCurve }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    {\n                      showAdvancedDepositOptions ? (\n                        <DashboardCard\n                          cardProps={{\n                            pt:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                            pb:this.state.showAdvancedOptions ? 3 : 2,\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Link\n                              ml={1}\n                              mainColor={'primary'}\n                              hoverColor={'primary'}\n                              onClick={this.toggleShowAdvancedOptions}\n                            >\n                              { this.state.showAdvancedOptions ? 'Hide' : 'Show' } advanced options\n                            </Link>\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={this.state.showAdvancedOptions ? 'ArrowDropUp' : 'ArrowDropDown'}\n                            />\n                          </Flex>\n                          {\n                            this.state.showAdvancedOptions &&\n                              <Flex\n                                mt={1}\n                                flexDirection={'column'}\n                              >\n                                {\n                                  showDepositCurve && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        disabled={this.state.directMint}\n                                        label={`Deposit in the Curve Pool`}\n                                        checked={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                      />\n                                      <Link\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        (read more)\n                                      </Link>\n                                    </Flex>\n                                }\n                                {\n                                  showRebalanceOption && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        label={`Rebalance the pool`}\n                                        checked={this.state.directMint}\n                                        disabled={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                      />\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={this.functionsUtil.getGlobalConfig(['messages','directMint'])}\n                                      >\n                                        <Icon\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                          name={\"InfoOutline\"}\n                                        />\n                                      </Tooltip>\n                                    </Flex>\n                                }\n                              </Flex>\n                          }\n                        </DashboardCard>\n                      ) : (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          {\n                            showDepositCurve && (\n                              <Flex\n                                width={1}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <DashboardCard\n                                  isRainbow={true}\n                                  cardProps={{\n                                    py:3,\n                                    px:2,\n                                    mt:3,\n                                    display:'flex',\n                                    alignItems:'center',\n                                    flexDirection:'column',\n                                    justifyContent:'center',\n                                  }}\n                                >\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Image\n                                      height={'1.8em'}\n                                      src={curveConfig.params.image}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      px={2}\n                                      fontSize={1}\n                                      color={'dark-gray'}\n                                      textAlign={'center'}\n                                    >\n                                      Deposit your tokens in the Curve Pool and boost your APY up to {this.state.curveAPY ? this.state.curveAPY.toFixed(2) : '-'}%.\n                                      <Link\n                                        ml={1}\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        Read More\n                                      </Link>\n                                    </Text>\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={`Deposit in Curve`}\n                                      checked={this.state.depositCurveEnabled}\n                                      onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                    />\n                                  </Flex>\n                                </DashboardCard>\n                                {\n                                  (!this.state.showBuyFlow && !this.state.depositCurveEnabled && !this.state.canDeposit) &&\n                                    <Link\n                                      textAlign={'center'}\n                                      hoverColor={'primary'}\n                                      onClick={ e => this.setShowBuyFlow(true) }\n                                    >\n                                      I just want to deposit more {this.props.selectedToken}\n                                    </Link>\n                                }\n                              </Flex>\n                            )\n                          }\n                          {\n                            showRebalanceOption && (\n                              <DashboardCard\n                                cardProps={{\n                                  py:3,\n                                  px:2,\n                                  mt:3,\n                                  display:'flex',\n                                  alignItems:'center',\n                                  flexDirection:'column',\n                                  justifyContent:'center',\n                                }}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    color={'cellText'}\n                                    name={'InfoOutline'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    px={2}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    By checking this flag you can rebalance the pool and help all users gain an additional APR\n                                  </Text>\n                                </Flex>\n                                <Checkbox\n                                  mt={2}\n                                  required={false}\n                                  label={`Rebalance the pool`}\n                                  checked={this.state.directMint}\n                                  onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                />\n                              </DashboardCard>\n                            )\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (metaTransactionsAvailable && !showBuyFlow && !this.state.contractPaused) && \n                      <DashboardCard\n                        cardProps={{\n                          py:3,\n                          px:2,\n                          my:3,\n                          display:'flex',\n                          alignItems:'center',\n                          flexDirection:'column',\n                          justifyContent:'center',\n                        }}\n                      >\n                        {\n                          this.state.metaTransactionsEnabled && this.state.txError[this.state.action] && this.state.actionProxyContract[this.state.action].approved ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Seems like you are having some trouble with Meta-Transactions... Disable them by unchecking the box below and try again!\n                              </Text>\n                            </Flex>\n                          ) : this.functionsUtil.getWalletProvider() === 'WalletConnect' && this.state.metaTransactionsEnabled ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Please disable Meta-Transactions if you are using Argent Wallet to avoid failed transactions!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Text\n                              mt={1}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Meta-Transactions are {this.state.metaTransactionsEnabled ? 'available' : 'disabled'} for {this.state.action}s!<br />\n                              {\n                                this.state.metaTransactionsEnabled && !this.state.actionProxyContract[this.state.action].approved && `Please either enable the Smart-Contract to enjoy gas-less ${this.state.action} or just disable meta-tx.`\n                              }\n                            </Text>\n                          )\n                        }\n                        <Checkbox\n                          mt={2}\n                          required={false}\n                          checked={this.state.metaTransactionsEnabled}\n                          onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                          label={`${this.functionsUtil.capitalize(this.state.action)} with Meta-Transaction`}\n                        />\n                      </DashboardCard>\n                    }\n                    {\n                      showRedeemCurve && this.state.canRedeem && (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            isRainbow={true}\n                            cardProps={{\n                              py:3,\n                              px:2,\n                              mt:3,\n                              display:'flex',\n                              alignItems:'center',\n                              flexDirection:'column',\n                              justifyContent:'center',\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Image\n                                height={'1.8em'}\n                                src={curveConfig.params.image}\n                              />\n                              <Text\n                                mt={2}\n                                px={2}\n                                fontSize={1}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                              >\n                                Redeem your tokens from the Curve Pool.\n                                <Link\n                                  ml={1}\n                                  mainColor={'primary'}\n                                  hoverColor={'primary'}\n                                  onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                >\n                                  Read More\n                                </Link>\n                              </Text>\n                              {\n                                this.state.canRedeem &&\n                                  <Checkbox\n                                    mt={2}\n                                    required={false}\n                                    label={`Redeem from Curve`}\n                                    checked={this.state.redeemCurveEnabled}\n                                    onChange={ e => this.toggleRedeemCurve(e.target.checked) }\n                                  />\n                              }\n                            </Flex>\n                          </DashboardCard>\n                          {\n                            this.canRedeem &&\n                              <Link\n                                textAlign={'center'}\n                                hoverColor={'primary'}\n                                onClick={ e => this.setShowRedeemFlow(true) }\n                              >\n                                I just want to redeem my {this.props.selectedToken}\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (this.state.action === 'redeem' && this.state.unlentBalance && showRedeemFlow) &&\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'LocalGasStation'}\n                            />\n                            <Text\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Available balance for Cheap Redeem\n                            </Text>\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                                hoverColor={'copyColor'}\n                              >\n                                {this.state.unlentBalance.toFixed(4)} {this.props.selectedToken}\n                              </Text>\n                              <Tooltip\n                                placement={'top'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','cheapRedeem'])}\n                              >\n                                <Icon\n                                  ml={1}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                  name={\"InfoOutline\"}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                    }\n                    {\n                      (this.state.action === 'redeem' && redeemGovTokenEnabled && showRedeemFlow) && (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'InfoOutline'}\n                            />\n                            <Text\n                              mt={1}\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              By redeeming your {this.props.selectedToken} you will automatically get also the proportional amount of governance tokens accrued{ this.props.govTokensBalance && this.props.govTokensBalance.gt(0) ? ` (~ $${this.props.govTokensBalance.toFixed(2)})` : null }.\n                            </Text>\n                          </Flex>\n                          <Checkbox\n                            mt={2}\n                            required={false}\n                            checked={this.state.redeemGovTokens}\n                            label={`Redeem governance tokens only`}\n                            onChange={ e => this.toggleRedeemGovTokens(e.target.checked) }\n                          />\n                        </DashboardCard>\n                      )\n                    }\n                    {\n                      (this.state.contractPaused && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              name={'Warning'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Deposits for {this.props.selectedToken} are temporarily unavailable due to Smart-Contract maintenance. Redeems are always available.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : (!this.state.tokenApproved && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          {\n                            this.state.processing['approve'] && this.state.processing['approve'].loading ? (\n                              <Flex\n                                flexDirection={'column'}\n                              >\n                                <TxProgressBar\n                                  web3={this.props.web3}\n                                  waitText={`Approve estimated in`}\n                                  endMessage={`Finalizing approve request...`}\n                                  hash={this.state.processing['approve'].txHash}\n                                  cancelTransaction={this.cancelTransaction.bind(this)}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'1.8em'}\n                                  name={'LockOpen'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={3}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  {\n                                    this.state.depositCurveEnabled ? \n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} in the Curve Pool you need to approve the Smart-Contract first.`\n                                    : useMetaTx ?\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle using Meta-Transaction you need to approve our Smart-Contract first.`\n                                    :\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle you need to approve our Smart-Contract first.`\n                                  }\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:3,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.approveToken.bind(this)}\n                                >\n                                  Approve\n                                </RoundButton>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      ) : (!showBuyFlow && canPerformAction) && (\n                        !this.state.processing[this.state.action].loading ? (\n                          <Flex\n                            mt={2}\n                            flexDirection={'column'}\n                          >\n                            {\n                              showActionFlow && (\n                                <Flex\n                                  mb={3}\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  {\n                                    /*\n                                    showCurveSlippage &&\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:3,\n                                          mb:2\n                                        }}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'column'}\n                                        >\n                                          <Icon\n                                            size={'1.8em'}\n                                            color={'cellText'}\n                                            name={'FileUpload'}\n                                          />\n                                          <Text\n                                            mt={2}\n                                            fontSize={2}\n                                            color={'cellText'}\n                                            textAlign={'center'}\n                                          >\n                                            You can deposit {this.state.depositCurveBalance.toFixed(4)} {this.props.selectedToken} in the Curve Pool{ this.state.depositCurveSlippage ? (this.state.depositCurveSlippage.gt(0) ? ` with ${this.state.depositCurveSlippage.times(100).toFixed(2)}% of slippage` : ` with ${Math.abs(parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)))}% of bonus`) : '' }.\n                                          </Text>\n                                        </Flex>\n                                      </DashboardCard>\n                                    */\n                                  }\n                                  {\n                                    (totalBalance || this.props.tokenFeesPercentage) && (\n                                      <Box\n                                        mb={1}\n                                        width={1}\n                                      >\n                                        {\n                                          this.state.showMaxSlippage && showCurveSlippage && (\n                                            <Box\n                                              mb={2}\n                                              width={1}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text>\n                                                  Choose max slippage:\n                                                </Text>\n                                                <Tooltip\n                                                  placement={'top'}\n                                                  message={`Max additional slippage on top of the one shown below`}\n                                                >\n                                                  <Icon\n                                                    ml={1}\n                                                    size={'1em'}\n                                                    color={'cellTitle'}\n                                                    name={\"InfoOutline\"}\n                                                  />\n                                                </Tooltip>\n                                              </Flex>\n                                              <Flex\n                                                mt={2}\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                                justifyContent={'space-between'}\n                                              >\n                                                {\n                                                  [0.2,0.5,1,5].map( slippage => (\n                                                    <FastBalanceSelector\n                                                      cardProps={{\n                                                        p:1\n                                                      }}\n                                                      textProps={{\n                                                        fontSize:1\n                                                      }}\n                                                      percentage={slippage}\n                                                      key={`selector_${slippage}`}\n                                                      onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                                      isActive={this.state.maxSlippage === parseFloat(slippage)}\n                                                    />\n                                                  ))\n                                                }\n                                              </Flex>\n                                            </Box>\n                                          )\n                                        }\n                                        <Flex\n                                          width={1}\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                          justifyContent={'space-between'}\n                                        >\n                                        {\n                                          showCurveSlippage ? (\n                                            <Flex\n                                              width={1}\n                                              maxWidth={'50%'}\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                textAlign={'right'}\n                                                style={{\n                                                  whiteSpace:'nowrap'\n                                                }}\n                                                color={ this.state.depositCurveSlippage.gt(0) ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                                              >\n                                                {\n                                                  parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)) === 0 ?\n                                                    'No Slippage'\n                                                  : `${ this.state.depositCurveSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.depositCurveSlippage.times(100).abs().toFixed(2)}%`\n                                                }\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={this.functionsUtil.getGlobalConfig(['messages','curveBonusSlippage'])}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                              <Link\n                                                ml={1}\n                                                color={'copyColor'}\n                                                hoverColor={'primary'}\n                                                onClick={this.showMaxSlippage}\n                                              >\n                                                change\n                                              </Link>\n                                            </Flex>\n                                          ) : this.props.tokenFeesPercentage && (\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                color={'dark-gray'}\n                                                textAlign={'right'}\n                                                hoverColor={'copyColor'}\n                                              >\n                                                Performance fee: {this.props.tokenFeesPercentage.times(100).toFixed(2)}%\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={`This fee is charged on positive returns generated by Idle`}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                            </Flex>\n                                          )\n                                        }\n                                        {\n                                          totalBalance && (\n                                            <Link\n                                              fontSize={1}\n                                              fontWeight={3}\n                                              color={'dark-gray'}\n                                              textAlign={'right'}\n                                              hoverColor={'copyColor'}\n                                              onClick={ (e) => this.setFastBalanceSelector(100) }\n                                            >\n                                              {totalBalance.toFixed(6)} {this.props.selectedToken}\n                                            </Link>\n                                          )\n                                        }\n                                        </Flex>\n                                      </Box>\n                                    )\n                                  }\n                                  <Input\n                                    min={0}\n                                    type={\"number\"}\n                                    required={true}\n                                    height={'3.4em'}\n                                    borderRadius={2}\n                                    fontWeight={500}\n                                    boxShadow={'none !important'}\n                                    placeholder={`Insert amount`}\n                                    onChange={this.changeInputValue.bind(this)}\n                                    border={`1px solid ${theme.colors.divider}`}\n                                    value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                                  />\n                                  <Flex\n                                    mt={2}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'space-between'}\n                                  >\n                                    {\n                                      [25,50,75,100].map( percentage => (\n                                        <FastBalanceSelector\n                                          percentage={percentage}\n                                          key={`selector_${percentage}`}\n                                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                          isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                        />\n                                      ))\n                                    }\n                                  </Flex>\n                                </Flex>\n                              )\n                            }\n                            {\n                              canPerformAction && \n                                <Flex\n                                  justifyContent={'center'}\n                                  mt={ redeemGovTokens ? 2 : 0 }\n                                >\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:'auto',\n                                      minWidth:[1,1/2],\n                                      style:{\n                                        textTransform:'capitalize'\n                                      },\n                                      disabled:this.state.buttonDisabled\n                                    }}\n                                    handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                                  >\n                                    {this.state.action}{ redeemGovTokens ? ' Gov Tokens' : '' /*(depositCurve ? ' in Curve' : '')*/ }\n                                  </RoundButton>\n                                </Flex>\n                            }\n                          </Flex>\n                        ) : (\n                          <Flex\n                            mt={4}\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                              hash={this.state.processing[this.state.action].txHash}\n                              endMessage={`Finalizing ${this.state.action} request...`}\n                              waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                            />\n                          </Flex>\n                        )\n                      )\n                    }\n                  </Box>\n                ) : null\n              ) : (\n                <Flex\n                  mt={4}\n                  flexDirection={'column'}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading asset info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Migrate>\n        </Flex>\n        {\n          /*\n          showDepositCurve && this.state.depositCurveEnabled ? (\n            <CurveDeposit\n              {...this.props}\n            />\n          ) :\n          */\n          showRedeemCurve && this.state.redeemCurveEnabled && (\n            <Box\n              mt={3}\n              width={1}\n            >\n              <CurveRedeem\n                {...this.props}\n              />\n            </Box>\n          )\n        }\n        {\n          showBuyFlow &&\n            <Flex\n              mt={3}\n              width={[1,0.5]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <BuyModal\n                {...this.props}\n                showInline={true}\n                availableMethods={[]}\n                buyToken={this.props.selectedToken}\n              />\n            </Flex>\n        }\n\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.tokenAPY}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.tokenAPY}% APY on my ${this.props.selectedToken} with @idlefinance! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])} and start earning now from your idle tokens!`}\n        />\n\n      </Flex>\n    );\n  }\n}\n\nexport default DepositRedeem;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n           <Flex\n             mr={2}\n             p={['4px','7px']}\n             borderRadius={'50%'}\n             alignItems={'center'}\n             justifyContent={'center'}\n             backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n           >\n             <Icon\n               align={'center'}\n               color={'redeem'}\n               name={this.props.icon}\n               size={ this.props.isMobile ? '1.2em' : '1.4em' }\n             />\n           </Flex>\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Input, Icon, Tooltip } from \"rimble-ui\";\n\nclass EstimatedEarnings extends Component {\n\n  state = {\n    tokenApy:null,\n    chartData:null,\n    chartProps:null,\n    inputValue:1000,\n    maxInputValue:999999999999999\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    const tokenApy = await this.functionsUtil.getTokenApy(this.props.tokenConfig);\n    if (tokenApy && !tokenApy.isNaN()){\n      this.setState({\n        tokenApy\n      },() => {\n        this.loadChart();\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.componentDidMount();\n    }\n  }\n\n  loadChart(){\n\n    const amount = this.functionsUtil.BNify(this.state.inputValue);\n    const earningsYear = amount.times(this.state.tokenApy.div(100));\n\n    const amountMonth = parseFloat(earningsYear.div(12));\n    const amount3Months = parseFloat(earningsYear.div(4));\n    const amount6Months = parseFloat(earningsYear.div(2));\n    const amountYear = parseFloat(earningsYear.div(1));\n\n    const chartData = [\n      {\n        perc:1/12,\n        label:'MONTH',\n        value:amountMonth,\n        month:amountMonth,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        monthColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:3/12,\n        label:'3 MONTHS',\n        value:amount3Months,\n        month3:amount3Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month3Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:6/12,\n        label:'6 MONTHS',\n        value:amount6Months,\n        month6:amount6Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month6Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:1,\n        label:'YEAR',\n        year:amountYear,\n        value:amountYear,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        yearColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      }\n    ];\n\n    let labelTextColorModifiers = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'chart','labelTextColorModifiers']);\n\n    const maxGridLines = 4;\n    const gridYStep = amountYear/maxGridLines;\n    const gridYValues = [0];\n    for (let i=1;i<=maxGridLines;i++){\n      const gridYValue = i*gridYStep;\n      gridYValues.push(gridYValue);\n    }\n\n    const chartProps = {\n      padding: 0.2,\n      animate: false,\n      indexBy: 'label',\n      // enableLabel: false,\n      labelSkipWidth: 16,\n      labelSkipHeight: 16,\n      keys: ['month','month3','month6','year'],\n      colors: ({ id, data }) => data[`${id}Color`],\n      label: d => this.functionsUtil.abbreviateNumber(d.value,2,4)+' '+this.props.selectedToken,\n      labelTextColor: labelTextColorModifiers ? { from: 'color', modifiers: [ labelTextColorModifiers ] } : null,\n      isInteractive:false,\n      minValue:0,\n      gridYValues,\n      // maxValue:amountYear,\n      axisLeft:{\n        format: v => this.functionsUtil.abbreviateNumber(v,1,3),\n        tickValues:gridYValues,\n        orient: 'left',\n        tickSize: 0,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle'\n      },\n      axisBottom:{\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n      },\n      theme:{\n        labels:{\n          text:{\n            fontSize:15,\n            fontWeight:600,\n            fill:theme.colors.counter,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        axis: {\n          ticks: {\n            text: {\n              fontSize:14,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '9 5'\n          }\n        },\n      },\n      margin: this.props.isMobile ? { top: 0, right: 0, bottom: 30, left: 0 } : { top: 10, right: 0, bottom: 50, left: 65 }\n    }\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  changeInputValue(e){\n    let inputValue = e.target.value.length && !isNaN(e.target.value) ? Math.min(this.state.maxInputValue,parseFloat(e.target.value)) : 0;\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    });\n  }\n\n  render() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const showAPYDisclaimer = idleTokenEnabled && this.functionsUtil.getGlobalConfig(['govTokens','IDLE','showAPR']);\n\n    return (\n      <DashboardCard\n        cardProps={{\n          p:[3,4]\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            width={[1,0.3]}\n            flexDirection={'column'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetField\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'icon',\n                  props:{\n                    mb:2,\n                    height:'2.5em'\n                  }\n                }}\n              />\n              <Text\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n              >\n                Set the amount and see your estimated earnings on time based on the current APY: { this.state.tokenApy ? `${this.state.tokenApy.toFixed(2)}%` : null}\n                {\n                  showAPYDisclaimer && \n                    <Flex\n                      style={{\n                        display:'inline-flex',\n                        verticalAlign:'middle'\n                      }}\n                    >\n                      <Tooltip\n                        placement={'top'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                      >\n                        <Icon\n                          ml={1}\n                          name={\"Info\"}\n                          size={'1em'}\n                          color={'cellTitle'}\n                        />\n                      </Tooltip>\n                    </Flex>\n                }\n              </Text>\n            </Flex>\n            <Flex\n              mt={3}\n              flexDirection={'column'}\n            >\n              <Input\n                min={0}\n                max={this.state.maxInputValue}\n                type={\"number\"}\n                required={true}\n                height={['3em','3.4em']}\n                borderRadius={2}\n                fontWeight={500}\n                textAlign={'center'}\n                boxShadow={'none !important'}\n                onChange={this.changeInputValue.bind(this)}\n                border={`1px solid ${theme.colors.divider}`}\n                placeholder={`Insert ${this.props.selectedToken.toUpperCase()} amount`}\n                value={this.state.inputValue && !isNaN(this.state.inputValue) ? this.state.inputValue : ''}\n              />\n            </Flex>\n            <Flex\n              mt={3}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                buttonProps={{\n                  width:[1,1/2],\n                }}\n                handleClick={this.loadChart.bind(this)}\n              >\n                CALCULATE\n              </RoundButton>\n            </Flex>\n          </Flex>\n          <Flex\n            mt={[3,0]}\n            width={[1,0.7]}\n            id={'estimated-earnings-chart'}\n          >\n            {\n              this.props.isMobile ? (\n                <Flex\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  {\n                    this.state.chartData !== null && this.state.chartData.map((v,index) => (\n                      <Flex\n                        py={2}\n                        my={2}\n                        width={1}\n                        flexDirection={'row'}\n                        key={`earnings_${index}`}\n                      >\n                        <Flex\n                          width={0.35}\n                          alignItems={'center'}\n                          justifyContent={'flex-start'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'legend'}\n                          >\n                            {v.label}\n                          </Text>\n                        </Flex>\n                        <Flex\n                          width={0.65}\n                          position={'relative'}\n                          alignItems={'center'}\n                          minHeight={['20px','35px']}\n                          justifyContent={'center'}\n                        >\n                          <Flex\n                            zIndex={1}\n                            position={'relative'}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontSize={1}\n                              fontWeight={3}\n                              color={'counter'}\n                            >\n                              {this.functionsUtil.abbreviateNumber(v.value,2,4)} {this.props.selectedToken}\n                            </Text>\n                          </Flex>\n                          <Flex\n                            right={0}\n                            width={v.perc}\n                            position={'absolute'}\n                            height={['20px','35px']}\n                            borderRadius={['20px 0 0 20px','35px 0 0 35px']}\n                            style={{background:`linear-gradient(-90deg, rgba(${v.color},0) 0%, rgba(${v.color},1) 100%)`}}\n                          ></Flex>\n                        </Flex>\n                      </Flex>\n                    ))\n                  }\n                </Flex>\n              ) : (\n                <GenericChart\n                  type={Bar}\n                  height={250}\n                  showLoader={true}\n                  {...this.state.chartProps}\n                  data={this.state.chartData}\n                  parentId={'estimated-earnings-chart'}\n                />\n              )\n            }\n          </Flex>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default EstimatedEarnings;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport FundsOverview from '../FundsOverview/FundsOverview';\nimport DepositRedeem from '../DepositRedeem/DepositRedeem';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EstimatedEarnings from '../EstimatedEarnings/EstimatedEarnings';\n\nclass AssetPage extends Component {\n\n  state = {\n    tokenFees:{},\n    tokenBalance:{},\n    tokenApproved:{},\n    activeModal:null,\n    govTokensBalance:{},\n    idleTokenBalance:{},\n    redeemableBalance:{},\n    govTokensDisabled:{},\n    availableGovTokens:{},\n    tokenFeesPercentage:{},\n    componentMounted:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadTokensInfo(){\n    if (this.props.account){\n      const newState = {...this.state};\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n        const tokenConfig = this.props.availableTokens[token];\n        const govTokenAvailableTokens = {};\n        govTokenAvailableTokens[token] = tokenConfig;\n\n        const [\n          tokenFeesPercentage,\n          tokenBalance,\n          tokenFees,\n          idleTokenPrice,\n          idleTokenBalance,\n          tokenApproved,\n          govTokensBalance\n        ] = await Promise.all([\n          this.functionsUtil.getTokenFees(tokenConfig),\n          this.functionsUtil.getTokenBalance(token,this.props.account),\n          this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n          this.functionsUtil.genericContractCall(tokenConfig.idle.token, 'tokenPrice'),\n          this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n          this.functionsUtil.checkTokenApproved(token,tokenConfig.idle.address,this.props.account),\n          this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,govTokenAvailableTokens,'DAI')\n        ]);\n\n        newState.tokenFees[token] = tokenFees;\n        newState.tokenBalance[token] = tokenBalance;\n        newState.tokenApproved[token] = tokenApproved;\n        newState.idleTokenBalance[token] = idleTokenBalance;\n        newState.govTokensBalance[token] = govTokensBalance;\n        newState.tokenFeesPercentage[token] = tokenFeesPercentage;\n        newState.govTokensDisabled[token] = tokenConfig.govTokensDisabled;\n        newState.redeemableBalance[token] = idleTokenBalance ? this.functionsUtil.fixTokenDecimals(idleTokenBalance.times(idleTokenPrice),tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      });\n\n      newState.availableGovTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n\n      newState.componentMounted = true;\n      this.setState(newState);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged || transactionsChanged){\n      this.loadTokensInfo();\n    }\n  }\n\n  render() {\n\n    const userHasFunds = this.props.account && this.state.idleTokenBalance[this.props.selectedToken] && this.functionsUtil.BNify(this.state.idleTokenBalance[this.props.selectedToken]).gt(0);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            <Breadcrumb\n              isMobile={this.props.isMobile}\n              path={[this.props.selectedToken]}\n              handleClick={ e => this.props.goToSection(this.props.selectedStrategy) }\n              text={this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])}\n            />\n          </Flex>\n          <Flex\n            width={0.5}\n            justifyContent={'flex-end'}\n          >\n            <CardIconButton\n              icon={'Add'}\n              {...this.props}\n              text={'Add funds'}\n              handleClick={ e => this.setActiveModal('buy') }\n            />\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Deposit / Redeem\n        </Title>\n        <Flex\n          width={1}\n        >\n          <DepositRedeem\n            {...this.props}\n            tokenFees={this.state.tokenFees[this.props.selectedToken]}\n            tokenBalance={this.state.tokenBalance[this.props.selectedToken]}\n            tokenApproved={this.state.tokenApproved[this.props.selectedToken]}\n            govTokensBalance={this.state.govTokensBalance[this.props.selectedToken]}\n            idleTokenBalance={this.state.idleTokenBalance[this.props.selectedToken]}\n            redeemableBalance={this.state.redeemableBalance[this.props.selectedToken]}\n            tokenFeesPercentage={this.state.tokenFeesPercentage[this.props.selectedToken]}\n          />\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverview\n                {...this.props}\n                tokenFees={this.state.tokenFees[this.props.selectedToken]}\n              />\n            </Flex>\n        }\n        {\n          userHasFunds && this.props.account && !this.state.govTokensDisabled[this.props.selectedToken] && Object.keys(this.state.availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id={\"yield-farming\"}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(this.state.availableGovTokens)}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.34,0.15]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.17],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                    props:{\n                      width:[0.45,0.17],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                    props:{\n                      width:[0.20,0.17],\n                    },\n                    fields:[\n                      {\n                        name:'userDistributionSpeed',\n                        props:{\n                          decimals:6\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'APR',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                    props:{\n                      width:[0.2,0.17],\n                    },\n                    fields:[\n                      {\n                        name:'apr',\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                    mobile:false,\n                    props:{\n                      width: 0.17,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTokens={this.state.availableGovTokens}\n              />\n            </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'estimated-earnings-container'}\n          >\n            <Title my={[3,4]}>Estimated earnings</Title>\n            <EstimatedEarnings\n              {...this.props}\n            />\n          </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              enabledTokens={[this.props.selectedToken]}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Tooltip } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass CurveDeposit extends Component {\n\n  state = {\n    maxSlippage:0.2,\n    tokenConfig:null,\n    depositSlippage:null,\n    redeemableBalance:null,\n    curveTokensBalance:null,\n    migrationSucceeded:false,\n    migrationContractApproved:false,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.initToken();\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  async getMigrationParams(toMigrate){\n    const migrationParams = [];\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token]);\n\n    if (!curveTokenConfig){\n      return false;\n    }\n    \n    const migrationContractParams = curveTokenConfig.migrationParams;\n    if (migrationContractParams.n_coins){\n      const amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,toMigrate,true);\n      let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n      if (this.state.maxSlippage){\n        minMintAmount = this.functionsUtil.BNify(minMintAmount);\n        minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n        minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n      }\n\n      migrationParams.push(amounts);\n      migrationParams.push(minMintAmount);\n\n      // console.log(this.state.tokenConfig.idle.token,toMigrate,migrationParams);\n    }\n\n    return migrationParams;\n  }\n\n  async initToken(){\n\n    let migrationContractApproved = false;\n\n    // Init and check migration contract\n    const migrationContract = await this.functionsUtil.getCurveSwapContract();\n    if (migrationContract){\n      // Check migration contract\n      migrationContractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.idle.token,migrationContract.address,this.props.account);\n    }\n\n    let redeemableBalance = this.functionsUtil.BNify(this.props.idleTokenBalance);\n    if (redeemableBalance){\n      const idleTokenPrice = await this.functionsUtil.getIdleTokenPrice(this.props.tokenConfig);\n      if (idleTokenPrice){\n        redeemableBalance = redeemableBalance.times(idleTokenPrice);\n      }\n    } else {\n      redeemableBalance = this.functionsUtil.BNify(0);\n    }\n\n    const normalizeIdleTokenBalance = this.functionsUtil.normalizeTokenAmount(redeemableBalance,18);\n    const depositSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizeIdleTokenBalance);\n\n    // Copy token config\n    const tokenConfig = Object.assign({},this.props.tokenConfig);\n\n    // Add migration info\n    const oldContract = {\n      abi:this.props.tokenConfig.idle.abi,\n      name:this.props.tokenConfig.idle.token,\n      token:this.props.tokenConfig.idle.token,\n      address:this.props.tokenConfig.idle.address\n    };\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n    };\n\n    this.setState({\n      tokenConfig,\n      depositSlippage,\n      redeemableBalance,\n      migrationContractApproved\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const idleTokenBalanceChanged = prevProps.idleTokenBalance !== this.props.idleTokenBalance;\n    if (accountChanged || idleTokenBalanceChanged){\n      await this.initToken();\n    }\n  }\n\n  approveCallback = () => {\n    this.initToken();\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokenConfig){\n      return null;\n    }\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const hasCurveTokens = this.state.curveTokensBalance && this.state.curveTokensBalance.gt(0);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n            {\n              this.props.idleTokenBalance && this.props.idleTokenBalance.gt(0) && (\n                <Box\n                  width={1}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Approve the Curve contract\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ hasCurveTokens ? 'CheckBox' : 'LooksTwo'}\n                          color={ hasCurveTokens ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Deposit your {this.props.tokenConfig.idle.token}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                  {\n                    this.state.migrationContractApproved && (\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Choose max slippage:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`Max additional slippage on top of the one shown below`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <Flex\n                          mt={2}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          {\n                            [0.2,0.5,1,5].map( slippage => (\n                              <FastBalanceSelector\n                                cardProps={{\n                                  p:1\n                                }}\n                                textProps={{\n                                  fontSize:1\n                                }}\n                                percentage={slippage}\n                                key={`selector_${slippage}`}\n                                onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                isActive={this.state.maxSlippage === parseFloat(slippage)}\n                              />\n                            ))\n                          }\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                </Box>\n              )\n            }\n          {\n            this.state.tokenConfig ? (\n              <Box width={1}>\n                <Migrate\n                  {...this.props}\n                  showActions={false}\n                  getTokenPrice={false}\n                  migrationTextProps={{\n                    fontWeight:500\n                  }}\n                  migrationImage={{\n                    mb:1,\n                    height:'1.8em',\n                    src:curveConfig.params.image\n                  }}\n                  isMigrationTool={true}\n                  waitText={'Deposit estimated in'}\n                  tokenConfig={this.state.tokenConfig}\n                  callbackApprove={this.approveCallback.bind(this)}\n                  migrationParams={this.getMigrationParams.bind(this)}\n                  migrationCallback={this.migrationCallback.bind(this)}\n                  approveText={`To deposit your ${this.props.tokenConfig.idle.token} you need to approve Curve smart-contract first.`}\n                  migrationText={`You can deposit ${this.state.redeemableBalance.toFixed(4)} ${this.props.tokenConfig.idle.token} in the Curve Pool ${ this.state.depositSlippage ? (this.state.depositSlippage.gte(0) ? ` with <span style=\"color:${this.props.theme.colors.transactions.status.failed}\">${this.state.depositSlippage.times(100).toFixed(2)}% of slippage</span>` : ` with <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${Math.abs(parseFloat(this.state.depositSlippage.times(100).toFixed(2)))}% of bonus</span>`) : '' }.`}\n                >\n                  {\n                    !this.props.account ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'Input'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={2}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Please connect with your wallet interact with Idle.\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:2,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.props.connectAndValidateAccount}\n                          >\n                            Connect\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.migrationSucceeded ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'DoneAll'}\n                                color={this.props.theme.colors.transactions.status.completed}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You have successfully deposited your {this.props.tokenConfig.idle.token} in the Curve Pool!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.tokenConfig.idle.token} in your wallet.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                </Migrate>\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveDeposit;","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityCurve extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const curveTxs = await this.functionsUtil.getCurveTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = [];\n    const processedTxs = {};\n    let firstTxTimestamp = null;\n    let totalBalance = this.functionsUtil.BNify(0);\n    const curvePoolContract = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n        \n        firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n        const curveTokens = this.functionsUtil.BNify(tx.curveTokens);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            totalBalance = totalBalance.plus(curveTokens);\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          case 'CurveTransferOut':\n            totalBalance = totalBalance.minus(curveTokens);\n          break;\n          default:\n          break;\n        }\n\n        // Reset totalBalance if below zero\n        if (totalBalance.lt(0)){\n          totalBalance = this.functionsUtil.BNify(0);\n        }\n\n        const action = tx.action;\n        const balance = totalBalance;\n        const timeStamp = parseInt(tx.timeStamp);\n        const curveTokenPrice = this.functionsUtil.fixTokenDecimals(tx.curveTokenPrice,curvePoolContract.decimals);\n\n        // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY/MM/DD HH:mm'),tx.hash,tx.action,curveTokens.toString(),totalBalance.toString());\n\n        if (!curveTokenPrice.isNaN() && !curveTokenPrice.isNaN()){\n          tokensBalance.push({\n            action,\n            balance,\n            timeStamp,\n            curveTokens,\n            curveTokenPrice\n          });\n\n          processedTxs[tx.hash].push(action);\n        }\n      });\n    }\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    let aggregatedBalance = this.functionsUtil.BNify(0);\n    // let curveTokenBalance = this.functionsUtil.BNify(0);\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = await this.functionsUtil.getTokenApiData(Object.values(this.props.availableTokens)[0].address,false,firstTxTimestamp,null,false,3600);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      let foundBalances = {};\n      let tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      // eslint-disable-next-line\n      const filteredTokenData = tokensData.filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n\n      // eslint-disable-next-line\n      let filteredBalances = tokensBalance.filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n      \n      if (!filteredBalances.length){\n        if (prevBalances){\n          filteredBalances = prevBalances;\n          const lastFilteredTx = Object.values(filteredBalances).pop();\n          const currentBalance = parseFloat(lastFilteredTx.balance);\n\n          const lastTokenData = Object.values(filteredTokenData).pop();\n          let curveTokenPrice = null;\n          if (lastTokenData){\n            curveTokenPrice = await this.functionsUtil.getCurveTokenPrice(lastTokenData.blocknumber);\n          }\n\n          // Take idleToken price from API and calculate new balance\n          if (currentBalance>0 && timeStamp>firstTxTimestamp && curveTokenPrice){\n            // Set new curveTokenPrice\n            lastFilteredTx.curveTokenPrice = curveTokenPrice;\n            filteredBalances = [lastFilteredTx];\n          }\n        } else {\n          filteredBalances = [{\n            balance:this.functionsUtil.BNify(0),\n            curveTokenPrice:this.functionsUtil.BNify(0)\n          }];\n        }\n      }\n\n      const lastTx = Object.assign([],filteredBalances).pop();\n      let lastTxBalance = this.functionsUtil.BNify(lastTx.balance).times(lastTx.curveTokenPrice);\n\n      tokensBalances[curvePoolContract.token] = this.functionsUtil.BNify(lastTx.balance);\n      aggregatedBalance = lastTxBalance;\n\n      foundBalances = filteredBalances;\n\n      // console.log(momentDate.format('YYYY/MM/DD 00:00'),lastTx.balance.toString(),lastTx.curveTokenPrice.toString(),lastTxBalance.toString());\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        const aggregatedBalanceParsed = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalanceParsed;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalanceParsed : Math.min(minChartValue,aggregatedBalanceParsed);\n        maxChartValue = maxChartValue === null ? aggregatedBalanceParsed : Math.max(maxChartValue,aggregatedBalanceParsed);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    // Add token Data\n    chartData.push({\n      id:'USD',\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens','USD','color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 50 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0 &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const tokenInfo = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n                const tokenName = tokenInfo.name ? tokenInfo.name : token;\n                const color = tokenInfo.color.hex;\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={tokenName}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityCurve;","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquityCurve from '../PortfolioEquityCurve/PortfolioEquityCurve';\n\nclass FundsOverviewCurve extends Component {\n\n  state = {\n    compAPR:null,\n    aggregatedValues:[],\n    govTokensUserBalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    await this.functionsUtil.getCurveAvgBuyPrice();\n\n    // debugger;\n\n    await this.functionsUtil.getCurveAvgSlippage();\n\n    // debugger;\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [govTokensUserBalance,avgAPY,days] = await Promise.all([\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,'DAI'),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    let [tokenAllocation,compAPR] = await Promise.all([\n      this.functionsUtil.getTokenAllocation(this.props.tokenConfig,false,false),\n      this.functionsUtil.getCompAPR(this.props.selectedToken,this.props.tokenConfig)\n    ]);\n\n    if (tokenAllocation){\n      const compoundInfo = this.props.tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (compoundInfo){\n        if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n          const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n          compAPR = compAPR.times(compoundAllocationPerc);\n        }\n      }\n    }\n\n    this.setState({\n      compAPR,\n      aggregatedValues,\n      govTokensUserBalance\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquityCurve\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLentCurve',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPercCurve',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              /*\n              <Flex\n                mb={[2,0]}\n                width={[1,1/5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'flex-start'}\n              >\n                <Title\n                  mb={2}\n                  fontSize={[3,4]}\n                  component={Heading.h3}\n                >\n                  Fees\n                </Title>\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'feesCounter',\n                    props:{\n                      decimals:7,\n                      maxPrecision:8,\n                      style:{\n                        fontWeight:300,\n                        fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                        color:theme.colors.counter\n                      },\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n              */\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Avg Slippage\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveAvgSlippage',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewCurve;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport CurveDeposit from '../CurveDeposit/CurveDeposit';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewCurve from '../FundsOverviewCurve/FundsOverviewCurve';\n\nclass AssetPage extends Component {\n\n  state = {\n    inputValue:{},\n    processing:{},\n    tokenFees:null,\n    canRedeem:null,\n    canDeposit:null,\n    action:'deposit',\n    activeModal:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    tokenApproved:null,\n    selectedToken:null,\n    availableTokens:{},\n    redeemBalance:null,\n    depositBalance:null,\n    buttonDisabled:false,\n    curveTokenPrice:null,\n    depositSlippage:null,\n    idleTokenBalance:null,\n    withdrawSlippage:null,\n    govTokensBalance:null,\n    curveZapContract:null,\n    curveTokenConfig:null,\n    curveTokensAmounts:{},\n    govTokensDisabled:null,\n    componentMounted:false,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    redeemableBalance:null,\n    fastBalanceSelector:{},\n    curveAvailableTokens:{},\n    tokenFeesPercentage:null,\n    redeemUnevenAmounts:false,\n    curveDepositContract:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  changeFromToken = (selectedToken) => {\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    this.props.goToSection(`${curveConfig.params.route}/${selectedToken}`);\n  }\n\n  getSelectedToken(){\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    return this.props.urlParams.param1 && curveAvailableTokens[this.props.urlParams.param1] ? this.props.urlParams.param1 : Object.keys(curveAvailableTokens)[0];\n  }\n\n  setSelectedToken = async (selectedToken) => {\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      availableTokens,\n      curveTokenConfig\n    });\n  }\n\n  loadTokensInfo = async () => {\n\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    this.setState({\n      curveAvailableTokens\n    });\n\n    const selectedToken = this.getSelectedToken();\n    // Check if token is set the query params\n    if (selectedToken && selectedToken !== this.props.urlParams.param1){\n      this.changeFromToken(selectedToken);\n      return await this.setSelectedToken(selectedToken);\n    } else if (selectedToken !== this.state.selectedToken){\n      await this.setSelectedToken(selectedToken);\n    }\n\n    const newState = {...this.state};\n\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n\n    if (newState.selectedToken !== selectedToken){\n      newState.selectedToken = selectedToken;\n    }\n\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n\n    const [\n      curveZapContract,\n      curvePoolContract,\n      curveSwapContract,\n      curveDepositContract\n    ] = await Promise.all([\n      this.functionsUtil.getCurveZapContract(),\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract()\n    ]);\n\n    newState.curveZapContract = curveZapContract;\n    newState.curvePoolContract = curvePoolContract;\n    newState.curveSwapContract = curveSwapContract;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.availableTokens = availableTokens;\n\n\n    // console.log('curveTokenPrice',newState.curveTokenPrice.toFixed(6),'curveTokenBalance',newState.curveTokenBalance.toFixed(6),'redeemableBalance',newState.redeemableBalance.toFixed(20),'tokenBalance',newState.tokenBalance.toFixed(20));\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[selectedToken] = tokenConfig;\n\n    newState.tokenConfig = tokenConfig;\n    newState.curveTokenConfig = curveTokenConfig;\n\n    if (this.props.account){\n      [\n        newState.curveTokenPrice,\n        newState.curveTokenBalance,\n        newState.tokenFeesPercentage,\n        newState.tokenFees,\n        newState.tokenBalance,\n        newState.idleTokenBalance,\n        newState.tokenApproved,\n      ] = await Promise.all([\n        this.functionsUtil.getCurveTokenPrice(),\n        this.functionsUtil.getCurveTokenBalance(),\n        this.functionsUtil.getTokenFees(tokenConfig),\n        this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n        this.functionsUtil.getTokenBalance(selectedToken,this.props.account),\n        this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n        this.functionsUtil.checkTokenApproved(selectedToken,curveDepositContract.address,this.props.account),\n      ]);\n\n\n      newState.processing = {\n        redeem:{\n          txHash:null,\n          loading:false\n        },\n        deposit:{\n          txHash:null,\n          loading:false\n        },\n        approve:{\n          txHash:null,\n          loading:false\n        },\n      };\n      newState.inputValue = {\n        redeem:null,\n        deposit:null\n      };\n      newState.fastBalanceSelector = {\n        redeem:null,\n        deposit:null\n      };\n\n      newState.componentMounted = true;\n      newState.depositBalance = newState.tokenBalance;\n      newState.redeemBalance = newState.redeemableBalance;\n      newState.govTokensDisabled = tokenConfig.govTokensDisabled;\n      newState.canRedeem = newState.curveTokenBalance && newState.curveTokenBalance.gt(0);\n      newState.canDeposit = newState.idleTokenBalance && newState.idleTokenBalance.gt(0);\n      newState.redeemableBalance = newState.curveTokenBalance ? newState.curveTokenBalance.times(newState.curveTokenPrice) : this.functionsUtil.BNify(0);\n    }\n\n    this.setState(newState);\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async calculateSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.curvePoolContract.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositBalance = amount;\n        newState.depositSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        newState.redeemBalance = amount;\n        newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.urlParams.param1 !== this.props.urlParams.param1;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || transactionsChanged || tokenChanged){\n      await this.loadTokensInfo();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const redeemUnevenAmountsChanged = this.state.redeemUnevenAmounts !== prevState.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    if (actionChanged){\n      this.updateAssetSelector();\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  updateAssetSelector = async () => {\n    const newState = {};\n    switch (this.state.action){\n      case 'deposit':\n        this.loadTokensInfo();\n      break;\n      case 'redeem':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n        newState.curveAvailableTokens = {};\n        newState.curveTokenConfig = tokenConfig;\n        newState.selectedToken = tokenConfig.token;\n        newState.curveAvailableTokens[tokenConfig.token] = tokenConfig;\n      break;\n      default:\n      break;\n    }\n\n    this.setState(newState);\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.state.tokenBalance ? this.functionsUtil.BNify(this.state.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          amount = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n        } else {\n          amount = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.state.tokenBalance));\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.curveTokenBalance)) );\n        } else {\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.redeemableBalance)) );\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = this.state.tokenApproved;\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.state.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.functionsUtil.enableERC20(this.state.selectedToken,this.state.curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      // Handle deposit in curve\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.state.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,tokensToDeposit);\n        const minMintAmount = await this.functionsUtil.genericContractCall(this.state.curveSwapContract.name,'calc_token_amount',[amounts,true]);\n        const depositParams = [amounts,minMintAmount];\n\n        // No need for callback atm\n        contractSendResult = await this.props.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, null, callbackDeposit, callbackReceiptDeposit);\n      break;\n      case 'redeem':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        let curveTokensToRedeem = null;\n        if (selectedPercentage){\n          curveTokensToRedeem = this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage);\n        } else {\n          curveTokensToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals));\n          if (!this.state.redeemUnevenAmounts){\n            const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n            curveTokensToRedeem = curveTokensToRedeem.div(curveTokenPrice);\n          }\n        }\n\n        if (!curveTokensToRedeem){\n          return false;\n        }\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventLabel: tx.status,\n            eventCategory: `CurveRedeem`,\n            eventAction: this.state.selectedToken,\n            eventValue: curveTokensToRedeem.toFixed()\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const _amount = this.functionsUtil.normalizeTokenAmount(curveTokensToRedeem,this.state.curvePoolContract.decimals).toString();\n        let min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,0);\n\n        const contractName = this.state.curveDepositContract.name;\n        if (this.state.redeemUnevenAmounts){\n          console.log('remove_liquidity_imbalance',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_imbalance', [min_amounts, _amount], null, callbackRedeem, callbackReceiptRedeem);\n        } else {\n          min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,_amount);\n          console.log('remove_liquidity',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts], null, callbackRedeem, callbackReceiptRedeem);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    // console.log('contractSendResult',contractSendResult);\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    const userHasFunds = this.props.account && this.state.curveTokenBalance && this.functionsUtil.BNify(this.state.curveTokenBalance).gt(0);\n    const canPerformAction = true;\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            {\n              <Breadcrumb\n                isMobile={this.props.isMobile}\n                path={['Boost',this.state.selectedToken]}\n                handleClick={ e => this.props.goToSection('best') }\n                text={this.functionsUtil.getGlobalConfig(['strategies','best','title'])}\n              />\n            }\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Curve Pool\n        </Title>\n        <Flex\n          width={1}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Flex\n              width={[1,0.36]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select your asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  onChange={this.changeFromToken}\n                  selectedToken={this.state.selectedToken}\n                  tokenConfig={this.state.curveTokenConfig}\n                  showBalance={this.state.action === 'deposit'}\n                  availableTokens={this.state.curveAvailableTokens}\n                />\n              </Box>\n              <Box\n                width={1}\n              >\n                {\n                  canPerformAction ? (\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canRedeem }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  ) : (\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        size={'2.3em'}\n                        name={'MoneyOff'}\n                        color={'cellText'}\n                      />\n                      <Text\n                        mt={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You don't have any {this.state.tokenConfig.idle.token} in your wallet.\n                      </Text>\n                    </Flex>\n                  )\n                }\n              </Box>\n            </Flex>\n            <Flex\n              width={1}\n              mt={ this.props.account ? 3 : 0 }\n            >\n            {\n              this.state.action === 'deposit' ? (\n                <CurveDeposit\n                  {...this.props}\n                  {...this.state}\n                />\n              ) : this.state.action === 'redeem' && (\n                <CurveRedeem\n                  {...this.props}\n                  {...this.state}\n                />\n              )\n            }\n            </Flex>\n          </Flex>\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewCurve\n                {...this.props}\n                tokenFees={this.state.tokenFees}\n                tokenConfig={this.state.tokenConfig}\n                selectedToken={this.state.selectedToken}\n                availableTokens={this.state.availableTokens}\n                enabledTokens={Object.keys(this.state.availableTokens)}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.props.account && !this.state.govTokensDisabled[this.state.selectedToken] && Object.keys(availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id=\"earnings-estimation\"\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(availableGovTokens)}\n                handleClick={(props) => {}}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.33,0.22]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.26],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    props:{\n                      width:[0.33,0.26],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                      {\n                        name:'tooltip',\n                        props:{\n                          placement:'bottom',\n                          message:'The shown balance may be lower than the real one.',\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    mobile:false,\n                    props:{\n                      width: 0.26,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTokens={availableGovTokens}\n              />\n            </Flex>\n          */\n        }\n        {\n          /*\n          this.props.account && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'estimated-earnings-container'}\n            >\n              <Title my={[3,4]}>Estimated earnings</Title>\n              <EstimatedEarnings\n                {...this.props}\n              />\n            </Flex>\n          */\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              availableTokens={this.state.availableTokens}\n              enabledTokens={Object.keys(this.state.availableTokens)}\n              enabledActions={['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut']}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.state.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Button,\n  Form,\n  Icon,\n  Flex,\n  Link\n} from \"rimble-ui\";\nimport axios from 'axios';\nimport colors from '../../colors';\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass WelcomeModal extends React.Component {\n\n  state = {\n    email:null,\n    error:false,\n    subscribed:false,\n    sendingForm:false\n  };\n\n  functionsUtil = null;\n\n  constructor(props) {\n    super(props);\n    this.functionsUtil = new FunctionsUtil(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  componentDidUpdate = async () => {\n    this.functionsUtil.setProps(this.props);\n  }\n\n  sendUserInfo = (sendEmail=true) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const userInfo = {\n      address: this.props.account,\n      provider: walletProvider\n    };\n\n    if (sendEmail && this.state.email !== null){\n      userInfo.email = this.state.email;\n    }\n\n    this.functionsUtil.simpleIDPassUserInfo(userInfo);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.email){\n      return false;\n    }\n\n    const callback = () => {\n      this.setState({\n        sendingForm:false,\n        subscribed:true\n      });\n      window.setTimeout(this.props.closeModal,2500);\n    };\n\n    this.sendUserInfo();\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'send_email',\n      eventLabel: 'WelcomeModal'\n    });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      callback();\n    })\n    .catch(err => {\n      callback();\n    });\n\n    // Set signedUp in the localStorage\n    if (localStorage){\n      const walletAddress = this.props.account.toLowerCase();\n      let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : null;\n      if (lastLogin && lastLogin[walletAddress] && !lastLogin[walletAddress].signedUp){\n        lastLogin[walletAddress].signedUp = true;\n        this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n      }\n    }\n\n    this.setState({\n      sendingForm:true\n    })\n  };\n\n  closeModal = async () => {\n\n    const closeModal = () => {\n      this.props.closeModal();\n    };\n\n    try{\n      // Prevent sending email\n      this.sendUserInfo(false);\n\n      // Send Google Analytics event\n      if (globalConfigs.analytics.google.events.enabled){\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'UI',\n          eventAction: 'continue_without_email',\n          eventLabel: 'WelcomeModal'\n        },closeModal);\n\n        // Call callback after 1 second if stuck\n        setTimeout(closeModal,1000);\n      } else {\n        closeModal();\n      }\n    } catch (err) {\n      closeModal();\n    }\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        {\n          this.state.subscribed ? (\n            <ModalCard\n              closeFunc={this.closeModal}\n            >\n              <ModalCard.Header title={'All done'} icon={`images/done.svg`}></ModalCard.Header>\n              <ModalCard.Body>\n                <Flex width={1} flexDirection={'column'} mb={3}>\n                  <Text color={'dark-gray'} textAlign={'center'} fontSize={3} my={0}>\n                    Thanks for subscribing!\n                  </Text>\n                  <Button\n                    my={3}\n                    width={'100%'}\n                    borderRadius={4}\n                    onClick={this.closeModal}\n                  >\n                    CLOSE\n                  </Button>\n                </Flex>\n              </ModalCard.Body>\n            </ModalCard>\n          ) : (\n            <ModalCard closeFunc={this.closeModal}>\n              <ModalCard.Header title={'Stay up-to-date!'} icon={`images/notification.svg`}>\n              </ModalCard.Header>\n              <ModalCard.Body>\n                <Form onSubmit={this.handleSubmit}>\n                  <Flex width={1} flexDirection={'column'} mb={3}>\n                    <Text color={'mid-gray'} textAlign={'left'} fontSize={3} my={0}>\n                      Add your e-mail to receive updates about:\n                    </Text>\n                  </Flex>\n                  <Flex width={1} flexDirection={'column'} mt={2}>\n                    <Flex my={2} flexDirection={'row'} alignItems={'center'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Performance reports\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        New Protocols & Tokens\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Latest updates\n                      </Text>\n                    </Flex>\n                    <Form.Field width={1} label={''}>\n                      <Form.Input\n                        type=\"email\"\n                        name=\"EMAIL\"\n                        width={1}\n                        outline={'none'}\n                        border={0}\n                        px={3}\n                        py={4}\n                        fontSize={3}\n                        textAlign={['center','left']}\n                        placeholder={'Enter your e-mail'}\n                        onChange={this.handleValidation}\n                        required\n                      />\n                    </Form.Field>\n                    <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n                      <ButtonLoader\n                        buttonText={'SUBMIT'}\n                        isLoading={this.state.sendingForm}\n                        buttonProps={{className:header_styles.gradientButton,width:'100%',type:'submit'}}\n                      >\n                      </ButtonLoader>\n                      <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without e-mail</Link>\n                    </Flex>\n                  </Flex>\n                </Form>\n              </ModalCard.Body>\n            </ModalCard>\n          )\n        }\n      </Modal>\n    );\n  }\n}\n\nexport default WelcomeModal;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\n\nclass MigrateModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'continue_without_migrate',\n        eventLabel: 'MigrateModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowMigrateModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowMigrateModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = () => {\n    const tokenMigrationRoute = this.functionsUtil.getGlobalConfig(['tools','tokenMigration','route']);\n    this.props.goToSection('tools/'+tokenMigrationRoute);\n    this.props.closeModal();\n  }\n\n  render() {\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            iconHeight={'40px'}\n            title={'Migrate to Idle'}\n            icon={`images/migrate.svg`}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={3}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                You can migrate your funds from Compound, Aave, Fulcrum, iEarn and Idle V2 with just one transaction and with no cost.\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                my={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.protocolsTokensBalances && Object.keys(this.props.protocolsTokensBalances).map( token => (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      key={`token_${token}`}\n                      justifyContent={'space-between'}\n                    >\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'icon',\n                          props:{\n                            mr:2,\n                            height:'2.3em'\n                          }\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                      <SmartNumber\n                        mr={2}\n                        {...fieldProps}\n                        minPrecision={5}\n                        number={this.props.protocolsTokensBalances[token].balance} \n                      />\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'tokenName',\n                          props:fieldProps\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                    </Flex>\n                  ) )\n                }\n              </Flex>\n              <Flex\n                mb={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <ButtonLoader\n                  buttonText={'MIGRATE'}\n                  handleClick={this.migrate}\n                  isLoading={this.state.sendingForm}\n                  buttonProps={{\n                    width:['100%','50%'],\n                    className:header_styles.gradientButton\n                  }}\n                >\n                </ButtonLoader>\n                {\n                /*\n                <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without migrate</Link>\n                */\n                }\n                <Checkbox\n                  mt={2}\n                  required={false}\n                  color={'mid-gray'}\n                  checked={this.state.dontShowAgain}\n                  label={`Don't show this popup again`}\n                  onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                />\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default MigrateModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\nimport { Text, Modal, Flex/*, Checkbox*/ } from \"rimble-ui\";\n\nclass UpgradeModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'close_upgrade_modal',\n        eventLabel: 'UpgradeModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowUpgradeModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowUpgradeModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = async (token,strategy=null) => {\n\n    if (!strategy){\n      strategy = this.props.selectedStrategy;\n    }\n\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  convert = async (token) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n\n    if (!this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            icon={`images/migrate.svg`}\n            title={'Upgrade Available'}\n            iconHeight={['35px','40px']}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={[2,3]}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                Idle now supports yield farming and governance tokens distribution, migrate now your portfolio with just one click!\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                mt={[2,3]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Flex\n                  fontSize={[2,3]}\n                  width={[0.5,0.28]}\n                  fontWeight={[4,5]}\n                  color={'copyColor'}\n                >\n                  {\n                    this.props.isMobile ? 'ASSET' : 'ASSET TO MIGRATE'\n                  }\n                </Flex>\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      BALANCE\n                    </Flex>\n                  )\n                }\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      OLD APY\n                    </Flex>\n                  )\n                }\n                <Flex\n                  fontSize={[2,3]}\n                  fontWeight={[4,5]}\n                  width={[0.25,0.19]}\n                  color={'copyColor'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.props.isMobile ? 'APY' : 'NEW APY'\n                  }\n                </Flex>\n                <Flex\n                  width={[0.25,0.15]}\n                >\n                  \n                </Flex>\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.tokensToMigrate && Object.keys(this.props.tokensToMigrate).map( tokenKey => {\n                    const token = this.props.tokensToMigrate[tokenKey].token;\n                    const strategy = this.props.tokensToMigrate[tokenKey].strategy;\n                    const tokenConfig = this.props.tokensToMigrate[tokenKey].tokenConfig;\n                    const balance = this.props.tokensToMigrate[tokenKey].oldContractBalanceFormatted;\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${tokenKey}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={[0.5,0.28]}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.8em','2.3em']\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                        </Flex>\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <SmartNumber\n                                {...fieldProps}\n                                minPrecision={5}\n                                number={balance}\n                                flexProps={{\n                                  justifyContent:'center'\n                                }}\n                              />\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <AssetField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'oldApy',\n                                  props:fieldProps\n                                }}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                        <Flex\n                          width={[0.25,0.19]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={token}\n                            tokenConfig={tokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={[0.25,0.15]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.migrate(token,strategy) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.oldIdleTokensToMigrate && Object.keys(this.props.oldIdleTokensToMigrate).map( token => {\n                    const tokenConfig = this.props.oldIdleTokensToMigrate[token].tokenConfig;\n\n                    if (!tokenConfig){\n                      return null;\n                    }\n\n                    const balance = this.props.oldIdleTokensToMigrate[token].balance;\n                    let newTokenConfig = null;\n\n                    if (tokenConfig.availableStrategies && !this.props.availableTokens[tokenConfig.baseToken]){\n                      newTokenConfig = this.props.availableStrategies[tokenConfig.availableStrategies[0]][tokenConfig.baseToken];\n                    } else {\n                      newTokenConfig = this.props.availableTokens[tokenConfig.baseToken];\n                    }\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${token}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={0.28}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:'2.3em'\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <SmartNumber\n                            {...fieldProps}\n                            minPrecision={5}\n                            number={balance}\n                            flexProps={{\n                              justifyContent:'center'\n                            }}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'oldApy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.15}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.convert(token) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                my={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <RoundButton\n                  handleClick={this.closeModal}\n                  buttonProps={{\n                    fontSize:[2,3],\n                    width:['100%','40%'],\n                  }}\n                >\n                  MIGRATE LATER\n                </RoundButton>\n                {\n                  /*\n                  <Checkbox\n                    mt={2}\n                    required={false}\n                    color={'mid-gray'}\n                    checked={this.state.dontShowAgain}\n                    label={`Don't show this popup again`}\n                    onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                  />\n                  */\n                }\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UpgradeModal;","import React from \"react\";\nimport {\n  Heading,\n  // Text,\n  Modal,\n  Box,\n  Flex,\n  // Image,\n  EthAddress\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    // await this.functionsUtil.asyncForEach(allTokens, async (baseToken) => {\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n      /*\n      const tokenBalances = {};\n\n      tokenBalances[baseToken] = await this.functionsUtil.getTokenBalance(baseToken,this.props.account);\n\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokenBalances[strategyToken.idle.token] = await this.functionsUtil.getTokenBalance(strategyToken.idle.token,this.props.account);\n        }\n      });\n\n      balances.push(tokenBalances);\n      */\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n    // this.props.closeModal();\n  }\n\n  render(){\n    if (this.props.account){\n      // let renderBalances = null;\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                alignItems={'center'}\n                justifyContent={'center'}>\n                <Flex\n                  flexDirection={'column'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                  my={[2,3]}>\n                  <Box style={{'wordBreak': 'break-word'}}>\n                    <EthAddress address={this.props.account} />\n                  </Box>\n                </Flex>\n                <Flex\n                  mb={3}\n                  width={'100%'}\n                  alignItems={'center'}\n                  maxWidth={['100%','30em']}\n                  flexDirection={'column'}\n                >\n                  <Heading.h4\n                    textAlign={'center'}\n                  >\n                    Balances\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n              </Flex>\n            </ModalCard.Body>\n\n            <ModalCard.Footer>\n              {(this.props.context.active || (this.props.context.error && this.props.context.connectorName)) && (\n                <ButtonLoader\n                  buttonProps={{className:styles.gradientButton,borderRadius:'2rem',mt:[4,8],minWidth:['95px','145px'],size:['auto','medium']}}\n                  handleClick={ async () => { await this.logout() } }\n                  buttonText={'Logout wallet'}\n                  isLoading={this.state.logout}\n                >\n                </ButtonLoader>\n              )}\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from 'react';\nimport styles from './MenuAccount.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Icon, Image, Link, Text } from \"rimble-ui\";\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport AccountModal from \"../utilities/components/AccountModal\";\n\nclass MenuAccount extends Component {\n\n  state = {\n    isModalOpen: null,\n    idleTokenBalance: null\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadIdleTokenBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadIdleTokenBalance();\n    }\n  }\n\n  async loadIdleTokenBalance(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled){\n      let idleTokenBalance = this.functionsUtil.BNify(0);\n      const [\n        balance,\n        unclaimed\n      ] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed){\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n\n      return this.setState({\n        idleTokenBalance\n      });\n    }\n    return null;\n  }\n\n  toggleModal = (modalName) => {\n    this.setState(state => ({...state, isModalOpen: (state.isModalOpen===modalName ? null : modalName) }));\n  }\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem('walletProvider',false,null);\n    const connectorInfo = walletProvider ? this.functionsUtil.getGlobalConfig(['connectors',walletProvider.toLowerCase()]) : null;\n    const walletIcon = connectorInfo && connectorInfo.icon ? connectorInfo.icon : walletProvider ? `${walletProvider.toLowerCase()}.svg` : null;\n\n    return (\n      this.props.account ? (\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          alignItems={['flex-start','center']}\n        >\n          <Flex\n            p={0}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n            onClick={e => this.toggleModal('account')}\n          >\n            {\n              connectorInfo ? (\n                <Image\n                  width={'2em'}\n                  height={'2em'}\n                  mr={[2,'0.5rem']}\n                  display={'inline-flex'}\n                  src={`images/${walletIcon}`}\n                  alt={walletProvider.toLowerCase()}\n                />\n              ) : (\n                <Icon\n                  size={'2em'}\n                  mr={[0,'0.5rem']}\n                  color={'copyColor'}\n                  name={'AccountCircle'}\n                />\n              )\n            }\n            <ShortHash\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n              hash={this.props.account}\n            />\n          </Flex>\n          \n          {\n            this.state.idleTokenBalance && \n              <Flex\n                ml={[0,3]}\n                width={'auto'}\n              >\n                <Link\n                  style={{\n                    textDecoration:'none'\n                  }}\n                  className={styles.balanceButton}\n                  onClick={ e => this.props.setGovModal(true) }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={1}\n                      width={'1.7em'}\n                      height={'1.7em'}\n                      display={'inline-flex'}\n                      src={`images/tokens/IDLE.png`}\n                    />\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={500}\n                    >\n                      {this.state.idleTokenBalance.toFixed(2)} IDLE\n                    </Text>\n                  </Flex>\n                </Link>\n              </Flex>\n          }\n          <AccountModal\n            {...this.props}\n            isOpen={this.state.isModalOpen==='account'}\n            closeModal={e => this.toggleModal('account') }\n          />\n        </Flex>\n      ) : (\n        <Flex\n          width={1}\n          justifyContent={'flex-start'}\n        >\n          <CardIconButton\n            icon={'Power'}\n            {...this.props}\n            text={'Connect'}\n            handleClick={this.props.connectAndValidateAccount}\n          />\n        </Flex>\n      )\n    );\n  }\n}\n\nexport default MenuAccount;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    // const txStatusChanged = prevState.txStatus !== this.state.txStatus;\n    // if (txStatusChanged && this.state.txStatus === 'success'){\n    //   this.loadTokenInfo();\n    // }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          bgLayer={true}\n          mainColor={'white'}\n          minWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.png'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens!' : 'You don\\'t have any IDLE to claim'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Link\n                  href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                >\n                  <Flex\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={400}\n                    >\n                      Go to governance\n                    </Text>\n                    <Icon\n                      ml={1}\n                      size={'1em'}\n                      color={'white'}\n                      name={\"OpenInNew\"}\n                    />\n                  </Flex>\n                </Link>\n              </Flex>\n              {\n                this.state.unclaimed && this.state.unclaimed.gt(0) && \n                  <Flex\n                    mb={3}\n                    width={1}\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      // Sending transaction\n                      this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          textColor={'white'}\n                          web3={this.props.web3}\n                          cancelTextColor={'moon-gray'}\n                          cancelTextHoverColor={'white'}\n                          waitText={`Claim estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing Claim request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            color:'blue',\n                            width:[1,'45%'],\n                            mainColor:'white',\n                            contrastColor:'blue',\n                            disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                          }}\n                          handleClick={this.claim.bind(this)}\n                        >\n                          Claim\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n              }\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import theme from '../theme';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport MenuAccount from '../MenuAccount/MenuAccount';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GovModal from \"../utilities/components/GovModal\";\nimport { Box, Flex, Text, Icon, Button } from \"rimble-ui\";\n\nclass DashboardHeader extends Component {\n\n  state = {\n    unclaimed:null,\n    govModalOpened:false\n  }\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(this.props.account);\n      return this.setState({\n        unclaimed\n      });\n    }\n    return null;\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: 'logout',\n      eventCategory: 'Connect'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async exit(){\n    this.props.goToSection('/',false);\n  }\n\n  setGovModal(govModalOpened){\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    const isDashboard = this.props.isDashboard;\n    const isGovernance = this.props.isGovernance;\n    const dashboardRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.props.availableStrategies)[0];\n    const governanceRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    // const buttonSize = this.props.isMobile ? 'small' : 'medium';\n    return (\n      <Box\n        mb={3}\n      >\n        <Flex\n          pb={2}\n          width={1}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n          alignItems={['flex-end','center']}\n          borderBottom={`1px solid ${theme.colors.divider}`}\n        >\n          <MenuAccount\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n          />\n          <Flex\n            mr={2}\n            flexDirection={['column','row']}\n            alignItems={['flex-end','center']}\n          >\n            {\n              governanceEnabled && isDashboard ? (\n                <RoundButton\n                  buttonProps={{\n                    mainColor:'redeem',\n                    size:this.props.isMobile ? 'small' : 'medium'\n                  }}\n                  handleClick={ (e) => { this.props.goToSection(governanceRoute,false) } }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      mr={[1,2]}\n                      size={'1.6em'}\n                      color={'white'}\n                      name={'ExitToApp'}\n                    />\n                    <Text\n                      fontWeight={3}\n                      color={'white'}\n                      fontSize={[2,3]}\n                    >\n                      Governance\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              ) : isGovernance && (\n                <RoundButton\n                  buttonProps={{\n                    mainColor:'redeem',\n                    size:this.props.isMobile ? 'small' : 'medium'\n                  }}\n                  handleClick={ (e) => { this.props.goToSection(dashboardRoute,false) } }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      mr={[1,2]}\n                      size={'1.6em'}\n                      color={'white'}\n                      name={'ExitToApp'}\n                    />\n                    <Text\n                      fontWeight={3}\n                      color={'white'}\n                      fontSize={[2,3]}\n                    >\n                      Dashboard\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              )\n            }\n            {\n              /*\n              <Link\n                display={'flex'}\n                onClick={ (e) => { this.exit() } }\n                style={{\n                  alignItems:'center',\n                  justifyContent:['flex-end','space-between']\n                }}\n              >\n                <Icon\n                  mr={2}\n                  size={'1.6em'}\n                  name={'ExitToApp'}\n                  color={'copyColor'}\n                />\n                <Text\n                  fontSize={2}\n                  fontWeight={3}\n                  color={'copyColor'}\n                >\n                  Exit\n                </Text>\n              </Link>\n              */\n            }\n          </Flex>\n        </Flex>\n        {\n          this.state.unclaimed && this.state.unclaimed.gt(0) &&\n            <Flex\n              p={2}\n              mt={3}\n              width={1}\n              borderRadius={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={'#f3f6ff'}\n              flexDirection={['column','row']}\n              boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n            >\n              <Text\n                fontWeight={500}\n                color={'#3f4e9a'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                IDLE Governance Token is now available, \n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n                >\n                  discover more\n                </ExtLink>! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to claim.\n              </Text>\n              <Button\n                ml={[0,2]}\n                mt={[2,0]}\n                size={'small'}\n                onClick={ e => this.setGovModal(true) }\n              >\n                CLAIM NOW\n              </Button>\n            </Flex>\n        }\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false) }\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Stats from '../Stats/Stats';\nimport Utils from '../Utils/Utils';\nimport AssetPage from '../AssetPage/AssetPage';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CurveStrategy from '../CurveStrategy/CurveStrategy';\nimport WelcomeModal from \"../utilities/components/WelcomeModal\";\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport MigrateModal from \"../utilities/components/MigrateModal\";\nimport UpgradeModal from \"../utilities/components/UpgradeModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    baseRoute:null,\n    activeModal:null,\n    currentRoute:null,\n    pageComponent:null,\n    currentSection:null,\n    selectedSection:null,\n    tokensToMigrate:null,\n    showResetButton:false,\n    selectedSubsection:null,\n    oldIdleTokensToMigrate:null,\n    protocolsTokensBalances:null,\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    window.functionsUtil = this.functionsUtil;\n  }\n\n  async loadMenu() {\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n    const menu = Object.keys(strategies).filter( s => ( !strategies[s].comingSoon ) ).map(strategy => ({\n        submenu:[],\n        color:'#fff',\n        selected:false,\n        route:baseRoute+'/'+strategy,\n        label:strategies[strategy].title,\n        image:strategies[strategy].icon,\n        imageInactive:strategies[strategy].iconInactive,\n        bgColor:strategies[strategy].color,\n        component:strategies[strategy].component\n      })\n    );\n\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n\n    // Add Curve\n    if (curveConfig.enabled){\n      const curveParams = Object.assign({\n        submenu:[],\n        selected:false,\n        component:CurveStrategy,\n      },curveConfig.params);\n\n      menu.push(curveParams);\n    }\n\n    // Add Stats\n    menu.push(\n      {\n        icon:'Equalizer',\n        label:'Stats',\n        bgColor:'#21f36b',\n        color:'dark-gray',\n        component:Stats,\n        selected:false,\n        route:'/dashboard/stats',\n        submenu:[]\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        icon:'Build',\n        label:'Tools',\n        color:'dark-gray',\n        component:Utils,\n        selected:false,\n        route:'/dashboard/tools',\n        bgColor:this.props.theme.colors.primary,\n        submenu:Object.values(this.functionsUtil.getGlobalConfig(['tools'])).filter( u => (u.enabled) )\n      }\n    );\n\n    await this.setState({\n      menu\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    let currentRoute = baseRoute;\n\n    let pageComponent = null;\n    let selectedToken = null;\n    let currentSection = null;\n    let selectedStrategy = null;\n\n    // Set strategy\n    if (params.section){\n      currentSection = params.section;\n      const param1 = params.param1;\n      const param2 = params.param2;\n\n      const section_is_strategy = Object.keys(this.props.availableStrategies).includes(currentSection.toLowerCase());\n      const param1_is_strategy = param1 && Object.keys(this.props.availableStrategies).includes(param1.toLowerCase());\n\n      if (section_is_strategy || param1_is_strategy){\n        selectedStrategy = section_is_strategy ? currentSection : param1;\n        currentRoute += '/'+selectedStrategy;\n\n        // Set token\n        const param1_is_token = param1 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param1.toUpperCase());\n        const param2_is_token = param2 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param2.toUpperCase());\n        if (param1_is_token || param2_is_token){\n          selectedToken = param1_is_token ? param1.toUpperCase() : param2.toUpperCase();\n          currentRoute += '/'+selectedToken;\n\n          if (section_is_strategy){\n            pageComponent = AssetPage;\n          }\n        }\n      } else {\n        currentRoute += '/'+params.section;\n\n        if (params.param1 && params.param1.length){\n          currentRoute += '/'+params.param1;\n        }\n\n        // if (params.param2 && params.param2.length){\n        //   currentRoute += '/'+params.param2;\n        // }\n      }\n    }\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach(m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // console.log('pageComponent',params,pageComponent);\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    // console.log('loadParams',selectedStrategy,selectedToken);\n    await this.props.setStrategyToken(selectedStrategy,selectedToken);\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.checkModals();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const strategyChanged = this.props.selectedStrategy && prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized || strategyChanged){\n      this.checkModals();\n    }\n  }\n\n  async checkModals(){\n\n    if (this.props.selectedToken || !this.props.accountInizialized || !this.props.contractsInitialized || !this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    await this.checkTokensToMigrate();\n    await this.checkWelcomeModal();\n    await this.checkProtocolsTokensBalances();\n  }\n\n  async checkTokensToMigrate(){\n\n    const showUpgradeModal = this.functionsUtil.getStoredItem('dontShowUpgradeModal',false,null) !== null ? false : true;\n    if (this.props.selectedToken || !showUpgradeModal || !this.props.availableTokens){\n      return null;\n    }\n\n    const tokensToMigrate = await this.functionsUtil.getTokensToMigrate();\n    const oldIdleTokensToMigrate = await this.functionsUtil.getProtocolsTokensBalances('idle');\n\n    // console.log('tokensToMigrate',tokensToMigrate);\n    \n    if ((tokensToMigrate && Object.keys(tokensToMigrate).length>0) || (oldIdleTokensToMigrate && Object.keys(oldIdleTokensToMigrate).length>0)){\n      const activeModal = 'upgrade';\n      if (activeModal !== this.state.activeModal){\n        this.setState({\n          activeModal,\n          tokensToMigrate,\n          oldIdleTokensToMigrate\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkWelcomeModal(){\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show welcome modal\n    if (this.props.account && this.state.activeModal === null){\n      let welcomeIsOpen = false;\n\n      const welcomeModalProps = this.functionsUtil.getGlobalConfig(['modals','welcome']);\n\n      if (welcomeModalProps.enabled && localStorage){\n\n        // Check the last login of the wallet\n        const currTime = new Date().getTime();\n        const walletAddress = this.props.account.toLowerCase();\n        let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : {};\n\n        // First login\n        if (!lastLogin[walletAddress]){\n          lastLogin[walletAddress] = {\n            'signedUp':false,\n            'lastTime':currTime\n          };\n          welcomeIsOpen = true;\n        // User didn't sign up\n        } else if (!lastLogin[walletAddress].signedUp) {\n          const lastTime = parseInt(lastLogin[walletAddress].lastTime);\n          const timeFromLastLogin = (currTime-lastTime)/1000;\n          welcomeIsOpen = timeFromLastLogin>=welcomeModalProps.frequency; // 1 day since last login\n        }\n\n        if (welcomeIsOpen){\n          lastLogin[walletAddress].lastTime = currTime;\n          this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n        }\n      }\n\n      const activeModal = welcomeIsOpen ? 'welcome' : this.state.activeModal;\n      if (this.state.activeModal !== activeModal){\n        this.setState({\n          activeModal\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkProtocolsTokensBalances() {\n\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show migration modal if no other modals are opened\n    const migrateModalEnabled = this.functionsUtil.getGlobalConfig(['modals','migrate','enabled']);\n    const showMigrateModal = this.functionsUtil.getStoredItem('dontShowMigrateModal',false,null) !== null ? false : true;\n\n    if (this.state.activeModal === null && migrateModalEnabled && showMigrateModal && !this.state.protocolsTokensBalances){\n      const protocolsTokensBalances = await this.functionsUtil.getProtocolsTokensBalances();\n      const activeModal = protocolsTokensBalances && Object.keys(protocolsTokensBalances).length>0 ? 'migrate' : null;\n      const newState = {\n        activeModal,\n        protocolsTokensBalances\n      };\n      this.setState(newState);\n      return activeModal;\n    }\n\n    return null;\n  }\n\n  goToSection(section,isDashboard=true){\n\n    // Remove dashboard route\n    if (isDashboard){\n      section = section.replace(this.state.baseRoute +'/','');\n    }\n\n    const newRoute = isDashboard ? this.state.baseRoute +'/' + section : section;\n    window.location.hash=newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'goToSection',\n      eventLabel: newRoute\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  changeToken(selectedToken){\n    selectedToken = selectedToken.toUpperCase();\n    if (Object.keys(this.props.availableTokens).includes(selectedToken)){\n      const routeParts = [];\n\n      // Add section\n      if (this.state.currentSection.toLowerCase() !== this.props.selectedStrategy.toLowerCase()){\n        routeParts.push(this.state.currentSection);\n      }\n\n      // Add strategy\n      routeParts.push(this.props.selectedStrategy); \n\n      // Add token\n      routeParts.push(selectedToken);\n\n      this.goToSection(routeParts.join('/'));\n    }\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      match={{ params:{} }}\n                      urlParams={this.state.params}\n                      changeToken={this.changeToken.bind(this)}\n                      goToSection={this.goToSection.bind(this)}\n                      selectedSection={this.state.selectedSection}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <UpgradeModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          tokensToMigrate={this.state.tokensToMigrate}\n          isOpen={this.state.activeModal === 'upgrade'}\n          oldIdleTokensToMigrate={this.state.oldIdleTokensToMigrate}\n        />\n        <MigrateModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          isOpen={this.state.activeModal === 'migrate'}\n          protocolsTokensBalances={this.state.protocolsTokensBalances}\n        />\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n        <WelcomeModal\n          closeModal={this.resetModal}\n          account={this.props.account}\n          simpleID={this.props.simpleID}\n          network={this.props.network.current}\n          tokenName={this.props.selectedToken}\n          initSimpleID={this.props.initSimpleID}\n          baseTokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'welcome'}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      backgroundColor: \"white\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                style={{\n                  flex:'0 100%',\n                  justifyContent:'flex-start'\n                }}\n              >\n                <ImageButton\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex flexDirection={'row'} flexWrap={'wrap'} justifyContent={'space-between'}>\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Modal,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    currentSection:null,\n    showTxFees: false,\n    closeRemainingTime:null,\n    newToEthereumChoice: null,\n    showInstructions: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      newToEthereumChoice:null,\n      showInstructions: false,\n      currentSection:null\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'select_wallet',\n      eventLabel: walletProvider\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'blue'} style={{textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const newToEthereum = this.state.currentSection === 'new';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons isMobile={this.props.isMobile} connectionCallback={ this.closeModal } setConnector={ this.setConnector } width={1/2} size={ this.props.isMobile ? 'medium' : 'large' } />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/email.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use e-mail'} subcaption={'Powered by Portis'} handleClick={ e => this.setConnector('Portis','Portis') } />\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/mobile.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use phone number'} subcaption={'Powered by Fortmatic'} handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }/>\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n              <Box mb={3}>\n                <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex mb={[2,3]} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/ethereum-wallet.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`Ethereum wallet`} subcaption={'Choose your favourite'} handleClick={ e => this.setCurrentSection(e,'wallet') } />\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/new-wallet.png'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`New wallet`} subcaption={'Use email / phone'} handleClick={ e => this.setCurrentSection(e,'new') } />\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { (!this.state.currentSection) ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enaugh funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport Biconomy from \"@biconomy/mexa\";\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  contracts: [],\n  account: {},\n  accountBalance: {},\n  accountBalanceToken: {},\n  accountBalanceLow: {},\n  tokenConfig: {},\n  web3: {},\n  web3Infura: {},\n  initWeb3: () => {},\n  biconomy: {},\n  simpleID: {},\n  initSimpleID: () => {},\n  transactions: {},\n  checkPreflight: () => {},\n  initContract: () => {},\n  initAccount: () => {},\n  initializeContracts: () => {},\n  getAccountBalance: () => {},\n  getTokenDecimals: () => {},\n  rejectAccountConnect: () => {},\n  accountValidated: {},\n  accountValidationPending: {},\n  rejectValidation: () => {},\n  validateAccount: () => {},\n  accountInizialized: false,\n  contractsInitialized: false,\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  network: {\n    required: {},\n    current: {},\n    isCorrectNetwork: null,\n    checkNetwork: () => {}\n  },\n  modals: {\n    data: {\n      noWeb3BrowserModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      connectionModalIsOpen: {},\n      accountConnectionPending: {},\n      userRejectedConnect: {},\n      accountValidationPending: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n      lowFundsModalIsOpen: {},\n      connectionError: {}\n    },\n    methods: {\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeLowFundsModal: () => {},\n      openLowFundsModal: () => {}\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils = () => {\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.type = \"contract\";\n      transaction.status = status;\n      transaction.params = params;\n      transaction.transactionHash = hash;\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n\n    // window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if (connectorName === 'Infura' && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura\n            };\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // this.functionsUtil.customLog('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n\n    this.functionsUtil.customLog('initAccount',account);\n\n    if (this.props.customAddress){\n\n      // Set custom account\n      this.setState({\n        accountInizialized: true,\n        account: this.props.customAddress\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account){\n\n        const walletProvider = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // if (call_callback){\n        //   alert('confirmationCallback')\n        // }\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas  } : { from: account, gas })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          // this.functionsUtil.customLog('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      // this.functionsUtil.customLog('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // this.functionsUtil.customLog('updateTransaction',transactions);\n\n    // Save transactions in localStorage only if pending or succeeded\n    if (['pending','success','confirmed'].includes(transaction.status.toLowerCase())){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n        <ConnectionModalUtil\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getTotalSupply`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,totalSupply);\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n      if (cachedData !== null){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance){\n        return this.functionsUtil.setCachedData(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n      if (cachedData !== null){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedData(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n      if (cachedData !== null){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes){\n        return this.functionsUtil.setCachedData(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.BNify(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.BNify(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.BNify(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    const delegations = all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n\n    const delegateAccounts = {};\n\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    let delegates = [];\n    Object.keys(delegateAccounts).forEach((account) => {\n      const votes = +delegateAccounts[account];\n      if (votes === 0) return;\n      delegates.push({\n        votes: votes/1e18,\n        delegate: account\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    const all_votes = await this.getVotes();\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / 10000000)).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedData(cachedDataKey,delegates)\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n\n    let votes = await this.functionsUtil.getContractPastEvents(governanceContractName,'VoteCast', {fromBlock: 0, toBlock: 'latest'});\n\n    if (votes){\n      votes = votes.map( e => {\n        const {\n            voter,\n            votes,\n            support,\n            proposalId\n        } = e.returnValues;\n        return {\n          votes,\n          voter,\n          support,\n          proposalId\n        }\n      });\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null) => {\n\n    // Check for cached data\n    const cachedDataKey = 'getProposals';\n    let cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      if (voted_by !== null){\n        cachedData = cachedData.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const proposalCount = await this.functionsUtil.genericContractCall(governanceContractName,'proposalCount');\n\n    if (!proposalCount){\n      return [];\n    }\n\n    const proposalGets = [];\n    const proposalStateGets = [];\n    for (const i of Array.from(Array(parseInt(proposalCount)),(n,i) => i+1)) {\n      proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n      proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n    }\n\n    const [\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents,\n    ] = await Promise.all([\n      this.getVotes(),\n      Promise.all(proposalGets),\n      Promise.all(proposalStateGets),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock: 0, toBlock: 'latest'}),\n    ]);\n\n    /*\n    console.log(\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents\n    );\n    */\n\n    proposals.reverse();\n    proposalStates.reverse();\n    proposalQueuedEvents.reverse();\n    proposalCreatedEvents.reverse();\n    proposalCanceledEvents.reverse();\n    proposalExecutedEvents.reverse();\n\n    await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n      const proposalId = parseInt(p.id);\n\n      const createdEvent = proposalCreatedEvents[i];\n      const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n      // Init states array\n      p.states = [];\n\n      // Create created state\n      const createdBlockInfo = await this.props.web3.eth.getBlock(createdEvent.blockNumber);\n      const createdState = {\n        state: \"Pending\",\n        end_time: createdBlockInfo.timestamp,\n        start_time: createdBlockInfo.timestamp,\n        trx_hash: createdEvent.transactionHash\n      };\n      p.states.push(createdState);\n\n      // Push active state\n      const activeState = {\n        state: \"Active\",\n        end_time: null,\n        start_time: createdState.start_time,\n        trx_hash: null\n      };\n      p.states.push(activeState);\n\n      // Push canceled state\n      if (canceledEvent){\n        const canceledBlockInfo = await this.props.web3.eth.getBlock(canceledEvent.blockNumber);\n        const canceledState = {\n          state: \"Canceled\",\n          end_time: null,\n          start_time: canceledBlockInfo.timestamp,\n          trx_hash: canceledEvent.transactionHash\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n        p.states.push(canceledState);\n      } else {\n        // Push queued state\n        if (queuedEvent){\n          const queuedBlockInfo = await this.props.web3.eth.getBlock(queuedEvent.blockNumber);\n          const succeededState = {\n            state: \"Succeeded\",\n            end_time: null,\n            trx_hash: null,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          const queuedState = {\n            state: \"Queued\",\n            end_time: null,\n            start_time: queuedBlockInfo.timestamp,\n            trx_hash: queuedEvent.transactionHash\n          };\n\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n          // Push Succeeded state\n          p.states.push(succeededState);\n          // Push queued state\n          p.states.push(queuedState);\n        }\n\n        // Push executed state\n        if (executedEvent){\n          const executedBlockInfo = await this.props.web3.eth.getBlock(executedEvent.blockNumber);\n          const executedState = {\n            state: \"Executed\",\n            end_time: null,\n            start_time: executedBlockInfo.timestamp,\n            trx_hash: executedEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n          p.states.push(executedState);\n        }\n      }\n\n      // Check for defeated or expired\n      p.state = enumerateProposalState(proposalStates[i]);\n      const foundState = p.states.find( s => (s.state === p.state) );\n      if (!foundState){\n        const endBlockInfo = await this.props.web3.eth.getBlock(p.endBlock);\n        const endState = {\n          state: p.state,\n          end_time: null,\n          trx_hash: null,\n          start_time: endBlockInfo.timestamp,\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n        p.states.push(endState);\n      }\n\n      p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n      const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n      p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n      \n      // Idle\n      p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n      p.description = description.split(/\\n|↵/g);\n      p.description.shift();\n      p.description = p.description.join(\"\\n\");\n\n      // Compound\n      // p.title = description.split(/# |\\n/g)[1] || 'Untitled';\n      // p.description = description.split(/# |\\n/g)[2] || 'No description.';\n\n      // Save proposal\n      proposals[i] = {\n        eta:p.eta,\n        actions:{\n          values,\n          targets,\n          calldatas,\n          signatures\n        },\n        id:proposalId,\n        title:p.title,\n        state:p.state,\n        votes:p.votes,\n        states:p.states,\n        executed:p.executed,\n        endBlock:p.endBlock,\n        canceled:p.canceled,\n        forVotes:p.forVotes,\n        proposer:p.proposer,\n        timestamp:p.timestamp,\n        startBlock:p.startBlock,\n        description:p.description,\n        againstVotes:p.againstVotes\n      };\n    });\n\n    this.functionsUtil.setCachedData(cachedDataKey,proposals)\n    \n    if (voted_by === null) {\n      return proposals;\n    } else {\n      return proposals.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n    }\n  }\n}\n\nexport default GovernanceUtil;","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ProposalField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const proposal = Object.assign({},this.props.proposal);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n\n    switch (fieldInfo.name){\n      case 'date':\n        const formattedDate = this.functionsUtil.strToMoment(proposal.timestamp*1000).format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        const state = fieldInfo.state ? fieldInfo.state : proposal.state;\n        switch (state) {\n          case 'Pending':\n            icon = \"HourglassEmpty\";\n            color = '#a5a5a5';\n          break;\n          case 'Active':\n            icon = \"Adjust\";\n            color = '#a5a5a5';\n          break;\n          case 'Canceled':\n            icon = \"Cancel\";\n            color = '#fa0000';\n          break;\n          case 'Defeated':\n            icon = \"Block\";\n            color = '#fa0000';\n          break;\n          case 'Succeeded':\n            icon = \"Done\";\n            color = '#00b84a';\n          break;\n          case 'Queued':\n            icon = \"Timelapse\";\n            color = '#ff9900';\n          break;\n          case 'Expired':\n            icon = \"ErrorOutline\";\n            color = '#a5a5a5';\n          break;\n          case 'Executed':\n            icon = \"CheckCircle\";\n            color = '#00b84a';\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ fieldProps.size ? fieldProps.size : (this.props.isMobile ? '1em' : '1.8em') }\n            />\n          </Flex>\n        );\n      break;\n      case 'id':\n        output = (\n          <Text {...fieldProps}>{proposal.id}</Text>\n        );\n      break;\n      case 'title':\n        output = (\n          <Text {...fieldProps}>{proposal.title}</Text>\n        );\n      break;\n      case 'votes':\n        const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n        const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n        const totalVotes = forVotes.plus(againstVotes);\n        output = (\n          <Text {...fieldProps}>{this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}</Text>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{proposal.state}</Text>\n        );\n      break;\n      case 'support':\n        let support = null;\n        if (this.props.delegate){\n          const delegate = this.props.delegate.delegate.toLowerCase();\n          const vote = proposal.votes.find( v => (v.voter.toLowerCase() === delegate) );\n          if (vote){\n            support = vote.support;\n          }\n        }\n        output = (\n          <Text {...fieldProps}>{ support === null ? 'NONE' : (support ? 'FOR' : 'AGAINST') }</Text>\n        );\n      break;\n      case 'forVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.forVotes} />\n        );\n      break;\n      case 'againstVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.againstVotes} />\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default ProposalField;\n","import React, { Component } from 'react';\nimport styles from './ProposalListFilters.module.scss';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\nimport TableCellHeader from '../../TableCellHeader/TableCellHeader';\n\nclass ProposalListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalListFilters;","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ProposalField from '../ProposalField/ProposalField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport ProposalListFilters from '../ProposalListFilters/ProposalListFilters';\n\nclass ProposalsList extends Component {\n\n  state = {\n    page:1,\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n    },\n    filters:{\n      status:{\n        pending:'Pending',\n        active:'Active',\n        canceled:'Canceled',\n        defeated:'Defeated',\n        succeeded:'Succeeded',\n        queued:'Queued',\n        expired:'Expired',\n        executed:'Executed'\n      },\n    },\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const proposalsChanged = JSON.stringify(prevProps.proposals) !== JSON.stringify(this.props.proposals);\n    if (pageChanged || proposalsChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.proposals){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    const proposals = Object.values(this.props.proposals)\n                        .filter(p => (\n                          (this.state.activeFilters.status === null || p.state.toLowerCase() === this.state.activeFilters.status.toLowerCase())\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalRows = proposals.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    proposals.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const filtersEnabled = typeof this.props.filtersEnabled === 'undefined' || this.props.filtersEnabled;\n    const hasActiveFilters = filtersEnabled && Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n    const hasRows = processedRows && processedRows.length>0;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Proposals...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'proposals-list-container'}\n              pt={[0, (!filtersEnabled || !hasRows ? 0 : hasActiveFilters ? '116px' : 5) ] }\n            >\n              {\n                hasRows ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    {\n                      filtersEnabled &&\n                        <ProposalListFilters\n                          {...this.props}\n                          filters={this.state.filters}\n                          activeFilters={this.state.activeFilters}\n                          resetFilters={this.resetFilters.bind(this)}\n                          applyFilters={this.applyFilters.bind(this)}\n                        />\n                    }\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'proposals-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (proposal,index) => {\n                          const proposalId = proposal.id;\n                          const handleClick = (e) => {\n                            return (proposalId ? this.props.goToSection(`proposals/${proposalId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={proposalId}\n                              proposal={proposal}\n                              handleClick={handleClick}\n                              key={`proposal-${proposalId}`}\n                              fieldComponent={ProposalField}\n                              rowId={`proposal-col-${proposalId}`}\n                              cardId={`proposal-card-${proposalId}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'proposals-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no proposals\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalsList;\n","import React, { Component } from 'react';\nimport { Flex, Text, Blockie } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass DelegateField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const delegate = Object.assign({},this.props.delegate);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'avatar':\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Blockie\n              opts={{\n                size: 7,\n                color: \"#dfe\",\n                bgcolor: \"#a71\",\n                spotcolor: \"#000\",\n                seed: delegate.delegate,\n              }}\n            />\n          </Flex>\n        );\n      break;\n      case 'rank':\n      case 'votes':\n      case 'delegate':\n      case 'proposals':\n      case 'vote_weight':\n        let value = delegate[fieldInfo.name];\n        if (fieldInfo.name === 'votes'){\n          value = this.functionsUtil.formatMoney(this.functionsUtil.BNify(value).toFixed(2,1),2);\n        }\n        output = (\n          <Text\n            {...fieldProps}\n          >\n            {value}\n          </Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default DelegateField;\n","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport DelegateField from '../DelegateField/DelegateField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\n\nclass DelegatesList extends Component {\n\n  state = {\n    page:1,\n    filters:{},\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{},\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const delegatesChanged = JSON.stringify(prevProps.delegates) !== JSON.stringify(this.props.delegates);\n    if (pageChanged || delegatesChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.delegates){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    let delegates = Object.values(this.props.delegates)\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    if (this.props.maxRows !== null && this.props.maxRows>0){\n      delegates = delegates.splice(0,this.props.maxRows);\n    }\n\n    // Calculate max number of pages\n    const totalRows = delegates.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    delegates.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Leaderboard...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'delegates-list-container'}\n            >\n              {\n                processedRows && processedRows.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'delegates-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (delegate,index) => {\n                          const delegateId = delegate.delegate;\n                          const handleClick = (e) => {\n                            return (delegateId ? this.props.goToSection(`leaderboard/${delegateId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={delegateId}\n                              delegate={delegate}\n                              key={`delegate-${index}`}\n                              handleClick={handleClick}\n                              fieldComponent={DelegateField}\n                              rowId={`delegate-col-${index}`}\n                              cardId={`delegate-card-${index}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'delegates-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no delegates\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default DelegatesList;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport StatsCard from '../StatsCard/StatsCard';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport DelegatesList from './DelegatesList/DelegatesList';\n\nclass Overview extends Component {\n\n  state = {\n    delegates:[],\n    proposals:[],\n    totalSupply:0,\n    dataLoaded:false,\n    votesDelegated:0,\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const [\n      delegates,\n      proposals,\n      totalSupply\n    ] = await Promise.all([\n      this.governanceUtil.getDelegates(),\n      this.governanceUtil.getProposals(),\n      this.governanceUtil.getTotalSupply()\n    ]);\n\n    const votesDelegated = delegates.reduce( (votesDelegated,d) => {\n      votesDelegated = votesDelegated+parseFloat(d.votes);\n      return votesDelegated;\n    },0);\n\n    const dataLoaded = true;\n\n    this.setState({\n      delegates,\n      proposals,\n      dataLoaded,\n      totalSupply,\n      votesDelegated\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Governance Overview\n        </Title>\n        {\n          !this.state.dataLoaded ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Data...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n                mb={[3,4]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Flex\n                  mb={[2,0]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Votes Delegated'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.votesDelegated.toFixed(2,1),2)}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Voting Addresses'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.delegates.length}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Proposals'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.proposals.length}\n                  />\n                </Flex>\n                <Flex\n                  pl={[0,1]}\n                  mb={[2,0]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'IDLE Circulating'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.totalSupply,0)}\n                  />\n                </Flex>\n              </Flex>\n              <Box\n                width={1}\n                mt={[4,5]}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Recent Proposals\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <ProposalsList\n                    {...this.props}\n                    rowsPerPage={5}\n                    filtersEnabled={false}\n                    proposals={this.state.proposals}\n                    cols={[\n                      {\n                        title: '#',\n                        props:{\n                          width:[0.1,0.05]\n                        },\n                        fields:[\n                          {\n                            name:'id',\n                            props:{\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'DATE',\n                        mobile:false,\n                        props:{\n                          width:[0.15,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'date'\n                          }\n                        ]\n                      },\n                      {\n                        title:'TITLE',\n                        props:{\n                          width:[0.75,0.60],\n                        },\n                        fields:[\n                          {\n                            name:'title'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTES',\n                        props:{\n                          width:[0.11,0.11],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        title:'STATUS',\n                        props:{\n                          width:[0.15,0.12],\n                          alignItems:['center','flex-start'],\n                          justifyContent:['center','flex-start']\n                        },\n                        parentProps:{\n                          justifyContent:['center','flex-start']\n                        },\n                        fields:[\n                          {\n                            name:'statusIcon',\n                            props:{\n                              mr:[0,2],\n                            },\n                          },\n                          {\n                            mobile:false,\n                            name:'status'\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Leaderboard\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <DelegatesList\n                    maxRows={100}\n                    {...this.props}\n                    rowsPerPage={5}\n                    delegates={this.state.delegates}\n                    cols={[\n                      {\n                        title: 'RANK',\n                        props:{\n                          width:[0.13,0.08]\n                        },\n                        fields:[\n                          {\n                            name:'rank'\n                          },\n                        ]\n                      },\n                      {\n                        title:'ADDRESS',\n                        props:{\n                          width:[0.60,0.50],\n                        },\n                        fields:[\n                          {\n                            mobile:false,\n                            name:'avatar',\n                            props:{\n                              mr:2\n                            }\n                          },\n                          {\n                            name:'delegate'\n                          }\n                        ]\n                      },\n                      {\n                        title:'VOTES',\n                        props:{\n                          width:[0.27,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTE WEIGHT',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'vote_weight',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'PROPOSALS VOTED',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'proposals',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Overview;\n","import React, { Component } from 'react';\nimport ConnectBox from '../../ConnectBox/ConnectBox';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Input, Button, Box, EthAddress } from \"rimble-ui\";\n\nclass DelegateVote extends Component {\n\n  state = {\n    newDelegate:'',\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  checkNewDelegate = () => {\n    return this.functionsUtil.checkAddress(this.state.newDelegate) && this.state.newDelegate.toLowerCase() !== this.props.currentDelegate.toLowerCase();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  setDelegate(address){\n    const addressOk = this.functionsUtil.checkAddress(address);\n\n    if (addressOk){\n\n      const callback = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventCategory: 'Delegate',\n          eventAction: address,\n          eventLabel: tx.status\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        if (typeof this.props.loadUserData === 'function' && tx.status === 'success'){\n          this.props.loadUserData();\n        }\n\n        this.setState({\n          processing: {\n            txHash:null,\n            loading:false\n          }\n        });\n      };\n\n      const callbackReceipt = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.governanceUtil.setDelegate(address,callback,callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n    return null;\n  }\n\n  changeDelegate = (e) => {\n    const newDelegate = e.target.value;\n    this.setState({\n      newDelegate\n    });\n  }\n\n  render() {\n\n    const isUndelegated = parseInt(this.props.currentDelegate) === 0;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n        !this.props.account ? (\n          <Flex\n            width={[1,0.36]}\n            alignItems={'stretch'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <ConnectBox\n              {...this.props}\n            />\n          </Flex>\n        ) : \n        // Has balance\n        this.props.balance && this.props.balance.gt(0) ? (\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:[1,0.5],\n              position:'relative',\n            }}\n            isInteractive={false}\n          >\n            {\n              this.props.canClose &&\n                <Box\n                  top={'0'}\n                  zIndex={1}\n                  right={'0'}\n                  position={'absolute'}\n                >\n                  <Button.Text\n                    icononly\n                    icon={'Close'}\n                    size={'2.5em'}\n                    mainColor={'statValue'}\n                    onClick={this.props.closeFunc}\n                  />\n                </Box>\n            }\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                mb={2}\n                fontWeight={3}\n                fontSize={[2,3]}\n                color={'dark-gray'}\n                textAlign={'center'}\n              >\n                You have {this.functionsUtil.fixTokenDecimals(this.props.balance,18).toFixed(4)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} available.\n              </Text>\n              <Text\n                mb={1}\n                fontWeight={3}\n                color={'statValue'}\n                textAlign={'center'}\n              >\n                Current Delegate:\n              </Text>\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                justifyContent={isUndelegated ? 'center' : 'stretch'}\n              >\n                {\n                  isUndelegated ? (\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'dark-gray'}\n                      textAlign={'center'}\n                    >\n                      Undelegated\n                    </Text>\n                  ) : (\n                    <EthAddress\n                      width={1}\n                      address={this.props.account}\n                    />\n                  )\n                }\n              </Flex>\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Delegate estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing delegate request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mb={1}\n                      fontWeight={3}\n                      color={'statValue'}\n                      textAlign={'center'}\n                    >\n                      Set New Delegate:\n                    </Text>\n                    <Input\n                      min={0}\n                      type={'text'}\n                      width={'100%'}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      textAlign={'center'}\n                      boxShadow={'none !important'}\n                      value={this.state.newDelegate}\n                      placeholder={`Insert delegate address`}\n                      onChange={this.changeDelegate.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                    />\n                    <Flex\n                      mt={3}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          disabled:!this.checkNewDelegate()\n                        }}\n                        handleClick={ e => this.setDelegate(this.state.newDelegate) }\n                      >\n                        Delegate\n                      </RoundButton>\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          mainColor:this.props.theme.colors.redeem,\n                          disabled:this.props.currentDelegate.toLowerCase() === this.props.account.toLowerCase()\n                        }}\n                        handleClick={ e => this.setDelegate(this.props.account) }\n                      >\n                        Self-delegate\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        ) : (\n          <Text\n            fontWeight={2}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You don't have any {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} token to delegate.\n          </Text>\n        )\n       } \n      </Flex>\n    );\n  }\n}\n\nexport default DelegateVote;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport DelegateVote from './DelegateVote/DelegateVote';\n\nclass Delegate extends Component {\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Breadcrumb\n            {...this.props}\n            text={'Governance'}\n            path={['Delegate votes']}\n            isMobile={this.props.isMobile}\n            handleClick={ e => this.props.goToSection('') }\n          />\n        </Flex>\n        <Box\n          width={1}\n        >\n          <Title\n            mb={[3,4]}\n          >\n            Delegate Votes\n          </Title>\n          <Flex\n            px={[0,3]}\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'delegate-container'}\n          >\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Delegate;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './NewProposal.module.scss';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Heading, Input, Form, Field, Textarea, Icon, Select, Link } from \"rimble-ui\";\n\nclass NewProposal extends Component {\n\n  state = {\n    title:'',\n    actions:[],\n    description:'',\n    processing: {\n      txHash:null,\n      loading:false\n    },\n    actionValue:0,\n    txError:false,\n    customABI:null,\n    validated:false,\n    newAction:false,\n    editAction:null,\n    actionInputs:null,\n    actionValid:false,\n    customAddress:null,\n    contractOptions:[],\n    proposalCreated:false,\n    functionsOptions:null,\n    selectedContract:null,\n    selectedFunction:null,\n    selectedSignature:null,\n    availableFunctions:null,\n    availableContracts:null\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const customABIChanged = prevState.customABI !== this.state.customABI;\n    // console.log('customABIChanged',customABIChanged,this.state.selectedContract);\n    if (customABIChanged && this.state.selectedContract === 'custom'){\n      this.loadFunctionsOptions();\n    }\n  }\n\n  loadData(){\n    const availableContracts = this.functionsUtil.getGlobalConfig(['governance','props','availableContracts']);\n    const contractOptions = [\n      {label:'Select a Contract',value:null}\n    ];\n\n    Object.keys(availableContracts).forEach( contractName => {\n      contractOptions.push({label:contractName,value:contractName});\n    });\n\n    contractOptions.push({label:'Custom',value:'custom'});\n\n    this.setState({\n      contractOptions,\n      availableContracts\n    });\n  }\n\n  handleInput(field,e,type=null){\n    let value = e.target.value;\n    this.setState({\n      [field]:value\n    });\n  }\n\n  validateForm(){\n    const validated = this.state.title.length>0 && this.state.description.length>0 && Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getContractABI(selectedContract=null){\n    selectedContract = selectedContract ? selectedContract : this.state.selectedContract;\n\n    let contractABI = null;\n    try {\n      contractABI = selectedContract === 'custom' ? JSON.parse(this.state.customABI) : this.state.availableContracts[selectedContract];\n    } catch (err) {\n      \n    }\n    return contractABI;\n  }\n\n  loadFunctionsOptions(selectedContract=null){\n    let actionInputs = null;\n    let functionsOptions = null;\n    let selectedFunction = null;\n    let selectedSignature = null;\n    let availableFunctions = null;\n\n    const contractABI = this.getContractABI(selectedContract);\n    if (contractABI){\n      availableFunctions = contractABI.filter( f => (!f.constant && f.type === 'function' && f.inputs.length>0 && ['nonpayable','payable'].includes(f.stateMutability)) )\n      functionsOptions = availableFunctions.map( (f,index) => ({\n                          label:f.name,\n                          value:index\n                        }));\n\n      // Add default option\n      functionsOptions.unshift({label:'Select a Function',value:null});\n    }\n\n    // console.log('loadFunctionsOptions',contractABI,functionsOptions);\n\n    this.setState({\n      actionInputs,\n      functionsOptions,\n      selectedFunction,\n      selectedSignature,\n      availableFunctions\n    });\n  }\n\n  changeContract(e){\n    const selectedContract = e.target.value;\n    const selectedContractChanged = selectedContract !== this.state.selectedContract;\n\n    if (selectedContractChanged){\n\n      // Reset function\n      let selectedFunction = null;\n      let selectedSignature = null;\n\n      const newState = {\n        selectedContract,\n        selectedFunction,\n        selectedSignature\n      };\n\n      // Load contract functions\n      if (selectedContract !== null){\n        const contractABI = this.getContractABI(selectedContract);\n        if (contractABI){\n          this.loadFunctionsOptions(selectedContract);\n        } else {\n          newState.functionsOptions = null;\n        }\n      }\n\n      // console.log('changeContract',newState);\n\n      this.setState(newState);\n    }\n  }\n\n  changeFunction(e){\n    const actionValue = 0;\n    let actionInputs = null;\n    const selectedSignature = e.target.value;\n    let selectedFunction = this.state.availableFunctions.find( (f,index) => (index === parseInt(selectedSignature)) );\n\n    if (selectedFunction){\n      actionInputs = new Array(selectedFunction.inputs.length);\n    } else {\n      selectedFunction  = null;\n    }\n\n    this.setState({\n      actionValue,\n      actionInputs,\n      selectedFunction,\n      selectedSignature\n    })\n  }\n  validateField(value,type){\n    if (value===null){\n      return false;\n    }\n    let valid = true;\n    if (type === 'json'){\n      valid = this.functionsUtil.isValidJSON(value);\n    } else {\n      const fieldPattern = this.getPatternByFieldType(type);\n      if (fieldPattern){\n        valid = value.toString().match(fieldPattern) !== null;\n      }\n    }\n    return valid;\n  }\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs || !this.state.selectedFunction){\n      return false;\n    }\n\n    const inputs = this.state.selectedFunction.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    // Check custom token\n    if (actionValid && this.state.selectedContract === 'custom'){\n      actionValid = actionValid && this.validateField(this.state.customABI,'json') && this.validateField(this.state.customAddress,'address');\n    }\n\n    // console.log('actionValid',this.state.selectedContract,this.validateField(this.state.customABI,'json'),this.state.customAddress,this.validateField(this.state.customAddress,'address'),actionValid);\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n        const selectedContract = null;\n        const selectedFunction = null;\n        const selectedSignature = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs,\n          selectedContract,\n          selectedFunction,\n          selectedSignature\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.selectedFunction.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.BNify(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.BNify(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.selectedFunction.inputs.length){\n      return false;\n    }\n\n    // Check contract\n    let target = null;\n    if (this.state.selectedContract !== 'custom'){\n      const contract = this.functionsUtil.getContractByName(this.state.selectedContract);\n      if (!contract){\n        return false;\n      } else {\n        target = contract._address;\n      }\n    } else {\n      const contractABIValid = this.functionsUtil.isValidJSON(this.state.customABI);\n      if (!contractABIValid){\n        return false;\n      } else {\n        target = this.state.customAddress;\n      }\n    }\n    \n    const customABI = this.state.customABI;\n    const customAddress = this.state.customAddress;\n    const inputTypes = this.state.selectedFunction.inputs.map( i => (i.type) );\n    const calldata = this.props.web3.eth.abi.encodeParameters(inputTypes,inputs);\n    const signature = this.state.selectedFunction.name+'('+inputTypes.join(',')+')';\n    const value = this.state.actionValue ? this.functionsUtil.BNify(this.state.actionValue).toFixed(0) : this.functionsUtil.BNify(0).toFixed(0);\n\n    const action = {\n      params:{\n        value,\n        target,\n        calldata,\n        signature\n      },\n      customABI,\n      customAddress,\n      inputs:this.state.actionInputs,\n      function:this.state.selectedFunction,\n      contract:this.state.selectedContract,\n      signature:this.state.selectedSignature\n    };\n\n    console.log(inputs,action);\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n    const customABI = action.customABI;\n    const actionValue = action.params.value;\n    const selectedContract = action.contract;\n    const selectedFunction = action.function;\n    const customAddress = action.customAddress;\n    const selectedSignature = action.signature;\n\n    this.setState({\n      customABI,\n      newAction,\n      editAction,\n      actionValue,\n      actionInputs,\n      customAddress,\n      selectedContract,\n      selectedFunction,\n      selectedSignature\n    });\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n    const selectedContract = null;\n    const selectedFunction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n      selectedContract,\n      selectedFunction\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventAction: 'propose',\n        eventCategory: 'Proposal',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n      \n      if (txSucceeded){\n        newState.actionValue = 0;\n        newState.customABI = null;\n        newState.newAction = null;\n        newState.editAction = null;\n        newState.actionInputs = null;\n        newState.customAddress = null;\n        newState.proposalCreated = true;\n        newState.selectedContract = null;\n        newState.functionsOptions = null;\n        newState.selectedFunction = null;\n        newState.selectedSignature = null;\n      } else {\n        newState.txError = true;\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const targets = [];\n    const values = [];\n    const signatures = [];\n    const calldatas = [];\n    const description = '#'+this.state.title+\"\\n\"+this.state.description;\n\n    Object.values(this.state.actions).forEach( action => {\n      values.push(action.params.value);\n      targets.push(action.params.target);\n      calldatas.push(action.params.calldata);\n      signatures.push(action.params.signature);\n    });\n\n    this.governanceUtil.propose(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n    // this.governanceUtil.proposeAndVoteFor(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  formValidated(){\n\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Create Proposal\n        </Title>\n        {\n        this.state.proposalCreated ? (\n          <DashboardCard\n            cardProps={{\n              py:3,\n              px:4,\n              width:[1,'auto']\n            }}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Icon\n                name={'Done'}\n                align={'center'}\n                size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n              <Text\n                mt={1}\n                fontWeight={3}\n                fontSize={[2,3]}\n                color={'dark-gray'}\n                textAlign={'center'}\n              >\n                The proposal has been successfully created\n              </Text>\n            </Flex>\n          </DashboardCard>\n        ) : \n        // Has balance\n        this.props.votes && this.props.votes.gte(this.props.proposalThreshold) ? (\n          <Form\n            width={1}\n            validated={this.state.validated}\n            onSubmit={this.handleSubmit.bind(this)}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={['center','space-between']}\n            >\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Proposal Description\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={\"Title\"}\n                    validated={this.state.validated}\n                  >\n                    <Input\n                      required\n                      width={1}\n                      type={'text'}\n                      className={styles.input}\n                      value={this.state.title}\n                      placeholder={'Title of your proposal'}\n                      onChange={ e => this.handleInput('title',e) }\n                    />\n                  </Field>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={'Description'}\n                    validated={this.state.validated}\n                  >\n                    <Textarea\n                      required\n                      rows={8}\n                      width={1}\n                      className={styles.input}\n                      value={this.state.description}\n                      placeholder={'Description of your proposal'}\n                      onChange={ e => this.handleInput('description',e) }\n                    />\n                  </Field>\n                </Flex>\n              </Flex>\n\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Actions\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          handleClick={ e => this.setEditAction(actionIndex) }\n                          title={ this.state.editAction === actionIndex ? 'Edit Action' : null }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Field\n                                  style={{\n                                    width:'100%',\n                                    display:'flex',\n                                    alignItems:'stretch',\n                                    flexDirection:'column'\n                                  }}\n                                  label={\"Select Contract\"}\n                                >\n                                  <Select\n                                    style={{\n                                      width:'100%'\n                                    }}\n                                    required={true}\n                                    value={this.state.selectedContract}\n                                    options={this.state.contractOptions}\n                                    onChange={this.changeContract.bind(this)}\n                                  />\n                                </Field>\n                                {\n                                  this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                  (\n                                    <Flex\n                                      width={1}\n                                      flexDirection={'column'}\n                                    >\n                                      <Field\n                                        width={1}\n                                        label={\"Contract Address\"}\n                                        validated={this.state.validated}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={'text'}\n                                          className={styles.input}\n                                          placeholder={'Custom contract address'}\n                                          pattern={this.getPatternByFieldType('address',true)}\n                                          onChange={ e => this.handleInput('customAddress',e,'address') }\n                                          value={this.state.customAddress ? this.state.customAddress : ''}\n                                        />\n                                      </Field>\n                                      <Field\n                                        width={1}\n                                        label={'Custom ABI'}\n                                        validated={this.state.validated}\n                                      >\n                                        <Textarea\n                                          required\n                                          rows={8}\n                                          width={1}\n                                          className={styles.input}\n                                          placeholder={'Insert the ABI of your contract'}\n                                          onChange={ e => this.handleInput('customABI',e,'json') }\n                                          value={this.state.customABI ? this.state.customABI : ''}\n                                        />\n                                      </Field>\n                                    </Flex>\n                                  )\n                                }\n                                {\n                                  this.state.selectedContract && this.state.functionsOptions &&\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      label={\"Select Function\"}\n                                    >\n                                      <Select\n                                        style={{\n                                          width:'100%'\n                                        }}\n                                        required={true}\n                                        options={this.state.functionsOptions}\n                                        onChange={this.changeFunction.bind(this)}\n                                        value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                      />\n                                    </Field>\n                                }\n                                {\n                                  this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                    <Field\n                                      label={`Value`}\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'number'}\n                                        className={styles.input}\n                                        placeholder={`Enter ETH value`}\n                                        onChange={ e => this.valueChange(e) }\n                                        value={this.state.actionValue ? this.state.actionValue : 0}\n                                      />\n                                    </Field>\n                                  )\n                                }\n                                {\n                                  this.state.selectedFunction &&\n                                    this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                      const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                      const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                      return (\n                                        <Field\n                                          style={{\n                                            width:'100%',\n                                            display:'flex',\n                                            alignItems:'stretch',\n                                            flexDirection:'column'\n                                          }}\n                                          key={`input_${inputIndex}`}\n                                          label={`${input.name} (${input.type})`}\n                                        >\n                                          <Input\n                                            required\n                                            width={1}\n                                            type={fieldType}\n                                            pattern={fieldPattern}\n                                            className={styles.input}\n                                            placeholder={`${input.name} (${input.type})`}\n                                            onChange={ e => this.inputChange(e,inputIndex) }\n                                            value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                          />\n                                        </Field>\n                                      )\n                                    })\n                                }\n                                {\n                                  this.state.selectedContract && this.state.selectedFunction &&\n                                    <Flex\n                                      mb={2}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <RoundButton\n                                        buttonProps={{\n                                          px:[0,4],\n                                          width:[1,'auto'],\n                                          type:'button',\n                                          disabled:!this.state.actionValid\n                                        }}\n                                        handleClick={this.addAction.bind(this)}\n                                      >\n                                        Save Action\n                                      </RoundButton>\n                                      <Link\n                                        mt={2}\n                                        color={'red'}\n                                        hoverColor={'red'}\n                                        onClick={this.deleteAction.bind(this)}\n                                      >\n                                        Delete Action\n                                      </Link>\n                                    </Flex>\n                                }\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {action.contract} - {action.params.signature}\n                                </Text>\n                                <Flex\n                                  p={['4px','7px']}\n                                  borderRadius={'50%'}\n                                  alignItems={'center'}\n                                  justifyContent={'center'}\n                                  backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                >\n                                  <Icon\n                                    name={'Edit'}\n                                    align={'center'}\n                                    color={'redeem'}\n                                    size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                  />\n                                </Flex>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.actions || Object.values(this.state.actions).length<this.props.proposalMaxOperations) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Action' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={\"Select Contract\"}\n                              >\n                                <Select\n                                  style={{\n                                    width:'100%'\n                                  }}\n                                  required={true}\n                                  options={this.state.contractOptions}\n                                  onChange={this.changeContract.bind(this)}\n                                />\n                              </Field>\n                              {\n                                this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                (\n                                  <Flex\n                                    width={1}\n                                    flexDirection={'column'}\n                                  >\n                                    <Field\n                                      width={1}\n                                      label={\"Contract Address\"}\n                                      validated={this.state.validated}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'text'}\n                                        className={styles.input}\n                                        placeholder={'Custom contract address'}\n                                        pattern={this.getPatternByFieldType('address',true)}\n                                        onChange={ e => this.handleInput('customAddress',e,'address') }\n                                        value={this.state.customAddress ? this.state.customAddress : ''}\n                                      />\n                                    </Field>\n                                    <Field\n                                      width={1}\n                                      label={'Custom ABI'}\n                                      validated={this.state.validated}\n                                    >\n                                      <Textarea\n                                        required\n                                        rows={8}\n                                        width={1}\n                                        className={styles.input}\n                                        placeholder={'Insert the ABI of your contract'}\n                                        onChange={ e => this.handleInput('customABI',e,'json') }\n                                        value={this.state.customABI ? this.state.customABI : ''}\n                                      />\n                                    </Field>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.selectedContract && this.state.functionsOptions && \n                                  <Field\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                    label={\"Select Function\"}\n                                  >\n                                    <Select\n                                      style={{\n                                        width:'100%'\n                                      }}\n                                      required={true}\n                                      options={this.state.functionsOptions}\n                                      onChange={this.changeFunction.bind(this)}\n                                      value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                    />\n                                  </Field>\n                              }\n                              {\n                                this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                  <Field\n                                    label={`Value`}\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                  >\n                                    <Input\n                                      required\n                                      width={1}\n                                      type={'number'}\n                                      className={styles.input}\n                                      placeholder={`Enter ETH value`}\n                                      onChange={ e => this.valueChange(e) }\n                                      value={this.state.actionValue ? this.state.actionValue : 0}\n                                    />\n                                  </Field>\n                                )\n                              }\n                              {\n                                this.state.selectedFunction &&\n                                  this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          className={styles.input}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                              }\n                              {\n                                this.state.selectedContract && this.state.selectedFunction &&\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                  >\n                                    <RoundButton\n                                      buttonProps={{\n                                        px:[0,4],\n                                        type:'button',\n                                        width:[1,'auto'],\n                                        disabled:!this.state.actionValid\n                                      }}\n                                      handleClick={this.addAction.bind(this)}\n                                    >\n                                      Add Action\n                                    </RoundButton>\n                                  </Flex>\n                              }\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Action\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n\n                </Flex>\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                // Sending transaction\n                this.state.processing && this.state.processing.loading ? (\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    waitText={`Proposal creation estimated in`}\n                    endMessage={`Finalizing proposal creation request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                  />\n                ) : (\n                  <RoundButton\n                    buttonProps={{\n                      type:'submit',\n                      width:[1,'15em'],\n                      disabled:!this.state.validated\n                    }}\n                  >\n                    Submit Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </Form>\n        ) : this.props.balance && this.props.balance.gte(this.props.proposalThreshold) ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Text\n              mb={3}\n              fontWeight={2}\n              fontSize={[2,3]}\n              color={'dark-gray'}\n              textAlign={'center'}\n            >\n              Please delegate your votes to yourself to create a new proposal.\n            </Text>\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        ) : (\n          <Text\n            fontWeight={2}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You need at least {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.proposalThreshold,18),0)} delegated votes to send a new proposal.\n          </Text>\n        )\n       }\n      </Flex>\n    );\n  }\n}\n\nexport default NewProposal;","import React, { Component } from 'react';\nimport { Flex, Text, Box, Link } from \"rimble-ui\";\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\n\nclass CastVote extends Component {\n\n  state = {\n    vote:null,\n    loaded:false,\n    userVote:null,\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    voteSucceed:false,\n    showDelegateBox:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const userVote = this.props.proposal.votes.find( v => (v.voter.toLowerCase() === this.props.account.toLowerCase()) );\n      this.setState({\n        userVote,\n        loaded:true\n      });\n    }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  toggleDelegateBox(showDelegateBox){\n    this.setState({\n      showDelegateBox\n    });\n  }\n\n  castVote(){\n\n    if (this.state.vote === null){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Proposal',\n        eventAction: 'CastVote',\n        eventLabel: this.state.vote\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      let userVote = null;\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        userVote = {\n          voter:this.props.account,\n          votes:this.props.votes.toString(),\n          support:this.state.vote === 'for',\n          proposalId:this.props.proposal.id,\n        };\n\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n\n      this.setState({\n        userVote,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const vote = this.state.vote === 'for';\n    const proposalId = this.props.proposal.id;\n\n    console.log(proposalId,vote);\n\n    this.governanceUtil.castVote(proposalId,vote,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  setVote = (vote) => {\n    this.setState({\n      vote\n    });\n  }\n\n  render() {\n    return this.state.userVote ? (\n\n        <Flex\n          p={3}\n          width={1}\n          mb={[2,3]}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={2}\n            fontWeight={4}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You have voted for the proposal #{this.props.proposal.id}:\n          </Text>\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:'auto'\n            }}\n            isInteractive={false}\n          >\n            <Flex\n              my={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <ProposalField\n                fieldInfo={{\n                  name:'statusIcon',\n                  state: this.state.userVote.support ? 'Executed' : 'Canceled',\n                  props:{\n                    mr:2\n                  }\n                }}\n              />\n              <Text\n                fontWeight={3}\n                fontSize={[2,3]}\n              >\n                {this.state.userVote.support ? 'For' : 'Against'}\n              </Text>\n            </Flex>\n          </DashboardCard>\n          <Text\n            fontSize={1}\n            fontWeight={500}\n            color={'statValue'}\n            textAlign={'center'}\n          >\n            voted with {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.state.userVote.votes,18).toFixed(0,1),0)} votes\n          </Text>\n        </Flex>\n      ) : this.props.proposal.state === 'Active' && (\n        <Box\n          p={3}\n          width={1}\n          mb={[2,3]}\n        >\n          {\n            // Data not loaded yet\n            !this.state.loaded ? (\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row',\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading data...'}\n              />\n            ) :\n            // No votes delegated\n            (!this.props.votes || this.props.votes.lte(0) || this.state.showDelegateBox) ? (\n              <DelegateVote\n                {...this.props}\n                canClose={this.state.showDelegateBox}\n                closeFunc={ e => this.toggleDelegateBox(false) }\n              />\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={2}\n                  fontWeight={4}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  Cast your vote for the proposal #{this.props.proposal.id}:\n                </Text>\n                {\n                  this.state.processing && this.state.processing.loading ? (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Vote estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing vote request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Flex\n                        mb={2}\n                        width={[1,0.4]}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('for');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'for' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Executed',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              For\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('against');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'against' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Canceled',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              Against\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Text\n                        mb={0}\n                        fontSize={1}\n                        fontWeight={500}\n                        color={'statValue'}\n                        textAlign={'center'}\n                      >\n                        You have {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.votes,18).toFixed(0,1),0)} votes delegated\n                      </Text>\n                      {\n                        this.props.balance && this.props.balance.gt(0) &&\n                          <Link\n                            mt={0}\n                            mainColor={'primary'}\n                            hoverColor={'primary'}\n                            onClick={ e => this.toggleDelegateBox(true) }\n                          >\n                            change delegate\n                          </Link>\n                      }\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,0.2],\n                          disabled:this.state.vote === null\n                        }}\n                        handleClick={this.castVote.bind(this)}\n                      >\n                        Vote\n                      </RoundButton>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Box>\n      );\n  }\n}\n\nexport default CastVote;","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport CastVote from '../CastVote/CastVote';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport { Box, Flex, Blockie, Text, Link } from \"rimble-ui\";\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\n\nclass ProposalDetails extends Component {\n\n  state = {\n    showActionParams:null,\n    processing:{\n      action:null,\n      txHash:null,\n      loading:false\n    },\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  toggleShowParams(showActionParams){\n    // Reset show action params\n    if (this.state.showActionParams === showActionParams){\n      showActionParams = null;\n    }\n    this.setState({\n      showActionParams\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        action:null,\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async queueProposal(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'queue',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.queueProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Queue'\n      }\n    }));\n  }\n\n  async executeProposal(){\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'execute',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.executeProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Execute'\n      }\n    }));\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    window.loadData = this.props.loadData;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    let proposal = this.props.proposal;\n    const lastState = Object.values(proposal.states).pop();\n    const hasVotes = proposal.votes && proposal.votes.length>0;\n    const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n    const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n    const totalVotes = forVotes.plus(againstVotes);\n    const forVotesPerc = forVotes.div(totalVotes).times(100).toFixed(2);\n    const againstVotesPerc = againstVotes.div(totalVotes).times(100).toFixed(2);\n    const forVotesAddrs = proposal.votes.filter( v => (v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n    const againstVotesAddrs = proposal.votes.filter( v => (!v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n\n    const canQueue = proposal.state.toLowerCase() === 'succeeded'; \n    const canExecute = proposal.state.toLowerCase() === 'queued';\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          {proposal.title}\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              labelTooltip={null}\n              title={'Proposal ID'}\n              value={`#${proposal.id}`}\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Created on ${this.functionsUtil.strToMoment(proposal.states[0].start_time*1000).format('DD MMM, YYYY')}`}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['110px','143px']}\n              labelTooltip={ null }\n              title={'Proposer'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: proposal.address,\n                  }}\n                />\n                <ShortHash\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[3,4]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                  hash={proposal.proposer}\n                />\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              title={'Status'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Updated on ${this.functionsUtil.strToMoment(lastState.start_time*1000).format('DD MMM, YYYY')}`}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <ProposalField\n                  {...this.props}\n                  proposal={proposal}\n                  fieldInfo={{\n                    name:'statusIcon',\n                    props:{\n                      size: this.props.isMobile ? '1.7em' : '2em'\n                    }\n                  }}\n                />\n                <Text\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[4,5]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                >\n                  {proposal.state}\n                </Text>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Total Votes'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}\n            />\n          </Flex>\n        </Flex>\n        <CastVote\n          {...this.props}\n          callback={this.props.loadData}\n        />\n        <Flex\n          width={1}\n          mb={[2,3]}\n          id={'details-container'}\n          justifyContent={'space-between'}\n          flexDirection={['column','row']}\n        >\n          <DashboardCard\n            cardProps={{\n              p:3,\n              mb:[2,0],\n              mr:[0,1],\n              width:[1,1/2]\n            }}\n            title={'Actions'}\n            titleParentProps={{\n              mt:0,\n              ml:0\n            }}\n          >\n            <Flex\n              pt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.actions.signatures.map( (action,actionIndex) => {\n                  const data = proposal.actions.calldatas[actionIndex];\n                  // const targetAddr = proposal.actions.targets[actionIndex];\n\n                  let decodedParams = null;\n                  let attrs = action.match(/\\(([a-z0-9,]+(\\[\\])?)\\)/i);\n                  attrs = attrs ? attrs[1].split(',') : null;\n\n                  if (attrs){\n                    decodedParams = this.props.web3.eth.abi.decodeParameters(attrs,data);\n                    if (decodedParams){\n                      decodedParams = Object.values(decodedParams).splice(0,attrs.length);\n                    }\n                  }\n\n                  return (\n                    <Flex\n                      py={1}\n                      width={1}\n                      flexDirection={'column'}\n                      alignItems={'flex-start'}\n                      key={`action_${actionIndex}`}\n                      justifyContent={'flex-start'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        mb={1}\n                        width={1}\n                        flexDirection={['column','row']}\n                        alignItems={['flex-start','center']}\n                      >\n                        <Flex\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'dark-gray'}\n                          >\n                            {parseInt(actionIndex)+1}\n                          </Text>\n                          <Text\n                            ml={2}\n                            fontSize={1}\n                            fontWeight={2}\n                            color={'dark-gray'}\n                          >\n                            {action}\n                          </Text>\n                        </Flex>\n                        {\n                          decodedParams &&\n                            <Link\n                              mt={[1,0]}\n                              ml={[0,1]}\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.toggleShowParams(actionIndex) }\n                            >\n                              {\n                                this.state.showActionParams === actionIndex ? '(hide params)' : '(show params)'\n                              }\n                            </Link>\n                        }\n                      </Flex>\n                      {\n                        decodedParams && this.state.showActionParams === actionIndex &&\n                          <Flex\n                            pl={[0,3]}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            {\n                              decodedParams.map( (param,paramIndex) => (\n                                <Text\n                                  fontSize={0}\n                                  color={'statValue'}\n                                  key={`param_${paramIndex}`}\n                                >\n                                  {param}\n                                </Text>\n                              ))\n                            }\n                          </Flex>\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n          </DashboardCard>\n          <DashboardCard\n            cardProps={{\n              p:3,\n              ml:[0,1],\n              width:[1,1/2]\n            }}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Proposal History\n              </Text>\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Date\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.states.map( (stateInfo,stateIndex) => {\n                  return (\n                    <Flex\n                      py={2}\n                      width={1}\n                      alignItems={'center'}\n                      key={`state_${stateIndex}`}\n                      justifyContent={'space-between'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <ProposalField\n                          {...this.props}\n                          proposal={proposal}\n                          fieldInfo={{\n                            name:'statusIcon',\n                            state:stateInfo.state,\n                            props:{\n                              size: this.props.isMobile ? '1.3em' : '1.5em'\n                            }\n                          }}\n                        />\n                        <Link\n                          ml={2}\n                          fontSize={1}\n                          fontWeight={2}\n                          target={'_blank'}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                          hoverColor={'primary'}\n                          rel={'nofollow noopener noreferrer'}\n                          href={this.functionsUtil.getEtherscanTransactionUrl(stateInfo.trx_hash)}\n                        >\n                          {stateInfo.state}\n                        </Link>\n                      </Flex>\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        textAlign={'left'}\n                        color={'dark-gray'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.strToMoment(stateInfo.start_time*1000).format('DD MMM, YYYY')}\n                      </Text>\n                    </Flex>\n                  );\n                })\n              }\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      hash={this.state.processing.txHash}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.state.processing.action} estimated in`}\n                      endMessage={`Finalizing ${this.state.processing.action.toLowerCase()} request...`}\n                    />\n                  </Flex>\n                ) : canQueue ? (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.queueProposal.bind(this)}\n                  >\n                    Queue Proposal\n                  </RoundButton>\n                ) : canExecute && (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.executeProposal.bind(this)}\n                  >\n                    Execute Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        </Flex>\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mb:[2,3]\n          }}\n          title={'Details'}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n        >\n          <Text\n            mt={2}\n            fontSize={[1,2]}\n            style={{\n              wordBreak:'break-word'\n            }}\n            dangerouslySetInnerHTML={{\n              __html:proposal.description.replace(/\\n/g,\"<br />\")\n            }}\n          >\n          </Text>\n        </DashboardCard>\n        {\n          hasVotes && \n            <DashboardCard\n              cardProps={{\n                p:3,\n                mb:[2,3]\n              }}\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    For ({forVotesPerc}%)\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against ({againstVotesPerc}%)\n                  </Text>\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-cursor-container'}\n                >\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-end'}\n                    borderRadius={'20px 0 0 20px'}\n                    style={{background:'rgba(0, 211, 149, 0.1)'}}\n                  >\n                    <Flex\n                      height={'100%'}\n                      width={`${forVotesPerc}%`}\n                      borderRadius={'20px 0 0 20px'}\n                      style={{background:'rgba(0, 211, 149, 1)'}}\n                    >\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-start'}\n                    borderRadius={'0 20px 20px 0'}\n                    style={{background:'rgba(211, 0, 0, 0.1)'}}\n                  >\n                    <Flex\n                      height={'100%'}\n                      width={`${againstVotesPerc}%`}\n                      borderRadius={'0 20px 20px 0'}\n                      style={{background:'rgba(211, 0, 0, 1)'}}\n                    >\n                    </Flex>\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-number-container'}\n                >\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-end'}\n                  >\n                    <Flex\n                      height={'100%'}\n                      width={`${forVotesPerc}%`}\n                      justifyContent={'flex-start'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'left'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(forVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-start'}\n                  >\n                    <Flex\n                      height={'100%'}\n                      minWidth={'10%'}\n                      width={`${againstVotesPerc}%`}\n                      justifyContent={parseFloat(againstVotesPerc)<=10 ? 'flex-start' : 'flex-end'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'right'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(againstVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </DashboardCard>\n        }\n        {\n          hasVotes && \n            <Flex\n              mb={4}\n              width={1}\n              id={'votes-addresses-container'}\n              justifyContent={'space-between'}\n              flexDirection={['column','row']}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mb:[2,0],\n                  mr:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'for-votes-addresses-container'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <Flex\n                    mb={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      For Addresses ({forVotesAddrs.length})\n                    </Text>\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      Votes\n                    </Text>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    style={{\n                      overflow:'scroll'\n                    }}\n                    maxHeight={'400px'}\n                    flexDirection={'column'}\n                  >\n                    {\n                      forVotesAddrs.map( (voteInfo,voteIndex) => {\n                        const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                        return (\n                          <Flex\n                            py={2}\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`vote_for_${voteIndex}`}\n                            justifyContent={'space-between'}\n                            borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Blockie\n                                opts={{\n                                  size: 7,\n                                  color: \"#dfe\",\n                                  bgcolor: \"#a71\",\n                                  spotcolor: \"#000\",\n                                  seed: voteInfo.voter,\n                                }}\n                              />\n                              <Link\n                                ml={2}\n                                fontSize={1}\n                                fontWeight={2}\n                                target={'_blank'}\n                                textAlign={'left'}\n                                color={'statValue'}\n                                lineHeight={'initial'}\n                                hoverColor={'primary'}\n                                rel={'nofollow noopener noreferrer'}\n                                href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                              >\n                                {\n                                  this.props.isMobile ? (\n                                    <ShortHash\n                                      fontSize={1}\n                                      fontWeight={2}\n                                      textAlign={'left'}\n                                      color={'statValue'}\n                                      hash={voteInfo.voter}\n                                      lineHeight={'initial'}\n                                    />\n                                  ) : voteInfo.voter\n                                }\n                              </Link>\n                            </Flex>\n                            <Text\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                            >\n                              {votes}\n                            </Text>\n                          </Flex>\n                        )\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  ml:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'against-votes-addresses-container'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against Addresses ({againstVotesAddrs.length})\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Votes\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  style={{\n                    overflow:'scroll'\n                  }}\n                  maxHeight={'400px'}\n                  flexDirection={'column'}\n                >\n                  {\n                    againstVotesAddrs.map( (voteInfo,voteIndex) => {\n                      const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                      return (\n                        <Flex\n                          py={2}\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          key={`vote_against_${voteIndex}`}\n                          borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'flex-start'}\n                          >\n                            <Blockie\n                              opts={{\n                                size: 7,\n                                color: \"#dfe\",\n                                bgcolor: \"#a71\",\n                                spotcolor: \"#000\",\n                                seed: voteInfo.voter,\n                              }}\n                            />\n                            <Link\n                              ml={2}\n                              fontSize={1}\n                              fontWeight={2}\n                              target={'_blank'}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              rel={'nofollow noopener noreferrer'}\n                              href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                            >\n                              {voteInfo.voter}\n                            </Link>\n                          </Flex>\n                          <Text\n                            fontSize={1}\n                            fontWeight={2}\n                            textAlign={'left'}\n                            color={'statValue'}\n                            lineHeight={'initial'}\n                          >\n                            {votes}\n                          </Text>\n                        </Flex>\n                      )\n                    })\n                  }\n                </Flex>\n              </DashboardCard>\n            </Flex>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default ProposalDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport NewProposal from './NewProposal/NewProposal';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport ProposalDetails from './ProposalDetails/ProposalDetails';\n\nclass Proposals extends Component {\n  state = {\n    proposals:null,\n    addProposal:false,\n    selectedProposal:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.contractsInitialized){\n      return false;\n    }\n\n    const proposals = await this.governanceUtil.getProposals();\n\n    const { match: { params } } = this.props;\n      \n    // Look if proposalId exists\n    let addProposal = false;\n    let selectedProposal = null;\n    if (params.item_id && parseInt(params.item_id)){\n      const proposalId = parseInt(params.item_id);\n      const foundProposal = proposals.find( p => parseInt(p.id) === proposalId );\n      // Set selected proposal\n      if (foundProposal){\n        selectedProposal = foundProposal;\n      }\n    } else if (params.item_id && params.item_id.toLowerCase() === 'new'){\n      addProposal = true;\n    }\n\n    this.setState({\n      proposals,\n      addProposal,\n      selectedProposal\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={(this.state.selectedProposal || this.state.addProposal) ? 'space-between' : 'flex-end'}\n        >\n          {\n            this.state.selectedProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                  path={['Proposals',this.state.selectedProposal.title]}\n                />\n              </Flex>\n            ) : this.state.addProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  path={['Proposals','Add proposal']}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            ) : (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.state.addProposal && \n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <CardIconButton\n                  icon={'Add'}\n                  {...this.props}\n                  text={'New Proposal'}\n                  handleClick={ e => this.props.goToSection(`proposals/new`) }\n                />\n              </Flex>\n          }\n        </Flex>\n        {\n          this.state.selectedProposal ? (\n            <Box\n              width={1}\n            >\n              <ProposalDetails\n                {...this.props}\n                loadData={this.loadData.bind(this)}\n                proposal={this.state.selectedProposal}\n              />\n            </Box>\n          ) : this.state.addProposal ? (\n            <Box\n              width={1}\n            >\n              <NewProposal\n                {...this.props}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Title\n                mb={[3,4]}\n              >\n                Governance Proposals\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'proposals'}\n                flexDirection={'column'}\n              >\n                <ProposalsList\n                  {...this.props}\n                  proposals={this.state.proposals}\n                  cols={[\n                    {\n                      title: '#',\n                      props:{\n                        width:[0.1,0.05]\n                      },\n                      fields:[\n                        {\n                          name:'id',\n                          props:{\n                          }\n                        },\n                      ]\n                    },\n                    {\n                      title:'DATE',\n                      mobile:false,\n                      props:{\n                        width:[0.15,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'date'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TITLE',\n                      props:{\n                        width:[0.75,0.60],\n                      },\n                      fields:[\n                        {\n                          name:'title'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTES',\n                      props:{\n                        width:[0.11,0.11],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      title:'STATUS',\n                      props:{\n                        width:[0.15,0.12],\n                        alignItems:['center','flex-start'],\n                        justifyContent:['center','flex-start']\n                      },\n                      parentProps:{\n                        justifyContent:['center','flex-start']\n                      },\n                      fields:[\n                        {\n                          name:'statusIcon',\n                          props:{\n                            mr:[0,2],\n                          },\n                        },\n                        {\n                          mobile:false,\n                          name:'status'\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Proposals;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport { Box, Flex, Blockie } from \"rimble-ui\";\nimport StatsCard from '../../StatsCard/StatsCard';\nimport ProposalsList from '../ProposalsList/ProposalsList';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\n\nclass DelegateDetails extends Component {\n\n  state = {\n    proposals:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadProposals();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const delegateChanged = JSON.stringify(prevProps.delegate) !== JSON.stringify(this.props.delegate);\n    if (delegateChanged){\n      this.loadProposals();\n    }\n  }\n\n  async loadProposals(){\n    const delegate = this.props.delegate;\n    const proposals = await this.governanceUtil.getProposals(delegate.delegate);\n\n    this.setState({\n      proposals\n    });\n  }\n\n  render() {\n\n    const delegate = this.props.delegate;\n\n    // rank\n    // votes\n    // delegate\n    // proposals\n    // vote_weight\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Delegate Details\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Rank'}\n              value={delegate.rank}\n              labelTooltip={ null }\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['100px','143px']}\n              labelTooltip={ null }\n              title={'Address'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: delegate.delegate,\n                  }}\n                />\n                <ShortHash\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[3,4]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                  hash={delegate.delegate}\n                />\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Votes'}\n              labelTooltip={null}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(this.functionsUtil.BNify(delegate.votes).toFixed(2,1),2)}\n            />\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              labelTooltip={ null }\n              title={'Proposals Voted'}\n              value={delegate.proposals}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n        </Flex>\n        <Box\n          width={1}\n          mt={[4,5]}\n        >\n          <Title\n            mb={[2,3]}\n          >\n            Voting History\n          </Title>\n          <Flex\n            mb={[3,4]}\n            width={1}\n            id={'transactions'}\n            flexDirection={'column'}\n          >\n            <ProposalsList\n              {...this.props}\n              rowsPerPage={5}\n              delegate={delegate}\n              filtersEnabled={false}\n              proposals={this.state.proposals}\n              cols={[\n                {\n                  title: '#',\n                  props:{\n                    width:[0.08,0.05]\n                  },\n                  fields:[\n                    {\n                      name:'id',\n                      props:{\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  mobile:false,\n                  props:{\n                    width:0.12,\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'TITLE',\n                  props:{\n                    width:[0.66,0.57],\n                  },\n                  fields:[\n                    {\n                      name:'title'\n                    }\n                  ]\n                },\n                {\n                  title:'VOTE',\n                  props:{\n                    width:[0.14,0.14],\n                    textAlign:'center'\n                  },\n                  fields:[\n                    {\n                      name:'support',\n                      parentProps:{\n                        alignItems:'center'\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.12,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  parentProps:{\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default DelegateDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DelegatesList from './DelegatesList/DelegatesList';\nimport DelegateDetails from './DelegateDetails/DelegateDetails';\n\nclass Leaderboard extends Component {\n  state = {\n    maxRows:100,\n    delegates:null,\n    selectedDelegate:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const delegates = await this.governanceUtil.getDelegates();\n\n    const { match: { params } } = this.props;\n\n    // Select delegate\n    let selectedDelegate = null;\n    if (params.item_id){\n      const delegateId = params.item_id.toLowerCase();\n      const foundProposal = delegates.find( d => d.delegate.toLowerCase() === delegateId );\n      if (foundProposal){\n        selectedDelegate = foundProposal;\n      }\n    }\n\n    this.setState({\n      delegates,\n      selectedDelegate\n    });\n  }\n\n  render() {\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          this.state.selectedDelegate ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={1}\n                >\n                  <Breadcrumb\n                    {...this.props}\n                    text={'Governance'}\n                    pathLink={['leaderboard']}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => this.props.goToSection('') }\n                    path={['Leaderboard',this.state.selectedDelegate.delegate]}\n                  />\n                </Flex>\n              </Flex>\n              <DelegateDetails\n                {...this.props}\n                delegate={this.state.selectedDelegate}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Leaderboard']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('') }\n                />\n              </Flex>\n              <Title\n                mb={[3,4]}\n              >\n                Governance Leaderboard\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'leaderboard'}\n                flexDirection={'column'}\n              >\n                <DelegatesList\n                  {...this.props}\n                  delegates={this.state.delegates}\n                  cols={[\n                    {\n                      title: 'RANK',\n                      props:{\n                        width:[0.13,0.08]\n                      },\n                      fields:[\n                        {\n                          name:'rank'\n                        },\n                      ]\n                    },\n                    {\n                      title:'ADDRESS',\n                      props:{\n                        width:[0.60,0.50],\n                      },\n                      fields:[\n                        {\n                          mobile:false,\n                          name:'avatar',\n                          props:{\n                            mr:2\n                          }\n                        },\n                        {\n                          name:'delegate'\n                        }\n                      ]\n                    },\n                    {\n                      title:'VOTES',\n                      props:{\n                        width:[0.27,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTE WEIGHT',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'vote_weight',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'PROPOSALS VOTED',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'proposals',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Leaderboard;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Overview from './Overview';\nimport Delegate from './Delegate';\nimport Proposals from './Proposals';\nimport Leaderboard from './Leaderboard';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    votes:null,\n    balance:null,\n    baseRoute:null,\n    modalTitle:null,\n    activeModal:null,\n    currentRoute:null,\n    modalContent:null,\n    pageComponent:null,\n    currentSection:null,\n    selectedSection:null,\n    currentDelegate:null,\n    proposalThreshold:null,\n    selectedSubsection:null,\n    proposalMaxOperations:null\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    window.governanceUtil = this.governanceUtil;\n    window.functionsUtil = this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async loadMenu() {\n    const menu = [];\n    const baseRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:true,\n        route:baseRoute,\n        icon:'Dashboard',\n        label:'Overview',\n        color:'dark-gray',\n        component:Overview,\n        bgColor:this.props.theme.colors.primary,\n      }\n    );\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Proposals',\n        bgColor:'#00acff',\n        color:'dark-gray',\n        icon:'LightbulbOutline',\n        component:Proposals,\n        route:`${baseRoute}/proposals`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        bgColor:'#ff0000',\n        color:'dark-gray',\n        label:'Leaderboard',\n        component:Leaderboard,\n        icon:'FormatListNumbered',\n        route:`${baseRoute}/leaderboard`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Delegate',\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        component:Delegate,\n        icon:'CompareArrows',\n        route:`${baseRoute}/delegate`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        icon:'Forum',\n        mobile:false,\n        label:'Forum',\n        selected:false,\n        component:null,\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        isExternalLink:true,\n        route:`https://gov.idle.finance`,\n      }\n    );\n\n    await this.setState({\n      menu,\n      baseRoute\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.state.baseRoute;\n    const currentRoute = window.location.hash.substr(1);\n\n    let pageComponent = null;\n    let currentSection = null;\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach( m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n\n    // const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    // if (!governanceEnabled){\n    //   this.goToSection('/',false);\n    // }\n\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    /*\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n    */\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  goToSection(section,isGovernance=true){\n\n    // Remove dashboard route\n    if (isGovernance){\n      section = section.replace(this.state.baseRoute+'/','');\n    }\n\n    const newRoute = (isGovernance ? this.state.baseRoute+(section.length>0 ? '/'+section : '') : section).replace(/[/]+$/,'');\n    window.location.hash = newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventLabel: newRoute,\n      eventAction: 'goToSection'\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const [\n        {\n          proposalThreshold, proposalMaxOperations\n        },\n        votes,\n        balance,\n        currentDelegate\n      ] = await Promise.all([\n        this.governanceUtil.getProposalParams(),\n        this.governanceUtil.getCurrentVotes(this.props.account),\n        this.governanceUtil.getTokensBalance(this.props.account),\n        this.governanceUtil.getCurrentDelegate(this.props.account)\n      ]);\n\n      this.setState({\n        votes,\n        balance,\n        currentDelegate,\n        proposalThreshold,\n        proposalMaxOperations\n      });\n    }\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      votes={this.state.votes}\n                      balance={this.state.balance}\n                      urlParams={this.state.params}\n                      loadUserData={this.loadData.bind(this)}\n                      goToSection={this.goToSection.bind(this)}\n                      currentDelegate={this.state.currentDelegate}\n                      selectedSection={this.state.selectedSection}\n                      proposalThreshold={this.state.proposalThreshold}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      proposalMaxOperations={this.state.proposalMaxOperations}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","import ERC20 from '../abis/tokens/DAI.js';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            token:'cWBTC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:true,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            token:'aWBTC',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\nimport { ToastMessage } from \"rimble-ui\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = 'light';\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport React, { Component } from \"react\";\nimport Landing from \"../Landing/Landing\";\nimport { Web3Consumer } from 'web3-react';\nimport Dashboard from '../Dashboard/Dashboard';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport Governance from '../Governance/Governance';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    const params = props ? props.match.params : null;\n    const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n  }\n\n  clearCachedData = () => {\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null) => {\n    if (!this.state.cachedData[key.toLowerCase()] || JSON.stringify(this.state.cachedData[key.toLowerCase()]) !== JSON.stringify(data)){\n      const expirationDate = TTL ? parseInt(new Date().getTime()/1000)+(TTL) : null;\n      // console.log('setCachedData',key);\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key.toLowerCase()]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n      return true;\n    }\n    return false;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadAvailableTokens();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    this.functionsUtil.clearStoredData();\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider theme={theme}>\n          <Web3Provider\n            connectors={connectors}\n            libraryName={'web3.js'}\n            web3Api={Web3}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => <Dashboard\n                                              {...props}\n                                              web3={web3}\n                                              theme={theme}\n                                              modals={modals}\n                                              network={network}\n                                              context={context}\n                                              account={account}\n                                              isDashboard={true}\n                                              initWeb3={initWeb3}\n                                              biconomy={biconomy}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initAccount={initAccount}\n                                              initSimpleID={initSimpleID}\n                                              initContract={initContract}\n                                              transactions={transactions}\n                                              buyToken={this.state.buyToken}\n                                              logout={this.logout.bind(this)}\n                                              accountBalance={accountBalance}\n                                              validateAccount={validateAccount}\n                                              connecting={this.state.connecting}\n                                              cachedData={this.state.cachedData}\n                                              setToken={this.setToken.bind(this)}\n                                              accountValidated={accountValidated}\n                                              getTokenDecimals={getTokenDecimals}\n                                              rejectValidation={rejectValidation}\n                                              tokenConfig={this.state.tokenConfig}\n                                              getAccountBalance={getAccountBalance}\n                                              accountBalanceLow={accountBalanceLow}\n                                              accountInizialized={accountInizialized}\n                                              selectedToken={this.state.selectedToken}\n                                              connectorName={this.state.connectorName}\n                                              setStrategy={this.setStrategy.bind(this)}\n                                              userRejectedConnect={userRejectedConnect}\n                                              accountBalanceToken={accountBalanceToken}\n                                              initializeContracts={initializeContracts}\n                                              walletProvider={this.state.walletProvider}\n                                              buyModalOpened={this.state.buyModalOpened}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              rejectAccountConnect={rejectAccountConnect}\n                                              handleMenuClick={this.selectTab.bind(this)}\n                                              setConnector={this.setConnector.bind(this)}\n                                              availableTokens={this.state.availableTokens}\n                                              closeBuyModal={this.closeBuyModal.bind(this)}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              selectedStrategy={this.state.selectedStrategy}\n                                              userRejectedValidation={userRejectedValidation}\n                                              setStrategyToken={this.setStrategyToken.bind(this)}\n                                              accountValidationPending={accountValidationPending}\n                                              availableStrategies={this.state.availableStrategies}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              contractMethodSendWrapper={contractMethodSendWrapper}\n                                              setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            />\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) => <Governance\n                                                  {...props}\n                                                  web3={web3}\n                                                  theme={theme}\n                                                  modals={modals}\n                                                  network={network}\n                                                  context={context}\n                                                  account={account}\n                                                  initWeb3={initWeb3}\n                                                  biconomy={biconomy}\n                                                  isMobile={isMobile}\n                                                  simpleID={simpleID}\n                                                  isGovernance={true}\n                                                  contracts={contracts}\n                                                  initAccount={initAccount}\n                                                  initSimpleID={initSimpleID}\n                                                  initContract={initContract}\n                                                  transactions={transactions}\n                                                  buyToken={this.state.buyToken}\n                                                  logout={this.logout.bind(this)}\n                                                  accountBalance={accountBalance}\n                                                  validateAccount={validateAccount}\n                                                  connecting={this.state.connecting}\n                                                  cachedData={this.state.cachedData}\n                                                  setToken={this.setToken.bind(this)}\n                                                  accountValidated={accountValidated}\n                                                  getTokenDecimals={getTokenDecimals}\n                                                  rejectValidation={rejectValidation}\n                                                  tokenConfig={this.state.tokenConfig}\n                                                  getAccountBalance={getAccountBalance}\n                                                  accountBalanceLow={accountBalanceLow}\n                                                  accountInizialized={accountInizialized}\n                                                  selectedToken={this.state.selectedToken}\n                                                  connectorName={this.state.connectorName}\n                                                  setStrategy={this.setStrategy.bind(this)}\n                                                  userRejectedConnect={userRejectedConnect}\n                                                  accountBalanceToken={accountBalanceToken}\n                                                  initializeContracts={initializeContracts}\n                                                  walletProvider={this.state.walletProvider}\n                                                  buyModalOpened={this.state.buyModalOpened}\n                                                  contractsInitialized={contractsInitialized}\n                                                  openBuyModal={this.openBuyModal.bind(this)}\n                                                  rejectAccountConnect={rejectAccountConnect}\n                                                  handleMenuClick={this.selectTab.bind(this)}\n                                                  setConnector={this.setConnector.bind(this)}\n                                                  availableTokens={this.state.availableTokens}\n                                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                                  setCachedData={this.setCachedData.bind(this)}\n                                                  selectedStrategy={this.state.selectedStrategy}\n                                                  userRejectedValidation={userRejectedValidation}\n                                                  setStrategyToken={this.setStrategyToken.bind(this)}\n                                                  accountValidationPending={accountValidationPending}\n                                                  availableStrategies={this.state.availableStrategies}\n                                                  connectAndValidateAccount={connectAndValidateAccount}\n                                                  contractMethodSendWrapper={contractMethodSendWrapper}\n                                                  setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                                />\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <>\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          theme={theme}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          availableStrategies={this.state.availableStrategies}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil transactions={transactions} />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1fxux\",\"link\":\"Footer_link__2ZyxW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__3LsWh\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__3buhf\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__1ZEqc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bulletCard\":\"HowItWorks_bulletCard__3FM3y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__ShSGs\",\"genericSelector\":\"GenericSelector_genericSelector__36y-l\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__16UDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainViewport\":\"Landing_mainViewport__6-FCa\",\"headerContainer\":\"Landing_headerContainer__2su89\",\"bgContainer\":\"Landing_bgContainer__srd1P\",\"button\":\"Landing_button__37B6t\",\"graySection\":\"Landing_graySection__1Qz0S\",\"whiteSection\":\"Landing_whiteSection__1mX5m\",\"howItWork\":\"Landing_howItWork__2sVu4\",\"skewBg\":\"Landing_skewBg__d4FEJ\",\"bgHeart\":\"Landing_bgHeart__1Ylz-\",\"platformLogo\":\"Landing_platformLogo__3kL_M\",\"bulletCard\":\"Landing_bulletCard__z5toL\",\"bulletCardFirst\":\"Landing_bulletCardFirst__1kr7D\",\"bulletCardActive\":\"Landing_bulletCardActive__1-c54\",\"bulletPoint\":\"Landing_bulletPoint__sXkeK\",\"bulletRight\":\"Landing_bulletRight__24r1L\",\"bulletTop\":\"Landing_bulletTop__1D98q\",\"bulletLeft\":\"Landing_bulletLeft__Yeirx\",\"bulletBottom\":\"Landing_bulletBottom__OdDmd\",\"bulletBottomLeft\":\"Landing_bulletBottomLeft__WOkHg\",\"bulletBottomBottom\":\"Landing_bulletBottomBottom__1t9j_\",\"bulletMobile\":\"Landing_bulletMobile__2_A1d\",\"carouselItem\":\"Landing_carouselItem__iAvJJ\",\"pos1\":\"Landing_pos1__BEcBQ\",\"carouselItemMobile\":\"Landing_carouselItemMobile__9dvMX\",\"pos2\":\"Landing_pos2__2VA0X\",\"pos3\":\"Landing_pos3__2cKcn\",\"bentTube\":\"Landing_bentTube__10LD1\",\"bounceArrow\":\"Landing_bounceArrow__1mS5k\",\"bounce\":\"Landing_bounce__3i1p8\",\"rebalanceCircle\":\"Landing_rebalanceCircle__5B-sA\",\"spin\":\"Landing_spin__itue9\",\"carouselDesc\":\"Landing_carouselDesc__10ELo\",\"selected\":\"Landing_selected__3Tblg\",\"carouselNav\":\"Landing_carouselNav__1KJNZ\",\"footer\":\"Landing_footer__U-Goi\",\"socialIcon\":\"Landing_socialIcon__1AsMX\",\"gradientBackground\":\"Landing_gradientBackground__3tbgP\",\"bentTubeLeft\":\"Landing_bentTubeLeft__3pniz\",\"bentTubeRight\":\"Landing_bentTubeRight__17O9r\",\"bentTubeActive\":\"Landing_bentTubeActive__1ZzDg\",\"bg1\":\"Landing_bg1__xhb36\"};"],"sourceRoot":""}