{"version":3,"sources":["Stats/StatsChart.js","Stats/Stats.js"],"names":["StatsChart","state","chartProps","chartType","chartData","chartWidth","functionsUtil","parseAum","value","parseInt","parseFloat","toFixed","_this","props","selectedToken","loadApiData","_callee3","CustomTooltipRow","CustomTooltip","maxGridLines","apiResults","apiResults_unfiltered","totalItems","protocols","versionInfo","keys","tempData","gridYStep","itemIndex","gridYValues","maxChartValue","axisBottomIndex","idleChartData","firstIdleBlock","divergingData","startTimestamp","endTimestamp","timestamp","date","lastRow","maxRange","i","_i","_i2","_i3","prevValue","_i4","prevApr","prevData","startBalance","currentBalance","avgApy","_i5","firstTokenPrice","_i6","regenerator_default","a","wrap","_context3","prev","next","tokenConfig","chartMode","abrupt","react_default","createElement","index_es","mb","width","alignItems","flexDirection","pr","style","flexBasis","flex","justifyContent","color","mr","height","borderRadius","backgroundColor","fontSize","fontWeight","textAlign","textTransform","label","whiteSpace","dangerouslySetInnerHTML","__html","DashboardCard","key","point","id","cardProps","py","px","left","data","itemPos","xFormatted","children","length","Object","assign","globalConfigs","stats","versions","idleVersion","Line","t0","moment","_d","getTime","format","deposits","redeems","forEach","row","idleTokens","fixTokenDecimals","idleSupply","idleTokensPrev","eq","diff","minus","gte","Math","max","abs","values","filter","v","Bar","push","indexBy","enableLabel","minValue","maxValue","d","axisBottom","isMobile","tickSize","legend","tickPadding","orient","legendOffset","legendPosition","tickValues","axisLeft","axisRight","tickRotation","abbreviateNumber","markers","axis","lineStyle","strokeOpacity","textStyle","fill","theme","colors","transactions","action","deposit","legendOrientation","legendOffsetX","stroke","strokeDasharray","redeem","padding","labelTextColor","labelSkipWidth","labelSkipHeight","pointSize","useMesh","animate","pointLabel","curve","enableArea","enableSlices","enableGridX","enableGridY","pointBorderWidth","pointLabelYOffset","legends","dataFrom","itemWidth","itemHeight","translateX","translateY","symbolSize","itemsSpacing","direction","anchor","symbolShape","itemTextColor","effects","on","ticks","text","fontFamily","fonts","sansSerif","grid","line","lineChartStroke","tooltip","container","boxShadow","background","pointColor","from","modifiers","margin","top","right","bottom","strToMoment","indexValue","depositFormatted","redeemFormatted","tokens","hsl","join","map","idlePrice","decimals","aum","times","x","y","toString","p","j","protocolsData","protocolAllocation","protocolAddr","toLowerCase","address","z","BNify","rate","allocation","foundItem","item","pos","indexOf","allocations","name","undefined","xScale","type","xFormat","yFormat","formatMoney","yScale","stacked","showAdvanced","sliceTooltip","slideData","slice","points","serieId","serieColor","yFormatted","protocolName","protocolColor","protocolAllocationFormatted","protocolAllocationPerc","div","concat","protocolData","protocolPaused","foundProtocol","find","capitalize","_ref2","_ref3","borderCollapse","display","totalAllocation","reduce","accumulator","plus","allocationPerc","_ref4","_ref5","idle","idleRate","protocolEarning","defiScore","isNaN","idleScore","apy","apr","days","earnings","earning","blocknumber","floor","additionalProtocols","additionalProtocol","protocolInfo","protocol","enabled","unshift","rateField","chartRow","baseProfit","firstProtocolData","firstProtocolBlock","pData","protocolRate","acc","field","idlePerformance","d1","rowData","protocolApy","tokenPrice","asyncForEach","_ref6","asyncToGenerator","mark","_callee2","lastRowData","lastTokenPrice","_context2","_ref7","_callee","tokenExchangeRate","tokenPriceFixed","lastYDiff","_context","price","lt","stop","this","_x2","apply","arguments","_x","setState","loadUtils","prevProps","showAdvancedChanged","apiResultsChanged","tokenChanged","JSON","stringify","componentDidMount","setProps","FunctionsUtil","GenericChart","showLoader","parentId","parentIdHeight","Component","Rebalance","React","lazy","__webpack_require__","e","then","bind","StatsCard","AssetsList","Breadcrumb","Promise","resolve","AssetSelector","GenericSelector","RoundIconButton","VariationNumber","AllocationChart","DateRangeModal","all","ExecuteTransaction","AssetsUnderManagement","Stats","delta","minDate","maxDate","carouselMax","rebalances","buttonGroups","carouselIndex","statsVersions","minStartTime","govTokensPool","unlentBalance","quickSelection","endTimestampObj","shouldRebalance","carouselOffsetLeft","startTimestampObj","showRefreshIdleSpeed","dateRangeModalOpened","quickSelections","day","week","weeks","month","componentUnmounted","setDateRange","ranges","startDate","isSameOrAfter","endDate","isSame","add","isBefore","isAfter","maxEndDate","newState","setStateSafe","toggleAdvancedCharts","preventDefault","setDateRangeModal","filterTokenData","r","setIdleVersion","isRisk","firstResult","lastResult","firstIdlePrice","lastIdlePrice","compoundInfo","firstCompoundData","lastCompoundData","compoundWithCOMPInfo","compoundAvgApr","firstCompoundPrice","lastCompoundPrice","compoundApr","includes","selectedStrategy","getTokenApiData","sent","pop","window","convertTokenBalance","sum","compoundWithCOMP","compoundData","compoundRate","index","prevRow","prevTotalAllocation","hasRebalanced","prevP","prevAllocation","getGovTokenPool","getUnlentBalance","selectToken","strategy","token","setStrategyToken","changeToken","handleCarousel","$element","jQuery","position","loadParams","callback","_this2","latestVersion","version","enabledStrategies","strategiesParams","versionInfoExtra","param","params","match","currentNetworkAvailableTokens","availableTokens","customToken","toUpperCase","getLatestAvailableVersion","getVersionInfo","newEndTimestampObj","clone","subtract","newStartTimestampObj","web3","initWeb3","document","innerHTML","body","appendChild","loadCarousel","prevState","contractsInitialized","strategyChanged","dateChanged","versionChanged","_this3","SuspenseLoader","FlexLoader","textProps","textSize","loaderProps","size","flexProps","minHeight","aligItems","idleTokenEnabled","getGlobalConfig","apyLong","availableStrategies","versionsOptions","enabledTokens","performanceTooltip","versionDefaultValue","react","fallback","showPathMobile","handleClick","goToSection","path","mt","innerProps","options","defaultValue","onChange","Stats_DashboardCard","isInteractive","Date","title","labelTooltip","iconPos","iconSize","lineHeight","span","description","Stats_StatsChart","contracts","pb","pt","pl","h4","ml","buttonProps","iconName","disabled","transition","titleParentProps","handleSelect","isOpen","closeModal","strategies","statsTokens","statsProtocols","strategyInfo","Title","titlePostfix","cols","fields","mobile","parentProps","overflow","desc","showTooltip","mainColor","rgb","my","hoverColor","onClick","Button","componentProps","contractName","methodName","status","completed"],"mappings":"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","file":"static/js/17.107d533b.chunk.js","sourcesContent":["import moment from 'moment';\nimport theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\nimport { Flex, Text, Box } from 'rimble-ui';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StatsChart extends Component {\n  state = {\n    chartProps:{},\n    chartType:null,\n    chartData:null,\n    chartWidth:null\n  };\n\n  async componentDidMount() {\n    this.setState({\n      chartData:null,\n      chartType:null,\n      chartProps:null,\n    });\n    this.loadUtils();\n    this.loadApiData();\n  }\n\n  async componentDidUpdate(prevProps) {\n    const showAdvancedChanged = prevProps.showAdvanced !== this.props.showAdvanced;\n    const apiResultsChanged = prevProps.apiResults !== this.props.apiResults;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (apiResultsChanged || showAdvancedChanged || tokenChanged){\n      this.componentDidMount();\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  parseAum = value => {\n    return (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken || !this.props.chartMode || !this.props.apiResults){\n      return false;\n    }\n\n    const CustomTooltipRow = props => (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n\n    const CustomTooltip = props => {\n      return (\n        <DashboardCard\n          key={props.point.id}\n          cardProps={{\n            py:2,\n            px:3,\n            width:1,\n            left: props.point.data.itemPos>50 ? '-110%' : '0'\n          }}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            {\n              props.point.data.xFormatted && \n                <Text\n                  mb={2}\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                  textAlign={'left'}\n                >\n                  {props.point.data.xFormatted}\n                </Text>\n            }\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const maxGridLines = 4;\n    const apiResults = this.props.apiResults;\n    const apiResults_unfiltered = this.props.apiResults_unfiltered;\n    const totalItems = apiResults.length;\n    const protocols = Object.assign([],this.props.tokenConfig.protocols);\n    // const compoundProtocol = this.props.tokenConfig.protocols.find( p => (p.name === 'compound'));\n\n    const versionInfo = globalConfigs.stats.versions[this.props.idleVersion];\n\n    let keys = {};\n    let tempData = {};\n    let gridYStep = 0;\n    let itemIndex = 0;\n    let chartData = [];\n    let chartProps = {};\n    let chartType = Line;\n    let gridYValues = [];\n    let maxChartValue = 0;\n    let axisBottomIndex = 0;\n    let idleChartData = null;\n    let firstIdleBlock = null;\n\n    switch (this.props.chartMode){\n      case 'VOL':\n        let divergingData = {};\n\n        const startTimestamp = parseInt(apiResults_unfiltered[0].timestamp);\n        const endTimestamp = parseInt(moment()._d.getTime()/1000);\n\n        for (let timestamp=startTimestamp;timestamp<=endTimestamp;timestamp+=86400){\n          const date = moment(timestamp*1000).format(\"YYYY/MM/DD\");\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n        }\n\n        let lastRow = null;\n        apiResults_unfiltered.forEach(row => {\n          const date = moment(row.timestamp*1000).format(\"YYYY/MM/DD\");\n          const idleTokens = this.functionsUtil.fixTokenDecimals(row.idleSupply,18);\n\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp:row.timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n\n          if (lastRow){\n            const idleTokensPrev = this.functionsUtil.fixTokenDecimals(lastRow.idleSupply,18);\n            const idleTokensDiff = !idleTokens.eq(idleTokensPrev);\n            if (idleTokensDiff){\n              const diff = idleTokens.minus(idleTokensPrev);\n              // Deposits\n              if (diff.gte(0)){\n                divergingData[date].deposits+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,divergingData[date].deposits);\n              } else {\n                divergingData[date].redeems+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,Math.abs(divergingData[date].deposits));\n              }\n            }\n\n          } else {\n            divergingData[date].deposits+=parseFloat(idleTokens);\n          }\n\n          lastRow = row;\n        });\n\n        chartData = Object.values(divergingData).filter(v => {\n          return (!this.props.startTimestamp || v.timestamp>=this.props.startTimestamp) && (!this.props.endTimestamp || v.timestamp<=this.props.endTimestamp);\n        });\n\n        let maxRange = 0;\n        chartData.forEach(v => {\n          maxRange = Math.max(maxRange,Math.abs(v.deposits),Math.abs(v.redeems));\n        })\n\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          indexBy: 'date',\n          enableLabel: false,\n          minValue:-maxRange,\n          maxValue:maxRange,\n          label: d => {\n            return Math.abs(d.value);\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days',\n          },\n          axisLeft: null,\n          axisRight: {\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:8,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(Math.abs(v),0)\n          },\n          markers: [\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { strokeOpacity: 0 },\n              textStyle: { fill: theme.colors.transactions.action.deposit },\n              legend: 'deposits',\n              legendPosition: 'top-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { stroke: theme.colors['dark-gray'], strokeDasharray: '5 3' },\n              textStyle: { fill: theme.colors.transactions.action.redeem },\n              legend: 'redeems',\n              legendPosition: 'bottom-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n          ],\n          keys:['deposits','redeems'],\n          padding:0.4,\n          colors:[theme.colors.transactions.action.deposit, theme.colors.transactions.action.redeem],\n          labelTextColor: 'inherit:darker(1.4)',\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 80 : 100,\n              itemHeight: 18,\n              translateX: 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            },\n            tooltip:{\n              container:{\n                boxShadow:null,\n                background:null\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 50, bottom: 45, left: 50 } : { top: 20, right: 70, bottom: 70, left: 50 },\n          tooltip:(data) => {\n            const xFormatted = this.functionsUtil.strToMoment(data.indexValue).format('MMM DD');\n            const point = {\n              id:data.id,\n              data:{\n                xFormatted\n              }\n            };\n            const depositFormatted = this.functionsUtil.abbreviateNumber(data.data.deposits,2)+' '+this.props.selectedToken;\n            const redeemFormatted = this.functionsUtil.abbreviateNumber(data.data.redeems,2)+' '+this.props.selectedToken;\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                <CustomTooltipRow\n                  label={'Deposits'}\n                  color={theme.colors.deposit}\n                  value={depositFormatted}\n                />\n                <CustomTooltipRow\n                  label={'Redeem'}\n                  color={theme.colors.redeem}\n                  value={redeemFormatted}\n                />\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      /*\n      case 'AUM_ALL':\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens[globalConfigs.network.requiredNetwork]),async (tokenName,i) => {\n          const tokenConfig = availableTokens[globalConfigs.network.requiredNetwork][tokenName];\n          const tokenDataApi = await this.props.getTokenData(tokenConfig.address);\n          chartData.push({\n            id:tokenName,\n            color: tokenConfig.color,\n            data: tokenDataApi.map((d,i) => {\n              const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n              const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,tokenConfig.decimals);\n              const aum = idleTokens.times(idlePrice);\n              return {\n                x: moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\"),\n                y: parseInt(aum.toString())\n              };\n            })\n          });\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken,\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v),\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            legendPosition: 'middle'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            format: '%b %d',\n            tickValues: this.props.isMobile ? 'every 4 days' : 'every 3 days',\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 36,\n            legendPosition: 'middle'\n          },\n          enableArea:false,\n          curve:\"linear\",\n          enableSlices:'x',\n          enableGridX:true,\n          enableGridY:false,\n          colors:d => d.color,\n          pointSize:0,\n          pointColor:{ from: 'color', modifiers: []},\n          pointBorderWidth:1,\n          pointLabel:\"y\",\n          pointLabelYOffset:-12,\n          useMesh:true,\n          animate:false,\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 60, bottom: 40, left: 60 },\n        };\n      break;\n      */\n      case 'AUM':\n\n        maxChartValue = 0;\n\n        chartData.push({\n          id:'AUM',\n          color: 'hsl('+globalConfigs.stats.tokens[this.props.selectedToken].color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n            const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n            const aum = idleTokens.times(idlePrice);\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(aum.toString());\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x,y };\n          })\n        });\n\n        // Add allocation\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          apiResults.map((d,i) => {\n            return d.protocolsData.filter((protocolAllocation,x) => {\n                return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            })\n            .map((protocolAllocation,z) => {\n              const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n              if (!protocolPaused){\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals));\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                let foundItem = chartData[0].data.filter(item => { return item.x === x });\n                if (foundItem){\n                  foundItem = foundItem[0];\n                  const pos = chartData[0].data.indexOf(foundItem);\n                  if (!foundItem.allocations){\n                    foundItem.allocations = {};\n                  }\n                  foundItem.allocations[p.name] = y;\n                  chartData[0].data[pos] = foundItem;\n                }\n              }\n              return undefined;\n            })[0]\n          }).filter((v) => { return v !== undefined; } )\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:v => this.functionsUtil.formatMoney(v,v<1 ? 3 :0),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:true,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            if (typeof point === 'object' && typeof point.data === 'object'){\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  <CustomTooltipRow\n                    label={point.serieId}\n                    color={point.serieColor}\n                    value={point.data.yFormatted}\n                  />\n                  {\n                    point.data.allocations && typeof point.data.allocations === 'object' &&\n                      Object.keys(point.data.allocations).map(protocolName => {\n                        const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                        const protocolAllocation = point.data.allocations[protocolName];\n                        const protocolAllocationFormatted = this.functionsUtil.formatMoney(protocolAllocation,protocolAllocation<1 ? 3 : 0);\n                        const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                        return (\n                          <CustomTooltipRow\n                            label={protocolName}\n                            color={protocolColor}\n                            key={`${point.id}_${protocolName}`}\n                            value={`${protocolAllocationFormatted} (${protocolAllocationPerc})`}\n                          />\n                        );\n                      })\n                  }\n                </CustomTooltip>\n              );\n              /*\n              return (\n                <div\n                    key={point.id}\n                    style={{\n                      background: 'white',\n                      color: 'inherit',\n                      fontSize: 'inherit',\n                      borderRadius: '2px',\n                      boxShadow: 'rgba(0, 0, 0, 0.25) 0px 1px 2px',\n                      padding: '5px 9px'\n                    }}\n                >\n                  <div>\n                    <table style={{width:'100%',borderCollapse:'collapse'}}>\n                      <tbody>\n                        <tr>\n                          <td style={{padding:'3px 5px'}}>\n                            <span style={{display:'block', width: '12px', height: '12px', background: point.serieColor}}></span>\n                          </td>\n                          <td style={{padding:'3px 5px'}}>{point.serieId}</td>\n                          <td style={{padding:'3px 5px'}}><strong>{point.data.yFormatted}</strong></td>\n                        </tr>\n                        {\n                          point.data.allocations && typeof point.data.allocations === 'object' &&\n                            Object.keys(point.data.allocations).map(protocolName => {\n                              const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                              const protocolAllocation = this.functionsUtil.formatMoney(point.data.allocations[protocolName],0);\n                              const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                              return (\n                                <tr key={`${point.id}_${protocolName}`}>\n                                  <td style={{padding:'3px 5px'}}>\n                                    <span style={{display:'block', width: '12px', height: '12px', background: protocolColor}}></span>\n                                  </td>\n                                  <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{protocolName}</td>\n                                  <td style={{padding:'3px 5px'}}><strong>{protocolAllocation}</strong> ({protocolAllocationPerc})</td>\n                                </tr>\n                              );\n                            })\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              );\n              */\n            }\n\n            return null;\n          }\n        };\n      break;\n      case 'ALL':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\");\n\n          let row = {\n            date\n          };\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const foundProtocol = this.props.tokenConfig.protocols.find((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() });\n            if (foundProtocol){\n              const protocolName = this.functionsUtil.capitalize(foundProtocol.name);\n              if (!protocolPaused){\n                let allocation = parseFloat(this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals));\n                keys[protocolName] = 1;\n                row[protocolName] = allocation;\n                row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName.toLowerCase()].color.hsl.join(',')+')';\n                // console.log(protocolName,this.functionsUtil.BNify(protocolData.allocation).toString(),this.props.tokenConfig.decimals,allocation);\n                maxChartValue = Math.max(maxChartValue,allocation);\n              } else {\n                row[protocolName] = 0;\n              }\n            }\n          });\n\n\n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n            orient: 'left',\n            tickSize: 0,\n            tickPadding: 10,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            tickValues:gridYValues,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickSize: 0,\n            tickPadding: 10,\n            orient: 'bottom-left',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize:this.props.isMobile ? 12 : 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize:this.props.isMobile ? 12 : 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 60 },\n          tooltip:({ id, value, color }) => {\n            const allocation = this.functionsUtil.formatMoney(value,0);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation} {this.props.selectedToken}</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'ALL_PERC':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\")\n          let row = {\n            date:moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\")\n          };\n          if (tempData[date]){\n            row = tempData[date];\n          }\n\n          const totalAllocation = d.protocolsData.reduce((accumulator,protocolAllocation) => {\n            const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n            return this.functionsUtil.BNify(accumulator).plus(allocation);\n          },0);\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const protocolName = this.props.tokenConfig.protocols.filter((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() })[0].name;\n            if (!protocolPaused){\n              const allocation = this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals);\n              const allocationPerc = parseFloat(allocation.div(totalAllocation).times(100));\n              keys[protocolName] = 1;\n              row[protocolName] = allocationPerc;\n              row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n            } else if (typeof row[protocolName] !== undefined) {\n              row[protocolName] = 0;\n            } \n          });\n          \n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          data: chartData,\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 40, bottom: 40, left: 60 },\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => parseInt(v)+'%'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            orient: 'bottom',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          tooltip:({ id, value, color }) => {\n            const allocation = parseInt(value)===100 ? this.functionsUtil.formatMoney(value,0) : this.functionsUtil.formatMoney(value,2);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation}%</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'APR':\n\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n                if (!protocolPaused){\n                  const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                  const y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.rate,18));\n\n                  maxChartValue = Math.max(maxChartValue,y);\n\n                  return { x, y };\n                }\n                return undefined;\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(2)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    // const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'SCORE':\n\n        let prevValue = 0;\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(protocolAllocation.defiScore);\n\n                y = isNaN(y) || !y ? prevValue : y;\n                prevValue = y;\n                maxChartValue = Math.max(maxChartValue,y);\n\n                return { x, y };\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            let y = parseFloat(d.idleScore);\n            y = isNaN(y) || !y ? prevValue : y;\n            prevValue = y;\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // debugger;\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(1),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE_V4':\n\n        itemIndex = 0;\n        maxChartValue = 0;\n        // let prevApy = null;\n        let prevApr = null;\n        let prevData = null;\n        let startBalance = this.functionsUtil.BNify(1);\n        let currentBalance = this.functionsUtil.BNify(1);\n        let avgApy = this.functionsUtil.BNify(0);\n\n        // console.log('PRICE_V4',apiResults);\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const apr = this.functionsUtil.fixTokenDecimals(d.idleRate,18).div(100);\n          // const apy = this.functionsUtil.apr2apy(apr);\n          \n          avgApy = avgApy.plus(apr.times(100));\n\n          if (prevApr){\n            const days = (d.timestamp-prevData.timestamp)/86400;\n            // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n            const earnings = currentBalance.times(prevApr.times(days).div(365));\n            currentBalance = currentBalance.plus(earnings);\n\n            const earning = currentBalance.div(startBalance).minus(1).times(100);\n            y = parseFloat(earning);\n\n            // apy = earning.times(365).div(totDays).toFixed(2);\n            apy = avgApy.div(i+1).toFixed(2);\n          }\n\n          prevData = d;\n          // prevApy = apy;\n          prevApr = apr;\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        protocols.forEach( p => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          // prevApy = null;\n          prevApr = null;\n          prevData = null;\n          let baseProfit = 0;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n          avgApy = this.functionsUtil.BNify(0);\n          startBalance = this.functionsUtil.BNify(1);\n          currentBalance = this.functionsUtil.BNify(1);\n\n          apiResults.forEach( (d,i) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n                if (protocolData[field]){\n                  return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(protocolData[field]));\n                }\n                return this.functionsUtil.BNify(acc);\n              },0) : this.functionsUtil.BNify(protocolData[rateField]);\n\n              const protocolPaused = protocolRate.eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => (d1.blocknumber>=firstProtocolBlock) );\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n\n                let y = 0;\n                let apy = 0;\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const apr = this.functionsUtil.fixTokenDecimals(protocolRate,18).div(100);\n\n                avgApy = avgApy.plus(apr.times(100));\n                // const apy = this.functionsUtil.apr2apy(apr);\n\n                if (prevData){\n                  const days = (d.timestamp-prevData.timestamp)/86400;\n                  // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n                  const earnings = currentBalance.times(prevApr.times(days).div(365));\n                  currentBalance = currentBalance.plus(earnings);\n\n                  const earning = currentBalance.div(startBalance).minus(1).times(100);\n                  y = parseFloat(earning)+baseProfit;\n\n                  apy = avgApy.div(i+1).toFixed(2);\n                }\n\n                prevData = d;\n                prevApr = apr;\n\n                if (firstIdleBlock === null){\n                  firstIdleBlock = parseInt(d.blocknumber);\n                }\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n                // const blocknumber = d.blocknumber;\n\n                itemIndex++;\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                chartRow.data.push(rowData);\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE':\n        // let prevTokenPrice = null;\n        maxChartValue = 0;\n        let firstTokenPrice = null;\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          let days = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n          if (!firstTokenPrice){\n            firstTokenPrice = tokenPrice;\n          } else {\n            y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n\n            days = (d.timestamp-apiResults[0].timestamp)/86400;\n            const earning = tokenPrice.div(firstTokenPrice).minus(1).times(100);\n            apy = earning.times(365).div(days).toFixed(2);\n\n            // console.log(firstTokenPrice.toString(),tokenPrice.toString(),earning.toString(),days,y,apy);\n          }\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        await this.functionsUtil.asyncForEach(protocols,async (p) => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          let baseProfit = 0;\n          firstTokenPrice = null;\n          let lastRowData = null;\n          let lastTokenPrice = null;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n\n          await this.functionsUtil.asyncForEach(apiResults,async (d) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData && protocolData[rateField]){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolPaused = this.functionsUtil.BNify(protocolData[rateField]).eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => {\n                      return d1.blocknumber>=firstProtocolBlock;\n                    });\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n                let tokenExchangeRate = protocolData.price;\n                let tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n\n                // Take data from\n                if (protocolInfo && protocolInfo.data && protocolInfo.data[p.address.toLowerCase()] && protocolInfo.data[p.address.toLowerCase()][d.blocknumber]){\n                  tokenExchangeRate = this.functionsUtil.BNify(globalConfigs.stats.protocols[p.name].data[p.address.toLowerCase()][d.blocknumber]);\n                  tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                }/* else if (p.name === 'aave'){\n                  // Token holders (aDAI = 0xc025c03e10f656d3ee76685d53d236824d8ef3da , aUSDC = 0xd2c734fbd8f5d1c809185e014016dd4097e94711)\n                  let aaveTokenBalance = await this.functionsUtil.genericContractCall(p.token,'balanceOf',['0xd2c734fbd8f5d1c809185e014016dd4097e94711'],{},d.blocknumber);\n                  if (aaveTokenBalance){\n                    if (!Object.values(aave_data).length){\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(1,p.decimals);\n                      aave_data[d.blocknumber] = aaveTokenBalance.toString();\n                    } else {\n                      const firstBalance = Object.values(aave_data)[0];\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(this.functionsUtil.BNify(aaveTokenBalance).div(this.functionsUtil.BNify(firstBalance)).toFixed(p.decimals),p.decimals);\n                      aave_data[d.blocknumber] = tokenExchangeRate.toString();\n                    }\n                  }\n                }\n                */\n\n                let y = baseProfit;\n                let apy = 0;\n\n                if (!firstTokenPrice){\n                  firstTokenPrice = tokenPriceFixed;\n                } else {\n                  if (tokenPriceFixed.lt(lastTokenPrice)){\n                    firstTokenPrice = tokenPriceFixed;\n                    const lastYDiff = chartRow.data[chartRow.data.length-1].y-chartRow.data[chartRow.data.length-2].y;\n                    y = lastRowData.y+lastYDiff;\n                    baseProfit = y;\n                  } else {\n                    y += parseFloat(tokenPriceFixed.div(firstTokenPrice).minus(1).times(100));\n                  }\n\n                  const days = (d.timestamp-apiResults[0].timestamp)/86400;\n                  const earning = tokenPriceFixed.div(firstTokenPrice).minus(1).times(100);\n                  apy = earning.times(365).div(days).toFixed(2);\n                }\n\n                y = Math.max(0,y);\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                lastRowData = rowData;\n                chartRow.data.push(rowData);\n                lastTokenPrice = tokenPriceFixed;\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      chartType,\n      chartProps,\n      chartData\n    });\n  }\n\n  render() {\n    return(\n      <GenericChart\n        showLoader={true}\n        {...this.state.chartProps}\n        height={this.props.height}\n        type={this.state.chartType}\n        data={this.state.chartData}\n        width={this.state.chartWidth}\n        isMobile={this.props.isMobile}\n        parentId={this.props.parentId}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default StatsChart;","import moment from 'moment';\nimport Title from '../Title/Title';\nimport StatsChart from './StatsChart';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from 'react';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Box, Icon, Button, Link } from 'rimble-ui';\n\nconst Rebalance = React.lazy(() => import('../Rebalance/Rebalance'));\nconst StatsCard = React.lazy(() => import('../StatsCard/StatsCard'));\nconst AssetsList = React.lazy(() => import('../AssetsList/AssetsList'));\nconst Breadcrumb = React.lazy(() => import('../Breadcrumb/Breadcrumb'));\nconst DashboardCard = React.lazy(() => import('../DashboardCard/DashboardCard'));\nconst AssetSelector = React.lazy(() => import('../AssetSelector/AssetSelector'));\nconst GenericSelector = React.lazy(() => import('../GenericSelector/GenericSelector'));\nconst RoundIconButton = React.lazy(() => import('../RoundIconButton/RoundIconButton'));\nconst VariationNumber = React.lazy(() => import('../VariationNumber/VariationNumber'));\nconst AllocationChart = React.lazy(() => import('../AllocationChart/AllocationChart'));\nconst DateRangeModal = React.lazy(() => import('../utilities/components/DateRangeModal'));\nconst ExecuteTransaction = React.lazy(() => import('../ExecuteTransaction/ExecuteTransaction'));\nconst AssetsUnderManagement = React.lazy(() => import('../AssetsUnderManagement/AssetsUnderManagement'));\n\nclass Stats extends Component {\n  state = {\n    aum:null,\n    apr:null,\n    days:'-',\n    delta:null,\n    earning:null,\n    minDate:null,\n    maxDate:null,\n    carouselMax:1,\n    rebalances:'-',\n    buttonGroups:[],\n    apiResults:null,\n    carouselIndex:0,\n    idleVersion:null,\n    statsVersions:{},\n    minStartTime:null,\n    endTimestamp:null,\n    showAdvanced:true,\n    govTokensPool:null,\n    unlentBalance:null,\n    quickSelection:null,\n    startTimestamp:null,\n    endTimestampObj:null,\n    shouldRebalance:null,\n    carouselOffsetLeft:0,\n    startTimestampObj:null,\n    showRefreshIdleSpeed:false,\n    apiResults_unfiltered:null,\n    dateRangeModalOpened:false\n  };\n\n  quickSelections = {\n    day:'Last day',\n    week:'Last week',\n    weeks:'Last 2 weeks',\n    month:'Last month'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadParams();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  showRefreshIdleSpeed(){\n    this.setState({\n      showRefreshIdleSpeed:true\n    });\n  }\n\n  getLatestAvailableVersion(){\n    const statsVersions = globalConfigs.stats.versions;\n    let latestVersion = null;\n    Object.keys(statsVersions).forEach( version => {\n      const versionInfo = statsVersions[version];\n      if (versionInfo.enabledStrategies.includes(this.props.selectedStrategy)){\n        latestVersion = version;\n      }\n    });\n\n    return latestVersion;\n  }\n\n  getVersionInfo(version){\n    if (!version){\n      version = this.state.idleVersion;\n    }\n\n    if (!globalConfigs.stats.versions[version]){\n      return null;\n    }\n\n    const versionInfo = Object.assign({},globalConfigs.stats.versions[version]);\n\n    if (versionInfo.strategiesParams && versionInfo.strategiesParams[this.props.selectedStrategy]){\n      const versionInfoExtra = versionInfo.strategiesParams[this.props.selectedStrategy];\n      Object.keys(versionInfoExtra).forEach( param => {\n        versionInfo[param] = versionInfoExtra[param];\n      });\n    }\n\n    return versionInfo;\n  }\n\n  async loadParams() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    const newState = {};\n    const { match: { params } } = this.props;\n\n    const currentNetworkAvailableTokens = Object.keys(this.props.availableTokens);\n\n    if (!!params.customToken && currentNetworkAvailableTokens.indexOf(params.customToken.toUpperCase()) !== -1 ){\n      newState.selectedToken = params.customToken.toUpperCase();\n    } else {\n      newState.selectedToken = this.props.selectedToken.toUpperCase();\n    }\n\n    newState.tokenConfig = this.props.availableTokens[newState.selectedToken];\n    newState.minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp,'YYYY-MM-DD');\n    newState.maxEndDate = moment();\n\n    newState.endTimestampObj = moment(moment().format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    newState.latestVersion = this.getLatestAvailableVersion();\n    newState.idleVersion = this.state.idleVersion === null ? newState.latestVersion : this.state.idleVersion;\n\n    const versionInfo = this.getVersionInfo(newState.idleVersion);\n\n    // console.log('loadParams',newState.latestVersion,newState.idleVersion,versionInfo);\n\n    if (newState.idleVersion && versionInfo.endTimestamp){\n      const newEndTimestampObj = moment(moment(versionInfo.endTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.endTimestampObj.isAfter(newEndTimestampObj)){\n        newState.endTimestampObj = newEndTimestampObj;\n        newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n      }\n\n      if (!newState.maxEndDate || newState.maxEndDate.isAfter(newEndTimestampObj)){\n        newState.maxEndDate = newEndTimestampObj;\n      }\n    }\n\n    newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n\n    // Set start date\n    newState.startTimestampObj = newState.endTimestampObj.clone().subtract(1,'month');\n    newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n\n    if (newState.idleVersion && versionInfo.startTimestamp){\n      const newStartTimestampObj = moment(moment(versionInfo.startTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.startTimestampObj.isBefore(newStartTimestampObj)){\n        newState.startTimestampObj = newStartTimestampObj;\n        newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n      }\n\n      if (newState.minStartTime.isBefore(newStartTimestampObj)){\n        newState.minStartTime = newStartTimestampObj;\n      }\n    }\n\n    newState.minDate = newState.minStartTime._d;\n    newState.maxDate = newState.maxEndDate._d;\n\n    if (newState !== this.state){\n      await this.setStateSafe(newState);\n    }\n  }\n\n  setDateRange = (ranges,quickSelection=null) => {\n\n    const minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp);\n\n    let startTimestampObj = moment(ranges.startDate).isSameOrAfter(minStartTime) ? moment(ranges.startDate) : minStartTime;\n    let endTimestampObj = moment(ranges.endDate);\n\n    if (startTimestampObj.isSame(endTimestampObj)){\n      endTimestampObj.add(1,'day');\n    }\n\n    endTimestampObj = moment(endTimestampObj.format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    if (startTimestampObj.isBefore(this.state.minStartTime)){\n      startTimestampObj = this.state.minStartTime;\n    }\n\n    if (endTimestampObj.isAfter(this.state.maxEndDate)){\n      endTimestampObj = this.state.maxEndDate;\n    }\n\n    const startTimestamp = parseInt(startTimestampObj._d.getTime()/1000);\n    const endTimestamp = parseInt(endTimestampObj._d.getTime()/1000);\n\n    const newState = {\n      minStartTime,\n      endTimestamp,\n      quickSelection,\n      startTimestamp,\n      endTimestampObj,\n      startTimestampObj\n    };\n\n    this.setStateSafe(newState);\n\n    return newState;\n  }\n\n  toggleAdvancedCharts = (e) => {\n    e.preventDefault();\n    this.setStateSafe({\n      showAdvanced:!this.state.showAdvanced\n    });\n  }\n\n  setDateRangeModal = (dateRangeModalOpened) => {\n    if (dateRangeModalOpened !== this.state.dateRangeModalOpened){\n      this.setStateSafe({\n        dateRangeModalOpened\n      });\n    }\n  }\n\n  async componentDidMount() {\n\n    if (!this.props.web3){\n      this.props.initWeb3();\n      return false;\n    }\n\n    const style = document.createElement('style');\n    style.id = 'crisp-custom-style';\n    style.type = 'text/css';\n    style.innerHTML = `\n    .crisp-client{\n      display:none !important;\n    }`;\n    document.body.appendChild(style);\n\n    this.loadUtils();\n    await this.loadParams();\n    this.loadApiData();\n    this.loadCarousel();\n  }\n\n  loadCarousel(){\n    const carouselMax = this.props.isMobile ? 3 : 2;\n    this.setStateSafe({\n      carouselMax\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const strategyChanged = prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const dateChanged = prevState.startTimestamp !== this.state.startTimestamp || prevState.endTimestamp !== this.state.endTimestamp;\n    const versionChanged = prevState.idleVersion !== this.state.idleVersion;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n\n    if (mobileChanged){\n      this.loadCarousel();\n    }\n\n    if (contractsInitialized || tokenChanged || strategyChanged || versionChanged){\n      // console.log('componentDidUpdate',this.props.selectedStrategy,this.props.selectedToken);\n      await this.componentDidMount();\n    } else if (dateChanged){\n      this.loadApiData();\n    }\n  }\n\n  filterTokenData = (apiResults) => {\n    return apiResults.filter((r,i) => {\n      return (!this.state.startTimestamp || r.timestamp >= this.state.startTimestamp) && (!this.state.endTimestamp || r.timestamp <= this.state.endTimestamp);\n    });\n  }\n\n  setIdleVersion = idleVersion => {\n    this.setStateSafe({\n      idleVersion\n    });\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    // Get COMP APR\n    // const compAPR = await this.functionsUtil.getCompAPR(this.props.tokenConfig);\n    // console.log('compAPR',compAPR.toString());\n\n    const startTimestamp = this.state.minDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.minDate).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n    const endTimestamp = this.state.maxDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.maxDate).format('DD/MM/YYYY 23:59:59'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n\n    const isRisk = ['v3','v4'].includes(this.state.idleVersion) && this.props.selectedStrategy === 'risk';\n    let apiResults_unfiltered = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    const apiResults = this.filterTokenData(apiResults_unfiltered);\n\n    // console.log('loadApiData',startTimestamp,endTimestamp,new Date(startTimestamp*1000),new Date(endTimestamp*1000),apiResults,apiResults_unfiltered);\n\n    if (!apiResults || !apiResults_unfiltered || !apiResults.length || !apiResults_unfiltered.length){\n      return false;\n    }\n\n    const firstResult = apiResults[0];\n    const lastResult = Object.values(apiResults).pop();\n\n    window.moment = moment;\n\n    let days = (lastResult.timestamp-firstResult.timestamp)/86400;\n    if (days === 0){\n      days = 1;\n    }\n\n    let apr = null;\n    let delta = 'N/A';\n\n    const idleTokens = this.functionsUtil.fixTokenDecimals(lastResult.idleSupply,18);\n    const firstIdlePrice = this.functionsUtil.fixTokenDecimals(firstResult.idlePrice,this.props.tokenConfig.decimals);\n    const lastIdlePrice = this.functionsUtil.fixTokenDecimals(lastResult.idlePrice,this.props.tokenConfig.decimals);\n\n    // Calculate AUM\n    let aum = idleTokens.times(lastIdlePrice);\n    // Convert Token balance\n    aum = await this.functionsUtil.convertTokenBalance(aum,this.props.selectedToken,this.props.tokenConfig,isRisk);\n\n    const compoundInfo = this.props.tokenConfig.protocols.filter((p) => { return p.name === 'compound' })[0];\n    const firstCompoundData = compoundInfo ? firstResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n    const lastCompoundData = compoundInfo ? lastResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n\n    if (this.state.idleVersion === 'v4') {\n\n      apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.functionsUtil.fixTokenDecimals(r.idleRate,18);\n        return this.functionsUtil.BNify(sum).plus(idleRate);\n      },0);\n\n      // Calculate average\n      apr = apr.div(apiResults.length);\n\n      if (compoundInfo){\n        const compoundWithCOMPInfo = globalConfigs.stats.protocols.compoundWithCOMP;\n        const rateField = compoundWithCOMPInfo.rateField ? compoundWithCOMPInfo.rateField : 'rate';\n\n        let compoundAvgApr = apiResults.reduce( (sum,r) => {\n\n          const compoundData = r.protocolsData.find((pData,x) => {\n            return pData.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase()\n          });\n\n          let compoundRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n            if (compoundData[field]){\n              return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(compoundData[field]));\n            }\n            return this.functionsUtil.BNify(acc);\n          },0) : this.functionsUtil.BNify(compoundData[rateField]);\n\n          compoundRate = this.functionsUtil.fixTokenDecimals(compoundRate,18);\n\n          return this.functionsUtil.BNify(sum).plus(compoundRate);\n        },0);\n\n        // Calculate average\n        compoundAvgApr = compoundAvgApr.div(apiResults.length);\n\n        // compoundAvgApr = this.functionsUtil.apr2apy(compoundAvgApr.div(100)).times(100);\n        // apr = this.functionsUtil.apr2apy(apr.div(100)).times(100);\n\n        delta = apr.minus(compoundAvgApr);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n\n      apr = apr.toFixed(2);\n\n    } else {\n      const earning = lastIdlePrice.div(firstIdlePrice).minus(1).times(100);\n      apr = earning.times(365).div(days).toFixed(2);\n      if (firstCompoundData && lastCompoundData){\n        const firstCompoundPrice = this.functionsUtil.fixTokenDecimals(firstCompoundData.price,this.props.tokenConfig.decimals);\n        const lastCompoundPrice = this.functionsUtil.fixTokenDecimals(lastCompoundData.price,this.props.tokenConfig.decimals);\n        const compoundApr = lastCompoundPrice.div(firstCompoundPrice).minus(1).times(100);\n        delta = earning.minus(compoundApr).times(365).div(days);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n    }\n\n    // Count rebalances\n    let rebalances = 0;\n    apiResults.forEach((row,index) => {\n      if (index){\n        const prevRow = apiResults[index-1];\n\n        const totalAllocation = row.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        const prevTotalAllocation = prevRow.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        let hasRebalanced = false;\n        row.protocolsData.forEach( p => {\n          if (hasRebalanced){\n            return;\n          }\n          const prevP = prevRow.protocolsData.find( prevP => (prevP.protocolAddr.toLowerCase() === p.protocolAddr.toLowerCase()) );\n          const allocation = this.functionsUtil.fixTokenDecimals(p.allocation,this.props.tokenConfig.decimals);\n          const prevAllocation = this.functionsUtil.fixTokenDecimals(prevP.allocation,this.props.tokenConfig.decimals);\n          const allocationPerc = parseInt(parseFloat(allocation.div(totalAllocation).times(100)));\n          const prevAllocationPerc = parseInt(parseFloat(prevAllocation.div(prevTotalAllocation).times(100)));\n          if (allocationPerc!==prevAllocationPerc){\n            rebalances++;\n            hasRebalanced = true;\n          }\n        });\n      }\n    });\n\n    // Add gov tokens balance to AUM\n    const govTokensPool = await this.functionsUtil.getGovTokenPool(null,null,'DAI');\n    if (govTokensPool){\n      aum = aum.plus(govTokensPool);\n    }\n\n    // Format AUM\n    aum = this.functionsUtil.formatMoney(parseFloat(aum));\n\n    let unlentBalance = await this.functionsUtil.getUnlentBalance(this.props.tokenConfig);\n    if (unlentBalance){\n      unlentBalance = this.functionsUtil.formatMoney(parseFloat(unlentBalance));\n    }\n\n    this.setStateSafe({\n      aum,\n      apr,\n      days,\n      delta,\n      apiResults,\n      rebalances,\n      govTokensPool,\n      unlentBalance,\n      apiResults_unfiltered\n    });\n  }\n\n  selectToken = async (strategy,token) => {\n    await this.props.setStrategyToken(strategy,token);\n    this.props.changeToken(token);\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left)+'px';\n\n    this.setStateSafe({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  render() {\n\n    const SuspenseLoader = (\n      <FlexLoader\n        textProps={{\n          textSize:4,\n          fontWeight:2\n        }}\n        loaderProps={{\n          mb:3,\n          size:'40px'\n        }}\n        flexProps={{\n          minHeight:'70vh',\n          aligItems:'center',\n          flexDirection:'column'\n        }}\n        text={'Loading Stats...'}\n      />\n    );\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n\n    if (!this.props.availableStrategies){\n      return SuspenseLoader;\n    }\n\n    if (!this.props.selectedToken){\n      const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n      const enabledTokens = [];\n      const statsTokens = this.functionsUtil.getGlobalConfig(['stats','tokens']);\n      const statsProtocols = this.functionsUtil.getGlobalConfig(['stats','protocols']);\n      Object.keys(statsTokens).forEach(token => {\n        const tokenInfo = statsTokens[token];\n        if (tokenInfo.enabled){\n          enabledTokens.push(token);\n        }\n      });\n      return (\n        <Flex\n          mb={3}\n          width={1}\n          flexDirection={'column'}\n        >\n          <Suspense\n            fallback={SuspenseLoader}\n          >\n            <AssetsUnderManagement\n              {...this.props}\n            />\n            {\n              Object.keys(strategies).map(strategy => {\n                const strategyInfo = strategies[strategy];\n                const availableTokens = this.props.availableStrategies[strategy];\n                if (!availableTokens){\n                  return false;\n                }\n                return (\n                  <Box\n                    mb={2}\n                    width={1}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    key={`strategy-container-${strategy}`}\n                  >\n                    <Title\n                      mt={3}\n                      mb={[3,4]}\n                    >\n                      <Flex\n                        flexDirection={'row'}\n                        alignItems={'baseline'}\n                        justifyContent={'center'}\n                      >\n                        {strategyInfo.title}\n                        {\n                          strategyInfo.titlePostfix &&\n                            <Text\n                              ml={2}\n                              fontWeight={3}\n                              fontSize={[2,4]}\n                              color={'dark-gray'}\n                            >\n                              {strategyInfo.titlePostfix}\n                            </Text>\n                        }\n                      </Flex>\n                    </Title>\n                    <AssetsList\n                      enabledTokens={enabledTokens}\n                      handleClick={(props) => this.selectToken(strategy,props.token)}\n                      cols={[\n                        {\n                          title:'CURRENCY',\n                          props:{\n                            width:[0.26,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          title:'POOL',\n                          props:{\n                            width:[0.22,0.14],\n                          },\n                          fields:[\n                            {\n                              name:'allocationChart',\n                              mobile:false,\n                              parentProps:{\n                                width:0.3\n                              },\n                              style:{\n                                overflow:'visible'\n                              },\n                              showLoader:false,\n                            },\n                            {\n                              name:'pool',\n                              props:{\n                                ml:1\n                              },\n                              parentProps:{\n                                width:[1,0.7]\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'APY',\n                          desc:apyLong,\n                          props:{\n                            width: [0.29,0.14],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'apy',\n                              showTooltip:true\n                            },\n                            {\n                              name:'idleDistribution',\n                              showLoader:false,\n                              props:{\n                                decimals:this.props.isMobile ? 1 : 2,\n                                fontSize:this.props.isMobile ? '9px' : 0\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'RISK SCORE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','riskScore']),\n                          mobile:false,\n                          props:{\n                            width:[0.27,0.16],\n                          },\n                          fields:[\n                            {\n                              name:'score'\n                            }\n                          ]\n                        },\n                        {\n                          title:'APR LAST WEEK',\n                          mobile:false,\n                          props:{\n                            width: 0.25,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'aprChart',\n                            }\n                          ]\n                        },\n                        {\n                          title:'',\n                          props:{\n                            width:[0.23,0.16],\n                          },\n                          parentProps:{\n                            width:1\n                          },\n                          fields:[\n                            {\n                              name:'button',\n                              label:this.props.isMobile ? 'View' : 'View stats',\n                              props:{\n                                width:1,\n                                fontSize:3,\n                                fontWeight:3,\n                                height:'45px',\n                                borderRadius:4,\n                                boxShadow:null,\n                                mainColor:'redeem',\n                                size: this.props.isMobile ? 'small' : 'medium',\n                                handleClick:(props) => this.selectToken(strategy,props.token)\n                              }\n                            }\n                          ]\n                        }\n                      ]}\n                      {...this.props}\n                      selectedStrategy={strategy}\n                      availableTokens={availableTokens}\n                    />\n                    {\n                      !this.props.isMobile && (\n                        <Flex\n                          mt={2}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'flex-end'}\n                        >\n                          {\n                            Object.values(statsProtocols).filter( p => (p.legend) ).map( (p,index) => (\n                              <Flex\n                                mr={3}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                key={`legend_${index}`}\n                              >\n                                <Box\n                                  mr={1}\n                                  width={'10px'}\n                                  height={'10px'}\n                                  borderRadius={'50%'}\n                                  backgroundColor={`rgb(${p.color.rgb.join(',')})`}\n                                >\n                                </Box>\n                                <Text.span\n                                  fontSize={1}\n                                  color={'cellText'}\n                                >\n                                  {p.label}\n                                </Text.span>\n                              </Flex>\n                            ))\n                          }\n                        </Flex>\n                      )\n                    }\n                  </Box>\n                );\n              })\n            }\n            {\n              idleTokenEnabled && !this.state.showRefreshIdleSpeed ? (\n                <Flex\n                  width={1}\n                  my={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Link\n                    hoverColor={'primary'}\n                    onClick={this.showRefreshIdleSpeed.bind(this)}\n                  >\n                    Refresh Idle Speed\n                  </Link>\n                </Flex>\n              ) : idleTokenEnabled && this.state.showRefreshIdleSpeed && (\n                <Flex\n                  p={2}\n                  width={1}\n                  my={[2,3]}\n                  borderRadius={1}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  backgroundColor={'#f3f6ff'}\n                  boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n                >\n                  <Text\n                    fontWeight={500}\n                    color={'#3f4e9a'}\n                    textAlign={'center'}\n                    fontSize={[1,'15px']}\n                  >\n                    By executing this transaction you can adjust the IDLE distribution speed among the pools.\n                  </Text>\n                  <ExecuteTransaction\n                    action={'Refresh'}\n                    Component={Button}\n                    parentProps={{\n                      mt:1\n                    }}\n                    componentProps={{\n                      size:'small',\n                      value:'REFRESH IDLE SPEED'\n                    }}\n                    params={[]}\n                    contractName={'IdleController'}\n                    methodName={'refreshIdleSpeeds'}\n                    {...this.props}\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                    >\n                      <Icon\n                        mr={1}\n                        name={'Done'}\n                        size={'1.4em'}\n                        color={this.props.theme.colors.transactions.status.completed}\n                      />\n                      <Text\n                        fontWeight={500}\n                        fontSize={'15px'}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                      >\n                        Idle Speed Refreshed\n                      </Text>\n                    </Flex>\n                  </ExecuteTransaction>\n                </Flex>\n              )\n            }\n          </Suspense>\n        </Flex>\n      );\n    } else {\n      const versionsOptions = Object.keys(globalConfigs.stats.versions).filter( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return versionInfo.enabledTokens.includes(this.props.selectedToken) && versionInfo.enabledStrategies.includes(this.props.selectedStrategy);\n      }).map( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return {\n          value:version,\n          label:versionInfo.label\n        }\n      });\n\n      const versionInfo = this.getVersionInfo(this.state.idleVersion);\n\n      let performanceTooltip = null;\n      if (this.state.idleVersion && versionInfo){\n        const showPerformanceTooltip = this.functionsUtil.getGlobalConfig(['stats','versions',this.state.idleVersion,'showPerformanceTooltip']);\n        performanceTooltip = showPerformanceTooltip ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'performanceTooltip']) : null;\n      }\n\n      const versionDefaultValue = versionsOptions.find( v => (v.value === this.state.idleVersion) );\n\n      return (\n        <Flex\n          p={0}\n          width={1}\n          flexDirection={'column'}\n        >\n          <Suspense\n            fallback={SuspenseLoader}\n          >\n            {\n            /*\n            }\n            <Flex position={['absolute','relative']} left={0} px={[3,0]} zIndex={10} width={1} flexDirection={'row'} mb={[0,3]}>\n              <Flex alignItems={'center'} width={[2/3,1/2]}>\n                <RouterLink to=\"/\">\n                  <Image src=\"images/logo-gradient.svg\"\n                    height={['35px','48px']}\n                    position={'relative'} />\n                </RouterLink>\n                <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={3} lineHeight={'initial'} fontSize={[4,5]} ml={[1,2]}>\n                  <Text.span fontSize={'80%'}>|</Text.span> Stats\n                </Heading.h3>\n              </Flex>\n              <Flex flexDirection={'row'} width={[1/3,1/2]} justifyContent={'flex-end'} alignItems={'center'}>\n                {\n                  this.state.buttonGroups && \n                    this.props.isMobile ? (\n                      <ButtonGroup\n                        isMobile={this.props.isMobile}\n                        components={ this.state.buttonGroups.reduce((components,array) => components.concat(array),[]) }\n                        theme={'light'}\n                      />\n                    ) :\n                    this.state.buttonGroups.map((buttonGroup,i) => (\n                      <ButtonGroup\n                        key={`buttonGroup_${i}`}\n                        isMobile={this.props.isMobile}\n                        components={buttonGroup}\n                        theme={'light'}\n                      />\n                    ))\n                }\n              </Flex>\n            </Flex>\n            */\n            }\n            <Box\n              mb={[3,4]}\n            >\n              <Flex\n                flexDirection={['column','row']}\n              >\n                <Flex\n                  width={[1,0.4]}\n                >\n                  <Breadcrumb\n                    showPathMobile={true}\n                    text={'ASSETS OVERVIEW'}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => this.props.goToSection('stats') }\n                    path={[this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])]}\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.6]}\n                  flexDirection={['column','row']}\n                  justifyContent={['center','space-between']}\n                >\n                  <Flex\n                    width={[1,0.26]}\n                    flexDirection={'column'}\n                  >\n                    <GenericSelector\n                      innerProps={{\n                        p:1,\n                        height:['100%','46px'],\n                      }}\n                      name={'idle-version'}\n                      options={versionsOptions}\n                      defaultValue={versionDefaultValue}\n                      onChange={ v => this.setIdleVersion(v) }\n                    />\n                  </Flex>\n                  <Flex\n                    mt={[3,0]}\n                    width={[1,0.3]}\n                    flexDirection={'column'}\n                  >\n                    <AssetSelector\n                      innerProps={{\n                        p:1\n                      }}\n                      {...this.props}\n                    />\n                  </Flex>\n                  <Flex\n                    mt={[3,0]}\n                    width={[1,0.39]}\n                    flexDirection={'column'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:1,\n                        display:'flex',\n                        alignItems:'center',\n                        height:['46px','100%'],\n                        justifyContent:'center'\n                      }}\n                      isInteractive={true}\n                      handleClick={ e => this.setDateRangeModal(true) }\n                    >\n                      <Text\n                        fontWeight={3}\n                        color={'copyColor'}\n                      >\n                      {\n                        this.state.quickSelection\n                        ?\n                          this.quickSelections[this.state.quickSelection]\n                        : this.state.startTimestampObj && this.state.endTimestampObj &&\n                          `${this.state.startTimestampObj.format('DD/MM/YY')} - ${this.state.endTimestampObj.format('DD/MM/YY')}`\n                      }\n                      </Text>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </Box>\n\n            {\n              this.state.idleVersion && (versionInfo.startTimestamp>parseInt(new Date().getTime()/1000)) ? (\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      width:[1,0.5],\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        size={'2.3em'}\n                        color={'cellText'}\n                        name={'AccessTime'}\n                      />\n                      <Text\n                        mt={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        Idle Stats {this.state.idleVersion} will be available shortly!\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                </Flex>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <Box\n                    mt={[3,0]}\n                    mb={[3,4]}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[2,0]}\n                        pr={[0,2]}\n                        width={[1,1/4]}\n                        flexDirection={'column'}\n                      >\n                        <StatsCard\n                          value={this.state.aum}\n                          title={'Asset Under Management'}\n                          label={ this.state.unlentBalance ? `Unlent funds: ${this.state.unlentBalance} ${this.props.selectedToken}` : this.props.selectedToken }\n                          labelTooltip={ this.state.unlentBalance ? this.functionsUtil.getGlobalConfig(['messages','cheapRedeem']) : null}\n                        />\n                      </Flex>\n                      <Flex\n                        mb={[2,0]}\n                        pr={[0,2]}\n                        width={[1,1/4]}\n                        flexDirection={'column'}\n                      >\n                        <StatsCard\n                          title={'Avg APY'}\n                          label={'Annualized'}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <VariationNumber\n                              direction={'up'}\n                              iconPos={'right'}\n                              iconSize={'1.8em'}\n                              justifyContent={'flex-start'}\n                              width={1}\n                              >\n                              <Text\n                                lineHeight={1}\n                                fontWeight={[3,4]}\n                                color={'statValue'}\n                                fontSize={[4,5]}\n                              >\n                                {this.state.apr}\n                                <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                              </Text>\n                            </VariationNumber>\n                          </Flex>\n                        </StatsCard>\n                      </Flex>\n                      <Flex\n                        mb={[2,0]}\n                        pr={[0,2]}\n                        width={[1,1/4]}\n                        flexDirection={'column'}\n                      >\n                        <StatsCard\n                          title={'Overperformance on Compound'}\n                          label={'Annualized'}\n                        >\n                          {\n                            this.state.delta && !isNaN(this.state.delta) ? (\n                              <VariationNumber\n                                direction={'up'}\n                                iconPos={'right'}\n                                iconSize={'1.8em'}\n                                justifyContent={'flex-start'}\n                                >\n                                <Text\n                                  lineHeight={1}\n                                  fontSize={[4,5]}\n                                  fontWeight={[3,4]}\n                                  color={'statValue'}\n                                >\n                                  {this.state.delta}\n                                  <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                                </Text>\n                              </VariationNumber>\n                            ) : (\n                              <Text\n                                lineHeight={1}\n                                fontSize={[4,5]}\n                                fontWeight={[3,4]}\n                                color={'statValue'}\n                              >\n                                {this.state.delta}\n                              </Text>\n                            )\n                          }\n                        </StatsCard>\n                      </Flex>\n                      <Flex\n                        mb={[2,0]}\n                        pr={[0,2]}\n                        width={[1,1/4]}\n                        flexDirection={'column'}\n                      >\n                        <StatsCard\n                          label={' '}\n                          title={'Rebalances'}\n                          value={this.state.rebalances.toString()}\n                        />\n                      </Flex>\n                      {\n                      /*\n                      <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                        <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                          <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                            <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Current APR</Text.span>\n                            <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                              {this.state.currApr}\n                              <Text.span color={'copyColor'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                            </Text>\n                          </Flex>\n                        </Card>\n                      </Flex>\n                      <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                        <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                          <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                            <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Days Live</Text.span>\n                            <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                              {this.state.days}\n                            </Text>\n                          </Flex>\n                        </Card>\n                      </Flex>\n                      */\n                      }\n                    </Flex>\n                  </Box>\n\n                  <DashboardCard\n                    title={'Historical Performance'}\n                    description={performanceTooltip}\n                    cardProps={{\n                      mb:[3,4]\n                    }}\n                  >\n                    <Flex id='chart-PRICE' width={1} mb={3}>\n                      <StatsChart\n                        height={ 350 }\n                        {...this.state}\n                        parentId={'chart-PRICE'}\n                        isMobile={this.props.isMobile}\n                        contracts={this.props.contracts}\n                        apiResults={this.state.apiResults}\n                        idleVersion={this.state.idleVersion}\n                        apiResults_unfiltered={this.state.apiResults_unfiltered}\n                        chartMode={this.state.idleVersion === this.state.latestVersion ? 'PRICE_V4' : 'PRICE'}\n                      />\n                    </Flex>\n                  </DashboardCard>\n\n                  <DashboardCard\n                    cardProps={{\n                      pb:3,\n                      mb:[3,4]\n                    }}\n                  >\n                    <Flex\n                      flexDirection={['column','row']}\n                      justifyContent={'space-between'}\n                    >\n                      {\n                        this.state.idleVersion === this.state.latestVersion && \n                        <Flex\n                          pt={2}\n                          width={[1,1/3]}\n                          id={'allocation-chart'}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'flex-start'}\n                        >\n                          <AllocationChart\n                            height={310}\n                            {...this.props}\n                            parentId={'allocation-chart'}\n                          />\n                          <Rebalance\n                            {...this.props}\n                          />\n                        </Flex>\n                      }\n                      <Flex\n                        mb={[0,3]}\n                        id={'chart-ALL'}\n                        pl={[0,this.state.idleVersion === this.state.latestVersion ? 0 : 3]}\n                        width={[1, this.state.idleVersion === this.state.latestVersion ? 2/3 : 1]}\n                      >\n                        <Flex alignItems={'flex-start'} justifyContent={'flex-start'} flexDirection={'column'} width={1}>\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={[3,4]}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Allocations over time\n                          </Heading.h4>\n                          <StatsChart\n                            height={350}\n                            {...this.state}\n                            chartMode={'ALL'}\n                            parentId={'chart-ALL'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n\n                  <Flex\n                    position={'relative'}\n                  >\n                    <Flex\n                      width={1}\n                      id={'carousel-container'}\n                      justifyContent={'flex-end'}\n                    >\n                      <RoundIconButton\n                        buttonProps={{\n                          mr:3\n                        }}\n                        iconName={'ArrowBack'}\n                        disabled={this.state.carouselIndex === 0}\n                        handleClick={ e => this.handleCarousel('back') }\n                      />\n                      <RoundIconButton\n                        iconName={'ArrowForward'}\n                        handleClick={ e => this.handleCarousel('next') }\n                        disabled={this.state.carouselIndex === this.state.carouselMax}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={5}\n                      height={'400px'}\n                      position={'absolute'}\n                      id={'carousel-cursor'}\n                      width={['444%','200%']}\n                      justifyContent={'flex-start'}\n                      left={this.state.carouselOffsetLeft}\n                      style={{\n                        transition:'left 0.3s ease-in-out'\n                      }}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          mr:4,\n                          height:'fit-content',\n                          style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                        }}\n                      >\n                        <Flex\n                          width={1}\n                          id='chart-AUM'\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                          >\n                            <Heading.h4\n                              ml={3}\n                              mt={3}\n                              mb={2}\n                              fontWeight={4}\n                              fontSize={[2,3]}\n                              textAlign={'left'}\n                              color={'dark-gray'}\n                              lineHeight={'initial'}\n                            >\n                              Asset Under Management\n                            </Heading.h4>\n                            <StatsChart\n                              height={300}\n                              {...this.state}\n                              chartMode={'AUM'}\n                              parentId={'chart-AUM'}\n                              isMobile={this.props.isMobile}\n                              contracts={this.props.contracts}\n                              apiResults={this.state.apiResults}\n                              idleVersion={this.state.idleVersion}\n                              apiResults_unfiltered={this.state.apiResults_unfiltered}\n                            />\n                          </Flex>\n                        </Flex>\n                      </DashboardCard>\n                      <DashboardCard\n                        cardProps={{\n                          mr:4,\n                          height:'fit-content',\n                          style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                        }}\n                      >\n                        <Flex id='chart-APR' width={1}>\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                          >\n                            <Heading.h4\n                              mb={2}\n                              ml={3}\n                              mt={3}\n                              fontWeight={4}\n                              fontSize={[2,3]}\n                              textAlign={'left'}\n                              color={'dark-gray'}\n                              lineHeight={'initial'}\n                            >\n                              APRs\n                            </Heading.h4>\n                            <StatsChart\n                              height={300}\n                              {...this.state}\n                              chartMode={'APR'}\n                              parentId={'chart-APR'}\n                              isMobile={this.props.isMobile}\n                              contracts={this.props.contracts}\n                              apiResults={this.state.apiResults}\n                              idleVersion={this.state.idleVersion}\n                              apiResults_unfiltered={this.state.apiResults_unfiltered}\n                            />\n                          </Flex>\n                        </Flex>\n                      </DashboardCard>\n                      <DashboardCard\n                        cardProps={{\n                          mr:4,\n                          height:'fit-content',\n                          style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                        }}\n                        title={'Risk Score'}\n                        description={'Idle Risk Score is a weighted average of the underlying protocols risks assessed by DeFi Score'}\n                        titleParentProps={{\n                          ml:16,\n                          mt:16\n                        }}\n                      >\n                        <Flex id='chart-SCORE' width={1}>\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                          >\n                            <StatsChart\n                              height={300}\n                              {...this.state}\n                              chartMode={'SCORE'}\n                              parentId={'chart-SCORE'}\n                              isMobile={this.props.isMobile}\n                              contracts={this.props.contracts}\n                              apiResults={this.state.apiResults}\n                              idleVersion={this.state.idleVersion}\n                              apiResults_unfiltered={this.state.apiResults_unfiltered}\n                            />\n                          </Flex>\n                        </Flex>\n                      </DashboardCard>\n                      <DashboardCard\n                        cardProps={{\n                          mr:4,\n                          height:'fit-content',\n                          style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                        }}\n                      >\n                        <Flex id='chart-VOL' width={1}>\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                          >\n                            <Heading.h4\n                              mb={2}\n                              ml={3}\n                              mt={3}\n                              fontWeight={4}\n                              fontSize={[2,3]}\n                              textAlign={'left'}\n                              color={'dark-gray'}\n                              lineHeight={'initial'}\n                            >\n                              Volume\n                            </Heading.h4>\n                            <StatsChart\n                              height={300}\n                              {...this.state}\n                              chartMode={'VOL'}\n                              parentId={'chart-VOL'}\n                              isMobile={this.props.isMobile}\n                              contracts={this.props.contracts}\n                              apiResults={this.state.apiResults}\n                              idleVersion={this.state.idleVersion}\n                              apiResults_unfiltered={this.state.apiResults_unfiltered}\n                            />\n                          </Flex>\n                        </Flex>\n                      </DashboardCard>\n                    </Flex>\n                  </Flex>\n                </Box>\n              )\n            }\n            <DateRangeModal\n              minDate={this.state.minDate}\n              maxDate={this.state.maxDate}\n              handleSelect={this.setDateRange}\n              isOpen={this.state.dateRangeModalOpened}\n              closeModal={e => this.setDateRangeModal(false)}\n              startDate={this.state.startTimestampObj ? this.state.startTimestampObj._d : null}\n              endDate={this.state.endTimestampObj ? this.state.endTimestampObj._d : null}\n            />\n          </Suspense>\n        </Flex>\n      );\n    }\n  }\n}\n\nexport default Stats;"],"sourceRoot":""}