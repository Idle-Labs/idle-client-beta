{"version":3,"sources":["utilities/components/DateRangeModal.js"],"names":["DateRangeModal","state","quickSelection","ranges","startDate","_this","props","Date","endDate","key","componentDidUpdate","prevProps","setState","this","selection","e","_this2","moment","target","value","clone","subtract","_d","closeModal","newState","handleSelect","startTimestampObj","endTimestampObj","_this3","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_8__","closeFunc","Header","title","Body","width","flexDirection","alignItems","label","style","display","justifyContent","color","fontSize","height","boxShadow","required","onChange","handleQuickSelect","bind","options","react_date_range__WEBPACK_IMPORTED_MODULE_10__","minDate","maxDate","Footer","px","borderRadius","my","mx","size","isMobile","onClick","React","Component"],"mappings":"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","file":"static/js/31.cfcb5797.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Modal,\n  Button,\n  Flex,\n  Field,\n  Select\n} from \"rimble-ui\";\nimport moment from 'moment';\nimport ModalCard from './ModalCard';\nimport 'react-date-range/dist/styles.css';\nimport { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/theme/default.css';\n\nclass DateRangeModal extends React.Component {\n\n  state = {\n    quickSelection:'',\n    ranges:{\n      startDate: this.props.startDate ? this.props.startDate : new Date(),\n      endDate: this.props.endDate ? this.props.endDate : new Date(),\n      key: 'selection'\n    }\n  }\n\n  handleSelect(ranges){\n    this.setState({\n      quickSelection:'',\n      ranges:ranges.selection\n    });\n  }\n\n  handleQuickSelect(e){\n    let startDate = null;\n    let endDate = moment(new Date());\n    const quickSelection = e.target.value;\n\n    switch (quickSelection){\n      case 'day':\n        startDate = endDate.clone().subtract(1,'day');\n      break;\n      case 'week':\n        startDate = endDate.clone().subtract(1,'week');\n      break;\n      case 'weeks':\n        startDate = endDate.clone().subtract(2,'week');\n      break;\n      case 'month':\n        startDate = endDate.clone().subtract(1,'month');\n      break;\n      default:\n        startDate = null;\n        endDate = null;\n      break;\n    }\n\n    if (startDate && endDate){\n      startDate = startDate._d;\n      endDate = endDate._d;\n\n      const ranges = {\n        startDate,\n        endDate,\n        key:'selection'\n      };\n\n      this.setState({\n        ranges,\n        quickSelection\n      }, () => {\n        this.closeModal();\n      });\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.startDate !== this.props.startDate || prevProps.endDate !== this.props.endDate){\n      this.setState({\n        ranges:{\n          startDate: this.props.startDate ? this.props.startDate : new Date(),\n          endDate: this.props.endDate ? this.props.endDate : new Date(),\n          key: 'selection'\n        }\n      });\n    }\n  }\n\n  closeModal(){\n    const newState = this.props.handleSelect(this.state.ranges,this.state.quickSelection);\n    const ranges = {\n      startDate:newState.startTimestampObj ? newState.startTimestampObj._d : new Date(),\n      endDate:newState.endTimestampObj ? newState.endTimestampObj._d : new Date(),\n      key: 'selection'\n    };\n    this.setState({\n      ranges\n    });\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Header title={'Select Date Range'}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} flexDirection={'column'} alignItems={'center'}>\n              <Field label=\"Quick Date Selection\" style={{display:'flex',width:'100%',alignItems:'stretch',justifyContent:'center'}}>\n                <Select\n                  style={{\n                    color:'#7d888d',\n                    fontSize:'14px',\n                    height:'2.5em',\n                    boxShadow:'none'\n                  }}\n                  width={'100%'}\n                  required={true}\n                  onChange={this.handleQuickSelect.bind(this)}\n                  value={this.state.quickSelection}\n                  options={[\n                    { value: '', label: \"Select an option\" },\n                    { value: \"day\", label: \"Last day\" },\n                    { value: \"week\", label: \"Last week\" },\n                    { value: \"weeks\", label: \"Last 2 weeks\" },\n                    { value: \"month\", label: \"Last month\" }\n                  ]}\n                />\n              </Field>\n              <DateRange\n                ranges={[this.state.ranges]}\n                minDate={this.props.minDate}\n                maxDate={this.props.maxDate}\n                onChange={this.handleSelect.bind(this)}\n              />\n            </Flex>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              APPLY\n              </Button>\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n\n}\n\nexport default DateRangeModal;"],"sourceRoot":""}