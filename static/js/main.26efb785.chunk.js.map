{"version":3,"sources":["RoundIconButton/RoundIconButton.js","CardIconButton/CardIconButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Title/Title.js","PortfolioEquity/PortfolioEquity.js","TxProgressBar/TxProgressBar.js","GenericSelector/GenericSelector.js","theme.js","CustomList/CustomList.js","ActiveCoverages/ActiveCoverages.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","IconBox/IconBox.js","TrancheField/TrancheField.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","utilities/components/Header.module.scss","Tos/Tos.module.scss","TransactionField/TransactionField.js","PageNotFound/PageNotFound.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","ExecuteTransaction/ExecuteTransaction.js","DashboardCard/DashboardCard.module.scss","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","utilities/components/BuyModal.js","ConnectBox/ConnectBox.js","Migrate/Migrate.js","FlexLoader/FlexLoader.js","AssetField/AssetField.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","Staking/Staking.js","SendTxWithBalance/SendTxWithBalance.js","TrancheDetails/TrancheDetails.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","PortfolioEquityTranches/PortfolioEquityTranches.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomField/CustomField.js","ImageButton/ImageButton.js","ExtLink/ExtLink.js","SmartNumber/SmartNumber.js","RoundButton/RoundButton.js","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js"],"names":["RoundIconButton","buttonProps","Object","assign","p","border","width","height","borderRadius","mainColor","disabled","this","props","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","handleClick","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","color","name","iconName","size","iconSize","Component","CardIconButton","cardProps","py","px","react__WEBPACK_IMPORTED_MODULE_5___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isInteractive","isActive","isDisabled","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","my","alignItems","flexDirection","justifyContent","image","align","src","isMobile","imageProps","useIconOnly","icon","iconColor","iconProps","mr","backgroundColor","iconBgColor","theme","colors","transactions","actionBg","redeem","fontWeight","fontSize","textProps","text","CustomTooltip","key","point","id","left","data","itemPos","xFormatted","mb","textAlign","children","AllocationChart","state","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","functionsUtil","componentUnmounted","setProps","FunctionsUtil","loadUtils","loadData","prevProps","prevState","selectedToken","setStateSafe","_this2","newState","callback","setState","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","e","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","display","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","protocols","forEach","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","concat","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","decimals","maxPrecision","number","unitProps","ml","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","type","Pie","showLoader","CustomTooltipRow","pr","style","flexBasis","flex","whiteSpace","textTransform","dangerouslySetInnerHTML","__html","Title","_this","lineHeight","keys","length","HeadingComponent","component","Heading","h1","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","themeMode","availableTokens","getEtherscanTxs","account","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","index","hash","status","Math","min","parseInt","timeStamp","tokenAmount","action","plus","minus","lt","balance","tokenPrice","idleTokens","isNaN","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","map","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","formatMoney","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","abbreviateNumber","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","flexProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","mt","target","hoverColor","rel","href","getEtherscanTransactionUrl","cancelTransaction","onClick","cancelTextColor","cancelTextHoverColor","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","menuIsOpen","boxShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","className","styles","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider","link","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","CustomList","react_default","index_es","TableHeader","cols","rows","row","rowIndex","TableRow","fieldComponent","CustomField","rowId","cardId","Base","loaded","activeCoverages","loadCoverages","getActiveCoverages","coverages","c","includes","collateral","statusColors","statusIcon","statusColor","statusIconProps","portfolioCoverage","titleProps","src_CustomList_CustomList","fileClaimUrl","openWindow","fields","path","mobile","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","TwitterShareButton","share","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","parent","w","innerWidth","open","tweet","contrastColor","twitterIcon","ShareModal","closeModal","regenerator_default","getGlobalConfigs","analytics","google","events","enabled","escape","customText","isOpen","ModalCard","closeFunc","confettiEnabled","react_confetti_default","run","recycle","innerHeight","Header","Body","mx","src_TwitterShareButton_TwitterShareButton","React","IconBox","isVisible","TrancheField","ready","loadField","fieldName","fieldInfo","fieldProps","addGovTokens","output","_args","undefined","protocol","t0","loadTrancheField","tranche","trancheConfig","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","tokenChanged","accountChanged","trancheChanged","protocolChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","oldState","loader","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_10__","govTokenConfig","govTokenIndex","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","tooltipProps","message","getGovTokensDistributionSpeed","distributionFrequency","formattedValue","_isBigNumber","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","loaderText","AssetSelector","find","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","module","exports","gradientButton","empty","select","selectDark","input","headerContainer","headerBgFiller","bgContainer","list","textContainer","TransactionField","hashChanged","bgColor","maxWidth","overflow","textOverflow","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","resolveAddress","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","SmartNumber","Image","Icon","Text","button","ExecuteTransaction","txStatus","loading","console","log","eventData","methodName","contractName","getTransactionError","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","defaultOpacity","hidden","interactive","rainbow","FieldComponent","rowProps","colInfo","colIndex","visible","fieldIndex","colProps","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","provider","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","_x5","payments","providers","getInitParams","render","goBack","preventDefault","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","defaultProvider","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","baseToken","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","j","countries","remoteResources","url","split","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","methods","method","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imageSrc","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","bg","placeholder","noOptionsMessage","inputValue","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","Footer","ConnectBox","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","connectAndValidateAccount","Migrate","nonce","approve","usePermit","oldTokenName","oldIdleTokens","skipMigration","buttonDisabled","migrationEnabled","fastBalanceSelector","oldContractBalance","biconomyLimitReached","metaTransactionsEnabled","oldContractTokenDecimals","migrationContractApproved","setAction","toggleSkipMigration","changeInputValue","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","checkButtonDisabled","lte","setInputValue","selectedPercentage","setFastBalanceSelector","executeAction","oldContractName","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","migration","oldContract","normalizeTokenAmount","txSucceeded","eventValue","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractInfo","migrationContractName","tokenApproved","migrationContract","getContractByName","checkTokenApproved","checkMigration","oldIdleTokensConverted","oldTokenPrice","getTokenPrice","oldContractInfo","oldContractABI","_ref4","_ref5","biconomyLimits","abi","initContract","getTokenDecimals","getContractBalance","genericContractCall","biconomy","checkBiconomyLimits","allowed","migrationEnabledCallback","disapproveMigration","disableERC20","approveMigration","callbackApprove","callbackReceiptApprove","enableERC20","migrationMethod","callbackMigrate","callbackReceiptMigrate","callbackPermit","useMetaTx","toMigrate","_skipRebalance","minAmountForRebalance","migrationParams","_migrationContract$me","functionSignature","permitContract","functionInfo","migrationCallback","showBalanceSelector","integerValue","skipMintForDeposit","convertTokenBalance","gte","idle","encodeABI","sendBiconomyTxWithPersonalSign","functions","f","sendTxWithPermit","permitName","biconomyChanged","usePermitChanged","actionChanged","fastBalanceSelectorChanged","contractApproved","batchMigrationInfo","batchMigrationEnabled","batchMigrationDepositEnabled","depositEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","required","checked","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","isMigrationTool","migrateTextBefore","migrateText","showActions","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","route","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","balanceSelectorInfo","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationIcon","migrationText","migrationTextProps","approveText","FlexLoader","AssetField","govTokens","oldContractBalanceFormatted","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","redeemableBalanceEnd","redeemableBalanceStart","_ref6","earningsCounter","feePercentage","feesStart","feesEnd","_ref7","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","_ref10","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","cachedDataKey","startTimestamp","mDate","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","loadAssetField","tokenBalance","getTokenGovTokens","showPrice","fee","amountToMigrate","earnings","getTokenFees","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","getCurveAPY","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPerc","earningsPercDirection","showAPR","oldProtocols","oldProtocol","foundProtocol","protocolPos","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","$allocationChartRowElement","jQuery","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","_d","getCachedData","add","random","getFrequencySeconds","idleRate","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","match","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","minPrecision","icon1","placement","icon2","strategyIcon","strategy","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","_ref11","countUpRef","ref","_ref12","_ref13","_ref14","_ref15","showDirection","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","direction","earningsCurve","governanceTokenName","idleTokenConfig","idleDistribution","userDistributionSpeed","distributionSpeed","govToken","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","customFieldName","customFieldProps","radioBtn","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","APR","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","slicedToArray","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","availableStrategies","_callee9","idleSpeed","userPoolShare","tokenSpeed","_context9","disabledTokens","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","env","process","profiler","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","contract","contracts","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortenHash","shortHash","txStart","txEnd","getENSName","networkId","ensConfig","TTL","ens","ensName","addressCheck","current","supportedNetworks","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocolConfig","trancheTokenBalance","tranchePrice","trancheUserInfo","trancheApy","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","totalBalanceConverted","tokenBalanceConverted","getIdleTokenPrice","tokenAprs","tokenWeight","amountLentToken","tokenEarnings","getAmountDeposited","getTokenAprs","avgApy","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_callee15","stakingRewards","tokensDistribution","_context15","_ref19","_callee14","eventFilters","transfers","previousHarvest","latestHarvest","previousBlock","_ref20","_ref21","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","elapsedBlocks","elapsedSeconds","transferAmount","tokensPerBlock","tokensPerSecond","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","getBlockInfo","genericContractCallCached","returnValues","apr2apy","apr","apy","_x9","_ref22","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref23","_ref24","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref25","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref26","_callee18","_context18","_x14","_x15","_x16","getAmountDepositedTranche","_ref27","_callee19","_context19","_x17","_x18","_x19","_ref28","_callee20","_ref29","_ref30","userAvgPrice","_context20","_x20","_x21","getAmountLent","_callee21","amountLents","_args21","_context21","getEtherscanBaseTxs","_callee22","firstBlockNumber","endBlockNumber","debug","firstIdleBlockNumber","requiredNetwork","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args22","_context22","endpoints","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","makeRequest","now","_callee23","_args23","_context23","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee24","_ref35","allAvailableTokens","_args24","_context24","processStoredTxs","sort","_ref36","_callee25","_args25","_context25","_x22","_ref37","_callee26","processTxs","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args26","_context26","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","objectSpread","iTxs","withdrawnValue","processEtherscanTransactions","_x23","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref38","_callee31","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args31","_context31","baseTokenConfig","baseTokenAddress","_ref39","_callee30","minedTxs","_context30","_ref40","_callee29","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context29","getCurveTokenPrice","_ref41","_callee27","_context27","getTransactionReceipt","_x28","_x29","topics","baseTokensConfig","t2","_ref42","_callee28","_context28","_x30","_x31","_x26","_x27","_x25","_x24","_ref43","_callee37","txsToProcess","_args37","_context37","_ref44","_callee36","_context36","_ref45","_callee35","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context35","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref46","_callee32","_context32","txReceipt","_x36","_x37","_ref47","_callee33","_context33","_x38","_x39","raw","_ref48","_callee34","_context34","_x40","_x41","decodeLog","internalType","_token","_x34","_x35","_x33","_x32","alias","getCustomAddress","setCustomAddress","customAddress","_ref49","_callee38","error_callback","config","_args38","_context38","catch","_x42","makeEtherscanApiRequest","_ref50","_callee39","apiKeyIndex","apiKey","_args39","_context39","_x43","_ref51","_callee40","return_data","_args40","_context40","_x44","code","errorCode","array","prop","shift","configs","checkUrlOrigin","baseURL","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee41","page","googlePageviewInfo","isOrigin","_args41","_context41","ga","_ref53","_callee43","googleEventsInfo","debugEnabled","originOk","currentNetwork","_args43","_context43","addPostfixForTestnet","availableNetworks","_ref54","_callee42","_context42","hitCallback","hitCallbackFail","_x46","_x47","_x45","createContract","_ref55","_callee44","_context44","Contract","_x48","_x49","_x50","getWalletProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","baseurl","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee47","activeOnly","whitelist","proposals","currTime","validProposals","_args47","_context47","addr","msg","payload","_ref57","_callee46","checkedStrategies","_context46","snapshot","metadata","strategies","_ref58","_callee45","_context45","symbol","_x52","_x51","_ref59","_callee48","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args48","_context48","rates","_x53","getTokenExchangeRate","_ref60","_callee49","exchangeRateParams","exchangeRate","_context49","_x54","_x55","_ref61","_callee50","_context50","_x56","aprs","allocations","avgApr","aprWeighted","allocation","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee51","feeDistributorConfig","etherscanEndpoint","etherscanTxlist","_context51","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","checkContractPaused","_callee52","contractPaused","_args52","_context52","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref64","_callee54","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context54","lastAllocationsPromise","_ref65","_callee53","lastAllocations","_context53","_x58","_x59","alloc","_x57","_ref66","_callee55","_context55","_x60","_x61","_ref67","_callee56","eventName","_args56","_context56","getContractPastEvents","_x62","_x63","estimateMethodGasUsage","_ref68","_callee57","methodParams","_contract$methods","functionCall","gasLimit","_ref69","_ref70","_args57","_context57","getGasPrice","estimateGas","_x64","_x65","_ref71","_callee58","userAddress","signedParameters","callback_receipt","_contract$methods2","_context58","on","once","confirmationNumber","receipt","_x66","_x67","_x68","_x69","_x70","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","chainId","soliditySHA3","toBuffer","_ref72","_callee59","biconomyInfo","res","_context59","limits","apiId","headers","x-api-key","_x71","_ref73","_callee60","_contract$methods3","messageToSign","_this$getSignaturePar","_context60","_address","personal","sign","_x72","_x73","_x74","_x75","_x76","_x77","buildBiconomyErc20ForwarderTx","_ref74","_callee61","tokenAddress","permitType","callData","buildParams","_context61","txGas","erc20ForwarderClient","buildTx","_x78","_x79","_x80","_x81","_x82","_ref75","_callee63","_context63","_ref76","_callee62","_context62","_x84","_x85","_x83","sendBiconomyTxWithErc20Forwarder","_ref77","_callee64","req","metaInfo","txResponse","fetchReceiptIntervalId","_context64","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x86","_x87","_x88","_x89","_ref78","_callee65","_this$getSignaturePar2","_context65","getNonce","call","_x90","_x91","_x92","_x93","signPermitEIP2612","_ref79","_callee66","erc20Name","owner","spender","deadline","domain","permit","domainData","_context66","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x94","_x95","_x96","_x97","_x98","_x99","_x100","_x101","signPermit","_ref80","_callee67","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","_args67","_context67","net","getId","round","nonceMethod","pow","response","_x102","_x103","_x104","_ref81","_callee68","permitParams","methodAbi","useNonce","_args68","_context68","_jsonInterface","inputs","unshift","_x105","_x106","_x107","_x108","_x109","_x110","_x111","sendSignedTx","_ref82","_callee69","MetaTransaction","dataToSign","_context69","_x112","_x113","_x114","_x115","_x116","_ref83","_callee70","contractAddr","walletAddr","_ref84","_ref85","allowance","_context70","getAllowance","_x117","_x118","_x119","_ref86","_callee71","_context71","_x120","_x121","_x122","contractMethodSendWrapperWithValue","txData","toTwosComplement","getTrancheStakedBalance","_ref87","_callee72","stakedBalance","_args72","_context72","_x123","_x124","_ref88","_callee73","field","_args73","_context73","_x125","_x126","_x127","_x128","_x129","_x130","_x131","_x132","_ref89","_callee74","formatValue","strategyConfig","idleStrategyAddress","_ref90","_ref91","totalSupply","virtualPrice","_ref92","_ref93","staked1","lastPrice1","_ref94","_ref95","deposited1","lastPrice","idleGovTokenConfig","rewardsTokensInfo","_ref96","_ref97","rewardsTokens","incentiveTokens","_args74","_context74","Strategy","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","_x133","_x134","_x135","_x136","_x137","_x138","_x139","_ref98","_callee75","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref99","_ref100","curveAvgBuyPrice","curveTokenBalance","_ref101","_ref102","amountLentCurve1","redeemableBalanceCurve","_ref103","_ref104","earningPerYear","_ref105","_ref106","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref107","_ref108","tokenPriceFirstDeposit","_ref109","_ref110","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref111","_ref112","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref113","_ref114","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref115","_ref116","amountLentCurve2","redeemableBalanceCurve1","_ref117","_ref118","redeemableBalance2","_args75","_context75","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x140","_x141","_x142","_x143","getIdleTokenSupply","_ref119","_callee76","idleTokenSupply","_args76","_context76","_x144","getIdleTokenPriceWithFee","_ref120","_callee77","_ref121","_ref122","priceWFee","_args77","_context77","eq","_x145","_x146","_ref123","_callee78","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args78","_context78","_x147","clearCachedData","useLocalStorage","expirationDate","_ref124","_callee79","_ref125","_ref126","idleTokensTotalSupply","userShare","_context79","_x148","_x149","_callee81","coverProtocolConfig","nexusMutualConfig","_args81","_context81","_ref128","_callee80","coverage","coverageTokens","protocolImage","_context80","tokens","expirationTimestamp","utc","_x150","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","_ref129","_callee83","incidentsInfo","_ref130","_ref131","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context83","directProps","startBlock","contractInfo","buyer","_ref132","_callee82","cover","coverId","claimSubmittedEvent","_ref133","_ref134","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref135","_ref136","_context82","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x152","_x151","getBatchedDepositExecutions","_ref137","_callee84","_context84","_x153","getBatchedDeposits","_callee86","filter_by_status","batchDepositConfig","batchedDeposits","_args86","_context86","_ref139","_callee85","currBatchIndex","batchIndex","_ref140","_ref141","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context85","_x154","getETHBalance","_ref142","_callee87","fixDecimals","_args87","_context87","_x155","_ref143","_callee88","_ref144","_ref145","_args88","_context88","_x156","_x157","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","body","isValidJSON","_ref146","_callee89","_args89","_context89","_x158","_ref147","_callee90","_args90","_context90","_x159","_ref148","_callee91","_args91","_context91","_x160","_x161","getProtocolBalance","_ref149","_callee92","_context92","_x162","_x163","getAprs","_ref150","_callee93","_context93","addresses","_x164","genericIdleCall","_ref151","_callee94","callParams","_args94","_context94","_x165","_ref152","_callee95","_contract$methods4","_args95","_context95","_x166","_x167","getTxDecodedLogs","_ref153","_callee97","logAddr","decodeLogs","internalTransfers","_context97","_ref154","_callee96","_context96","_x172","_x173","_x168","_x169","_x170","_x171","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee98","_context98","_ref156","_callee99","_context99","getBlock","_x174","_ref157","_callee100","_args100","_context100","getPastEvents","_x175","_x176","_ref158","_callee101","_args101","_context101","_x177","_x178","_ref159","_callee102","_contract$methods5","_args102","_context102","_x179","_x180","_ref160","_callee103","_args103","_context103","_x181","_x182","getUnlentBalance","_ref161","_callee104","unlentBalance","_context104","_x183","_ref162","_callee105","_args105","_context105","_x184","_ref163","_callee107","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_ref167","_ref168","_args107","_context107","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref164","_callee106","_ref165","_ref166","protocolBalance","protocolAllocation","_context106","_x186","_x187","protocolAllocationPerc","getGovTokensBalances","total","getTokenConversionRate","_x185","getSushiswapPoolTokenPrice","_ref169","_callee108","pairAddresses","_ref170","_ref171","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref172","_ref173","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context108","getSushiswapConversionRate","_x188","_x189","_ref174","_callee109","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context109","_x190","_x191","_ref175","_callee110","unires","_context110","addressForPrice","_x192","_x193","getCurveDepositedTokens","_ref176","_callee111","idleTokensBalances","remainingCurveTokens","_args111","_context111","_x194","getCurveUnevenTokenAmounts","_ref177","_callee112","amounts","max_burn_amount","unevenAmounts","_context112","getCurveDepositContract","_x195","_x196","_callee113","curveRatesInfo","_context113","strategyTokens","getCurveAPYContract","_callee114","blocksForPrevTokenPrice","_ref180","_ref181","prevTokenPrice","blocksMultiplier","curveAPR","_context114","getCurveTokenSupply","_callee115","_context115","getCurvePoolContract","_callee116","_args116","_context116","_callee117","_args117","_context117","_ref185","_callee118","_ref186","_ref187","_context118","_x197","_callee119","depositContractInfo","_context119","getCurveZapContract","_callee120","zapContractInfo","_context120","_callee121","poolContractInfo","_context121","getCurveSwapContract","_callee122","_context122","getCurveIdleTokensAmounts","_callee124","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args124","_context124","_ref193","_callee123","coinIndex","curveIdleTokens","_context123","_x198","getCurveTokensAmounts","_callee126","useCoinIndex","_args126","_context126","_ref195","_callee125","_ref196","_ref197","idleTokenPrice","totalTokenSupply","_context125","_x199","getCurveAmounts","_ref198","_callee128","_args128","_context128","_ref199","_callee127","_context127","_x202","_x200","_x201","getCurveTokenAmount","_ref200","_callee129","_args129","_context129","_x203","getCurveSlippage","_ref201","_callee130","uneven_amounts","depositContract","_ref202","_ref203","Sv","_args130","_context130","_x204","_x205","_ref204","_callee131","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref205","_ref206","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args131","_context131","_x206","_callee133","_args133","_context133","_ref208","_callee132","_ref209","_ref210","_context132","_x207","getStkAaveApr","_ref211","_callee134","aaveConversionRate","stkAaveAPR","destTokenConfig","stkAaveValue","_args134","_context134","_x208","_x209","getCompAPR","_ref212","_callee135","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args135","_context135","_x210","_x211","getCompSpeed","_ref213","_callee136","cTokenAddress","compSpeed","_context136","_x212","_ref214","_callee137","cTokenInfo","compoundAllocationPerc","_ref215","_ref216","cTokenTotalSupply","compoundPoolShare","_args137","_context137","_x213","_callee139","_args139","_context139","_ref218","_callee138","_ref219","_ref220","_context138","_x214","_callee141","_args141","_context141","_ref222","_callee140","_ref223","_ref224","compApr","_context140","_x215","getTokensCsv","_callee144","csv","_context144","prototype","sum","pv","cv","avg","_ref226","_callee143","_context143","_ref227","_callee142","header","aprAvg","scoreAvg","lastRow","_context142","protocolsData","p1","p2","rate","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x217","_x216","_callee146","convertToken","_args146","_context146","_ref229","_callee145","compTokenBalance","_context145","_x218","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref230","_callee148","govTokensUserDistribution","_args148","_context148","_ref231","_callee147","_context147","_x220","_x219","_ref232","_callee150","govTokensDistribution","tokenGovTokens","_args150","_context150","_ref233","_callee149","govSpeed","_context149","_x222","_x221","_ref234","_callee152","_args152","_context152","_ref235","_callee151","_ref236","_ref237","_ref238","_ref239","cTokenConfig","_context151","aprTooltipMode","_x225","_x223","_x224","_callee154","_args154","_context154","_ref241","_callee153","govTokenBalance","tokenConversionRate","fromTokenConfig","_context153","_x226","_callee155","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args155","_context155","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref243","_callee157","govTokensAmounts","_context157","getGovTokensUserAmounts","_ref244","_callee156","_context156","getGovTokenAddessByIndex","_x229","_x230","_x227","_x228","_ref245","_callee158","_context158","_x231","_x232","_ref246","_callee159","_context159","_x233","_x234","_callee162","govTokenConfigForced","_args162","_context162","_ref248","_callee161","_context161","_ref249","_callee160","_context160","_x236","_x237","_x235","_callee163","_args163","_context163","_callee164","_ref252","_ref253","gain","fees","_args164","_context164","_ref254","_callee165","_args165","_context165","_x238","getTotalTVL","_callee166","tokensTVL","_context166","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee170","_context170","_ref257","_callee169","_context169","_ref258","_callee168","oldTokenTVL","idleTokenName","_ref259","_ref260","_ref264","_ref265","oldTotalSupply","_context168","showAUM","_ref261","_callee167","_ref262","_ref263","govTokenConversionRate","govTokenBalanceConverted","_context167","_x241","_x240","_x239","getSubstackLatestFeed","_callee171","endpointInfo","idleSubstackFeed","latestFeed","_context171","items","getAggregatedStats","_callee172","tvls","totalAUM","_args172","_context172","getAggregatedStats_chain","_callee176","avgAPR","_args176","_context176","_ref269","_callee175","_context175","_ref270","_callee174","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context174","_ref271","_callee173","_ref272","_ref273","_context173","_x244","_x243","_x242","getTokenApy","_ref274","_callee177","_context177","_x245","getTokensToMigrate","_callee180","tokensToMigrate","_args180","_context180","_ref276","_callee179","_context179","_ref277","_callee178","_ref278","_context178","_x247","_x246","getProtocolsTokensBalances","_callee182","tokenBalances","minTokenBalance","protocolsTokens","_args182","_context182","_ref280","_callee181","tokenContract","_context181","_x248","_ref281","_callee183","_args183","_context183","_x249","_x250","_x251","getAvgAPYStats","_ref282","_callee184","apiResults","_args184","_context184","_x252","_x253","_ref283","_callee185","count","_conversionRate","_args185","_context185","_x254","_x255","_ref284","_callee186","_ref285","_ref286","_context186","protocolScore","getTokenScoreApi","_x256","_x257","_ref287","_callee187","scores","_context187","_x258","_x259","_ref288","_callee190","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args190","_context190","_ref289","_callee189","addrIndex","protocolApr","protocolApy","govTokenAPR","_context189","_ref290","_callee188","_context188","_x263","_x261","_x262","_x260","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","h4","description","Staking","selectedOption","toolProps","SelectedComponent","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","call_callback","changeInputCallback","getFastBalanceSelector","checkContractApproved","executeTx","_amount","_params","getPermitTransactionParams","approveCallback","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","togglePermitEnabled","approveDescription","RoundButton","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","hex","borderBottom","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","selectedSection","TranchePage","loadTransactions","Breadcrumb","goToSection","src_TrancheDetails_TrancheDetails","TransactionsList","transactionsList","availableActions","TranchesList","enabledProtocols","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","build_default","TotalEarningsCounter","unit","PortfolioEquityTranches","ChartCustomTooltip","ChartCustomTooltipRow","Tranches","userHasFunds","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","urlParams","param2","param1","availableTranchesChanged","tranchesConfig","tranchesTokens","tranchesBalances","weight","portfolioDonutData","balanceValue","trancheName","balanceInfo","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","aligItems","setPortfolioEquityQuickSelection","src_PortfolioEquityTranches_PortfolioEquityTranches","src_TranchesList_TranchesList","selectTranche","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","rewardMultiplier","accountingData","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","rewardToken","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","programDuration","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","maxBonusDays","currentRewards","stakedTokensLog","_this5","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","maxDate","isAfter","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalClaimed","event","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","Button","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","selectedPeriod","maxPriceWithFee","transactionParams","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","param3","paramIsValidToken","changeSelectedToken","baseEndpoint","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","ButtonLoader","buttonText","isLoading","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","PortfolioDonut","totalFunds","parentWidth","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","pl","estimationLabel","DashboardIconButton","StrategyPage","aggregatedValues","remainingTokens","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","totalBalanceWithScore","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","apyLong","riskScore","yieldFarming","src_PortfolioDonut_PortfolioDonut","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","canDeposit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationSucceeded","batchDepositEnabled","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","batchDepositInfo","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","openTooltipModal","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","claimCallback","appName","forumURL","darkModeEnabled","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","COMP","stkAAVE","aToken","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","rgb","stake","unstake","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","best","descLong","descShort","risk","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","42","1337","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","nexus","etherscan","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","urls","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","tools","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","react__WEBPACK_IMPORTED_MODULE_7___default","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","Tos","h2","h3","listStyle","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","maxHeight","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","_args4","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","_args7","race","$crisp","notificationId","content","Sentry","increaseAmount","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","enabledEnvs","crToken","fToken","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","setThemeMode","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this9","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","TransactionListFilters","isOpened","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","componentHasChildren","fieldPath","formattedNumber","precision","showUnit","unitPos","showPathMobile","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","pathLink","Link","borderLeft","ShortHash","LoadingSpinner","src_LoadingSpinner_LoadingSpinner"],"mappings":"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","file":"static/js/main.26efb785.chunk.js","sourcesContent":["import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         isDisabled={this.props.isDisabled}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// import { Line } from '@nivo/line';\n// import CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // console.log('TrancheField - loadField',fieldName,this.componentUnmounted,this.props.protocol,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    // const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    // const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const tranchePrice = await this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheField('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    // console.log('getTrancheTokensDistribution',stakingRewards);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const previousHarvest = transfers.length>1 ? transfers[transfers.length-2] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const previousBlock = previousHarvest ? previousHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(previousBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n\n          const elapsedBlocks = latestHarvest.blockNumber-previousBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n          const transferAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const tokensPerBlock = transferAmount.div(elapsedBlocks);\n          const tokensPerSecond = transferAmount.div(elapsedSeconds);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerYear,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.token,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField(`tranchePool`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField(`tranchePool`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n        }\n        // console.log('tranchePool',tokenConfig.CDO.name,totalSupply,virtualPrice,output);\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` ${tokenName}`;\n          }\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLEDistribution':\n        const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n          }\n          // console.log('trancheIDLEDistribution',rewardsTokensInfo.IDLE,output);\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' ? rewardsTokens.filter( rewardTokenAddr => !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        // console.log(field,tokenConfig,rewardsTokens,incentiveTokens,govTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]);\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest',TTL=null) => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,TTL);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n\n      if (!protocolInfo.enabled){\n        return;\n      }\n\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.getTokenExchangeRate(contractName,protocolInfo.functions.exchangeRate) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    [\n      tokenAllocation.totalAllocationConverted,\n      tokenAllocation.totalAllocationWithUnlentConverted\n    ] = await Promise.all([\n      this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig),\n      this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig)\n    ]);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCallCached(aTokenConfig.token,'getIncentivesController',[],{},'latest',null);\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCallCached(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.getContractBalance(aTokenConfig.token,tokenConfig.idle.address);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,tokenConfig,aprs,protocolsAprs,tokenAllocation,tokenAprs,govTokensAprs);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import { Flex, Text } from \"rimble-ui\";\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      blockNumber,\n      tokenBalance,\n      trancheBalance,\n      cdoCoolingPeriod,\n      latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            style:{\n              border:`2px solid ${trancheDetails.color.hex}`\n            }\n          }}\n          titleProps={{\n            pb:2,\n            fontSize:[3,4]\n          }}\n          titleParentProps={{\n            ml:0,\n            mt:0,\n            mb:3,\n            style:{\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }\n          }}\n          title={trancheDetails.name}\n        >\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n          </Flex>\n          {\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n          }\n          {\n            this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !this.state.userHasAvailableFunds }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      icon={'LightbulbOutline'}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        fontSize:'15px',\n                        textAlign:'center',\n                        color:'flashColor'\n                      }}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\nimport TransactionsList from '../TransactionsList/TransactionsList';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadTransactions();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() ) : [];\n    this.setState({\n      transactions\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[2,0]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            <Breadcrumb\n              {...this.props}\n              text={'Tranches'}\n              isMobile={this.props.isMobile}\n              path={[this.functionsUtil.capitalize(this.props.selectedProtocol),this.props.selectedToken]}\n              handleClick={ e => this.props.goToSection(this.props.selectedSection.route) }\n            />\n          </Flex>\n          <Flex\n            width={0.5}\n            justifyContent={'flex-end'}\n          >\n            \n          </Flex>\n        </Flex>\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - Tranche\n        </Title>\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            mb={[3,0]}\n            width={[1,0.47]}\n            flexDirection={'column'}\n          >\n            <TrancheDetails\n              {...this.props}\n              selectedTranche={'AA'}\n              cdoConfig={this.props.tokenConfig.CDO}\n              trancheConfig={this.props.tokenConfig['AA']}\n            />\n          </Flex>\n          <Flex\n            width={[1,0.47]}\n            flexDirection={'column'}\n          >\n            <TrancheDetails\n              {...this.props}\n              selectedTranche={'BB'}\n              cdoConfig={this.props.tokenConfig.CDO}\n              trancheConfig={this.props.tokenConfig['BB']}\n            />\n          </Flex>\n        </Flex>\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  protocol={protocol}\n                  key={`tranche-${protocol}`}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat || (v => v),\n      sliceLabel: this.props.sliceLabel || (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n\n        // console.log(timeStamp,token,filteredBalances,foundBalances);\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip } from \"rimble-ui\";\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    portfolioLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n    const selectedToken = this.props.urlParams.param2;\n    const selectedProtocol = this.props.urlParams.param1;\n    const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n    if (tokenConfig){\n      this.setState({\n        tokenConfig,\n        selectedToken,\n        selectedProtocol,\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n    // console.log('loadPortfolio',portfolio);\n\n    if (portfolio){\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          value:balanceValue,\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      const route = `${this.props.selectedSection.route}/${protocol}/${token}`;\n      // console.log('selectTranche',route);\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  render() {\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              tokenConfig={this.state.tokenConfig}\n              selectedToken={this.state.selectedToken}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              <Title\n                mb={3}\n              >\n                Tranches\n              </Title>\n              {\n                this.state.portfolioLoaded && this.functionsUtil.BNify(this.state.portfolio.totalBalance).gt(0) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            sliceLabel={d => d.value}\n                            defaultLabel={'Total Funds'}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.27,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.21, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:'SENIOR APY',\n                      props:{\n                        width:[0.29,0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ]\n                    },\n                    {\n                      title:'JUNIOR APY',\n                      props:{\n                        width:[0.29,0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'GOVERNANCE TOKENS',\n                      props:{\n                        width:[0.25,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:this.props.account === null,\n                      props:{\n                        width:[ this.props.account === null ? 0.29 : 0 ,0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n      const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n      totalClaimed = totalClaimed.plus(claimedAmount);\n      return totalClaimed;\n    },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() );\n    const claimContracts = this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() );\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport ERC20 from '../contracts/ERC20.json';\nimport Tranches from '../Tranches/Tranches';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport NexusMutualIncidents from '../abis/nexus/NexusMutualIncidents.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport NexusMutualDistributor from '../abis/nexus/NexusMutualDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledgerlive:{\n      enabled:true,\n      subcaption:'Ledger Live Browser'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield','idleFEIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:['idleTUSDYield','idleSUSDYield','idleRAIYield']\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  tranches:{\n    BB:{\n      color:{\n        hex:'#2196f3',\n        rgb:[33, 150, 243],\n        hsl:['207', '90%', '54%']\n      },\n      name:'Junior Tranche',\n      description:{\n        deposit:'By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    },\n    AA:{\n      color:{\n        hex:'#4caf50',\n        rgb:[76, 175, 80],\n        hsl:['122', '39%', '49%']\n      },\n      name:'Senior Tranche',\n      description:{\n        deposit:'By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    }\n  },\n  strategies:{\n    tranches:{\n      token:'DAI',\n      visible:true,\n      type:'tranche',\n      protocol:'idle',\n      color:'#f32121',\n      comingSoon:false,\n      title:'Tranches',\n      addGovTokens:true,\n      titlePostfix:null,\n      iconName:'Whatshot',\n      component: Tranches,\n      govTokensEnabled:true,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/tranches-on.png',\n      iconInactive:'images/strategies/tranches-off.png',\n      iconInactiveDark:'images/strategies/tranches-white.png',\n      desc:'Diversify your risk profile with dynamic tranched yield derivatives',\n    },\n    best:{\n      token:'DAI',\n      visible:true,\n      color:'#f32121',\n      type:'strategy',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      visible:true,\n      color:'#2196F3',\n      type:'strategy',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      FEI:{\n        decimals:18,\n        enabled:false,\n        color:{\n          hex:'#229b6e',\n          rgb:[34, 155, 110],\n          hsl:['158', '64%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-07-30',\n        conversionRateField:'feiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:false,\n        enabled:false,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              abi:IdleDepositForwarder,\n              permitType:'EIP2612_Permit',\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit', // 'foo'\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      nexus:{\n        endpoints:{\n          1:'https://api.nexusmutual.io/v1/',\n          42:'https://api.staging.nexusmutual.io/v1/',\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys:[\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:true,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  events:{\n    DAI:{\n      fields:{\n        to:'dst',\n        from:'src',\n        value:'wad'\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              fromBlock:12561464,\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              fromBlock:12649361,\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    nexusMutual:{\n      enabled:true,\n      icon:'Security',\n      route:'coverage',\n      label:'Coverage',\n      desc:'Buy Nexus Mutual coverage without KYC for your deposits',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleDAIYield',\n            token:'idleDAIYield', // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000011',\n            realAddress:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4', // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleUSDTYield',\n            token:'idleUSDTYield', // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000012',\n            realAddress:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          }\n        },\n      },\n      directProps:{\n        // startBlock:25858186, // Kovan\n        startBlock:12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo:{\n          abi:NexusMutualDistributor,\n          name:'NexusMutualDistributor',\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address:'0xf2b36f823eae36e53a5408d8bd452748b24fbf76' // Mainnet\n        },\n        incidentsInfo:{\n          abi:NexusMutualIncidents,\n          name:'NexusMutualIncidents',\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address:'0x8ceba69a8e96a4ce71aa65859dbdb180b489a719' // Mainnet\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1714470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  insurance:{\n    nexusMutual:{\n      label:'Nexus Mutual',\n      image:'images/protocols/nexus-mutual.png',\n      imageDark:'images/protocols/nexus-mutual-white.png'\n    },\n    coverProtocol:{\n      label:'Cover Protocol',\n      image:'images/protocols/cover-logo.svg',\n      imageDark:'images/protocols/cover-logo.svg',\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI','FEI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n      const tokens = this.props.availableTranches[protocol];\n      await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n        const tokenConfig = tokens[token];\n        await Promise.all([\n          this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n          this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n          this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n          this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n          this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n          this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n        ]);\n      });\n    });\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B'\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'IdleCDO_AA_idleDAIYield',\n        token:'IdleCDO_AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d'\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'IdleCDO_BB_idleDAIYield',\n        token:'IdleCDO_BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n\n    const cachedData = {...this.state.cachedData};\n    Object.keys(cachedData).forEach( key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null){\n        delete cachedData[key];\n      }\n    });\n\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach( key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null){\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n\n    await this.setState({\n      cachedData\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }),() => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    window.clearCachedData = this.clearCachedData;\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive){\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Clear cached data\n    this.clearCachedData(()=>{\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version','themeMode','lastLogin','cachedData']);\n    });\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    availableTranches={availableTranches}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      availableTranches={availableTranches}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          availableTranches={availableTranches}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n"],"sourceRoot":""}