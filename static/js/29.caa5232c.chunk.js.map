{"version":3,"sources":["StatsCard/StatsCard.js"],"names":["StatsCard","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","cardProps","p","minHeight","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","width","alignItems","flexDirection","justifyContent","titleMinHeight","h4","mb","fontWeight","fontSize","textAlign","color","lineHeight","title","value","toString","length","Object","assign","valueProps","children","label","mt","labelTooltip","placement","message","ml","name","size","Component"],"mappings":"4MAKMA,6MAGJC,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,iMAGkBC,EAAUC,mEACjCN,KAAKI,kJAIL,OACEG,EAAAC,EAAAC,cAACC,EAAA,QAAD,CACEC,UAAW,CACTC,EAAE,EACFC,UAAUb,KAAKE,MAAMW,UAAYb,KAAKE,MAAMW,UAAY,CAAC,QAAQ,WAGnEN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEC,MAAO,EACPC,WAAY,aACZC,cAAe,SACfC,eAAgB,cAEhBX,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEE,WAAY,aACZH,UAAYb,KAAKE,MAAMiB,eAAiBnB,KAAKE,MAAMiB,eAAiB,CAAC,OAAO,SAE5EZ,EAAAC,EAAAC,cAACK,EAAA,EAAQM,GAAT,CACEC,GAAI,CAAC,EAAE,GACPC,WAAY,EACZC,SAAU,CAAC,EAAE,GACbC,UAAW,OACXC,MAAO,YACPC,WAAY,WAEX1B,KAAKE,MAAMyB,QAIe,qBAArB3B,KAAKE,MAAM0B,OAA8C,OAArB5B,KAAKE,MAAM0B,OAAkB5B,KAAKE,MAAM0B,MAAMC,WAAWC,OAAO,GAC1GvB,EAAAC,EAAAC,cAACK,EAAA,EAADiB,OAAAC,OAAA,CACEN,WAAY,EACZH,SAAU,CAAC,EAAE,GACbD,WAAY,CAAC,EAAE,GACfG,MAAO,aACHzB,KAAKE,MAAM+B,YAEdjC,KAAKE,MAAM0B,OAIhB5B,KAAKE,MAAMgC,SACTlC,KAAKE,MAAMgC,SACX,KAG2B,qBAArBlC,KAAKE,MAAMiC,OAA8C,OAArBnC,KAAKE,MAAMiC,OAAkBnC,KAAKE,MAAMiC,MAAMN,WAAWC,OAAO,GAC1GvB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEsB,GAAI,CAAC,EAAE,GACPpB,WAAY,SACZC,cAAe,OAEfV,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACES,SAAU,EACVD,WAAY,EACZG,MAAO,UAENzB,KAAKE,MAAMiC,OAGXnC,KAAKE,MAAMmC,cAAgBrC,KAAKE,MAAMmC,aAAaP,OAAO,GACzDvB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEwB,UAAW,MACXC,QAASvC,KAAKE,MAAMmC,cAEpB9B,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACE0B,GAAI,EACJC,KAAM,OACNC,KAAM,MACNjB,MAAO,yBA3FPkB,aAyGT7C","file":"static/js/29.caa5232c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;"],"sourceRoot":""}