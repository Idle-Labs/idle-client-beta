{"version":3,"sources":["PageNotFound/PageNotFound.module.scss","utilities/components/Header.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","NewsletterForm/NewsletterForm.module.scss","TwitterShareButton/TwitterShareButton.module.scss","MenuAccount/MenuAccount.module.scss","CryptoInput/CryptoInput.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","Governance/ProposalListFilters/ProposalListFilters.module.scss","Tos/Tos.module.scss","Governance/NewProposal/NewProposal.module.scss","DashboardCard/DashboardCard.module.scss","colors.js","theme.js","ExtLink/ExtLink.js","utilities/IdleGovToken.js","SmartNumber/SmartNumber.js","FlexLoader/FlexLoader.js","GenericChart/GenericChart.js","VariationNumber/VariationNumber.js","AllocationChart/AllocationChart.js","AssetField/AssetField.js","DashboardCard/DashboardCard.js","GenericSelector/GenericSelector.js","AssetSelector/AssetSelector.js","TokenSwap/TokenSwap.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","NexusMutual/NexusMutual.js","Title/Title.js","TableRow/TableRow.js","TableCellHeader/TableCellHeader.js","TableHeader/TableHeader.js","AssetsList/AssetsList.js","PortfolioDonut/PortfolioDonut.js","ChartCustomTooltip/ChartCustomTooltip.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","utilities/components/ShortHash.js","TransactionField/TransactionField.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","EarningsEstimation/EarningsEstimation.js","StrategyPage/StrategyPage.js","utilities/components/ModalCard.js","ImageButton/ImageButton.js","utilities/components/BuyModal.js","RoundButton/RoundButton.js","TxProgressBar/TxProgressBar.js","FastBalanceSelector/FastBalanceSelector.js","Migrate/Migrate.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/FunctionsUtil.js","Footer/Footer.js","Tos/Tos.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","Faquestion/Faquestion.js","Faq/Faq.js","FlexCards/FlexCards.js","AuditCard/AuditCard.js","HowItWorks/HowItWorks.js","StrategyBox/StrategyBox.js","NewsletterForm/NewsletterForm.js","RoundIconButton/RoundIconButton.js","FloatingToastMessage/FloatingToastMessage.js","AssetsUnderManagement/AssetsUnderManagement.js","Landing/Landing.js","DashboardMenu/DashboardMenu.js","Stats/StatsChart.js","Rebalance/Rebalance.js","StatsCard/StatsCard.js","Breadcrumb/Breadcrumb.js","utilities/components/DateRangeModal.js","ExecuteTransaction/ExecuteTransaction.js","Stats/Stats.js","Utils/Utils.js","FundsOverview/FundsOverview.js","ConnectBox/ConnectBox.js","CurveRedeem/CurveRedeem.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","DepositRedeem/DepositRedeem.js","CardIconButton/CardIconButton.js","EstimatedEarnings/EstimatedEarnings.js","AssetPage/AssetPage.js","CurveDeposit/CurveDeposit.js","PortfolioEquityCurve/PortfolioEquityCurve.js","FundsOverviewCurve/FundsOverviewCurve.js","CurveStrategy/CurveStrategy.js","utilities/components/WelcomeModal.js","utilities/components/TooltipModal.js","utilities/components/MigrateModal.js","utilities/components/UpgradeModal.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","utilities/GovernanceUtil.js","DelegateVesting/DelegateVesting.js","DashboardHeader/DashboardHeader.js","Dashboard/Dashboard.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","Governance/ProposalField/ProposalField.js","Governance/ProposalListFilters/ProposalListFilters.js","Governance/ProposalsList/ProposalsList.js","Governance/DelegateField/DelegateField.js","Governance/DelegatesList/DelegatesList.js","Governance/Overview.js","Governance/DelegateVote/DelegateVote.js","Governance/Delegate.js","Governance/NewProposal/NewProposal.js","Governance/CastVote/CastVote.js","Governance/ProposalDetails/ProposalDetails.js","Governance/Proposals.js","Governance/DelegateDetails/DelegateDetails.js","Governance/Leaderboard.js","Governance/Governance.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/tokens/DAI.js","abis/compound/cDAI.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","Footer/Footer.module.scss","LoadingSpinner/LoadingSpinner.module.scss","HowItWorks/HowItWorks.module.scss","GenericSelector/GenericSelector.module.scss","Landing/Landing.module.scss"],"names":["module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","gradientButton","empty","tooltip","radioBtn","bg","twitterIcon","balanceButton","newLink","newPill","mainInput","button","newPillContainerAnim","input","defaultOpacity","hidden","interactive","active","rainbow","disabled","baseColors","black","white","blue","darkBlue","green","yellow","red","blurple","consensysblue","colors","base","text","readableColor","light","tint","dark","shade","theme","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","fonts","serif","sansSerif","counter","space","radii","width","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","gradient-bg","primary-light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","transparent","lineChartStroke","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider","redeem","deposit","migrate","legend","cardBg","transactions","action","send","swap","swapout","boost","receive","default","withdraw","actionBg","status","completed","pending","failed","blacks","whites","zIndices","messageStyle","color","backgroundColor","borderColor","success","warning","danger","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","fontSize","height","minWidth","padding","medium","large","borderRadius","ExtLink","react_default","a","createElement","index_es","Object","assign","target","rel","this","props","children","Component","IdleGovToken","_this","classCallCheck","tokenName","tokenConfig","functionsUtil","setProps","FunctionsUtil","getGlobalConfig","getBalance","asyncToGenerator","regenerator_default","mark","_callee","balance","wrap","_context","prev","next","getTokenBalance","account","sent","BNify","isNaN","abrupt","stop","claimRewards","_ref2","_callee2","callback","callbackReceipt","_context2","contractMethodSendWrapper","_x","_x2","apply","arguments","getPriorVotes","_callee3","priorVotes","_args3","_context3","length","undefined","genericContractCall","refreshIdleSpeed","_callee4","_context4","getUnclaimedTokens","_callee5","rewards","_context5","fixTokenDecimals","decimals","getAPR","_ref6","_callee6","token","conversionRate","IDLETokenConfig","cachedDataKey","APR","_ref7","_ref8","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","_context6","enabled","concat","idle","Promise","all","getDistribution","getTokenAllocation","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","times","div","setCachedData","_x3","_x4","getSpeed","_ref9","_callee7","idleTokenAddress","idleSpeeds","_context7","_x5","_ref10","_callee8","cachedData","blocksPerYear","distribution","_context8","getCachedData","address","_x6","getUserDistribution","_callee10","availableTokens","fixByFrequency","totalSpeed","_args10","_context10","selectedStrategy","availableStrategies","asyncForEach","keys","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","plus","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","output","totalAllocation","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","SmartNumber","loadUtils","_this2","formattedNumber","number","type","formatMoney","precision","abbreviateNumber","maxPrecision","minPrecision","flexProps","alignItems","flexDirection","justifyContent","forEach","p","showUnit","unitPos","unit","unitProps","FlexLoader","loaderProps","textProps","GenericChart","state","componentUnmounted","window","addEventListener","handleWindowSizeChange","bind","removeEventListener","prevProps","isMobile","newState","objectSpread","parentId","chartContainer","document","getElementById","chartWidth","parseFloat","offsetWidth","parentIdHeight","chartContainerH","chartHeight","setState","ChartType","parseInt","chartProps","showLoader","data","src_FlexLoader_FlexLoader","minHeight","size","ml","loaderText","VariationNumber","IconDirection","direction","name","iconSize","iconPos","AllocationChart","chartData","selectedSlice","protocolsAllocations","protocolsAllocationsPerc","loadData","prevState","selectedToken","setStateSafe","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","e","_this3","onMouseLeave","sliceLabel","value","tooltipFormat","v","radialLabel","container","inline","display","labels","fontWeight","fontFamily","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","modifiers","margin","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","toLowerCase","protocolAllocationPercParsed","toFixed","push","id","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","position","zIndex","textAlign","mb","src","src_SmartNumber_SmartNumber","src_GenericChart_GenericChart","Pie","AssetField","ready","loadField","fieldName","isRisk","fieldInfo","fieldProps","addGovTokens","govTokens","getGovTokensDistributionSpeed","tokenPrice","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","earningsCounter","feePercentage","feesStart","feesEnd","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","startTimestamp","y","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","_args","loadAssetField","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","getTokenFees","getCurveAPY","gt","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","earningsPerc","showAPR","migration","oldContract","values","oldProtocols","oldProtocol","foundProtocol","find","protocolPos","indexOf","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","rowId","$allocationChartRowElement","jQuery","innerWidth","css","innerHeight","Math","min","assertThisInitialized","max","strToMoment","Date","format","subtract","_d","getTime","add","random","getFrequencySeconds","getTokenApiData","timestamp","idleRate","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","curve","axisBottom","enableArea","areaOpacity","enableGridX","enableGridY","pointBorderWidth","enableSlices","isInteractive","defs","linearGradientDef","offset","fill","match","PerformanceChartRowElement","$PerformanceChartRowElement","clone","map","idlePrice","minus","blocknumber","pointLabelYOffset","defineProperty","tokenChanged","accountChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","filter","tx","loader","funcProps","icon1","placement","message","tooltipProps","icon2","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","_ref11","countUpRef","style","ref","_ref15","govTokenConfig","govTokenIndex","key","boxShadow","showDirection","src_VariationNumber_VariationNumber","earningsCurve","governanceTokenName","idleTokenConfig","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","buttonLabel","onClick","handleClick","src_AllocationChart_AllocationChart","formattedValue","_isBigNumber","DashboardCard","isDisabled","isActive","isVisible","isRainbow","cardProps","background","className","styles","mt","titleParentProps","h4","lineHeight","titleProps","description","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","JSON","stringify","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","menuIsOpen","src_DashboardCard_DashboardCard","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","searchInput","searchInputHidden","CustomOption","selectedValue","o","px","py","genericSelector","isFocused","react_select_browser_esm","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","AssetSelector","toUpperCase","src_AssetField_AssetField","mr","showCustomField","showBalance","flex","src_GenericSelector_GenericSelector","changeToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","remoteResources","url","j","split","pop","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","href","loadTokens","toolProps","getContractByName","abi","initContract","fromTokenChanged","destTokenChanged","loadKyberWidget","_this4","src_AssetSelector_AssetSelector","my","mx","mainColor","LoadingSpinner","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","NexusMutual","step","steps","1","2","3","loading","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","stepIndex","flexBasis","textDecoration","hoverColor","activeColor","changeSelectedToken","required","border","placeholder","src_ButtonLoader_ButtonLoader","getQuote","Title","HeadingComponent","component","Heading","h1","TableRow","FieldComponent","fieldComponent","cardId","rowProps","cols","colInfo","colIndex","visible","mobile","parentProps","fields","fieldIndex","overflow","colProps","TableCellHeader","ColTitle","whiteSpace","desc","openTooltipModal","TableHeader","pb","src_TableCellHeader_TableCellHeader","AssetsList","enabledTokens","src_TableHeader_TableHeader","src_TableRow_TableRow","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","_ref","getIdleTokenPrice","getGovTokensUserBalances","govTokensUserBalances","govTokenBalance","tokenPercentage","tokenColorHsl","substr","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","Fragment","ChartCustomTooltip","point","itemPos","xFormatted","ChartCustomTooltipRow","pr","textTransform","dangerouslySetInnerHTML","__html","PortfolioEquity","startDate","chartwidth","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","filteredTxs","index","hash","timeStamp","tokenAmount","lt","idleTokens","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTx","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","momentDate","isSameOrAfter","isAfter","formattedDate","_loop","aggregatedBalances","date","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","strokeDasharray","sliceTooltip","slideData","slice","points","src_ChartCustomTooltip_ChartCustomTooltip","src_ChartCustomTooltipRow_ChartCustomTooltipRow","serieId","yFormatted","formattedBalance","ShortHash","shortenHash","shortHash","txStart","txEnd","React","TransactionField","hashChanged","bgColor","transaction","maxWidth","textOverflow","align","components_ShortHash","amount","tokenSymbol","TransactionListFilters","maxHeight","isOpened","activeFilters","assets","actions","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","borderTop","filters","filterCategory","filterValues","filterValue","filterLabel","isChecked","checked","Text","filterName","TransactionsList","page","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","txsIndexes","includes","sort","b","getTxAction","parsedValue","preventDefault","loadTxs","count","firstBlockNumber","enabledActions","hashKey","blockNumber","hasActiveFilters","m","pt","src_TransactionListFilters_TransactionListFilters","txHash","txHashKey","open","prevPage","nextPage","h3","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","getAmountLent","amountLents","aggregatedEarnings","earningsYear","avgBuyPrice","idleTokenPrice","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAvgBuyPrice","getTokenAprs","avgApr","avgApy","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","estimationLabel","StrategyPage","tokensToMigrate","aggregatedValues","depositedTokens","remainingTokens","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","portfolioEquityQuickSelection","getAccountPortfolio","avgAPY","avgScore","totalEarnings","totalAmountLent","amountLentToken","tokenWeight","tokenEarningsPerc","totalBalance","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","getTokensToMigrate","apyLong","riskScore","yieldFarming","src_Title_Title","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","src_PortfolioEquity_PortfolioEquity","borderBottom","src_AssetsList_AssetsList","src_EarningsEstimation_EarningsEstimation","src_TransactionsList_TransactionsList","textSize","ModalCard","closeFunc","objectWithoutProperties","icononly","bgLayer","backgroundSize","Header","iconHeight","subtitle","subtitleProps","subtitle2","Body","Footer","BackButton","Outline","ImageButton","image","imageSrc","imageProps","iconName","caption","contrastColor","buttonStyle","badge","captionPos","subcaption","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","provider","buyParams","onSuccess","onClose","currentState","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","providers","analytics","google","events","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","defaultProvider","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","methods","method","loadAvailableMethods","toConsumableArray","showAllTokens","InnerComponent","flexWrap","src_ImageButton_ImageButton","methodInfo","imagePropsExtended","noOptionsMessage","inputValue","isOpen","components_ModalCard","RoundButton","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","initProgressBar","getTransaction","resolve","reject","customLog","web3","eth","err","getBlockTime","blockTime","axios","get","getPredictionTable","predictTable","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","secondsPassed","timePassed","setTimeout","updateProgressBar","getTxInfo","txProgressBarKey","txProgressBarData","localStorage","getItem","parse","setLocalStorage","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","textColor","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","cancelTransaction","cancelTextColor","cancelTextHoverColor","FastBalanceSelector","onMouseDown","replaceArrayProps","Migrate","approve","oldTokenName","oldIdleTokens","skipMigration","buttonDisabled","migrationEnabled","fastBalanceSelector","oldContractBalance","biconomyLimitReached","metaTransactionsEnabled","oldContractTokenDecimals","migrationContractApproved","setAction","toggleSkipMigration","changeInputValue","checkButtonDisabled","setInputValue","selectedPercentage","setFastBalanceSelector","executeAction","oldContractName","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","normalizeTokenAmount","txSucceeded","eventData","eventValue","getTransactionError","transactionHash","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractInfo","migrationContractName","tokenApproved","migrationContract","checkTokenApproved","oldIdleTokensConverted","oldTokenPrice","getTokenPrice","oldContractInfo","oldContractABI","biconomyLimits","getTokenDecimals","getContractBalance","biconomy","checkBiconomyLimits","allowed","disapproveMigration","disableERC20","approveMigration","callbackApprove","callbackReceiptApprove","enableERC20","migrationMethod","params","callbackMigrate","callbackReceiptMigrate","useMetaTx","toMigrate","_skipRebalance","minAmountForRebalance","migrationParams","_migrationContract$me","functionSignature","migrationCallback","integerValue","skipMintForDeposit","encodeABI","sendBiconomyTxWithPersonalSign","biconomyChanged","actionChanged","fastBalanceSelectorChanged","batchMigrationInfo","batchMigrationEnabled","batchMigrationDepositEnabled","depositEnabled","SkipMigrationComponent","biconomyEnabled","isMigrationTool","migrateTextBefore","migrateText","showActions","src_TransactionField_TransactionField","route","src_TxProgressBar_TxProgressBar","migrationImage","migrationIcon","migrationText","migrationTextProps","functions","functionInfo","functionName","src_RoundButton_RoundButton","approveText","src_FastBalanceSelector_FastBalanceSelector","TokenMigration","migrationSucceeded","changeFromToken","convertTool","goToSection","tokenInfo","strategy","baseTokenConfig","destTokenConfig","migrateFunction","setStrategyToken","urlParams","param2","src_Migrate_Migrate","connectAndValidateAccount","BatchMigration","canClaim","batchTotals","canDeposit","batchDeposits","claim","hasDeposited","batchCompleted","claimSucceeded","strategyAvailableTokens","batchId","callbackClaim","callbackReceiptClaim","checkBatchs","currBatchIndex","batchIndex","batchTotal","batchDeposit","env","process","appName","version","baseURL","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","logs","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","curveInstructions","addPostfixForTestnet","debugEnabled","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","governance","test","startBlock","availableContracts","IDLE","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","path","poolContract","CurvePool","depositContract","CurveDeposit","zapContract","CurveZap","CurveSwap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","idleTUSDYield","showAUM","protocol","aprTooltipMode","COMP","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","tokens","DAI","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","USDC","strategies","best","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","descLong","descShort","risk","new","TTL","scores","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","YDAI+YUSDC+YUSDT+YTUSD","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d","9599092","9599138","9599263","9599267","9599295","9599299","9599307","9599315","9599579","9599866","9600156","9600433","9600704","9600982","9601051","9601073","9601077","9601345","9601619","9601891","9602144","9602429","9602724","9602993","9603272","9603536","9603826","9603840","9604038","9604182","9604457","9604701","9604979","9605247","9605505","9605793","9606073","9606368","9606639","9606896","9607147","9607406","9607722","9608130","9608395","9608656","9608959","9609544","9609811","9610073","9610341","9610601","9610871","9611120","9611386","9611665","9611949","9612210","9612487","9612758","9613012","9613276","9613542","9613824","9614069","9614327","9614596","9614864","9615111","9615394","9615679","9615958","9616245","9616531","9616803","9617053","9617326","0x9ba00d6856a4edf4665bca2c2309936572473b7e","9598633","9598646","9598684","9598823","9598869","9598915","contract","skipRebalance","skipMint","minAmountForMint","skipMintCheckboxEnabled","proxyContract","IdleProxyMinter","function","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","isForked","requiredNetwork","requiredConfirmations","accountBalanceMinimum","infura","etherscan","endpoints","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","tools","batchMigration","claimEnabled","subComponent","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","insurance","ETH","ens","tokenSwap","USDS","WETH","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","bank","card","wallet","wyre","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","event","payload","purchase","pow","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","connectorName","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","mode","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","ethereumjsABI","require","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","BNify_obj","s","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","console","contractName","c","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","_args2","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","_args4","prevAvgBuyPrice","idleTokensBalance","getDepositTimestamp","deposits","_args7","depositTimestamp","getAmountDeposited","userAvgPrice","amountDeposited","_args9","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","results","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveCachedRequest","_args11","filterCurveTxs","allAvailableTokens","etherscanTxsToStore","cachedRequestData","processStoredTxs","txInfo","_callee13","_args13","_context13","_callee14","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args14","_context14","tokenMigrationToolParams","curveEnabled","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","isSwapOutTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_callee19","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args19","_context19","baseTokenAddress","_ref19","_callee18","minedTxs","_context18","_ref20","_callee17","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context17","getCurveTokenPrice","_ref21","_callee15","_context15","getTransactionReceipt","_x11","_x12","log","topics","baseTokensConfig","t2","_ref22","_callee16","_context16","_x13","_x14","_x9","_x10","_ref23","_callee25","txsToProcess","_args25","_context25","_ref24","_callee24","_context24","_ref25","_callee23","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context23","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref26","_callee20","_context20","txReceipt","_x19","_x20","_ref27","_callee21","_context21","_x21","_x22","raw","_ref28","_callee22","_context22","_x23","_x24","decodeLog","_token","_x17","_x18","_x16","_x15","alias","cachedRequests","_ref29","_callee26","error_callback","config","_args26","_context26","catch","_x25","_ref30","_callee27","return_data","_args27","_context27","_x26","code","errorCode","getArrayPath","array","prop","shift","configs","checkUrlOrigin","_ref31","_callee29","googleEventsInfo","originOk","currentNetwork","_args29","_context29","ga","_ref32","_callee28","_context28","hitCallback","hitCallbackFail","_x28","_x29","_x27","createContract","_ref33","_callee30","_context30","Contract","_x30","_x31","_x32","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","_ref34","_callee31","forceStartTimestamp","order","limit","filteredCachedData","filteredData","apiInfo","_args31","_context31","_x33","_ref35","_callee32","_context32","_x34","aprs","allocations","reduce","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","addr","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee33","contractPaused","_args33","_context33","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref37","_callee36","rebalancer","idleRebalancerInstance","allocationsPromises","availableTokensPromises","protocolIndex","nextAllocations","newTotalAllocation","newProtocolsAllocations","shouldRebalance","_context36","allocationPromise","_ref38","_callee34","_context34","lastAmounts","call","_x36","_x37","availableTokenPromise","_ref39","_callee35","_context35","_x38","_x39","accumulator","availableTokenInfo","nextAllocation","protocolAllocation","protocolAllocationPerc","newProtocolAllocation","_x35","_ref40","_callee37","_context37","_x40","_x41","_ref41","_callee38","signedParameters","callback_receipt","_contract$methods","_context38","getGasPrice","once","confirmationNumber","receipt","_x42","_x43","_x44","_x45","_x46","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","soliditySHA3","toBuffer","_ref42","_callee39","biconomyInfo","res","_context39","headers","x-api-key","_x47","_ref43","_callee40","messageToSign","_this$getSignaturePar","_context40","getNonce","_address","personal","sign","_x48","_x49","_x50","_x51","sendBiconomyTx","_ref44","_callee41","EIP712Domain","MetaTransaction","domainData","dataToSign","_context41","getChainId","verifyingContract","types","domain","primaryType","currentProvider","jsonrpc","response","_x52","_x53","_x54","_x55","_x56","_ref45","_callee42","contractAddr","walletAddr","allowance","_context42","getAllowance","_x57","_x58","_x59","_ref46","_callee43","_context43","_x60","_x61","_x62","methodName","txData","toTwosComplement","_ref47","_callee44","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref48","_ref49","curveAvgBuyPrice","curveTokenBalance","_ref50","_ref51","amountLentCurve1","redeemableBalanceCurve","_ref52","_ref53","earningPerYear","_ref54","_ref55","amountLent1","redeemableBalance1","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref56","_ref57","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref58","_ref59","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref60","_ref61","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref62","_ref63","amountLentCurve2","redeemableBalanceCurve1","_ref64","_ref65","redeemableBalance2","_args44","_context44","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getCompUserDistribution","getIdleGovToken","t3","getCompDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x63","_x64","_x65","_x66","_ref66","_callee45","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args45","_context45","_x67","clearCachedData","expirationDate","_ref67","_callee46","_ref68","_ref69","idleTokensTotalSupply","userShare","_context46","_x68","_x69","_ref70","_callee47","fixDecimals","_ref71","_ref72","_args47","_context47","_x70","_x71","copyToClipboard","copyText","select","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref73","_callee48","_context48","getProtocolBalance","_x72","_x73","_ref74","_callee49","_context49","_x74","_x75","getAprs","_ref75","_callee50","_context50","_x76","genericIdleCall","_ref76","_callee51","callParams","_args51","_context51","_x77","estimateGas","_ref77","_callee52","_contract$methods2","_args52","_context52","_x78","_x79","getTxDecodedLogs","_ref78","_callee54","logAddr","decodeLogs","internalTransfers","_context54","_ref79","_callee53","_context53","_x84","_x85","_x80","_x81","_x82","_x83","getBlockNumber","_callee55","_context55","getContractPastEvents","_ref81","_callee56","_args56","_context56","getPastEvents","_x86","_x87","_ref82","_callee57","_contract$methods3","_args57","_context57","_x88","_x89","_ref83","_callee58","_args58","_context58","_x90","_x91","apr2apy","getUnlentBalance","_ref84","_callee59","unlentBalance","_context59","_x92","_ref85","_callee61","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args61","_context61","_ref86","_callee60","_ref87","_ref88","protocolBalance","_context60","_x94","_x95","getGovTokensBalances","total","getTokenConversionRate","totalAllocationConverted","totalAllocationWithUnlentConverted","_x93","getUniswapConversionRate_path","_ref89","_callee62","unires","_context62","_x96","_ref90","_callee63","tokenConfigFrom","tokenConfigDest","_context63","_x97","_x98","getCurveDepositedTokens","_ref91","_callee64","idleTokensBalances","remainingCurveTokens","_args64","_context64","_x99","getCurveUnevenTokenAmounts","_ref92","_callee65","amounts","max_burn_amount","unevenAmounts","_context65","getCurveSwapContract","_x100","_x101","_callee66","curveRatesInfo","_context66","strategyTokens","getCurveAPYContract","_callee67","blocksForPrevTokenPrice","_ref95","_ref96","_tokenPrice","prevTokenPrice","blocksMultiplier","curveAPR","_context67","getCurveTokenSupply","_callee68","_context68","getCurvePoolContract","_callee69","_args69","_context69","_callee70","_args70","_context70","_ref100","_callee71","_ref101","_ref102","_context71","_x102","getCurveDepositContract","_callee72","depositContractInfo","_context72","getCurveZapContract","_callee73","zapContractInfo","_context73","_callee74","poolContractInfo","_context74","_callee75","_context75","getCurveIdleTokensAmounts","_callee77","max_slippage","curveTokenSupply","curveTokenShare","_args77","_context77","_ref108","_callee76","curveIdleTokens","_context76","_x103","getCurveTokensAmounts","_callee79","_args79","_context79","_ref110","_callee78","_ref111","_ref112","totalTokenSupply","_context78","_x104","getCurveAmounts","_ref113","_callee81","_args81","_context81","_ref114","_callee80","_context80","_x107","_x105","_x106","getCurveTokenAmount","_ref115","_callee82","_args82","_context82","_x108","getCurveSlippage","_ref116","_callee83","uneven_amounts","_ref117","_ref118","virtualPrice","Sv","_args83","_context83","_x109","_x110","getCompAPR","_ref119","_callee84","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args84","_context84","_x111","_x112","getCompSpeed","_ref120","_callee85","cTokenAddress","compSpeed","_context85","_x113","_ref121","_callee86","annualize","cTokenInfo","compoundAllocationPerc","_ref122","_ref123","cTokenTotalSupply","compoundPoolShare","_args86","_context86","_x114","_callee88","_args88","_context88","_ref125","_callee87","_ref126","_ref127","_context87","_x115","_callee90","_args90","_context90","_ref129","_callee89","_ref130","_ref131","compApr","_context89","_x116","getTokensCsv","_callee93","csv","_context93","prototype","sum","pv","cv","avg","_ref133","_callee92","_context92","_ref134","_callee91","header","rows","aprAvg","scoreAvg","lastRow","_context91","protocolsData","p1","p2","rate","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x118","_x117","_callee95","_args95","_context95","_ref136","_callee94","compTokenBalance","_context94","_x119","speed","getGovTokensUserDistributionSpeed","_ref137","_callee97","govTokensUserDistribution","_args97","_context97","_ref138","_callee96","_context96","_x121","_x120","_ref139","_callee99","govTokensDistribution","_args99","_context99","_ref140","_callee98","govSpeed","_context98","_x123","_x122","_ref141","_callee101","_args101","_context101","_ref142","_callee100","_ref143","_ref144","compoundInfo","_context100","_x126","_x124","_x125","_callee103","_args103","_context103","_ref146","_callee102","tokenConversionRate","fromTokenConfig","_context102","_x127","getGovTokenConfigByAddress","_callee104","checkShowBalance","govTokensEarnings","_args104","_context104","acc","govTokenAmount","_callee107","govTokenConfigForced","_args107","_context107","_ref149","_callee106","govTokensAmounts","_context106","_ref150","_callee105","govTokenAddress","_context105","_x129","_x130","_x128","_callee108","_args108","_context108","_callee109","_ref153","_ref154","gain","fees","_args109","_context109","_ref155","_callee110","_args110","_context110","_x131","getAggregatedStats","_callee114","avgAPR","totalAUM","_args114","_context114","_ref157","_callee113","_context113","_ref158","_callee112","oldTokenAllocation","oldTokenTotalAllocation","_context112","_ref159","_callee111","_ref160","_ref161","tokenBalanceConverted","_context111","_x134","_x133","_x132","getTokenApy","_ref162","_callee115","_context115","_x135","_callee118","_args118","_context118","_ref164","_callee117","_context117","_ref165","_callee116","_ref166","_context116","_x137","_x136","getProtocolsTokensBalances","_callee120","tokenBalances","minTokenBalance","protocolsTokens","_args120","_context120","_ref168","_callee119","tokenContract","_context119","_x138","_ref169","_callee121","_args121","_context121","_x139","_x140","_x141","_ref170","_callee122","_args122","_context122","_x142","_x143","_ref171","_callee123","_ref172","_ref173","_context123","protocolScore","getTokenScoreApi","_x144","_x145","_ref174","_callee124","_context124","_x146","_x147","_ref175","_callee126","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args126","_context126","_ref176","_callee125","addrIndex","protocolApr","protocolApy","_context125","_x149","_x150","_x148","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","currYear","getFullYear","governanceEnabled","columnWidth","footer","src_ExtLink_ExtLink","react_router_dom","link","Tos","h2","listStyle","src_Footer_Footer","TorusConnector","kwargs","Torus","api","rest","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","Faquestion","isShowingAnswer","question","answer","Faq","openedAnswer","selectedSection","generalQuestions","q","guidelinesQuestions","ratesQuestions","section","_this$state","generalDivs","src_Faquestion_Faquestion","toggleAnswer","guidelinesDivs","ratesDivs","isGeneralSelected","isGuidelinesSelected","isRatesSelected","setSection","FlexCards","itemPerc","itemsPerRow","cards","AuditCard","transform","HowItWorks","bulletCard","StrategyBox","getHighestAprToken","highestValue","tokensAprs","strategyUrl","fontStyle","NewsletterForm","validated","privacy","handleSubmit","handleValidation","messageColor","post","then","parentNode","classList","onSubmit","Field","outline","toggleCheckbox","RoundIconButton","FloatingToastMessage","ToastComponent","ToastMessage","Success","Processing","Failure","closeElem","handleClose","AssetsUnderManagement","totalAUMEndOfYear","loadTotalAUM","counterStyle","scrolling","Landing","carouselMax","carouselIndex","activeCarousel","runConfetti","activeBullet","testPerformed","carouselOffsetLeft","setActiveCarousel","carouselIntervalID","randomAllocationEnabled","handleCarousel","multiplier","$element","processScrolling","bulletCards","getElementsByClassName","offsetParent","offsetY","offsetTop","getAllocations","remainingAllocation","totProtocols","alloc","startLending","updateSelectedTab","setConfetti","connectAndGoToRoute","goToLocation","processCustomParam","mainViewport","paddingBottom","isCorrectNetwork","textAlignLast","overflowY","strategyIndex","src_StrategyBox_StrategyBox","src_RoundIconButton_RoundIconButton","src_HowItWorks_HowItWorks","src_AssetsUnderManagement_AssetsUnderManagement","src_AuditCard_AuditCard","gradientBackground","h5","sandbox","src_FlexCards_FlexCards","src_Faq_Faq","src_NewsletterForm_NewsletterForm","toastMessageProps","src_FloatingToastMessage_FloatingToastMessage","closeToastMessage","DashboardMenu","buyModalOpened","menu","visibleLinks","menuLink","showMobile","menuIndex","LinkComponent","isExternalLink","RouterLink","selected","StatsChart","chartType","parseAum","loadApiData","CustomTooltipRow","CustomTooltip","maxGridLines","apiResults","apiResults_unfiltered","totalItems","versionInfo","tempData","axisBottomIndex","idleChartData","divergingData","maxRange","_i","_i2","_i3","prevValue","_i4","prevApr","prevData","startBalance","currentBalance","_i5","_i6","chartMode","idleVersion","redeems","idleSupply","idleTokensPrev","eq","diff","Bar","indexBy","enableLabel","minValue","maxValue","axisRight","markers","lineStyle","strokeOpacity","textStyle","legendOrientation","legendOffsetX","labelTextColor","labelSkipWidth","labelSkipHeight","dataFrom","translateX","itemsSpacing","indexValue","depositFormatted","redeemFormatted","aum","z","foundItem","pos","showAdvanced","serieColor","protocolColor","protocolAllocationFormatted","protocolData","protocolPaused","borderCollapse","allocationPerc","protocolEarning","apy","earning","additionalProtocol","unshift","chartRow","baseProfit","firstProtocolData","firstProtocolBlock","protocolRate","idlePerformance","d1","rowData","lastRowData","lastTokenPrice","tokenExchangeRate","tokenPriceFixed","lastYDiff","showAdvancedChanged","apiResultsChanged","Rebalance","StatsCard","titleMinHeight","valueProps","labelTooltip","Breadcrumb","showPathMobile","pathLink","Link","borderLeft","DateRangeModal","quickSelection","ranges","endDate","componentDidUpdate","selection","handleSelect","startTimestampObj","endTimestampObj","handleQuickSelect","react_date_range_dist","minDate","maxDate","ExecuteTransaction","txStatus","ExecuteComponent","execute","componentProps","Stats","delta","rebalances","buttonGroups","statsVersions","minStartTime","govTokensPool","dateRangeModalOpened","quickSelections","weeks","month","setDateRange","isSame","isBefore","maxEndDate","toggleAdvancedCharts","setDateRangeModal","filterTokenData","setIdleVersion","firstResult","lastResult","firstIdlePrice","lastIdlePrice","firstCompoundData","lastCompoundData","compoundWithCOMPInfo","compoundAvgApr","firstCompoundPrice","lastCompoundPrice","compoundApr","compoundData","compoundRate","prevRow","prevTotalAllocation","hasRebalanced","prevP","prevAllocation","loadParams","latestVersion","versionInfoExtra","param","currentNetworkAvailableTokens","customToken","getLatestAvailableVersion","getVersionInfo","newEndTimestampObj","newStartTimestampObj","initWeb3","loadCarousel","strategyChanged","dateChanged","versionChanged","idleTokenEnabled","versionsOptions","versionDefaultValue","src_Breadcrumb_Breadcrumb","src_StatsCard_StatsCard","Stats_StatsChart","src_Rebalance_Rebalance","components_DateRangeModal","statsTokens","statsProtocols","src_ExecuteTransaction_ExecuteTransaction","Button","Utils","SubComponent","selectedSubsection","submenu","tool","toolIndex","FundsOverview","govTokensTotalApr","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","totBalance","totApr","ConnectBox","CurveRedeem","maxSlippage","showMaxSlippage","curveTokensAmounts","redeemUnevenAmounts","curveRedeemableIdleTokens","toggleUnevenAmounts","initToken","curveConfig","withdrawSlippage","_amount","min_amounts","coin_index","min_amount","_token_amount","calculateSlippage","isGreaterThan","getFastBalanceSelector","setMaxSlippage","normalizedAmount","curveIdleTokensAmounts","redeemUnevenAmountsChanged","inputChanged","maxSlippageChanged","showSlippage","curveTokenName","TwitterShareButton","share","parent","w","tweet","ShareModal","escape","customText","confettiEnabled","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","DepositRedeem","txError","canRedeem","activeModal","showBuyFlow","showRedeemFlow","canRedeemCurve","canDepositCurve","actionProxyContract","componentMounted","redeemCurveEnabled","depositCurveBalance","depositCurveEnabled","showAdvancedOptions","depositCurveSlippage","setShowRedeemFlow","setShowBuyFlow","toggleShowAdvancedOptions","toggleRedeemCurve","toggleDepositCurve","toggleSkipMint","toggleRedeemGovTokens","setActiveModal","approveContract","approveToken","loadTokenInfo","curveTokenEnabled","checkAction","loadAPY","contractSendResult","callbackDeposit","callbackReceiptDeposit","curvePoolContractInfo","tokensToDeposit","minMintAmount","depositParams","_tokensToDeposit","depositMetaTransactionsEnabled","_depositParams","mintProxyContractInfo","mintProxyContract","_mintProxyContract$me","_skipMint","maxUnlentPerc","depositPerc","_callbackRedeem","_callbackReceiptRedeem","redeemParams","lendingProcessing","lendAmount","genericError","loadProxyContracts","hasProxyContract","approved","tokenBalanceChanged","depositCurveChanged","calculateCurveSlippage","govTokensDisabled","skipMintForDepositEnabled","redeemGovTokenEnabled","metaTransactionsAvailable","depositCurve","showDepositOptions","canPerformAction","showDepositCurve","showRedeemCurve","showActionFlow","showCurveSlippage","showRebalanceOption","showAdvancedDepositOptions","tokenFeesPercentage","src_ConnectBox_ConnectBox","src_CurveRedeem_CurveRedeem","components_BuyModal","components_ShareModal","CardIconButton","EstimatedEarnings","tokenApy","maxInputValue","loadChart","amountMonth","amount3Months","amount6Months","amountYear","monthColor","month3","month3Color","month6","month6Color","year","yearColor","showAPYDisclaimer","verticalAlign","AssetPage","tokenFees","loadTokensInfo","userHasFunds","src_CardIconButton_CardIconButton","src_DepositRedeem_DepositRedeem","src_FundsOverview_FundsOverview","src_EstimatedEarnings_EstimatedEarnings","depositSlippage","approveCallback","normalizeIdleTokenBalance","idleTokenBalanceChanged","hasCurveTokens","getMigrationParams","PortfolioEquityCurve","aggregatedBalanceParsed","FundsOverviewCurve","src_PortfolioEquityCurve_PortfolioEquityCurve","redeemBalance","depositBalance","setSelectedToken","getSelectedToken","param1","updateAssetSelector","curveTokensToRedeem","src_CurveDeposit_CurveDeposit","src_FundsOverviewCurve_FundsOverviewCurve","WelcomeModal","subscribed","sendingForm","sendUserInfo","sendEmail","walletProvider","lastLogin","signedUp","header_styles","TooltipModal","content","MigrateModal","dontShowAgain","toggleDontShowAgain","tokenMigrationRoute","protocolsTokensBalances","UpgradeModal","convert","oldIdleTokensToMigrate","AccountModal","loadBalances","strategyToken","setConnector","context","acccount","renderBalances","MenuAccount","isModalOpen","toggleModal","modalName","loadIdleTokenBalance","unclaimed","connectorInfo","walletIcon","alt","setGovModal","components_AccountModal","GovModal","claimCallback","GovernanceUtil","getTotalSupply","totalSupply","getTokensBalance","getVestingContract","vestingContract","VesterABI","delegateVesting","delegate","getVestingAmount","vestingAmount","_args5","getCurrentDelegate","getCurrentVotes","votes","queueProposal","proposalId","_args8","executeProposal","proposeAndVoteFor","targets","signatures","calldatas","batcher","Batcher","propose","args","castVote","support","setDelegate","getDelegatesChanges","delegationsCalls","fromBlock","delegatesContractName","toBlock","all_delegations","delegations","getDelegatesVotesChanges","getDelegates","all_votes","delegateAccounts","_args16","getVotes","_e$returnValues","returnValues","rank","vote_weight","proposals","voter","splice","getProposalParams","govContractName","proposalThreshold","proposalMaxOperations","governanceContractName","_e$returnValues2","getProposals","voted_by","enumerateProposalState","proposalCount","proposalGets","proposalStateGets","_arr","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_args20","reverse","createdEvent","canceledEvent","executedEvent","queuedEvent","createdBlockInfo","createdState","activeState","canceledBlockInfo","canceledState","queuedBlockInfo","succeededState","queuedState","executedBlockInfo","executedState","endBlockInfo","endState","_createdEvent$returnV","states","getBlock","end_time","start_time","trx_hash","endBlock","eta","executed","canceled","forVotes","proposer","againstVotes","DelegateVesting","newDelegate","delegatee","currentDelegate","idleTokenDelegated","delegateAddressValid","delegateDifferentWallet","vestingContractDelegated","governanceUtil","delegatesChanges","lastDelegateTx","delegator","toDelegate","revoke","changeDelegate","delegateTokens","setDelegateDifferentWallet","DashboardHeader","govModalOpened","isDashboard","isGovernance","governanceRoute","dashboardRoute","src_MenuAccount_MenuAccount","src_DelegateVesting_DelegateVesting","components_GovModal","Dashboard","currentRoute","pageComponent","currentSection","showResetButton","timeoutId","modalTitle","modalContent","curveParams","CurveStrategy","u","section_is_strategy","param1_is_strategy","param1_is_token","param2_is_token","sectionRoute","subm","loadMenu","accountInizialized","initAccount","initializeContracts","checkModals","prevParams","checkTokensToMigrate","checkWelcomeModal","checkProtocolsTokensBalances","showUpgradeModal","welcomeIsOpen","welcomeModalProps","currTime","lastTime","migrateModalEnabled","showMigrateModal","newRoute","routeParts","PageComponent","src_DashboardMenu_DashboardMenu","overflowX","src_DashboardHeader_DashboardHeader","components_UpgradeModal","components_MigrateModal","components_TooltipModal","components_WelcomeModal","current","baseTokenName","WrongNetworkBanner","NetworkUtil","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","NoWalletModal","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Web3ConnectionButtons","useWeb3Context","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","ConnectionModal","showTxFees","closeRemainingTime","newToEthereumChoice","showInstructions","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","renderModalContent","TOSacceptance","showConnectionButtons","newToEthereum","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","accountBalance","accountBalanceToken","accountBalanceLow","web3Infura","checkPreflight","rejectAccountConnect","accountValidationPending","rejectValidation","enableUnderlyingWithdraw","checkNetwork","userRejectedValidation","transactionConnectionModalIsOpen","openNoWeb3BrowserModal","openConnectionPendingModal","openUserRejectedConnectionModal","closeUserRejectedValidationModal","openUserRejectedValidationModal","openConnectionErrorModal","openTransactionErrorModal","openWrongNetworkModal","openLowFundsModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","updateTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","customAddress","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","notifications","shownNotifications","isError","$crisp","notificationId","Sentry","increaseAmount","contractInfo","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","net","getId","getNetworkName","getNetworkType","contractMethod","gasLimit","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","call_callback","confidenceThreshold","recentEvent","timeout","now","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","ProposalField","proposal","totalVotes","vote","ProposalListFilters","ProposalsList","rowsPerPage","totalRows","defeated","succeeded","queued","expired","processedRows","processList","pageChanged","proposalsChanged","filtersEnabled","hasRows","Governance_ProposalListFilters_ProposalListFilters","DelegateField","opts","bgcolor","spotcolor","seed","DelegatesList","maxRows","delegatesChanged","delegateId","Overview","dataLoaded","votesDelegated","Governance_ProposalsList_ProposalsList","Governance_DelegatesList_DelegatesList","DelegateVote","checkNewDelegate","loadUserData","isUndelegated","canClose","Delegate","Governance_DelegateVote_DelegateVote","NewProposal","actionValue","customABI","newAction","editAction","actionInputs","actionValid","contractOptions","proposalCreated","functionsOptions","selectedContract","selectedFunction","selectedSignature","availableFunctions","validateForm","checkInputs","loadFunctionsOptions","contractABI","getContractABI","f","constant","inputs","stateMutability","valid","fieldPattern","getPatternByFieldType","returnString","RegExp","inputIndex","inputInfo","inputValid","validateField","inputTypes","calldata","encodeParameters","_this5","handleInput","actionIndex","setEditAction","changeContract","pattern","changeFunction","payable","valueChange","fieldType","inputChange","addAction","deleteAction","setNewAction","CastVote","loaded","userVote","voteSucceed","showDelegateBox","setVote","Governance_ProposalField_ProposalField","toggleDelegateBox","ProposalDetails","showActionParams","lastState","hasVotes","forVotesPerc","againstVotesPerc","forVotesAddrs","againstVotesAddrs","canQueue","canExecute","Governance_CastVote_CastVote","decodedParams","attrs","decodeParameters","toggleShowParams","paramIndex","stateInfo","stateIndex","voteInfo","voteIndex","Proposals","addProposal","selectedProposal","item_id","foundProposal","Governance_ProposalDetails_ProposalDetails","Governance_NewProposal_NewProposal","DelegateDetails","loadProposals","Leaderboard","selectedDelegate","Governance_DelegateDetails_DelegateDetails","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","outputs","anonymous","indexed","ERC20","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","transactionToastMeta","transactionAction","charAt","newMessage","App","selectedTab","connecting","unsubscribeFromHistory","showToastMessage","customParam","setCustomAddress","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","self","hasMetamask","web3_react_dist_default","libraryName","web3Api","web3_react_dist","RimbleWeb3","needsPreflight","react_router","src_Dashboard_Dashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","Governance","components_Header","src_Web3Debugger_Web3Debugger","exact","src_Landing_Landing","react_cookie_consent_build_default","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","loading-dots","loading-dots--dot","dot-keyframes","graySection","whiteSection","howItWork","skewBg","bgHeart","platformLogo","bulletCardFirst","bulletCardActive","bulletPoint","bulletRight","bulletTop","bulletLeft","bulletBottom","bulletBottomLeft","bulletBottomBottom","bulletMobile","carouselItem","pos1","carouselItemMobile","pos2","pos3","bentTube","bounceArrow","bounce","rebalanceCircle","spin","carouselDesc","carouselNav","socialIcon","bentTubeLeft","bentTubeRight","bentTubeActive","bg1"],"mappings":"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","file":"static/js/main.db0c3bf6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__1G5iO\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__3HlA5\",\"bgContainer\":\"PageNotFound_bgContainer__16Bn7\",\"list\":\"PageNotFound_list__rJgDr\",\"textContainer\":\"PageNotFound_textContainer__2hI3Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__3RZVU\",\"empty\":\"Header_empty__1vLS-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3loA0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__30U-S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__ciXDw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"NewsletterForm_gradientButton__2Fu1h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__3-tUb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceButton\":\"MenuAccount_balanceButton__fYFu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__Km4rQ\",\"newPill\":\"CryptoInput_newPill__6lu6P\",\"mainInput\":\"CryptoInput_mainInput__H7-Y7\",\"button\":\"CryptoInput_button__2c5mT\",\"gradientButton\":\"CryptoInput_gradientButton__3fhnj\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__33Yn5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__XoI9U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"ProposalListFilters_radioBtn__4jmT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__1Tm4t\",\"headerBgFiller\":\"Tos_headerBgFiller__1Elt6\",\"bgContainer\":\"Tos_bgContainer__Bqzo0\",\"list\":\"Tos_list__2AtPw\",\"textContainer\":\"Tos_textContainer__xCW50\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"NewProposal_input__3aRBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__Bj_aP\",\"hidden\":\"DashboardCard_hidden__13XeU\",\"interactive\":\"DashboardCard_interactive__34cn8\",\"active\":\"DashboardCard_active__3L5-p\",\"rainbow\":\"DashboardCard_rainbow__3z92q\",\"disabled\":\"DashboardCard_disabled__2kZdZ\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #e0e0e0'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    lineChartStroke:'#dbdbdb',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#fff',\n    transactions:{\n      action:{\n        send:'#4f4f4f',\n        swap:'#3d53c0',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        boost:'#ffff00',\n        receive:'#4f4f4f',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        withdraw:'#4f4f4f',\n      },\n      actionBg:{\n        send:'#dadada',\n        swap:'#ced6ff',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        boost:'#ff7979',\n        default:'#dadada',\n        receive:'#dadada',\n        migrate:'#ced6ff',\n        withdraw:'#dadada',\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds){\n      return this.functionsUtil.BNify(idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      return this.functionsUtil.setCachedData(cachedDataKey,distribution);\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      sliceLabel: d => d.value+'%',\n      tooltipFormat: v => v+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {} : {\n            display: 'none'\n          }\n        },\n        labels:{\n          text:{\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontWeight:600,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()] && globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon : `${this.state.selectedSlice.label.toLowerCase()}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({},() => {\n        this.loadField();\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n          }\n          output = oldContractBalanceFormatted;\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPerc:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            curve:'monotoneX',\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            enableSlices:false,\n            isInteractive:false,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      boxShadow:1,\n      borderRadius:2,\n      position:'relative',\n      minHeight:'initial',\n      background:'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import theme from \"../theme\";\nimport Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={theme.fontSizes[2]}\n          color={theme.colors.copyColor}\n          fontWeight={theme.fontWeights[3]}\n          fontFamily={theme.fonts.sansSerif}\n          className={[styles.searchInput,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? '#fbfbfb' : '#ffffff' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={ fieldInfo.style ? fieldInfo.style : {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  fieldComponent={AssetField}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI');\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'Swap':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null;\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase()) && \n                          (this.state.activeFilters.assets === null || tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase()) &&\n                          ( availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.value);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n    const amountLents = await this.functionsUtil.getAmountLent(this.props.enabledTokens,this.props.account);\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(Object.keys(amountLents),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountLents[token],token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!amountLent.isNaN() && !idleTokenPrice.isNaN() && !earnings.isNaN() && !earningsYear.isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    Object.keys(amountLents).forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${theme.colors.divider}`}\n                            >\n                              <Text\n                                fontWeight={[3,4]}\n                                fontSize={[0,'1.2em']}\n                                style={{\n                                  wordBreak:'break-all'\n                                }}\n                                color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                              >\n                                {estimationStepEarningsFormatted}\n                              </Text>\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? '2.8em' : '2.2em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      alignItems={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'#ffffff'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={[2,3]}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport { Flex, Box, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    depositedTokens:null,\n    remainingTokens:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    // Load portfolio if account is set\n    if (this.props.account){\n\n      const newState = {};\n\n      // Get deposited tokens\n      const portfolio = await this.functionsUtil.getAccountPortfolio(this.props.availableTokens,this.props.account);\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalEarnings = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = this.props.availableTokens[token];\n\n          const [tokenAprs,idleTokenPrice,tokenScore,avgBuyPrice,amountLent] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getIdleTokenPrice(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n            this.functionsUtil.getAmountLent([token],this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n          const tokenEarningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n          const tokenEarnings = amountLentToken ? amountLentToken.times(tokenEarningsPerc) : 0;\n\n          // console.log(token,idleTokenPrice.toFixed(5),avgBuyPrice[token].toFixed(5),amountLentToken.toFixed(5),tokenEarningsPerc.toFixed(5),tokenEarnings.toFixed(5));\n\n          if (tokenEarnings){\n            totalEarnings = totalEarnings.plus(tokenEarnings);\n          }\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,this.props.availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        const earningsStart = totalEarnings.plus(govTokensTotalBalance);\n        const earningsEnd = totalAmountLent.times(avgAPY.div(100)).plus(govTokensTotalBalance);\n\n        newState.aggregatedValues = [\n          {\n            flexProps:{\n              pr:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              label:'',\n              title:'Avg APY',\n              value:avgAPY.toFixed(2)+'<small>%</small>',\n              description:this.functionsUtil.getGlobalConfig(['messages','apyLong'])\n            }\n          },\n          {\n            flexProps:{\n              px:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Total Earnings',\n              description:'Total earnings does not include accrued governance tokens: '+(govTokensTotalBalance && govTokensTotalBalance.gt(0) ? ` (${govTokensTotalBalanceTooltip.join(' / ')})` : ''),\n              children:(\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <CountUp\n                    delay={0}\n                    decimals={8}\n                    decimal={'.'}\n                    separator={''}\n                    useEasing={false}\n                    duration={31536000}\n                    end={parseFloat(earningsEnd)}\n                    start={parseFloat(earningsStart)}\n                    formattingFn={ n => '$ '+this.functionsUtil.abbreviateNumber(n,8,10,8) }\n                  >\n                    {({ countUpRef, start }) => (\n                      <span\n                        ref={countUpRef}\n                        style={{\n                          lineHeight:1,\n                          color:this.props.theme.colors.copyColor,\n                          fontFamily:this.props.theme.fonts.counter,\n                          fontWeight: this.props.isMobile ? 600 : 700,\n                          fontSize:this.props.isMobile ? '21px' : '1.7em',\n                        }}\n                      />\n                    )}\n                  </CountUp>\n                  {\n                    /*\n                    govTokensTotalBalance && govTokensTotalBalance.gt(0) &&\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        {govTokensTotalBalanceTooltip.join(' / ')}\n                      </Text>\n                    */\n                  }\n                </Flex>\n              ),\n              label:'',\n            }\n          },\n          {\n            flexProps:{\n              pl:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Avg Risk Score',\n              value:avgScore.toFixed(1),\n              label:''\n            }\n          },\n        ];\n      }\n\n      // Get tokens to migrate\n      const tokensToMigrate = await this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy);\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(this.props.availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Load and process Etherscan Txs\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n      await this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(this.props.availableTokens))\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(this.props.availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n\n    return (\n      <Box width={1}>\n        <Title mb={[3,4]}>{this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy</Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <>\n              {\n                this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        this.state.aggregatedValues.map((v,i) => (\n                          <Flex\n                            {...v.flexProps}\n                            flexDirection={'column'}\n                            key={`aggregatedValue_${i}`}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                py:[3,4],\n                                mb:[2,0]\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  v.props.children ? v.props.children : (\n                                    <Text\n                                      lineHeight={1}\n                                      fontWeight={[3,4]}\n                                      color={'copyColor'}\n                                      fontFamily={'counter'}\n                                      fontSize={[4,'1.7em']}\n                                      dangerouslySetInnerHTML={{ __html: v.props.value }}\n                                    >\n                                    </Text>\n                                  )\n                                }\n                                  <Flex\n                                    mt={2}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={[1,2]}\n                                      color={'cellText'}\n                                    >\n                                      {v.props.title}\n                                    </Text>\n                                  {\n                                    v.props.description && (\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={v.props.description}\n                                      >\n                                        <Icon\n                                          ml={2}\n                                          name={\"Info\"}\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                        />\n                                      </Tooltip>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </DashboardCard>\n                          </Flex>\n                        ))\n                      }\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.33]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.66]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.14],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        background: props.background ? props.background : 'url(images/bg-bottom-right.png) no-repeat bottom right',\n        backgroundSize: !props.background ? '65%' : null\n      }}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          mainColor={'white'}\n          contrastColor={'white'}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          width={ this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px']) }\n          style={ this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null) }\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      availableMethods[method] = globalConfigs.payments.methods[method];\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n                  if (!availableProviders || !availableProviders.length){\n                    return false;\n                  }\n\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton isMobile={ this.props.isMobile } key={`method_${method}`} {...methodInfo.props} imageProps={ imageProps } handleClick={ e => this.selectMethod(e,method) } />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    placeholder={'Select your country'}\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    value={this.state.selectedCountry}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    className={styles.gradientButton}\n                    borderRadius={4}\n                    my={2}\n                    mx={[0, 2]}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                    onClick={ e => this.goBack(e) }\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'primary'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:false,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,this.props.tokenConfig,this.props.account);\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    const newState = {\n      loading,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod,params) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback();\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // console.log('Migration params',oldIdleTokens,minAmountForRebalance,migrationContractInfo.name, migrationMethod, migrationParams);\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          // Send migration tx\n          this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                    }}\n                  >\n                    {\n                      this.state.migrationContractApproved ? (\n                        this.state.processing.migrate.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              hash={this.state.processing.migrate.txHash}\n                              endMessage={`Finalizing migration request...`}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                              waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                              sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                            />\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        )\n                      ) : (\n                        this.state.processing.approve.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              waitText={`Approve estimated in`}\n                              hash={this.state.processing.approve.txHash}\n                              endMessage={`Finalizing approve request...`}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                            />\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'LockOpen'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.approveText ? this.props.approveText : (\n                                  <>To migrate your { !this.props.isMigrationTool ? 'old' : '' } {this.state.oldTokenName} you need to approve our Smart-Contract first.</>\n                                )\n                              }\n                            </Text>\n                            <RoundButton\n                              buttonProps={{\n                                mt:3,\n                                width:[1,1/2]\n                              }}\n                              handleClick={this.approveMigration.bind(this)}\n                            >\n                              Approve\n                            </RoundButton>\n                          </Flex>\n                        )\n                      )\n                    }\n                  </DashboardCard>\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import IDLE from '../contracts/IDLE.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\n// import GovernorAlphaComp from '../contracts/GovernorAlpha.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.2',\n  baseURL: 'https://idle.finance',\n  baseToken: 'ETH',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        addPostfixForTestnet:true, // Append testnet to eventCategory\n        debugEnabled:false // Enable sending for test environments\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:4,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','y'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'YDAI+YUSDC+YUSDT+YTUSD',\n      token:'YDAI+YUSDC+YUSDT+YTUSD',\n      address:'0xdf5e0e81dff6faf3a7e52ba697820c5e32d806a8'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0xbbc81d23ea2c3ec7e56d39296f0cbb648873a5d3'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveSwap,\n      name:'idleCurveSwap',\n      address:'0x45F783CCE6B7FF23B2ab2D70e416cdb7D6055f51',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x16de59092dae5ccf4a1e6439d611fd0653f0bd01',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:6,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0xd6ad7a6750a7593e092a9b218d66c0a814a3436e',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:6,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0x83f798e925bcd4017eb265844fddabb448f1707d',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:2\n        },\n      },\n      idleTUSDYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'TUSD',\n        token:'idleTUSDYield',\n        address:'0x73a052500105205d34daf004eab301916da8190f',\n        migrationParams:{\n          n_coins:4,\n          coinIndex:3\n        },\n      },\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in earnings\n      aprTooltipMode:false,\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in earnings\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    /*\n    GovernanceCompound:{\n      abi:GovernorAlphaComp,\n      address:'0xc0da01a04c3f3e0be433606045bb7017a7323e38'\n    },\n    */\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#002868',\n          rgb:[0, 40, 104],\n          hsl:['217', '100%', '20%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'YDAI+YUSDC+YUSDT+YTUSD':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        label:'DyDx',\n        legend:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'iEarn'\n      },\n      aave:{\n        label:'Aave',\n        legend:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        },\n        data:{\n          '0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d':{},\n          '0x9ba00d6856a4edf4665bca2c2309936572473b7e':{\"9598633\":\"1000000\",\"9598646\":\"1000001\",\"9598684\":\"1000002\",\"9598823\":\"1000003\",\"9598869\":\"1000004\",\"9598915\":\"1000005\",\"9599092\":\"1000008\",\"9599138\":\"1000009\",\"9599263\":\"1000011\",\"9599267\":\"1000011\",\"9599295\":\"1000012\",\"9599299\":\"1000012\",\"9599307\":\"1000012\",\"9599315\":\"1000012\",\"9599579\":\"1000017\",\"9599866\":\"1000022\",\"9600156\":\"1000026\",\"9600433\":\"1000031\",\"9600704\":\"1000036\",\"9600982\":\"1000042\",\"9601051\":\"1000044\",\"9601073\":\"1000045\",\"9601077\":\"1000045\",\"9601345\":\"1000053\",\"9601619\":\"1000058\",\"9601891\":\"1000063\",\"9602144\":\"1000068\",\"9602429\":\"1000073\",\"9602724\":\"1000078\",\"9602993\":\"1000083\",\"9603272\":\"1000088\",\"9603536\":\"1000093\",\"9603826\":\"1000098\",\"9603840\":\"1000098\",\"9604038\":\"1000102\",\"9604182\":\"1000104\",\"9604457\":\"1000109\",\"9604701\":\"1000114\",\"9604979\":\"1000119\",\"9605247\":\"1000124\",\"9605505\":\"1000129\",\"9605793\":\"1000134\",\"9606073\":\"1000139\",\"9606368\":\"1000144\",\"9606639\":\"1000149\",\"9606896\":\"1000153\",\"9607147\":\"1000158\",\"9607406\":\"1000163\",\"9607722\":\"1000168\",\"9608130\":\"1000175\",\"9608395\":\"1000180\",\"9608656\":\"1000185\",\"9608959\":\"1000190\",\"9609544\":\"1000260\",\"9609811\":\"1000293\",\"9610073\":\"1000314\",\"9610341\":\"1000331\",\"9610601\":\"1000332\",\"9610871\":\"1000333\",\"9611120\":\"1000335\",\"9611386\":\"1000336\",\"9611665\":\"1000337\",\"9611949\":\"1000339\",\"9612210\":\"1000340\",\"9612487\":\"1000341\",\"9612758\":\"1000343\",\"9613012\":\"1000344\",\"9613276\":\"1000346\",\"9613542\":\"1000347\",\"9613824\":\"1000349\",\"9614069\":\"1000351\",\"9614327\":\"1000353\",\"9614596\":\"1000355\",\"9614864\":\"1000356\",\"9615111\":\"1000358\",\"9615394\":\"1000360\",\"9615679\":\"1000361\",\"9615958\":\"1000363\",\"9616245\":\"1000365\",\"9616531\":\"1000367\",\"9616803\":\"1000369\",\"9617053\":\"1000371\",\"9617326\":\"1000373\"}\n        }\n      },\n      curve:{\n        label:'',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:5000,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        1: 'https://mainnet.infura.io/v3/',\n        42: 'https://kovan.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY,\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829'\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  tools:{\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until it is converted to the Idle Token V4.',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens with Kyber Widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedCountries:['GBR','EUR'],\n        supportedTokens:['ETH','DAI','USDC'],\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      totalBalance:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Withdraw':\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let depositTimestamp = null;\n      deposits[selectedToken] = depositTimestamp;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!depositTimestamp){\n                depositTimestamp = tx.timeStamp;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            depositTimestamp = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = depositTimestamp;\n    });\n\n    return deposits;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n    const etherscanInfo = globalConfigs.network.providers.etherscan;\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hash.toLowerCase());\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hash.toLowerCase()] = tx;\n                }\n              });\n\n              // Save new etherscan txs\n              this.saveCachedRequest(etherscanBaseEndpoint,false,etherscanBaseTxs);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n\n        const etherscanTxsToStore = {};\n\n        Object.keys(etherscanTxs).forEach(txHash => {\n          const txInfo = etherscanTxs[txHash];\n          if (txInfo.blockNumber){\n            etherscanTxsToStore[txHash] = txInfo;\n          }\n        });\n\n        const cachedRequestData = {\n          data:{\n            result:etherscanTxsToStore\n          }\n        };\n\n        this.saveCachedRequest(etherscanBaseEndpoint,false,cachedRequestData);\n      }\n    }\n\n    // this.customLog('etherscanTxs',etherscanTxs);\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (enabledTokens.includes(tx.token.toUpperCase())) )\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true) => {\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        const isSwapOutTx = !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveEnabled && curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = curveEnabled && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = curveEnabled && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x2aa8f408dd1d4653ef3c5c38a4c9241e615d94b7208bbbe1d2e19b3053fae8de'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens);\n    }\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[]) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:new Date().getTime(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase()){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice/* && txHash.toLowerCase() !== '0x000000000000000000000000000'.toLowerCase()*/){\n          return false;\n        }\n        // const txFound = etherscanTxs.find(etherscanTx => (etherscanTx.hash === tx.transactionHash && etherscanTx.status === tx.status) );\n        // if (txFound){\n        //   return false;\n        // }\n\n        if (txPending && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = {};\n    // Check if already exists\n    if (localStorage && localStorage.getItem('cachedRequests')){\n      cachedRequests = JSON.parse(localStorage.getItem('cachedRequests'));\n    }\n\n    if (localStorage) {\n      const timestamp = parseInt(new Date().getTime()/1000);\n      cachedRequests[key] = {\n        data,\n        timestamp\n      };\n      return this.setLocalStorage('cachedRequests',JSON.stringify(cachedRequests));\n    }\n    return false;\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = {};\n    // Check if already exists\n    if (localStorage && localStorage.getItem('cachedRequests')){\n      cachedRequests = JSON.parse(localStorage.getItem('cachedRequests'));\n      // Check if it's not expired\n      if (cachedRequests && cachedRequests[key]){\n        return cachedRequests[key].data;\n      }\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=0,return_data=false,alias=false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(new Date().getTime()/1000);\n    let cachedRequests = {};\n    // Check if already exists\n    if (localStorage && localStorage.getItem('cachedRequests')){\n      cachedRequests = JSON.parse(localStorage.getItem('cachedRequests'));\n      // Check if it's not expired\n      if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n        return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n      }\n    }\n\n    const data = await axios\n                        .get(endpoint)\n                        .catch(err => {\n                          console.error('Error getting request');\n                        });\n    if (localStorage) {\n      cachedRequests[key] = {\n        data,\n        timestamp\n      };\n      this.setLocalStorage('cachedRequests',JSON.stringify(cachedRequests));\n    }\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = () => {\n    return this.getStoredItem('walletProvider',false,null);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    let output = await this.makeRequest(endpoint);\n    if (!output){\n      return [];\n    }\n\n    let data = output.data;\n    if (isRisk !== null){\n      data = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      data,\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n\n    if (!globalConfigs.contract.methods.rebalance.enabled || !tokenConfig){\n      return false;\n    }\n\n    const rebalancer = await this.genericContractCall(tokenConfig.idle.token, 'rebalancer');\n\n    if (!rebalancer){\n      return false;\n    }\n\n    const idleRebalancerInstance = await this.createContract('idleRebalancerInstance',rebalancer,globalConfigs.contract.methods.rebalance.abi);\n\n\n    if (!idleRebalancerInstance || !idleRebalancerInstance.contract){\n      return false;\n    }\n\n    // Take next protocols allocations\n    const allocationsPromises = [];\n    const availableTokensPromises = [];\n\n    for (let protocolIndex=0;protocolIndex<tokenConfig.protocols.length;protocolIndex++){\n      const allocationPromise = new Promise( async (resolve, reject) => {\n        try{\n          const allocation = await idleRebalancerInstance.contract.methods.lastAmounts(protocolIndex).call();\n          resolve({\n            allocation,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      allocationsPromises.push(allocationPromise);\n\n      const availableTokenPromise = new Promise( async (resolve, reject) => {\n        try {\n          const protocolAddr = await this.genericContractCall(tokenConfig.idle.token, 'allAvailableTokens', [protocolIndex]);\n          resolve({\n            protocolAddr,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      availableTokensPromises.push(availableTokenPromise);\n    }\n\n    let nextAllocations = null;\n    let allAvailableTokens = null;\n\n    try{\n      nextAllocations = await Promise.all(allocationsPromises);\n      allAvailableTokens = await Promise.all(availableTokensPromises);\n    } catch (error){\n      \n    }\n\n    nextAllocations = nextAllocations && nextAllocations.length ? nextAllocations.filter(v => (v !== null)) : null;\n    allAvailableTokens = allAvailableTokens && allAvailableTokens.length ? allAvailableTokens.filter(v => (v !== null)) : null;\n\n    if ((!allAvailableTokens || !allAvailableTokens.length) || (!nextAllocations || !nextAllocations.length)){\n      return false;\n    }\n\n    // Merge nextAllocations and allAvailableTokens\n    let newTotalAllocation = this.BNify(0);\n    const newProtocolsAllocations = allAvailableTokens.reduce((accumulator,availableTokenInfo) => {\n      if (availableTokenInfo.protocolAddr){\n        const nextAllocation = nextAllocations.find(v => { return v.protocolIndex === availableTokenInfo.protocolIndex; });\n        if (nextAllocation){\n          const allocation = this.BNify(nextAllocation.allocation);\n          accumulator[availableTokenInfo.protocolAddr.toLowerCase()] = allocation;\n          newTotalAllocation = newTotalAllocation.plus(allocation);\n        }\n      }\n      return accumulator;\n    },{});\n\n    // Check if newAllocations differs from currentAllocations\n    let shouldRebalance = false;\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    const protocolsAllocationsPerc = tokenAllocation ? tokenAllocation.protocolsAllocationsPerc : null;\n\n    if (typeof protocolsAllocationsPerc === 'object'){\n      Object.keys(protocolsAllocationsPerc).forEach((protocolAddr) => {\n\n        // Get current protocol allocation percentage\n        const protocolAllocation = protocolsAllocationsPerc[protocolAddr];\n        const protocolAllocationPerc = parseFloat(protocolAllocation).toFixed(3);\n        \n        // Calculate new protocol allocation percentage\n        const newProtocolAllocation = newProtocolsAllocations[protocolAddr.toLowerCase()] ? newProtocolsAllocations[protocolAddr.toLowerCase()] : this.BNify(0);\n        const newProtocolAllocationPerc = newProtocolAllocation ? parseFloat(newProtocolAllocation.div(newTotalAllocation)).toFixed(3) : this.BNify(0);\n\n        // this.customLog(protocolAddr,protocolAllocation.toString(),newProtocolAllocation.toString(),newTotalAllocation.toString(),protocolAllocationPerc,newProtocolAllocationPerc);\n\n        if (protocolAllocationPerc !== newProtocolAllocationPerc){\n          shouldRebalance = true;\n        }\n      });\n    }\n\n    return shouldRebalance;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      // this.customLog('executeMetaTransaction', [userAddress, functionSignature, messageToSign, `${messageToSign.length}`, r, s, v]);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  sendBiconomyTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const value = this.props.web3.utils.toWei('0','ether');\n    const allowance = await this.getAllowance(contractName,contractAddr,walletAddr);\n    return allowance && this.BNify(allowance).gt(this.BNify(value.toString()));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    // const contract = this.getContractByName(contractName);\n    // this.customLog('enableERC20',contractName,contract,address);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(new Date().getTime()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n          if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n            output = tokenAllocation.totalAllocationWithUnlent;\n          }\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // this.customLog('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [daysFirstDeposit,earningsPerc] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        // output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        const amountLents = account ? await this.getAmountLent([token],account) : false;\n        if (amountLents && amountLents[token]){\n          output = amountLents[token];\n        }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account),\n          this.loadAssetField('amountLent',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [idleTokenPrice1,idleTokenBalance2,govTokensBalance] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token),\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n\n            let redeemableBalance = tokenBalance;\n\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n\n            output = redeemableBalance;\n\n            // this.customLog('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance.toFixed(4),output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedData(cachedDataKey);\n      if (cachedData !== null && !this.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    if (blockNumber !== 'latest'){\n      this.setCachedData(cachedDataKey,tokenPrice);\n    }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=120) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      // this.customLog('setCachedData',key);\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  getCachedData = (key,defaultValue=null) => {\n    if (this.props.cachedData && this.props.cachedData[key.toLowerCase()]){\n      const cachedData = this.props.cachedData[key.toLowerCase()];\n      if (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(new Date().getTime()/1000)){\n        return cachedData.data;\n      }\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      // Set cached data\n      return this.setCachedData(cachedDataKey,tokenBalance);\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address !== null ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address) => {\n    return await this.getProtocolBalance(contractName,address);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationWithUnlent:null\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.protocolsBalances = protocolsBalances;\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n    try {\n      const WETHAddr = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n      const one = this.normalizeTokenDecimals(18);\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),[tokenConfigFrom.address, WETHAddr, tokenConfigDest.address]]);\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',tokenConfigDest.address,price);\n        return price;\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveSwapContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          return this.setCachedData(cachedDataKey,curveApy);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveSwapContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,tokenConfig.decimals);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = tokenBalance;\n      });\n    }\n\n    return tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18)\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [virtualPrice,tokenAmount] = await Promise.all([\n        this.genericContractCall(migrationContract.name,'get_virtual_price'),\n        this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // this.customLog('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        // console.log('getCompAPR 3',cTokenInfo.token,compConversionRate.toString(),compDistribution.toString(),compValue.toString(),tokenAllocation.totalAllocationConverted.toString(),compAPR.toString()+'%');\n\n        this.setCachedData(cachedDataKey,compAPR);\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            this.setCachedData(cachedDataKey,compDistribution);\n\n            return compDistribution;\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency) => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      switch (frequency){\n        case 'day':\n          const blocksPerDay = blocksPerYear.div(365.242199);\n          speed = speed.times(blocksPerDay);\n        break;\n        case 'week':\n          const blocksPerWeek = blocksPerYear.div(52.1429);\n          speed = speed.times(blocksPerWeek);\n        break;\n        case 'month':\n          const blocksPerMonth = blocksPerYear.div(12);\n          speed = speed.times(blocksPerMonth);\n        break;\n        case 'year':\n          speed = speed.times(blocksPerYear);\n        break;\n        default:\n        break;\n      }\n      return speed;\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (compoundInfo){\n                  if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return govTokensEarnings;\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const totalAllocation = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(totalAllocation);\n          // console.log(tokenConfig.idle.token+'V4',totalAllocation.toFixed(5));\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(totalAllocation.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(totalAllocation.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4',govToken,tokenBalanceConverted.toFixed(5));\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && tokenData[conversionRateField]){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        return this.setCachedData(cachedDataKey,conversionRate);\n      }\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true);\n\n    if (tokenData){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(new Date().getTime()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          return this.setCachedData(cachedDataKey,tokenScore);\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n    let compAPR = null;\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null,\n      protocolsAprs,\n      protocolsApys\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      if (compAPR){\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(compAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(compAPR);\n      }\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n    }\n\n    // const avgAPR = await this.genericContractCall(tokenConfig.idle.token,'getAvgAPR');\n\n    return this.setCachedData(cachedDataKey,tokenAprs);\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink pb={[3,2]} href={'https://developers.idle.finance'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Developers</ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Terms of Service</Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Privacy Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Cookie Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Brand Assets</ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Overview</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Proposals</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Leaderboard</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Forum</Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>info@idle.finance</Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'white'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              fontWeight={3}\n              color={this.props.isOpened ? 'blue' : 'dark-gray'}\n              my={0}>\n                {this.props.question}\n              </Heading.h4>\n          </Box>\n          <Flex width={1/5} justifyContent={'flex-end'}>\n            <Icon\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n              color={this.props.isOpened ? 'blue' : 'copyColor'}\n              size={\"1.5em\"}\n            />\n          </Flex>\n        </Flex>\n        <Flex width={1}>\n          {this.props.isOpened &&\n            <Text.p textAlign={'justify'} fontSize={[1,2]} dangerouslySetInnerHTML={{ __html: this.props.answer }}></Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Faquestion from '../Faquestion/Faquestion';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Faq extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection: 'general',\n    generalQuestions: [\n      {\n        q: 'What is Idle?',\n        a: `Idle is a decentralized rebalancing protocol that allows users to automatically and algorithmically manage their digital asset allocation among different third-party DeFi protocols. You can choose to maximize your interest rate returns through our MaxYield strategy or minimize your risk exposure through our RiskAdjusted allocation strategy.`\n      },\n      {\n        q: 'What third-party protocols and assets does Idle support?',\n        a: `Idle connects with Compound, Aave, dYdX, Fulcrum, and DSR, and supports DAI, USDC and USDT.  Security is fundamental at Idle, meaning that our products will only connect to protocols that are audited by a top security firm and battle-tested in terms of time in market and digital assets locked. To add more security, we passed through multiple audit reviews and we use <a href=\"https://defiscore.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">DeFiScore</a> risk assessment to evaluate the risk across DeFi protocols.`\n      },\n      {\n        q: 'Can you walk me through an example?',\n        a: `When utilizing the Idle protocol, a user supplies capital for lending as a part of Idle’s non-custodial smart contract pools; the protocol will automatically rebalance the pool’s current allocation to achieve optimized interest rates, based on the strategy.`\n      }\n    ],\n    guidelinesQuestions: [\n      {\n        q: 'How do I manage my assets?',\n        a: `You can access Idle’s user dashboard where you can deposit funds, monitor performances and see insights, rebalance funds, convert from FIAT to crypto, and redeem back your assets.`\n      },\n      {\n        q: 'How does the rebalancing process work?',\n        a: `A rebalance calculation involves assessing the total assets within a pool, incorporating underlying protocol rate functions and levels of supply and demand, and finally determining an allocation that achieves the optimal interest rate possible after the rebalance takes place, based on the strategy.`\n      },\n      {\n        q: 'What are IdleTokens?',\n        a: `IdleTokens represent your balance in the protocol, and accrue interest over time. As a specific Idle’s pool earns interest, its idleToken becomes convertible into an increasing quantity of the underlying asset. IdleTokens conform to the ERC-20 standard.`\n      }\n    ],\n    ratesQuestions: [\n      {\n        q: 'Has Idle had a security audit?',\n        a: `Idle completed multiple and incremental security audits with Quantstamp in December 2019 and April/May 2020 (<a href=\"https://certificate.quantstamp.com/full/idle-finance\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">view the report</a>). Any issues affecting the performance of the protocol or security of funds have been resolved. Users should review our Terms of Service before using the protocol.`\n      },\n      {\n        q: 'How are digital assets custodied?',\n        a: `Idle does not custody digital assets. When you interact with the Idle protocol, your digital assets will be sent to a smart contract that Idle does not control. The smart contract has the concept of “accounts,” to which only you have access. These accounts have balances for each asset, which then are lent out to underlying protocols. When you want to withdraw, the smart contract interacts with the underlying platforms to withdraw digital assets and route them to your wallet.`\n      },\n      {\n        q: 'Who is the administrator of the Idle smart contract?',\n        a: `We have few administrative privileges (eg pause deposits in case of emergency), but we cannot, in any case, withdraw or move user funds directly. You can read more about here <a href=\"https://developers.idle.finance/advanced/admin-powers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developers.idle.finance/advanced/admin-powers</a>`\n      }\n    ]\n  };\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const {generalQuestions, selectedSection, guidelinesQuestions, ratesQuestions} = this.state;\n    const generalDivs = generalQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`general-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const guidelinesDivs = guidelinesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`guidelines-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const ratesDivs = ratesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`rates-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const isGeneralSelected = selectedSection === 'general';\n    const isGuidelinesSelected = selectedSection === 'guidelines';\n    const isRatesSelected = selectedSection === 'rates';\n    return (\n      <Flex\n        flexDirection={'column'}\n      >\n        <Title\n          mb={3}\n          mt={[3,4]}\n          fontWeight={5}\n          fontSize={[5,6]}\n          component={Heading.h4}\n        >\n          Frequently asked questions\n        </Title>\n\n        <Flex\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n          alignItems={'center'}\n        >\n          <Flex width={[1,3/5]} px={[2,0]} flexDirection={'row'} justifyContent={'space-between'}>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGeneralSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('general')}\n                color={isGeneralSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGeneralSelected ? 'selected' : '']}\n              >\n                General\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGuidelinesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('guidelines')}\n                color={isGuidelinesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGuidelinesSelected ? 'selected' : '']}\n              >\n                Liquidity Providers\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isRatesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('rates')}\n                color={isRatesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isRatesSelected ? 'selected' : '']}\n              >\n                Security\n              </Text>\n            </Flex>\n          </Flex>\n          <Box width={1} mt={[3, 4]} mb={[4, 0]}>\n            {isGeneralSelected && generalDivs}\n            {isGuidelinesSelected && guidelinesDivs}\n            {isRatesSelected && ratesDivs}\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faq;\n","import React, { Component } from 'react';\nimport { Flex, Link, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FlexCards extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    const itemPerc = this.props.itemsPerRow ? Math.floor(100/this.props.itemsPerRow)-2 : Math.floor(100/this.props.cards.length)-1;\n    const justifyContent = this.props.justifyContent ? this.props.justifyContent : 'space-between';\n\n    return (\n      <Flex\n        width={1}\n        px={[3,0]}\n        style={{\n          flexWrap:'wrap'\n        }}\n        alignItems={'flex-start'}\n        justifyContent={justifyContent}\n        flexDirection={['column','row']}\n      >\n        {\n          this.props.cards.map( (p,index) => (\n            <DashboardCard\n              isInteractive={true}\n              key={`card_${index}`}\n              cardProps={{\n                p:2,\n                mb:[2,3],\n                display:'flex',\n                alignItems:'center',\n                height:['65px','80px'],\n                justifyContent:'center',\n                mx: justifyContent !== 'space-between' ? [0,2] : 0,\n                style:{\n                  textAlign:'center',\n                  flex:this.props.isMobile ? null : `0 ${itemPerc}%`,\n                }\n              }}\n            >\n              {\n                p.link ? (\n                  <Link\n                    px={[5,4]}\n                    style={{\n                      width:'100%',\n                      height:'100%',\n                      display:'flex',\n                      alignItems:'center',\n                      justifyContent:'center',\n                    }}\n                    href={p.link}\n                    target={'_blank'}\n                    textAlign={'center'}\n                    rel={'nofollow noopener noreferrer'}\n                  >\n                    <Image\n                      src={p.image}\n                      width={'auto'}\n                      height={'auto'}\n                      maxHeight={'50px'}\n                    />\n                  </Link>\n                ) : (\n                  <Image\n                    src={p.image}\n                    width={'auto'}\n                    height={'auto'}\n                    maxHeight={['35px','50px']}\n                  />\n                )\n              }\n            </DashboardCard>\n            \n          ) )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexCards;","import React, { Component } from 'react';\nimport { Flex, Text, Link, Icon } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass AuditCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          my:[2,0],\n          mx:[0,3],\n          width:[1,'auto']\n        }}\n        isInteractive={this.props.link ? true : false}\n        handleClick={this.props.link ? e => window.open(this.props.link) : null}\n      >\n        <Flex\n          flexDirection={'column'}\n        >\n          <Text\n            mb={2}\n            color={'blue'}\n            fontSize={[1,3]}\n          >\n            {this.props.date}\n          </Text>\n          <Text\n            mb={2}\n            fontSize={4}\n            fontWeight={500}\n          >\n            {this.props.title}\n          </Text>\n          <Link\n            hoverColor={'blue'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'center'\n            }}\n          >\n            VIEW REPORT\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'blue'}\n              style={{\n                transform:'rotate(180deg)'\n              }}\n              name={'KeyboardBackspace'}\n            />\n          </Link>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default AuditCard;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './HowItWorks.module.scss';\nimport { Box, Flex, Heading, Image } from \"rimble-ui\";\n\nclass HowItWorks extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Box\n        p={[3,4]}\n        id={'how-it-works'}\n      >\n        <Flex flexDirection={['column','column']} alignItems={'center'} justifyContent={'center'}>\n          <Title\n            mt={[3,4]}\n            mb={[3,4]}\n            fontWeight={5}\n            fontSize={[5,6]}\n            component={Heading.h4}\n          >\n            How it works\n          </Title>\n          <Flex\n            width={1}\n            alignItems={'center'}\n            maxWidth={['24em','90em']}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/choose-strategy.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Choose your strategy\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Build your portfolio with different allocation strategies that aim to maximize your returns and keeping you in your risk comfort zone\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/deposit-stablecoins.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Deposit your crypto-assets\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Just deposit and relax. Your funds will be automatically allocated among DeFi protocols and you will immediately start earning interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/rebalance.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Automated Rebalancing\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Idle automatically keeps the appropriate allocation mix, depending on the strategy. Idle consistently checks for better opportunities.\n                </Heading.h4>\n              </Box>\n            </Flex>\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/insights-redeem.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Easy insights and redeem\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Monitor your funds’ performance and rebalance events, see your estimated earnings and easlily redeem back your funds + interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default HowItWorks;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Link, Icon, Tooltip, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StrategyBox extends Component {\n\n  state = {\n    selectedToken:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.getHighestAprToken();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.getHighestAprToken();\n    }\n  }\n\n  getHighestAprToken = async () => {\n\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n\n    if (!this.props.contractsInitialized || strategyInfo.comingSoon){\n      return false;\n    }\n\n    let selectedToken = null;\n    let highestValue = null;\n    const tokensAprs = {};\n    const availableTokens = this.props.availableStrategies[this.props.strategy];\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      switch (this.props.strategy){\n        case 'best':\n        default:\n          const tokenAPR = await this.functionsUtil.getTokenAprs(tokenConfig);\n          if (tokenAPR && tokenAPR.avgApr !== null){\n            tokensAprs[token] = tokenAPR.avgApr;\n            if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n              highestValue = tokenAPR.avgApr;\n              selectedToken = token;\n            }\n          }\n        break;\n        case 'risk':\n        const tokenScore = await this.functionsUtil.getTokenScore(tokenConfig,true);\n          if (!highestValue || highestValue.lt(tokenScore)){\n            highestValue = tokenScore;\n            selectedToken = token;\n          }\n        break;\n      }\n    });\n\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n    const strategyUrl = '/#'+this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+this.props.strategy;\n    // const chartColor = strategyInfo.chartColor ? strategyInfo.chartColor : null;\n    const tokenConfig = this.state.selectedToken ? this.props.availableStrategies[this.props.strategy][this.state.selectedToken] : null;\n\n    return (\n      <DashboardCard\n        cardProps={{\n          pt:[3,3],\n          mt:[3,0],\n          ml:['0.35em',0],\n          width:[1,'21em'],\n          mr:['0.35em','2em'],\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'flex-start',\n          height:['fit-content','400px']\n        }}\n        isVisible={ typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true }\n      >\n        <Flex\n          mb={2}\n          justifyContent={'center'}\n        >\n          <Image\n            src={strategyInfo.icon}\n            height={['2.2em','2.8em']}\n          />\n        </Flex>\n        <Flex\n          my={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n        >\n          <Title\n            fontWeight={5}\n            fontSize={[4,'1.7em']}\n          >\n            {strategyInfo.title}\n          </Title>\n        </Flex>\n        <Flex\n          mt={2}\n          mb={[2,3]}\n          minHeight={'50px'}\n          alignItems={'flex-start'}\n          justifyContent={'center'}\n        >\n          <Text\n            px={[3,4]}\n            fontWeight={500}\n            textAlign={'center'}\n          >\n            {strategyInfo.desc}\n          </Text>\n        </Flex>\n        {\n          strategyInfo.comingSoon ? (\n            <Flex\n              mt={3}\n              mb={[0,3]}\n              height={'126px'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n              alignItems={['flex-end','end']}\n            >\n              <Image\n                width={1}\n                src={'/images/strategy-placeholder.jpg'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              mt={[0,3]}\n              flexDirection={'row'}\n              alignItems={'flex-start'}\n              justifyContent={'center'}\n              minHeight={['69px','88px']}\n            >\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                borderRight={`1px solid ${this.props.theme.colors.divider}`}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    APY\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <AssetField\n                  fieldInfo={{\n                    name:'apy',\n                    showTooltip:false,\n                    props:{\n                      decimals:2,\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n                <AssetField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'idleDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    SCORE\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','scoreShort'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <AssetField\n                  fieldInfo={{\n                    name:'score',\n                    props:{\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !strategyInfo.comingSoon && \n            <Flex\n              mt={2}\n              width={1}\n              height={'60px'}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n              id={`${this.props.strategy}_performance_chart`}\n            >\n              <Image\n                width={1}\n                height={'60px'}\n                src={`/images/strategies/${this.props.strategy}-chart.png`} />\n              {\n                /*\n                <AssetField\n                  fieldInfo={{\n                    name:'aprChart'\n                  }}\n                  chartProps={{\n                    lineWidth:2\n                  }}\n                  {...this.props}\n                  color={chartColor}\n                  tokenConfig={tokenConfig}\n                  token={this.state.selectedToken}\n                  rowId={`${this.props.strategy}_performance_chart`}\n                />\n                */\n              }\n            </Flex>\n        }\n        <Flex\n          width={1}\n          height={'64px'}\n          position={'relative'}\n          boxShadow={'0px -6px 6px -4px rgba(0,0,0,0.1)'}\n        >\n          {\n            strategyInfo.comingSoon ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mr={2}\n                  fontSize={3}\n                  fontWeight={550}\n                  color={'copyColor'}\n                  style={{\n                    fontStyle:'italic'\n                  }}\n                  hoverColor={'copyColor'}\n                >\n                  Coming Soon\n                </Text>\n              </Flex>\n            ) : (\n              <Link\n                href={strategyUrl}\n                style={{display:'flex',width:'100%'}}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mr={2}\n                      fontSize={3}\n                      fontWeight={4}\n                      color={'copyColor'}\n                      hoverColor={'copyColor'}\n                    >\n                      Start with {strategyInfo.title}\n                    </Text>\n                    <Icon\n                      size={'1.2em'}\n                      color={'copyColor'}\n                      name={'ArrowForward'}\n                    />\n                  </Flex>\n              </Link>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StrategyBox;\n","import React, { Component } from \"react\";\nimport { Flex, Box, Button, Form, Text, Checkbox, Link } from 'rimble-ui';\nimport axios from 'axios';\nimport styles from './NewsletterForm.module.scss';\nimport globalConfigs from '../configs/globalConfigs';\n\nclass NewsletterForm extends Component {\n  state = {\n    validated: false,\n    privacy: false,\n    email: null,\n    message: ''\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { validated: false };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.privacy){\n      this.setState({message:'Please check the privacy policy box to proceed.', messageColor:'red' });\n      return false;\n    }\n\n    this.setState({validated:true });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      if (r.data.status === 'success'){\n        this.setState({message:'Thanks! Check your e-mail and confirm your subscription', messageColor:'green' });\n      } else {\n        this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n      }\n    })\n    .catch(err => {\n      this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n    });\n  }\n\n  toggleCheckbox(e) {\n    this.setState({ privacy: e.target.checked });\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n\n    return (\n        <Box mt={[2,3]} maxWidth={'45em'} width={1}>\n          <Form onSubmit={this.handleSubmit}>\n            <Flex flexDirection={['column','row']} alignItems={['center','flex-start']} justifyContent={'center'}>\n              <Box width={[1,7/10]}>\n                <Form.Field width={1} label={''}>\n                  <Form.Input\n                    type=\"email\"\n                    name=\"EMAIL\"\n                    required\n                    width={1}\n                    outline={'none'}\n                    border={0}\n                    fontSize={[2,5]}\n                    borderRadius={0}\n                    pl={0}\n                    pb={3}\n                    textAlign={['center','left']}\n                    placeholder={'Enter your e-mail'}\n                    boxShadow={'none !important'}\n                    borderBottom={'1px solid #a6a6a6'}\n                    onChange={this.handleValidation}\n                  />\n                </Form.Field>\n                <Flex mb={[3,0]} flexDirection={'row'} alignItems={'center'}>\n                  <Checkbox onClick={ e => this.toggleCheckbox(e) } label={'I\\'ve read and accepted the'} required />\n                  <Link color={'blue'} hoverColor={'blue'} target={'_blank'} rel=\"nofollow noopener noreferrer\" href={\"https://www.iubenda.com/privacy-policy/61211749\"}>Privacy Policy</Link>\n                </Flex>\n                {this.state.message && this.state.message.length &&\n                  <Text.p py={0} mt={[2,3]} mb={3} textAlign={['center','left']} color={this.state.messageColor}>{this.state.message}</Text.p>\n                }\n              </Box>\n              <Box width={[1,3/10]} my={[0,'26px']}>\n                <Button className={styles.gradientButton} type=\"submit\" width={1}>\n                  GET UPDATES\n                </Button>\n              </Box>\n            </Flex>\n          </Form>\n        </Box>\n    );\n  }\n}\nexport default NewsletterForm;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      boxShadow:1,\n      width:'40px',\n      height:'40px',\n      mainColor:'white',\n      borderRadius:'50%',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Flex, ToastMessage, Link, Icon } from \"rimble-ui\";\n\nclass FloatingToastMessage extends Component {\n  state = {}\n\n  render() {\n    let ToastComponent = null;\n\n    switch (this.props.variant){\n      case 'success':\n        ToastComponent = ToastMessage.Success;\n      break;\n      case 'processing':\n        ToastComponent = ToastMessage.Processing;\n      break;\n      case 'failure':\n        ToastComponent = ToastMessage.Failure;\n      break;\n      default:\n      break;\n    }\n\n    if (ToastComponent){\n      return (\n        <Flex width={ !this.props.isMobile ? '420px': '100vw' } position={'fixed'} zIndex={'9999'} p={ !this.props.isMobile ? '1em' : 0 } right={'0'} bottom={'0'}>\n          <ToastComponent\n            style={{width:'100%'}}\n            message={this.props.message}\n            secondaryMessage={this.props.secondaryMessage}\n            closeElem={false}\n          />\n          <Link onClick={this.props.handleClose} style={ this.props.isMobile ? {position:'absolute',top:'10px',right:'10px',width:'20px',height:'20px'} : {position:'absolute',top:'22px',right:'22px',width:'16px',height:'16px'}}>\n            <Icon\n              name={'Close'}\n              color={'dark-gray'}\n              size={ this.props.isMobile ? '20' : '16' }\n            />\n          </Link>\n        </Flex>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default FloatingToastMessage;","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport { Box, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const {\n      avgAPY,\n      totalAUM\n    } = await this.functionsUtil.getAggregatedStats();\n\n    const totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n\n    this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              {\n                this.props.subtitle ? this.props.subtitle : (\n                  <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>Assets Under Management <Text.span color={'cellTitle'} fontWeight={3} fontSize={'70%'}>(V3 + V4)</Text.span></Text.span>\n                )\n              }\n            </Title>\n          )\n        }\n      </Box>\n    ) : null;\n  }\n}\n\nexport default AssetsUnderManagement;\n","import Faq from '../Faq/Faq';\nimport Title from '../Title/Title';\nimport Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport ExtLink from '../ExtLink/ExtLink';\nimport styles from './Landing.module.scss';\nimport FlexCards from '../FlexCards/FlexCards';\nimport AuditCard from '../AuditCard/AuditCard';\nimport HowItWorks from '../HowItWorks/HowItWorks';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport StrategyBox from '../StrategyBox/StrategyBox';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport NewsletterForm from '../NewsletterForm/NewsletterForm';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport { Image, Flex, Box, Heading, Link, Text, Icon } from 'rimble-ui';\nimport FloatingToastMessage from '../FloatingToastMessage/FloatingToastMessage';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nlet scrolling = false;\n\nclass Landing extends Component {\n  state = {\n    avgApr:null,\n    carouselMax:2,\n    carouselIndex:0,\n    activeCarousel:1,\n    runConfetti:false,\n    activeBullet:null,\n    protocolsAprs:null,\n    testPerformed:false,\n    totalAllocation:null,\n    carouselOffsetLeft:0,\n    setActiveCarousel:null,\n    carouselIntervalID:null,\n    protocolsAllocations:null,\n    randomAllocationEnabled:false,\n  };\n\n  // Clear all the timeouts\n  async componentWillUnmount(){\n\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  setActiveCarousel = (activeCarousel) => {\n    activeCarousel = activeCarousel<=3 ? activeCarousel : 1;\n    this.setState({activeCarousel});\n  }\n\n  async componentDidMount(){\n    this.props.processCustomParam(this.props);\n\n    if (this.props.contractsInitialized){\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const multiplier = this.props.isMobile ? 1 : 0.75;\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left*multiplier)+'px';\n\n    this.setState({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n    this.props.processCustomParam(this.props,prevProps);\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (contractsInitialized) {\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  processScrolling = () => {\n    if (scrolling){\n\n      const bulletCards = document.getElementsByClassName('bulletCard');\n      let activeBullet = 0;\n\n      for (let i=0;i<bulletCards.length;i++){\n        const bulletCard = bulletCards[i];\n        if (bulletCard && bulletCard.offsetParent){\n          const offsetY = bulletCard.offsetTop ? bulletCard.offsetTop : bulletCard.offsetParent.offsetTop;\n          if (window.scrollY >= offsetY-200){\n            activeBullet = i+2;\n          }\n        }\n      }\n      scrolling = false;\n\n      if (parseInt(activeBullet) !== parseInt(this.state.activeBullet)){\n        this.setState({activeBullet});\n      }\n    }\n  };\n\n  getAllocations = async () => {\n\n    let totalAllocation = this.functionsUtil.BNify(0);\n\n    const newState = {\n      avgApr: null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.functionsUtil.asyncForEach(this.props.tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [protocolBalance, tokenDecimals, exchangeRate] = await Promise.all([\n        this.functionsUtil.getProtocolBalance(contractName),\n        this.functionsUtil.getTokenDecimals(contractName),\n        ( protocolInfo.functions.exchangeRate ? this.functionsUtil.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.functionsUtil.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      const protocolAllocation = this.functionsUtil.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n    });\n\n    if (this.state.randomAllocationEnabled){\n      let remainingAllocation = parseFloat(totalAllocation.toString());\n      const totProtocols = Object.keys(protocolsAllocations).length;\n      Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n        let alloc = parseFloat(protocolsAllocations[protocolAddr].toString());\n        if (i === totProtocols-1){\n          alloc = remainingAllocation;\n        } else {\n          alloc = parseFloat(Math.random()*(remainingAllocation-(remainingAllocation/3))+(remainingAllocation/3));\n          remainingAllocation -= alloc;\n        }\n        protocolsAllocations[protocolAddr] = this.functionsUtil.BNify(alloc);\n      });\n    }\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    newState.totalAllocation = totalAllocation;\n    newState.protocolsAllocations = protocolsAllocations;\n    newState.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (this.state.protocolsAprs){\n      newState.avgApr = this.functionsUtil.getAvgApr(this.state.protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    this.setState(newState);\n\n    return newState;\n  }\n\n  getAprs = async () => {\n    const Aprs = await this.functionsUtil.genericIdleCall('getAPRs');\n\n    if (!Aprs){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n    const protocolsAprs = {};\n\n    this.props.tokenConfig.protocols.forEach((info,i) => {\n      // const protocolName = info.name;\n      const protocolAddr = info.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        const protocolApr = aprs[addrIndex];\n        protocolsAprs[protocolAddr] = this.functionsUtil.BNify(+this.functionsUtil.toEth(protocolApr));\n      }\n    });\n\n    const newState = {\n      avgApr: null,\n      protocolsAprs\n    };\n\n    if (this.state.protocolsAllocations && this.state.totalAllocation){\n      newState.avgApr = this.functionsUtil.getAvgApr(protocolsAprs,this.state.protocolsAllocations,this.state.totalAllocation);\n    }\n\n    this.setState(newState);\n    return newState;\n  };\n\n  startLending = async e => {\n    this.props.updateSelectedTab(e, '1');\n    window.location.href = '#invest';\n  }\n\n  setConfetti = (runConfetti) => {\n    this.setState({\n      runConfetti\n    })\n  }\n\n  connectAndGoToRoute = (route) => {\n\n    const goToLocation = () => {\n      window.location = \"/#\"+route;\n    }\n\n    if (this.props.account){\n      goToLocation();\n    } else {\n      this.props.connectAndValidateAccount(goToLocation);\n    }\n  }\n\n  render() {\n    const { network } = this.props;\n    const availableTokens = [];\n    Object.values(this.props.availableStrategies).forEach( tokens => {\n      Object.keys(tokens).forEach( token => {\n        if (availableTokens.indexOf(token) === -1){\n          availableTokens.push(token);\n        }\n      });\n    });\n    return (\n      <Box\n        height={'100vh'}\n        className={styles.mainViewport}\n        style={{\n          paddingBottom: !network.isCorrectNetwork ? \"8em\" : \"0\"\n        }}\n      >\n        <Box\n          pl={[3,5]}\n          pr={[3,0]}\n          pt={['2.5em', '3em']}\n          className={styles.headerContainer}\n          minHeight={ Math.max((this.props.innerHeight+this.props.innerHeight*0.025),768) }\n        >\n          <Box position={'relative'} zIndex={10}>\n            <Flex\n              overflow={'hidden'}\n              alignItems={'flex-start'}\n              flexDirection={['column','row']}\n              mt={['7em',Math.max(window.innerHeight*0.225,145)+'px']}\n            >\n              <Flex\n                width={[1,1/3]}\n                justifyContent={['center','flex-end']}\n              >\n                <Flex\n                  pb={3}\n                  width={1}\n                  textAlign={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['50em', '24em']}\n                  alignItems={['center','flex-start']}\n                >\n                  <Heading.h1\n                    fontWeight={5}\n                    color={'white'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    lineHeight={['initial','2.5rem']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    The best place\n                  </Heading.h1>\n                  <Heading.h1\n                    mb={[2,3]}\n                    color={'white'}\n                    fontWeight={300}\n                    lineHeight={'initial'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    for your money\n                  </Heading.h1>\n                  <Heading.h2\n                    style={{\n                      width:'100%',\n                    }}\n                    color={'white'}\n                    fontWeight={400}\n                    fontSize={[2,'1.2em']}\n                    textAlign={['center','justify']}\n                  >\n                    Choose your strategy and earn the yield you deserve without worry about finding the best option, either if you want to optimize returns or risks.\n                  </Heading.h2>\n                  {\n                    !this.props.isMobile && \n                      <Flex\n                        mt={4}\n                      >\n                        <RoundButton\n                          handleClick={ (e) => {\n                            window.location.hash = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.functionsUtil.getGlobalConfig(['strategies']))[0];\n                          }}\n                        >\n                          Go to Dashboard\n                        </RoundButton>\n                      </Flex>\n                  }\n                </Flex>\n              </Flex>\n              <Flex\n                mr={['auto',0]}\n                width={[1,2/3]}\n                ml={[0,'100px']}\n                textAlign={'center'}\n                position={'relative'}\n                flexDirection={'column'}\n                height={['415px','460px']}\n                justifyContent={['flex-start','flex-end']}\n              >\n                <Flex\n                  left={0}\n                  right={0}\n                  width={'100%'}\n                  height={'400px'}\n                  top={['initial','0']}\n                  position={'absolute'}\n                  bottom={['0','initial']}\n                  overflow={this.state.carouselIndex === 0 ? 'visible' : 'hidden'}\n                >\n                  <Flex\n                    top={['initial',0]}\n                    flexDirection={'row'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={[Object.keys(globalConfigs.strategies).length*100+'%','140%']}\n                    height={['auto','400px']}\n                    bottom={['5px','initial']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      overflowY:'visible',\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    {\n                      Object.keys(globalConfigs.strategies).map((strategy,strategyIndex) => (\n                        <StrategyBox\n                          {...this.props}\n                          strategy={strategy}\n                          key={`strategy_${strategy}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  mt={[0,'20px']}\n                  id={'carousel-container'}\n                  justifyContent={['center','flex-start']}\n                >\n                  <RoundIconButton\n                    buttonProps={{\n                      mr:[4,3]\n                    }}\n                    iconName={'ArrowBack'}\n                    disabled={this.state.carouselIndex === 0}\n                    handleClick={ e => this.handleCarousel('back') }\n                  />\n                  <RoundIconButton\n                    iconName={'ArrowForward'}\n                    handleClick={ e => this.handleCarousel('next') }\n                    disabled={this.state.carouselIndex === this.state.carouselMax}\n                  />\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <HowItWorks />\n\n        <Box\n          mb={[3,4]}\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'partners'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Audited and Battle-tested\n            </Title>\n            <Text\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              We take security very seriously, that's why our Smart-Contracts are fully Audited and battle-tested.\n            </Text>\n            <Flex\n              width={1}\n              px={[3,4]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetsUnderManagement\n                {...this.props}\n                counterStyle={{\n                  display:'block',\n                  color:'dark-gray',\n                  overflow: 'hidden',\n                  textAlign: 'center',\n                  whiteSpace: 'nowrap',\n                  textOverflow: 'ellipsis',\n                  fontFamily:this.props.theme.fonts.counter,\n                  fontWeight:this.props.theme.fontWeights[5],\n                  fontSize: this.props.isMobile ? this.props.theme.fontSizes[5] : this.props.theme.fontSizes[8],\n                }}\n                subtitle={null}\n                subtitleProps={{\n                  textAlign:'center'\n                }}\n              />\n              <Link\n                mb={3}\n                target={'_blank'}\n                textAlign={'center'}\n                rel={'nofollow noopener noreferrer'}\n                href={'https://certificate.quantstamp.com/view/idle-finance'}\n              >\n                <Image\n                  width={'15em'}\n                  src={'images/quantstamp-badge.svg'}\n                />\n              </Link>\n              <Title\n                my={[2,3]}\n                mt={[3,4]}\n                fontWeight={3}\n                fontSize={[3,4]}\n                color={'dark-gray'}\n                component={Heading.h4}\n              >\n                Full Audit Report:\n              </Title>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <AuditCard\n                  title={'Idle Finance'}\n                  date={'August 12th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-finance'}\n                />\n                <AuditCard\n                  title={'Idle Goverance'}\n                  date={'November 17th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-goverance'}\n                />\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n        <Box\n          mt={[4,5]}\n          px={[3,4]}\n          py={[4,5]}\n          id={'integrators'}\n          className={styles.gradientBackground}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','75em']}\n          >\n            <Title\n              mb={3}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Build with Idle\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Just few lines of code to integrate the power of Idle into your dApp\n            </Text>\n            <Flex\n              mt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={['center','space-between']}\n            >\n              {\n                /*\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  alignItems={['center','flex-start']}\n                >\n                  <FlexCards\n                    itemsPerRow={4}\n                    cards={[\n                      {\n                        link:'https://zerion.io',\n                        image:'images/integrators/zerion.svg'\n                      },\n                      {\n                        link:'https://gnosis.io',\n                        image:'images/integrators/gnosis.png'\n                      },\n                      {\n                        link:'https://cryptolocally.com',\n                        image:'images/integrators/cryptolocally.png'\n                      },\n                      {\n                        link:'https://www.peepsdemocracy.com',\n                        image:'images/integrators/peeps.png'\n                      }\n                    ]}\n                    {...this.props}\n                  />\n                </Flex>\n                */\n              }\n              <Flex\n                mt={2}\n                width={1}\n                flexDirection={['column','row']}\n                alignItems={['center','flex-start']}\n                justifyContent={['center','flex-start']}\n              >\n                <Flex\n                  mb={[3,0]}\n                  width={[1,0.5]}\n                  flexDirection={'column'}\n                  alignItems={['center','flex-start']}\n                  justifyContent={['center','flex-start']}\n                >\n                  <Title\n                    mb={3}\n                    fontWeight={5}\n                    component={Heading.h5}\n                    fontSize={[4,'1.75em']}\n                  >\n                    Designed for Developers\n                  </Title>\n\n                  <Text\n                    mb={3}\n                    pr={[0,5]}\n                    textAlign={['center','justify']}\n                  >\n                    A fully integrated suite of DeFi yield products easy to integrate into your dApp so your teams don't need to stitch together disparate protocols or spend months integrating and updating yield functionality.<br />One integration to rule them all.\n                  </Text>\n                  <Text\n                    mb={2}\n                    fontWeight={500}\n                  >\n                    Supported Assets:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    flexDirection={'row'}\n                  >\n                    {\n                      availableTokens.map( token => (\n                        <AssetField\n                          token={token}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              width:'2.2em',\n                              height:'2.2em'\n                            }\n                          }}\n                          key={`asset_${token}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={['column','row']}\n                    justifyContent={['center','flex-start']}\n                  >\n                    <RoundButton\n                      buttonProps={{\n                        width:[1,'auto']\n                      }}\n                      handleClick={ (e) => {\n                        window.open('https://developers.idle.finance')\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'flex-end'}\n                        justifyContent={'center'}\n                      >\n                        <Text\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'white'}\n                        >\n                          Read the docs\n                        </Text>\n                        <Icon\n                          ml={2}\n                          size={'1.2em'}\n                          color={'white'}\n                          name={'KeyboardArrowRight'}\n                        />\n                      </Flex>\n                    </RoundButton>\n                    <Text\n                      mt={[2,0]}\n                      ml={[0,2]}\n                    >\n                      or\n                    </Text>\n                    <ExtLink\n                      mt={[2,0]}\n                      ml={[0,2]}\n                      fontSize={2}\n                      hoverColor={'primary'}\n                      href={'https://idlefinance.typeform.com/to/PUC7nO'}\n                    >\n                      Contact Us\n                    </ExtLink>\n                    {\n                      /*\n                      <RoundButton\n                        buttonProps={{\n                          ml:2,\n                          mainColor:'red',\n                          width:[1,'auto']\n                        }}\n                        handleClick={ (e) => {\n                          window.open('https://idlefinance.typeform.com/to/PUC7nO')\n                        }}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'flex-end'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={3}\n                            color={'white'}\n                            fontSize={[1,2]}\n                          >\n                            Contact us\n                          </Text>\n                          <Icon\n                            ml={2}\n                            name={'Send'}\n                            size={'1.2em'}\n                            color={'white'}\n                          />\n                        </Flex>\n                      </RoundButton>\n                      */\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={[1,0.5]}\n                >\n                  <iframe\n                    height={\"350\"}\n                    title={'integrate'}\n                    style={{\n                      border:'0',\n                      width: '100%',\n                      height: '350px',\n                      overflow:'hidden',\n                      transform: 'scale(1)',\n                    }}\n                    sandbox={\"allow-scripts allow-same-origin\"}\n                    src={\"https://carbon.now.sh/embed?bg=rgba%28255%2C255%2C255%2C0%29&t=cobalt&wt=none&l=auto&ds=false&dsyoff=20px&dsblur=68px&wc=true&wa=true&pv=0px&ph=0px&ln=false&fl=1&fm=Fira+Code&fs=13.5px&lh=143%25&si=false&es=2x&wm=false&code=const%2520idleTokenAbi%2520%253D%2520require%28%27idleToken.json%27%29%253B%2520%252F%252F%2520Include%2520idleToken%2520ABI%250Aconst%2520user%2520%253D%2520%270x...%27%253B%2520%252F%252F%2520set%2520user%2520address%2520%250Aconst%2520idleDAI%2520%253D%2520%270x3fE7940616e5Bc47b0775a0dccf6237893353bB4%27%253B%2520%252F%252F%2520idleDAIYield%2520address%250A%250A%252F%252F%2520Initialize%2520web3%2520contract%250Aconst%2520idleToken%2520%253D%2520new%2520web3.eth.Contract%28idleTokenAbi%252C%2520idleDAI%29%253B%250A%250A%252F%252F%2520Approve%2520contract%250Aconst%2520_amount%2520%253D%2520%271000000000000000000%27%253B%2520%252F%252F%25201%2520DAI%250Aawait%2520idleToken.approve%28idleTokenAddress%252C%2520_amount%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B%250A%250A%252F%252F%2520Deposit%2520tokens%250Aawait%2520idleToken.mintIdleToken%28_amount%252C%2520true%252C%2520user%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B\"}\n                  >\n                  </iframe>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'investors'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Backed By\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle has been funded by industry leaders\n            </Text>\n            <FlexCards\n              justifyContent={'center'}\n              itemsPerRow={4}\n              cards={[\n                {\n                  link:'https://consensys.net',\n                  image:'images/investors/consensys.png'\n                },\n                {\n                  link:'https://www.gumi-cryptos.com',\n                  image:'images/investors/gumi.png'\n                },\n                {\n                  link:'https://www.greenfield.one',\n                  image:'images/investors/greenfield.png'\n                },\n                /*\n                {\n                  link:'https://quantstamp.com',\n                  image:'images/investors/quantstamp.png'\n                },\n                */\n                {\n                  link:'https://dialectic.ch',\n                  image:'images/investors/dialectic.png'\n                },\n                {\n                  link:'https://www.thelao.io',\n                  image:'images/investors/the-lao.png'\n                },\n                {\n                  link:'https://br.capital',\n                  image:'images/investors/br-capital.png'\n                },\n                {\n                  link:'https://www.longhashventures.com',\n                  image:'images/investors/lh-ventures.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'protocols'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Built with the best\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle infrastructure rely on the most powerful DeFi protocols\n            </Text>\n            <FlexCards\n              cards={[\n                {\n                  link:'https://app.compound.finance',\n                  image:'images/partners/compound.svg'\n                },\n                /*\n                {\n                  link:'https://fulcrum.trade',\n                  image:'images/partners/fulcrum.svg'\n                },\n                */\n                {\n                  link:'https://aave.com',\n                  image:'images/partners/aave.svg'\n                },\n                {\n                  link:'https://dydx.exchange',\n                  image:'images/partners/dydx.svg'\n                },\n                {\n                  link:'https://oasis.app/',\n                  image:'images/partners/oasis.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box id=\"faq\" pt={[4,5]} pb={[4,6]}>\n          <Box maxWidth={['50em','60em']} mx={'auto'} px={[3,5]}>\n            <Faq selectedToken={this.props.selectedToken} tokenConfig={this.props.tokenConfig} />\n          </Box>\n        </Box>\n\n        <Flex id=\"contacts\" flexDirection={'column'} position={'relative'} justifyContent={'center'} alignItems={'center'} pb={[3,6]} px={[3,6]}>\n          <Flex flexDirection={'column'} justifyContent={['center','flex-start']} alignItems={['center','flex-start']} width={1} maxWidth={['35em','70em']}>\n            <Heading.h3 color={'blue'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Don't be shy, let's talk.\n            </Heading.h3>\n            <Heading.h3 color={'dark-gray'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Let's build something great together.\n            </Heading.h3>\n            <NewsletterForm />\n          </Flex>\n        </Flex>\n\n        <Footer tokenConfig={this.props.tokenConfig} />\n\n        {\n          this.props.toastMessageProps &&\n            <FloatingToastMessage isMobile={this.props.isMobile} {...this.props.toastMessageProps} handleClose={this.props.closeToastMessage} />\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Landing;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Icon, Text, Image } from 'rimble-ui';\n\nclass DashboardMenu extends Component {\n  state = {\n    buyModalOpened:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setBuyModalOpened(buyModalOpened){\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length){\n      return null;\n    }\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return !this.props.isMobile || showMobile;\n    });\n\n    if (!visibleLinks.length){\n      return null;\n    }\n\n    return (\n      <Flex\n        p={0}\n        flexDirection={['row','column']}\n      >\n        {\n          !this.props.isMobile &&\n            <Flex\n              p={3}\n              mb={3}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <RouterLink to=\"/\">\n                <Image\n                  position={'relative'}\n                  height={['35px','38px']}\n                  src=\"images/logo-gradient.svg\"\n                />\n              </RouterLink>\n            </Flex>\n        }\n        {\n          visibleLinks.map((menuLink,menuIndex) => {\n            const isExternalLink = menuLink.isExternalLink;\n            const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n            return (\n              <Box\n                my={[0,3]}\n                key={`menu-${menuIndex}`}\n                width={[1/visibleLinks.length,'auto']}\n              >\n                <LinkComponent\n                  to={menuLink.route}\n                  href={menuLink.route}\n                  style={{textDecoration:'none'}}\n                >\n                  <Flex\n                    p={[2,3]}\n                    borderRadius={[0,2]}\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    backgroundColor={ menuLink.selected ? '#f3f6ff' : 'transparent' }\n                    boxShadow={menuLink.selected ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={['column','row']}\n                      justifyContent={['center','flex-start']}\n                    >\n                      {menuLink.image &&\n                        <Image\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          src={ menuLink.selected ? menuLink.image : (menuLink.imageInactive ? menuLink.imageInactive : menuLink.image)}\n                          height={['1.2em','1.6em']}\n                        />\n                      }\n                      {menuLink.icon &&\n                        <Icon\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          name={menuLink.icon}\n                          size={ this.props.isMobile ? '1.4em' : '1.6em' }\n                          color={ menuLink.selected ? menuLink.bgColor : 'copyColor' }\n                        />\n                      }\n                      <Text\n                        fontWeight={3}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                        fontSize={['11px',2]}\n                        style={{\n                          whiteSpace:'nowrap'\n                        }}\n                      >\n                        {menuLink.label}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </LinkComponent>\n                {\n                  /*\n                  menuLink.submenu.length>0 && (\n                    <Flex className={[styles.submenu]} style={{maxHeight:menuLink.selected ? menuLink.submenu.length*36+'px' : '0' }} flexDirection={'column'} borderLeft={ menuLink.selected ? '2px solid rgba(0,0,0,0.3)' : null }>\n                      {\n                        menuLink.submenu.map((submenuLink,submenuIndex) => {\n                          return (\n                            <RouterLink key={`submenu-${menuIndex}-${submenuIndex}`} to={`${menuLink.route}/${submenuLink.route}`} style={{textDecoration:'none'}}>\n                              <Flex py={2} pl={'40px'} flexDirection={'row'} alignItems={'center'}>\n                                <Text fontSize={'0.85rem'}>{submenuLink.label}</Text>\n                              </Flex>\n                            </RouterLink>\n                          )\n                        })\n                      }\n                    </Flex>\n                  )\n                  */\n                }\n              </Box>\n            );\n          })\n        }\n        {\n        /*\n        !this.props.isMobile  &&\n          <Box\n            width={'auto'}\n            borderTop={`1px solid ${theme.colors.divider}`}\n          >\n            <Flex\n              p={[2,3]}\n              style={{\n                cursor:'pointer'\n              }}\n              borderRadius={[0,2]}\n              flexDirection={'row'}\n              alignItems={'center'}\n              onClick={ e => this.setBuyModalOpened(true) }\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={['column','row']}\n                justifyContent={['center','flex-start']}\n              >\n                <Icon\n                  mr={[0,3]}\n                  ml={[0,2]}\n                  mb={[1,0]}\n                  size={'1.6em'}\n                  align={'center'}\n                  color={'copyColor'}\n                  name={'AddCircleOutline'}\n                />\n                <Text\n                  fontWeight={3}\n                  fontSize={[0,2]}\n                  color={'copyColor'}\n                  textAlign={'center'}\n                  style={{\n                    whiteSpace:'nowrap'\n                  }}\n                >\n                  Add Funds\n                </Text>\n              </Flex>\n            </Flex>\n          </Box>\n        <BuyModal\n          {...this.props}\n          isOpen={this.state.buyModalOpened}\n          closeModal={ e => this.setBuyModalOpened(false) }\n        />\n        */\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default DashboardMenu;","import moment from 'moment';\nimport theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\nimport { Flex, Text, Box } from 'rimble-ui';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StatsChart extends Component {\n  state = {\n    chartProps:{},\n    chartType:null,\n    chartData:null,\n    chartWidth:null\n  };\n\n  async componentDidMount() {\n    this.setState({\n      chartData:null,\n      chartType:null,\n      chartProps:null,\n    });\n    this.loadUtils();\n    this.loadApiData();\n  }\n\n  async componentDidUpdate(prevProps) {\n    const showAdvancedChanged = prevProps.showAdvanced !== this.props.showAdvanced;\n    const apiResultsChanged = prevProps.apiResults !== this.props.apiResults;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (apiResultsChanged || showAdvancedChanged || tokenChanged){\n      this.componentDidMount();\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  parseAum = value => {\n    return (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken || !this.props.chartMode || !this.props.apiResults){\n      return false;\n    }\n\n    const CustomTooltipRow = props => (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n\n    const CustomTooltip = props => {\n      return (\n        <DashboardCard\n          key={props.point.id}\n          cardProps={{\n            py:2,\n            px:3,\n            width:1,\n            left: props.point.data.itemPos>50 ? '-110%' : '0'\n          }}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            {\n              props.point.data.xFormatted && \n                <Text\n                  mb={2}\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                  textAlign={'left'}\n                >\n                  {props.point.data.xFormatted}\n                </Text>\n            }\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const maxGridLines = 4;\n    const apiResults = this.props.apiResults;\n    const apiResults_unfiltered = this.props.apiResults_unfiltered;\n    const totalItems = apiResults.length;\n    const protocols = Object.assign([],this.props.tokenConfig.protocols);\n    // const compoundProtocol = this.props.tokenConfig.protocols.find( p => (p.name === 'compound'));\n\n    const versionInfo = globalConfigs.stats.versions[this.props.idleVersion];\n\n    let keys = {};\n    let tempData = {};\n    let gridYStep = 0;\n    let itemIndex = 0;\n    let chartData = [];\n    let chartProps = {};\n    let chartType = Line;\n    let gridYValues = [];\n    let maxChartValue = 0;\n    let axisBottomIndex = 0;\n    let idleChartData = null;\n    let firstIdleBlock = null;\n\n    switch (this.props.chartMode){\n      case 'VOL':\n        let divergingData = {};\n\n        const startTimestamp = parseInt(apiResults_unfiltered[0].timestamp);\n        const endTimestamp = parseInt(moment()._d.getTime()/1000);\n\n        for (let timestamp=startTimestamp;timestamp<=endTimestamp;timestamp+=86400){\n          const date = moment(timestamp*1000).format(\"YYYY/MM/DD\");\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n        }\n\n        let lastRow = null;\n        apiResults_unfiltered.forEach(row => {\n          const date = moment(row.timestamp*1000).format(\"YYYY/MM/DD\");\n          const idleTokens = this.functionsUtil.fixTokenDecimals(row.idleSupply,18);\n\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp:row.timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n\n          if (lastRow){\n            const idleTokensPrev = this.functionsUtil.fixTokenDecimals(lastRow.idleSupply,18);\n            const idleTokensDiff = !idleTokens.eq(idleTokensPrev);\n            if (idleTokensDiff){\n              const diff = idleTokens.minus(idleTokensPrev);\n              // Deposits\n              if (diff.gte(0)){\n                divergingData[date].deposits+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,divergingData[date].deposits);\n              } else {\n                divergingData[date].redeems+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,Math.abs(divergingData[date].deposits));\n              }\n            }\n\n          } else {\n            divergingData[date].deposits+=parseFloat(idleTokens);\n          }\n\n          lastRow = row;\n        });\n\n        chartData = Object.values(divergingData).filter(v => {\n          return (!this.props.startTimestamp || v.timestamp>=this.props.startTimestamp) && (!this.props.endTimestamp || v.timestamp<=this.props.endTimestamp);\n        });\n\n        let maxRange = 0;\n        chartData.forEach(v => {\n          maxRange = Math.max(maxRange,Math.abs(v.deposits),Math.abs(v.redeems));\n        })\n\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          indexBy: 'date',\n          enableLabel: false,\n          minValue:-maxRange,\n          maxValue:maxRange,\n          label: d => {\n            return Math.abs(d.value);\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days',\n          },\n          axisLeft: null,\n          axisRight: {\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:8,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(Math.abs(v),0)\n          },\n          markers: [\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { strokeOpacity: 0 },\n              textStyle: { fill: theme.colors.transactions.action.deposit },\n              legend: 'deposits',\n              legendPosition: 'top-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { stroke: theme.colors['dark-gray'], strokeDasharray: '5 3' },\n              textStyle: { fill: theme.colors.transactions.action.redeem },\n              legend: 'redeems',\n              legendPosition: 'bottom-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n          ],\n          keys:['deposits','redeems'],\n          padding:0.4,\n          colors:[theme.colors.transactions.action.deposit, theme.colors.transactions.action.redeem],\n          labelTextColor: 'inherit:darker(1.4)',\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 80 : 100,\n              itemHeight: 18,\n              translateX: 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            },\n            tooltip:{\n              container:{\n                boxShadow:null,\n                background:null\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 50, bottom: 45, left: 50 } : { top: 20, right: 70, bottom: 70, left: 50 },\n          tooltip:(data) => {\n            const xFormatted = this.functionsUtil.strToMoment(data.indexValue).format('MMM DD');\n            const point = {\n              id:data.id,\n              data:{\n                xFormatted\n              }\n            };\n            const depositFormatted = this.functionsUtil.abbreviateNumber(data.data.deposits,2)+' '+this.props.selectedToken;\n            const redeemFormatted = this.functionsUtil.abbreviateNumber(data.data.redeems,2)+' '+this.props.selectedToken;\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                <CustomTooltipRow\n                  label={'Deposits'}\n                  color={theme.colors.deposit}\n                  value={depositFormatted}\n                />\n                <CustomTooltipRow\n                  label={'Redeem'}\n                  color={theme.colors.redeem}\n                  value={redeemFormatted}\n                />\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      /*\n      case 'AUM_ALL':\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens[globalConfigs.network.requiredNetwork]),async (tokenName,i) => {\n          const tokenConfig = availableTokens[globalConfigs.network.requiredNetwork][tokenName];\n          const tokenDataApi = await this.props.getTokenData(tokenConfig.address);\n          chartData.push({\n            id:tokenName,\n            color: tokenConfig.color,\n            data: tokenDataApi.map((d,i) => {\n              const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n              const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,tokenConfig.decimals);\n              const aum = idleTokens.times(idlePrice);\n              return {\n                x: moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\"),\n                y: parseInt(aum.toString())\n              };\n            })\n          });\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken,\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v),\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            legendPosition: 'middle'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            format: '%b %d',\n            tickValues: this.props.isMobile ? 'every 4 days' : 'every 3 days',\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 36,\n            legendPosition: 'middle'\n          },\n          enableArea:false,\n          curve:\"linear\",\n          enableSlices:'x',\n          enableGridX:true,\n          enableGridY:false,\n          colors:d => d.color,\n          pointSize:0,\n          pointColor:{ from: 'color', modifiers: []},\n          pointBorderWidth:1,\n          pointLabel:\"y\",\n          pointLabelYOffset:-12,\n          useMesh:true,\n          animate:false,\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 60, bottom: 40, left: 60 },\n        };\n      break;\n      */\n      case 'AUM':\n\n        maxChartValue = 0;\n\n        chartData.push({\n          id:'AUM',\n          color: 'hsl('+globalConfigs.stats.tokens[this.props.selectedToken].color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n            const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n            const aum = idleTokens.times(idlePrice);\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(aum.toString());\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x,y };\n          })\n        });\n\n        // Add allocation\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          apiResults.map((d,i) => {\n            return d.protocolsData.filter((protocolAllocation,x) => {\n                return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            })\n            .map((protocolAllocation,z) => {\n              const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n              if (!protocolPaused){\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals));\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                let foundItem = chartData[0].data.filter(item => { return item.x === x });\n                if (foundItem){\n                  foundItem = foundItem[0];\n                  const pos = chartData[0].data.indexOf(foundItem);\n                  if (!foundItem.allocations){\n                    foundItem.allocations = {};\n                  }\n                  foundItem.allocations[p.name] = y;\n                  chartData[0].data[pos] = foundItem;\n                }\n              }\n              return undefined;\n            })[0]\n          }).filter((v) => { return v !== undefined; } )\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:v => this.functionsUtil.formatMoney(v,v<1 ? 3 :0),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:true,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            if (typeof point === 'object' && typeof point.data === 'object'){\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  <CustomTooltipRow\n                    label={point.serieId}\n                    color={point.serieColor}\n                    value={point.data.yFormatted}\n                  />\n                  {\n                    point.data.allocations && typeof point.data.allocations === 'object' &&\n                      Object.keys(point.data.allocations).map(protocolName => {\n                        const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                        const protocolAllocation = point.data.allocations[protocolName];\n                        const protocolAllocationFormatted = this.functionsUtil.formatMoney(protocolAllocation,protocolAllocation<1 ? 3 : 0);\n                        const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                        return (\n                          <CustomTooltipRow\n                            label={protocolName}\n                            color={protocolColor}\n                            key={`${point.id}_${protocolName}`}\n                            value={`${protocolAllocationFormatted} (${protocolAllocationPerc})`}\n                          />\n                        );\n                      })\n                  }\n                </CustomTooltip>\n              );\n              /*\n              return (\n                <div\n                    key={point.id}\n                    style={{\n                      background: 'white',\n                      color: 'inherit',\n                      fontSize: 'inherit',\n                      borderRadius: '2px',\n                      boxShadow: 'rgba(0, 0, 0, 0.25) 0px 1px 2px',\n                      padding: '5px 9px'\n                    }}\n                >\n                  <div>\n                    <table style={{width:'100%',borderCollapse:'collapse'}}>\n                      <tbody>\n                        <tr>\n                          <td style={{padding:'3px 5px'}}>\n                            <span style={{display:'block', width: '12px', height: '12px', background: point.serieColor}}></span>\n                          </td>\n                          <td style={{padding:'3px 5px'}}>{point.serieId}</td>\n                          <td style={{padding:'3px 5px'}}><strong>{point.data.yFormatted}</strong></td>\n                        </tr>\n                        {\n                          point.data.allocations && typeof point.data.allocations === 'object' &&\n                            Object.keys(point.data.allocations).map(protocolName => {\n                              const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                              const protocolAllocation = this.functionsUtil.formatMoney(point.data.allocations[protocolName],0);\n                              const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                              return (\n                                <tr key={`${point.id}_${protocolName}`}>\n                                  <td style={{padding:'3px 5px'}}>\n                                    <span style={{display:'block', width: '12px', height: '12px', background: protocolColor}}></span>\n                                  </td>\n                                  <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{protocolName}</td>\n                                  <td style={{padding:'3px 5px'}}><strong>{protocolAllocation}</strong> ({protocolAllocationPerc})</td>\n                                </tr>\n                              );\n                            })\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              );\n              */\n            }\n\n            return null;\n          }\n        };\n      break;\n      case 'ALL':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\");\n\n          let row = {\n            date\n          };\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const foundProtocol = this.props.tokenConfig.protocols.find((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() });\n            if (foundProtocol){\n              const protocolName = this.functionsUtil.capitalize(foundProtocol.name);\n              if (!protocolPaused){\n                let allocation = parseFloat(this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals));\n                keys[protocolName] = 1;\n                row[protocolName] = allocation;\n                row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName.toLowerCase()].color.hsl.join(',')+')';\n                // console.log(protocolName,this.functionsUtil.BNify(protocolData.allocation).toString(),this.props.tokenConfig.decimals,allocation);\n                maxChartValue = Math.max(maxChartValue,allocation);\n              } else {\n                row[protocolName] = 0;\n              }\n            }\n          });\n\n\n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n            orient: 'left',\n            tickSize: 0,\n            tickPadding: 10,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            tickValues:gridYValues,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickSize: 0,\n            tickPadding: 10,\n            orient: 'bottom-left',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize:this.props.isMobile ? 12 : 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize:this.props.isMobile ? 12 : 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 60 },\n          tooltip:({ id, value, color }) => {\n            const allocation = this.functionsUtil.formatMoney(value,0);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation} {this.props.selectedToken}</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'ALL_PERC':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\")\n          let row = {\n            date:moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\")\n          };\n          if (tempData[date]){\n            row = tempData[date];\n          }\n\n          const totalAllocation = d.protocolsData.reduce((accumulator,protocolAllocation) => {\n            const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n            return this.functionsUtil.BNify(accumulator).plus(allocation);\n          },0);\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const protocolName = this.props.tokenConfig.protocols.filter((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() })[0].name;\n            if (!protocolPaused){\n              const allocation = this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals);\n              const allocationPerc = parseFloat(allocation.div(totalAllocation).times(100));\n              keys[protocolName] = 1;\n              row[protocolName] = allocationPerc;\n              row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n            } else if (typeof row[protocolName] !== undefined) {\n              row[protocolName] = 0;\n            } \n          });\n          \n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          data: chartData,\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 40, bottom: 40, left: 60 },\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => parseInt(v)+'%'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            orient: 'bottom',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          tooltip:({ id, value, color }) => {\n            const allocation = parseInt(value)===100 ? this.functionsUtil.formatMoney(value,0) : this.functionsUtil.formatMoney(value,2);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation}%</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'APR':\n\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n                if (!protocolPaused){\n                  const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                  const y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.rate,18));\n\n                  maxChartValue = Math.max(maxChartValue,y);\n\n                  return { x, y };\n                }\n                return undefined;\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(2)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    // const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'SCORE':\n\n        let prevValue = 0;\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(protocolAllocation.defiScore);\n\n                y = isNaN(y) || !y ? prevValue : y;\n                prevValue = y;\n                maxChartValue = Math.max(maxChartValue,y);\n\n                return { x, y };\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            let y = parseFloat(d.idleScore);\n            y = isNaN(y) || !y ? prevValue : y;\n            prevValue = y;\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // debugger;\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(1),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE_V4':\n\n        itemIndex = 0;\n        maxChartValue = 0;\n        // let prevApy = null;\n        let prevApr = null;\n        let prevData = null;\n        let startBalance = this.functionsUtil.BNify(1);\n        let currentBalance = this.functionsUtil.BNify(1);\n        let avgApy = this.functionsUtil.BNify(0);\n\n        // console.log('PRICE_V4',apiResults);\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const apr = this.functionsUtil.fixTokenDecimals(d.idleRate,18).div(100);\n          // const apy = this.functionsUtil.apr2apy(apr);\n          \n          avgApy = avgApy.plus(apr.times(100));\n\n          if (prevApr){\n            const days = (d.timestamp-prevData.timestamp)/86400;\n            // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n            const earnings = currentBalance.times(prevApr.times(days).div(365));\n            currentBalance = currentBalance.plus(earnings);\n\n            const earning = currentBalance.div(startBalance).minus(1).times(100);\n            y = parseFloat(earning);\n\n            // apy = earning.times(365).div(totDays).toFixed(2);\n            apy = avgApy.div(i+1).toFixed(2);\n          }\n\n          prevData = d;\n          // prevApy = apy;\n          prevApr = apr;\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        protocols.forEach( p => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          // prevApy = null;\n          prevApr = null;\n          prevData = null;\n          let baseProfit = 0;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n          avgApy = this.functionsUtil.BNify(0);\n          startBalance = this.functionsUtil.BNify(1);\n          currentBalance = this.functionsUtil.BNify(1);\n\n          apiResults.forEach( (d,i) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n                if (protocolData[field]){\n                  return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(protocolData[field]));\n                }\n                return this.functionsUtil.BNify(acc);\n              },0) : this.functionsUtil.BNify(protocolData[rateField]);\n\n              const protocolPaused = protocolRate.eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => (d1.blocknumber>=firstProtocolBlock) );\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n\n                let y = 0;\n                let apy = 0;\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const apr = this.functionsUtil.fixTokenDecimals(protocolRate,18).div(100);\n\n                avgApy = avgApy.plus(apr.times(100));\n                // const apy = this.functionsUtil.apr2apy(apr);\n\n                if (prevData){\n                  const days = (d.timestamp-prevData.timestamp)/86400;\n                  // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n                  const earnings = currentBalance.times(prevApr.times(days).div(365));\n                  currentBalance = currentBalance.plus(earnings);\n\n                  const earning = currentBalance.div(startBalance).minus(1).times(100);\n                  y = parseFloat(earning)+baseProfit;\n\n                  apy = avgApy.div(i+1).toFixed(2);\n                }\n\n                prevData = d;\n                prevApr = apr;\n\n                if (firstIdleBlock === null){\n                  firstIdleBlock = parseInt(d.blocknumber);\n                }\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n                // const blocknumber = d.blocknumber;\n\n                itemIndex++;\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                chartRow.data.push(rowData);\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE':\n        // let prevTokenPrice = null;\n        maxChartValue = 0;\n        let firstTokenPrice = null;\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          let days = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n          if (!firstTokenPrice){\n            firstTokenPrice = tokenPrice;\n          } else {\n            y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n\n            days = (d.timestamp-apiResults[0].timestamp)/86400;\n            const earning = tokenPrice.div(firstTokenPrice).minus(1).times(100);\n            apy = earning.times(365).div(days).toFixed(2);\n\n            // console.log(firstTokenPrice.toString(),tokenPrice.toString(),earning.toString(),days,y,apy);\n          }\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        await this.functionsUtil.asyncForEach(protocols,async (p) => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          let baseProfit = 0;\n          firstTokenPrice = null;\n          let lastRowData = null;\n          let lastTokenPrice = null;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n\n          await this.functionsUtil.asyncForEach(apiResults,async (d) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData && protocolData[rateField]){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolPaused = this.functionsUtil.BNify(protocolData[rateField]).eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => {\n                      return d1.blocknumber>=firstProtocolBlock;\n                    });\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n                let tokenExchangeRate = protocolData.price;\n                let tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n\n                // Take data from\n                if (protocolInfo && protocolInfo.data && protocolInfo.data[p.address.toLowerCase()] && protocolInfo.data[p.address.toLowerCase()][d.blocknumber]){\n                  tokenExchangeRate = this.functionsUtil.BNify(globalConfigs.stats.protocols[p.name].data[p.address.toLowerCase()][d.blocknumber]);\n                  tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                }/* else if (p.name === 'aave'){\n                  // Token holders (aDAI = 0xc025c03e10f656d3ee76685d53d236824d8ef3da , aUSDC = 0xd2c734fbd8f5d1c809185e014016dd4097e94711)\n                  let aaveTokenBalance = await this.functionsUtil.genericContractCall(p.token,'balanceOf',['0xd2c734fbd8f5d1c809185e014016dd4097e94711'],{},d.blocknumber);\n                  if (aaveTokenBalance){\n                    if (!Object.values(aave_data).length){\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(1,p.decimals);\n                      aave_data[d.blocknumber] = aaveTokenBalance.toString();\n                    } else {\n                      const firstBalance = Object.values(aave_data)[0];\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(this.functionsUtil.BNify(aaveTokenBalance).div(this.functionsUtil.BNify(firstBalance)).toFixed(p.decimals),p.decimals);\n                      aave_data[d.blocknumber] = tokenExchangeRate.toString();\n                    }\n                  }\n                }\n                */\n\n                let y = baseProfit;\n                let apy = 0;\n\n                if (!firstTokenPrice){\n                  firstTokenPrice = tokenPriceFixed;\n                } else {\n                  if (tokenPriceFixed.lt(lastTokenPrice)){\n                    firstTokenPrice = tokenPriceFixed;\n                    const lastYDiff = chartRow.data[chartRow.data.length-1].y-chartRow.data[chartRow.data.length-2].y;\n                    y = lastRowData.y+lastYDiff;\n                    baseProfit = y;\n                  } else {\n                    y += parseFloat(tokenPriceFixed.div(firstTokenPrice).minus(1).times(100));\n                  }\n\n                  const days = (d.timestamp-apiResults[0].timestamp)/86400;\n                  const earning = tokenPriceFixed.div(firstTokenPrice).minus(1).times(100);\n                  apy = earning.times(365).div(days).toFixed(2);\n                }\n\n                y = Math.max(0,y);\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                lastRowData = rowData;\n                chartRow.data.push(rowData);\n                lastTokenPrice = tokenPriceFixed;\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      chartType,\n      chartProps,\n      chartData\n    });\n  }\n\n  render() {\n    return(\n      <GenericChart\n        showLoader={true}\n        {...this.state.chartProps}\n        height={this.props.height}\n        type={this.state.chartType}\n        data={this.state.chartData}\n        width={this.state.chartWidth}\n        isMobile={this.props.isMobile}\n        parentId={this.props.parentId}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default StatsChart;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass Rebalance extends Component {\n\n  state = {\n    loading:true,\n    processing:{\n      rebalance:{\n        txHash:null,\n        loading:false\n      },\n    },\n    shouldRebalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.checkRebalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged || accountChanged){\n      this.checkRebalance();\n    }\n  }\n\n  checkRebalance = async () => {\n    this.setState({\n      loading:true,\n    });\n\n    const shouldRebalance = await this.functionsUtil.checkRebalance(this.props.tokenConfig);\n\n    this.setState({\n      loading:false,\n      shouldRebalance\n    });\n  }\n\n  rebalance = async (e) => {\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Rebalance',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      let txDenied = false;\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (tx.status === 'success'){\n        // Toast message\n        window.toastProvider.addMessage(`Rebalance completed`, {\n          secondaryMessage: `Now the pool is balanced!`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"success\",\n        });\n\n      } else if (!txDenied){\n        window.toastProvider.addMessage(`Rebalance error`, {\n          secondaryMessage: `The rebalance has failed, try again...`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"failure\",\n        });\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          rebalance:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n\n      this.checkRebalance();\n    }\n\n    const callback_receipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            rebalance:{\n              ...prevState.processing.rebalance,\n              txHash\n            }\n          }\n        })\n      );\n    };\n\n    this.props.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'rebalance', [], null , callback, callback_receipt);\n\n    this.setState({\n      processing:{\n        rebalance:{\n          txHash:null,\n          loading:true\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        px={3}\n        width={1}\n        minHeight={'100px'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n      {\n        this.state.loading ? (\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking rebalance...'}\n          />\n        ) : (\n          this.state.processing.rebalance.loading ? (\n            <TxProgressBar web3={this.props.web3} waitText={`Rebalance estimated in`} endMessage={`Finalizing rebalance request...`} hash={this.state.processing.rebalance.txHash} />\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                mt={0}\n                mb={3}\n                textAlign={'center'}\n              >\n                {this.state.shouldRebalance ? 'Rebalance the entire pool. All users will bless you.' : 'The pool is already balanced.'}\n              </Text>\n              <RoundButton\n                buttonProps={{\n                  width:'auto',\n                  disabled:!this.state.shouldRebalance\n                }}\n                handleClick={e => this.rebalance(e)}\n              >\n                Rebalance\n              </RoundButton>\n            </Flex>\n          )\n        )\n      }\n      </Flex>\n    )\n  }\n}\n\nexport default Rebalance;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React from \"react\";\nimport {\n  Modal,\n  Button,\n  Flex,\n  Field,\n  Select\n} from \"rimble-ui\";\nimport moment from 'moment';\nimport ModalCard from './ModalCard';\nimport 'react-date-range/dist/styles.css';\nimport { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/theme/default.css';\n\nclass DateRangeModal extends React.Component {\n\n  state = {\n    quickSelection:'',\n    ranges:{\n      startDate: this.props.startDate ? this.props.startDate : new Date(),\n      endDate: this.props.endDate ? this.props.endDate : new Date(),\n      key: 'selection'\n    }\n  }\n\n  handleSelect(ranges){\n    this.setState({\n      quickSelection:'',\n      ranges:ranges.selection\n    });\n  }\n\n  handleQuickSelect(e){\n    let startDate = null;\n    let endDate = moment(new Date());\n    const quickSelection = e.target.value;\n\n    switch (quickSelection){\n      case 'day':\n        startDate = endDate.clone().subtract(1,'day');\n      break;\n      case 'week':\n        startDate = endDate.clone().subtract(1,'week');\n      break;\n      case 'weeks':\n        startDate = endDate.clone().subtract(2,'week');\n      break;\n      case 'month':\n        startDate = endDate.clone().subtract(1,'month');\n      break;\n      default:\n        startDate = null;\n        endDate = null;\n      break;\n    }\n\n    if (startDate && endDate){\n      startDate = startDate._d;\n      endDate = endDate._d;\n\n      const ranges = {\n        startDate,\n        endDate,\n        key:'selection'\n      };\n\n      this.setState({\n        ranges,\n        quickSelection\n      }, () => {\n        this.closeModal();\n      });\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.startDate !== this.props.startDate || prevProps.endDate !== this.props.endDate){\n      this.setState({\n        ranges:{\n          startDate: this.props.startDate ? this.props.startDate : new Date(),\n          endDate: this.props.endDate ? this.props.endDate : new Date(),\n          key: 'selection'\n        }\n      });\n    }\n  }\n\n  closeModal(){\n    const newState = this.props.handleSelect(this.state.ranges,this.state.quickSelection);\n    const ranges = {\n      startDate:newState.startTimestampObj ? newState.startTimestampObj._d : new Date(),\n      endDate:newState.endTimestampObj ? newState.endTimestampObj._d : new Date(),\n      key: 'selection'\n    };\n    this.setState({\n      ranges\n    });\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Header title={'Select Date Range'}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} flexDirection={'column'} alignItems={'center'}>\n              <Field label=\"Quick Date Selection\" style={{display:'flex',width:'100%',alignItems:'stretch',justifyContent:'center'}}>\n                <Select\n                  style={{\n                    color:'#7d888d',\n                    fontSize:'14px',\n                    height:'2.5em',\n                    boxShadow:'none'\n                  }}\n                  width={'100%'}\n                  required={true}\n                  onChange={this.handleQuickSelect.bind(this)}\n                  value={this.state.quickSelection}\n                  options={[\n                    { value: '', label: \"Select an option\" },\n                    { value: \"day\", label: \"Last day\" },\n                    { value: \"week\", label: \"Last week\" },\n                    { value: \"weeks\", label: \"Last 2 weeks\" },\n                    { value: \"month\", label: \"Last month\" }\n                  ]}\n                />\n              </Field>\n              <DateRange\n                ranges={[this.state.ranges]}\n                minDate={this.props.minDate}\n                maxDate={this.props.maxDate}\n                onChange={this.handleSelect.bind(this)}\n              />\n            </Flex>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              APPLY\n              </Button>\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n\n}\n\nexport default DateRangeModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  execute(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n      this.setState({\n        txStatus:tx.status,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,this.props.params,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              hash={this.state.processing.txHash}\n              waitText={`${this.props.action} estimated in`}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;\n","import moment from 'moment';\nimport Title from '../Title/Title';\nimport StatsChart from './StatsChart';\nimport React, { Component } from 'react';\nimport Rebalance from '../Rebalance/Rebalance';\nimport StatsCard from '../StatsCard/StatsCard';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport { Flex, Text, Heading, Box, Icon, Button } from 'rimble-ui';\nimport DateRangeModal from '../utilities/components/DateRangeModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nclass Stats extends Component {\n  state = {\n    aum:null,\n    apr:null,\n    days:'-',\n    delta:null,\n    earning:null,\n    minDate:null,\n    maxDate:null,\n    carouselMax:1,\n    rebalances:'-',\n    buttonGroups:[],\n    apiResults:null,\n    carouselIndex:0,\n    idleVersion:null,\n    statsVersions:{},\n    minStartTime:null,\n    endTimestamp:null,\n    showAdvanced:true,\n    govTokensPool:null,\n    unlentBalance:null,\n    quickSelection:null,\n    startTimestamp:null,\n    endTimestampObj:null,\n    shouldRebalance:null,\n    carouselOffsetLeft:0,\n    startTimestampObj:null,\n    apiResults_unfiltered:null,\n    dateRangeModalOpened:false\n  };\n\n  quickSelections = {\n    day:'Last day',\n    week:'Last week',\n    weeks:'Last 2 weeks',\n    month:'Last month'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadParams();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  getLatestAvailableVersion(){\n    const statsVersions = globalConfigs.stats.versions;\n    let latestVersion = null;\n    Object.keys(statsVersions).forEach( version => {\n      const versionInfo = statsVersions[version];\n      if (versionInfo.enabledStrategies.includes(this.props.selectedStrategy)){\n        latestVersion = version;\n      }\n    });\n\n    return latestVersion;\n  }\n\n  getVersionInfo(version){\n    if (!version){\n      version = this.state.idleVersion;\n    }\n\n    if (!globalConfigs.stats.versions[version]){\n      return null;\n    }\n\n    const versionInfo = Object.assign({},globalConfigs.stats.versions[version]);\n\n    if (versionInfo.strategiesParams && versionInfo.strategiesParams[this.props.selectedStrategy]){\n      const versionInfoExtra = versionInfo.strategiesParams[this.props.selectedStrategy];\n      Object.keys(versionInfoExtra).forEach( param => {\n        versionInfo[param] = versionInfoExtra[param];\n      });\n    }\n\n    return versionInfo;\n  }\n\n  async loadParams() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    const newState = {};\n    const { match: { params } } = this.props;\n\n    const currentNetworkAvailableTokens = Object.keys(this.props.availableTokens);\n\n    if (!!params.customToken && currentNetworkAvailableTokens.indexOf(params.customToken.toUpperCase()) !== -1 ){\n      newState.selectedToken = params.customToken.toUpperCase();\n    } else {\n      newState.selectedToken = this.props.selectedToken.toUpperCase();\n    }\n\n    newState.tokenConfig = this.props.availableTokens[newState.selectedToken];\n    newState.minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp,'YYYY-MM-DD');\n    newState.maxEndDate = moment();\n\n    newState.endTimestampObj = moment(moment().format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    newState.latestVersion = this.getLatestAvailableVersion();\n    newState.idleVersion = this.state.idleVersion === null ? newState.latestVersion : this.state.idleVersion;\n\n    const versionInfo = this.getVersionInfo(newState.idleVersion);\n\n    // console.log('loadParams',newState.latestVersion,newState.idleVersion,versionInfo);\n\n    if (newState.idleVersion && versionInfo.endTimestamp){\n      const newEndTimestampObj = moment(moment(versionInfo.endTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.endTimestampObj.isAfter(newEndTimestampObj)){\n        newState.endTimestampObj = newEndTimestampObj;\n        newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n      }\n\n      if (!newState.maxEndDate || newState.maxEndDate.isAfter(newEndTimestampObj)){\n        newState.maxEndDate = newEndTimestampObj;\n      }\n    }\n\n    newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n\n    // Set start date\n    newState.startTimestampObj = newState.endTimestampObj.clone().subtract(1,'month');\n    newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n\n    if (newState.idleVersion && versionInfo.startTimestamp){\n      const newStartTimestampObj = moment(moment(versionInfo.startTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.startTimestampObj.isBefore(newStartTimestampObj)){\n        newState.startTimestampObj = newStartTimestampObj;\n        newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n      }\n\n      if (newState.minStartTime.isBefore(newStartTimestampObj)){\n        newState.minStartTime = newStartTimestampObj;\n      }\n    }\n\n    newState.minDate = newState.minStartTime._d;\n    newState.maxDate = newState.maxEndDate._d;\n\n    if (newState !== this.state){\n      await this.setStateSafe(newState);\n    }\n  }\n\n  setDateRange = (ranges,quickSelection=null) => {\n\n    const minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp);\n\n    let startTimestampObj = moment(ranges.startDate).isSameOrAfter(minStartTime) ? moment(ranges.startDate) : minStartTime;\n    let endTimestampObj = moment(ranges.endDate);\n\n    if (startTimestampObj.isSame(endTimestampObj)){\n      endTimestampObj.add(1,'day');\n    }\n\n    endTimestampObj = moment(endTimestampObj.format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    if (startTimestampObj.isBefore(this.state.minStartTime)){\n      startTimestampObj = this.state.minStartTime;\n    }\n\n    if (endTimestampObj.isAfter(this.state.maxEndDate)){\n      endTimestampObj = this.state.maxEndDate;\n    }\n\n    const startTimestamp = parseInt(startTimestampObj._d.getTime()/1000);\n    const endTimestamp = parseInt(endTimestampObj._d.getTime()/1000);\n\n    const newState = {\n      minStartTime,\n      endTimestamp,\n      quickSelection,\n      startTimestamp,\n      endTimestampObj,\n      startTimestampObj\n    };\n\n    this.setStateSafe(newState);\n\n    return newState;\n  }\n\n  toggleAdvancedCharts = (e) => {\n    e.preventDefault();\n    this.setStateSafe({\n      showAdvanced:!this.state.showAdvanced\n    });\n  }\n\n  setDateRangeModal = (dateRangeModalOpened) => {\n    if (dateRangeModalOpened !== this.state.dateRangeModalOpened){\n      this.setStateSafe({\n        dateRangeModalOpened\n      });\n    }\n  }\n\n  async componentDidMount() {\n\n    if (!this.props.web3){\n      this.props.initWeb3();\n      return false;\n    }\n\n    const style = document.createElement('style');\n    style.id = 'crisp-custom-style';\n    style.type = 'text/css';\n    style.innerHTML = `\n    .crisp-client{\n      display:none !important;\n    }`;\n    document.body.appendChild(style);\n\n    this.loadUtils();\n    await this.loadParams();\n    this.loadApiData();\n    this.loadCarousel();\n  }\n\n  loadCarousel(){\n    const carouselMax = this.props.isMobile ? 3 : 2;\n    this.setStateSafe({\n      carouselMax\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const strategyChanged = prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const dateChanged = prevState.startTimestamp !== this.state.startTimestamp || prevState.endTimestamp !== this.state.endTimestamp;\n    const versionChanged = prevState.idleVersion !== this.state.idleVersion;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n\n    if (mobileChanged){\n      this.loadCarousel();\n    }\n\n    if (contractsInitialized || tokenChanged || strategyChanged || versionChanged){\n      // console.log('componentDidUpdate',this.props.selectedStrategy,this.props.selectedToken);\n      await this.componentDidMount();\n    } else if (dateChanged){\n      this.loadApiData();\n    }\n  }\n\n  filterTokenData = (apiResults) => {\n    return apiResults.filter((r,i) => {\n      return (!this.state.startTimestamp || r.timestamp >= this.state.startTimestamp) && (!this.state.endTimestamp || r.timestamp <= this.state.endTimestamp);\n    });\n  }\n\n  setIdleVersion = idleVersion => {\n    this.setStateSafe({\n      idleVersion\n    });\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    // Get COMP APR\n    // const compAPR = await this.functionsUtil.getCompAPR(this.props.tokenConfig);\n    // console.log('compAPR',compAPR.toString());\n\n    const startTimestamp = this.state.minDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.minDate).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n    const endTimestamp = this.state.maxDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.maxDate).format('DD/MM/YYYY 23:59:59'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n\n    const isRisk = ['v3','v4'].includes(this.state.idleVersion) && this.props.selectedStrategy === 'risk';\n    let apiResults_unfiltered = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    const apiResults = this.filterTokenData(apiResults_unfiltered);\n\n    // console.log('loadApiData',startTimestamp,endTimestamp,new Date(startTimestamp*1000),new Date(endTimestamp*1000),apiResults,apiResults_unfiltered);\n\n    if (!apiResults || !apiResults_unfiltered || !apiResults.length || !apiResults_unfiltered.length){\n      return false;\n    }\n\n    const firstResult = apiResults[0];\n    const lastResult = Object.values(apiResults).pop();\n\n    window.moment = moment;\n\n    let days = (lastResult.timestamp-firstResult.timestamp)/86400;\n    if (days === 0){\n      days = 1;\n    }\n\n    let apr = null;\n    let delta = 'N/A';\n\n    const idleTokens = this.functionsUtil.fixTokenDecimals(lastResult.idleSupply,18);\n    const firstIdlePrice = this.functionsUtil.fixTokenDecimals(firstResult.idlePrice,this.props.tokenConfig.decimals);\n    const lastIdlePrice = this.functionsUtil.fixTokenDecimals(lastResult.idlePrice,this.props.tokenConfig.decimals);\n\n    // Calculate AUM\n    let aum = idleTokens.times(lastIdlePrice);\n    // Convert Token balance\n    aum = await this.functionsUtil.convertTokenBalance(aum,this.props.selectedToken,this.props.tokenConfig,isRisk);\n\n    const compoundInfo = this.props.tokenConfig.protocols.filter((p) => { return p.name === 'compound' })[0];\n    const firstCompoundData = compoundInfo ? firstResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n    const lastCompoundData = compoundInfo ? lastResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n\n    if (this.state.idleVersion === 'v4') {\n\n      apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.functionsUtil.fixTokenDecimals(r.idleRate,18);\n        return this.functionsUtil.BNify(sum).plus(idleRate);\n      },0);\n\n      // Calculate average\n      apr = apr.div(apiResults.length);\n\n      if (compoundInfo){\n        const compoundWithCOMPInfo = globalConfigs.stats.protocols.compoundWithCOMP;\n        const rateField = compoundWithCOMPInfo.rateField ? compoundWithCOMPInfo.rateField : 'rate';\n\n        let compoundAvgApr = apiResults.reduce( (sum,r) => {\n\n          const compoundData = r.protocolsData.find((pData,x) => {\n            return pData.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase()\n          });\n\n          let compoundRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n            if (compoundData[field]){\n              return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(compoundData[field]));\n            }\n            return this.functionsUtil.BNify(acc);\n          },0) : this.functionsUtil.BNify(compoundData[rateField]);\n\n          compoundRate = this.functionsUtil.fixTokenDecimals(compoundRate,18);\n\n          return this.functionsUtil.BNify(sum).plus(compoundRate);\n        },0);\n\n        // Calculate average\n        compoundAvgApr = compoundAvgApr.div(apiResults.length);\n\n        // compoundAvgApr = this.functionsUtil.apr2apy(compoundAvgApr.div(100)).times(100);\n        // apr = this.functionsUtil.apr2apy(apr.div(100)).times(100);\n\n        delta = apr.minus(compoundAvgApr);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n\n      apr = apr.toFixed(2);\n\n    } else {\n      const earning = lastIdlePrice.div(firstIdlePrice).minus(1).times(100);\n      apr = earning.times(365).div(days).toFixed(2);\n      if (firstCompoundData && lastCompoundData){\n        const firstCompoundPrice = this.functionsUtil.fixTokenDecimals(firstCompoundData.price,this.props.tokenConfig.decimals);\n        const lastCompoundPrice = this.functionsUtil.fixTokenDecimals(lastCompoundData.price,this.props.tokenConfig.decimals);\n        const compoundApr = lastCompoundPrice.div(firstCompoundPrice).minus(1).times(100);\n        delta = earning.minus(compoundApr).times(365).div(days);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n    }\n\n    // Count rebalances\n    let rebalances = 0;\n    apiResults.forEach((row,index) => {\n      if (index){\n        const prevRow = apiResults[index-1];\n\n        const totalAllocation = row.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        const prevTotalAllocation = prevRow.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        let hasRebalanced = false;\n        row.protocolsData.forEach( p => {\n          if (hasRebalanced){\n            return;\n          }\n          const prevP = prevRow.protocolsData.find( prevP => (prevP.protocolAddr.toLowerCase() === p.protocolAddr.toLowerCase()) );\n          const allocation = this.functionsUtil.fixTokenDecimals(p.allocation,this.props.tokenConfig.decimals);\n          const prevAllocation = this.functionsUtil.fixTokenDecimals(prevP.allocation,this.props.tokenConfig.decimals);\n          const allocationPerc = parseInt(parseFloat(allocation.div(totalAllocation).times(100)));\n          const prevAllocationPerc = parseInt(parseFloat(prevAllocation.div(prevTotalAllocation).times(100)));\n          if (allocationPerc!==prevAllocationPerc){\n            rebalances++;\n            hasRebalanced = true;\n          }\n        });\n      }\n    });\n\n    // Add gov tokens balance to AUM\n    const govTokensPool = await this.functionsUtil.getGovTokenPool(null,null,'DAI');\n    if (govTokensPool){\n      aum = aum.plus(govTokensPool);\n    }\n\n    // Format AUM\n    aum = this.functionsUtil.formatMoney(parseFloat(aum));\n\n    let unlentBalance = await this.functionsUtil.getUnlentBalance(this.props.tokenConfig);\n    if (unlentBalance){\n      unlentBalance = this.functionsUtil.formatMoney(parseFloat(unlentBalance));\n    }\n\n    this.setStateSafe({\n      aum,\n      apr,\n      days,\n      delta,\n      apiResults,\n      rebalances,\n      govTokensPool,\n      unlentBalance,\n      apiResults_unfiltered\n    });\n  }\n\n  selectToken = async (strategy,token) => {\n    await this.props.setStrategyToken(strategy,token);\n    this.props.changeToken(token);\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left)+'px';\n\n    this.setStateSafe({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  render() {\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n\n    if (!this.props.availableStrategies){\n      return (\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'40px'\n          }}\n          flexProps={{\n            minHeight:'50vh',\n            flexDirection:'column'\n          }}\n          text={'Loading assets...'}\n        />\n      );\n    }\n\n    if (!this.props.selectedToken){\n      const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n      const enabledTokens = [];\n      const statsTokens = this.functionsUtil.getGlobalConfig(['stats','tokens']);\n      const statsProtocols = this.functionsUtil.getGlobalConfig(['stats','protocols']);\n      Object.keys(statsTokens).forEach(token => {\n        const tokenInfo = statsTokens[token];\n        if (tokenInfo.enabled){\n          enabledTokens.push(token);\n        }\n      });\n      return (\n        <Flex\n          mb={3}\n          width={1}\n          flexDirection={'column'}\n        >\n          <AssetsUnderManagement\n            {...this.props}\n          />\n          {\n            Object.keys(strategies).map(strategy => {\n              const strategyInfo = strategies[strategy];\n              const availableTokens = this.props.availableStrategies[strategy];\n              if (!availableTokens){\n                return false;\n              }\n              return (\n                <Box\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  key={`strategy-container-${strategy}`}\n                >\n                  <Title\n                    mt={3}\n                    mb={[3,4]}\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={'baseline'}\n                      justifyContent={'center'}\n                    >\n                      {strategyInfo.title}\n                      {\n                        strategyInfo.titlePostfix &&\n                          <Text\n                            ml={2}\n                            fontWeight={3}\n                            fontSize={[2,4]}\n                            color={'dark-gray'}\n                          >\n                            {strategyInfo.titlePostfix}\n                          </Text>\n                      }\n                    </Flex>\n                  </Title>\n                  <AssetsList\n                    enabledTokens={enabledTokens}\n                    handleClick={(props) => this.selectToken(strategy,props.token)}\n                    cols={[\n                      {\n                        title:'CURRENCY',\n                        props:{\n                          width:[0.26,0.15]\n                        },\n                        fields:[\n                          {\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2.3em']\n                            }\n                          },\n                          {\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.22,0.14],\n                        },\n                        fields:[\n                          {\n                            name:'allocationChart',\n                            mobile:false,\n                            parentProps:{\n                              width:0.3\n                            },\n                            style:{\n                              overflow:'visible'\n                            },\n                            showLoader:false,\n                          },\n                          {\n                            name:'pool',\n                            props:{\n                              ml:1\n                            },\n                            parentProps:{\n                              width:[1,0.7]\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'APY',\n                        desc:apyLong,\n                        props:{\n                          width: [0.29,0.14],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'apy',\n                            showTooltip:true\n                          },\n                          {\n                            name:'idleDistribution',\n                            showLoader:false,\n                            props:{\n                              decimals:this.props.isMobile ? 1 : 2,\n                              fontSize:this.props.isMobile ? '9px' : 0\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'RISK SCORE',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','riskScore']),\n                        mobile:false,\n                        props:{\n                          width:[0.27,0.16],\n                        },\n                        fields:[\n                          {\n                            name:'score'\n                          }\n                        ]\n                      },\n                      {\n                        title:'APR LAST WEEK',\n                        mobile:false,\n                        props:{\n                          width: 0.25,\n                        },\n                        parentProps:{\n                          width:1,\n                          pr:[2,4]\n                        },\n                        fields:[\n                          {\n                            name:'aprChart',\n                          }\n                        ]\n                      },\n                      {\n                        title:'',\n                        props:{\n                          width:[0.23,0.16],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label:this.props.isMobile ? 'View' : 'View stats',\n                            props:{\n                              width:1,\n                              fontSize:3,\n                              fontWeight:3,\n                              height:'45px',\n                              borderRadius:4,\n                              boxShadow:null,\n                              mainColor:'redeem',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectToken(strategy,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    selectedStrategy={strategy}\n                    availableTokens={availableTokens}\n                  />\n                  {\n                    !this.props.isMobile &&\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-end'}\n                      >\n                        {\n                          Object.values(statsProtocols).filter( p => (p.legend) ).map( (p,index) => (\n                            <Flex\n                              mr={3}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              key={`legend_${index}`}\n                            >\n                              <Box\n                                mr={1}\n                                width={'10px'}\n                                height={'10px'}\n                                borderRadius={'50%'}\n                                backgroundColor={`rgb(${p.color.rgb.join(',')})`}\n                              >\n                              </Box>\n                              <Text.span\n                                fontSize={1}\n                                color={'cellText'}\n                              >\n                                {p.label}\n                              </Text.span>\n                            </Flex>\n                          ))\n                        }\n                      </Flex>\n                  }\n                </Box>\n              );\n            })\n          }\n          {\n            idleTokenEnabled &&\n              <Flex\n                p={2}\n                width={1}\n                my={[2,3]}\n                borderRadius={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                backgroundColor={'#f3f6ff'}\n                boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n              >\n                <Text\n                  fontWeight={500}\n                  color={'#3f4e9a'}\n                  textAlign={'center'}\n                  fontSize={[1,'15px']}\n                >\n                  By executing this transaction you can adjust the IDLE distribution speed among the pools.\n                </Text>\n                <ExecuteTransaction\n                  action={'Refresh'}\n                  Component={Button}\n                  parentProps={{\n                    mt:1\n                  }}\n                  componentProps={{\n                    size:'small',\n                    value:'REFRESH IDLE SPEED'\n                  }}\n                  params={[]}\n                  contractName={'IdleController'}\n                  methodName={'refreshIdleSpeeds'}\n                  {...this.props}\n                >\n                  <Flex\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Icon\n                      mr={1}\n                      name={'Done'}\n                      size={'1.4em'}\n                      color={this.props.theme.colors.transactions.status.completed}\n                    />\n                    <Text\n                      fontWeight={500}\n                      fontSize={'15px'}\n                      color={'copyColor'}\n                      textAlign={'center'}\n                    >\n                      Idle Speed Refreshed\n                    </Text>\n                  </Flex>\n                </ExecuteTransaction>\n              </Flex>\n          }\n        </Flex>\n      );\n    } else {\n      const versionsOptions = Object.keys(globalConfigs.stats.versions).filter( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return versionInfo.enabledTokens.includes(this.props.selectedToken) && versionInfo.enabledStrategies.includes(this.props.selectedStrategy);\n      }).map( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return {\n          value:version,\n          label:versionInfo.label\n        }\n      });\n\n      const versionInfo = this.getVersionInfo(this.state.idleVersion);\n\n      let performanceTooltip = null;\n      if (this.state.idleVersion && versionInfo){\n        const showPerformanceTooltip = this.functionsUtil.getGlobalConfig(['stats','versions',this.state.idleVersion,'showPerformanceTooltip']);\n        performanceTooltip = showPerformanceTooltip ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'performanceTooltip']) : null;\n      }\n\n      const versionDefaultValue = versionsOptions.find( v => (v.value === this.state.idleVersion) );\n\n      return (\n        <Flex\n          p={0}\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n          /*\n          }\n          <Flex position={['absolute','relative']} left={0} px={[3,0]} zIndex={10} width={1} flexDirection={'row'} mb={[0,3]}>\n            <Flex alignItems={'center'} width={[2/3,1/2]}>\n              <RouterLink to=\"/\">\n                <Image src=\"images/logo-gradient.svg\"\n                  height={['35px','48px']}\n                  position={'relative'} />\n              </RouterLink>\n              <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={3} lineHeight={'initial'} fontSize={[4,5]} ml={[1,2]}>\n                <Text.span fontSize={'80%'}>|</Text.span> Stats\n              </Heading.h3>\n            </Flex>\n            <Flex flexDirection={'row'} width={[1/3,1/2]} justifyContent={'flex-end'} alignItems={'center'}>\n              {\n                this.state.buttonGroups && \n                  this.props.isMobile ? (\n                    <ButtonGroup\n                      isMobile={this.props.isMobile}\n                      components={ this.state.buttonGroups.reduce((components,array) => components.concat(array),[]) }\n                      theme={'light'}\n                    />\n                  ) :\n                  this.state.buttonGroups.map((buttonGroup,i) => (\n                    <ButtonGroup\n                      key={`buttonGroup_${i}`}\n                      isMobile={this.props.isMobile}\n                      components={buttonGroup}\n                      theme={'light'}\n                    />\n                  ))\n              }\n            </Flex>\n          </Flex>\n          */\n          }\n          <Box\n            mb={[3,4]}\n          >\n            <Flex\n              flexDirection={['column','row']}\n            >\n              <Flex\n                width={[1,0.4]}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  text={'ASSETS OVERVIEW'}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('stats') }\n                  path={[this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])]}\n                />\n              </Flex>\n              <Flex\n                mt={[3,0]}\n                width={[1,0.6]}\n                flexDirection={['column','row']}\n                justifyContent={['center','space-between']}\n              >\n                <Flex\n                  width={[1,0.26]}\n                  flexDirection={'column'}\n                >\n                  <GenericSelector\n                    innerProps={{\n                      p:1,\n                      height:['100%','46px'],\n                    }}\n                    name={'idle-version'}\n                    options={versionsOptions}\n                    defaultValue={versionDefaultValue}\n                    onChange={ v => this.setIdleVersion(v) }\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.3]}\n                  flexDirection={'column'}\n                >\n                  <AssetSelector\n                    innerProps={{\n                      p:1\n                    }}\n                    {...this.props}\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.39]}\n                  flexDirection={'column'}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:1,\n                      display:'flex',\n                      alignItems:'center',\n                      height:['46px','100%'],\n                      justifyContent:'center'\n                    }}\n                    isInteractive={true}\n                    handleClick={ e => this.setDateRangeModal(true) }\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'copyColor'}\n                    >\n                    {\n                      this.state.quickSelection\n                      ?\n                        this.quickSelections[this.state.quickSelection]\n                      : this.state.startTimestampObj && this.state.endTimestampObj &&\n                        `${this.state.startTimestampObj.format('DD/MM/YY')} - ${this.state.endTimestampObj.format('DD/MM/YY')}`\n                    }\n                    </Text>\n                  </DashboardCard>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n\n          {\n            this.state.idleVersion && (versionInfo.startTimestamp>parseInt(new Date().getTime()/1000)) ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    width:[1,0.5],\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={'AccessTime'}\n                    />\n                    <Text\n                      mt={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Idle Stats {this.state.idleVersion} will be available shortly!\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={[3,0]}\n                  mb={[3,4]}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                    flexDirection={['column','row']}\n                  >\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        value={this.state.aum}\n                        title={'Asset Under Management'}\n                        label={ this.state.unlentBalance ? `Unlent funds: ${this.state.unlentBalance} ${this.props.selectedToken}` : this.props.selectedToken }\n                        labelTooltip={ this.state.unlentBalance ? this.functionsUtil.getGlobalConfig(['messages','cheapRedeem']) : null}\n                      />\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Avg APY'}\n                        label={'Annualized'}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={['column','row']}\n                        >\n                          <VariationNumber\n                            direction={'up'}\n                            iconPos={'right'}\n                            iconSize={'1.8em'}\n                            justifyContent={'flex-start'}\n                            width={1}\n                            >\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                              fontSize={[4,5]}\n                            >\n                              {this.state.apr}\n                              <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                            </Text>\n                          </VariationNumber>\n                        </Flex>\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Overperformance on Compound'}\n                        label={'Annualized'}\n                      >\n                        {\n                          this.state.delta && !isNaN(this.state.delta) ? (\n                            <VariationNumber\n                              direction={'up'}\n                              iconPos={'right'}\n                              iconSize={'1.8em'}\n                              justifyContent={'flex-start'}\n                              >\n                              <Text\n                                lineHeight={1}\n                                fontSize={[4,5]}\n                                fontWeight={[3,4]}\n                                color={'statValue'}\n                              >\n                                {this.state.delta}\n                                <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                              </Text>\n                            </VariationNumber>\n                          ) : (\n                            <Text\n                              lineHeight={1}\n                              fontSize={[4,5]}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                            >\n                              {this.state.delta}\n                            </Text>\n                          )\n                        }\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        label={' '}\n                        title={'Rebalances'}\n                        value={this.state.rebalances.toString()}\n                      />\n                    </Flex>\n                    {\n                    /*\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Current APR</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.currApr}\n                            <Text.span color={'copyColor'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Days Live</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.days}\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    */\n                    }\n                  </Flex>\n                </Box>\n\n                <DashboardCard\n                  title={'Historical Performance'}\n                  description={performanceTooltip}\n                  cardProps={{\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex id='chart-PRICE' width={1} mb={3}>\n                    <StatsChart\n                      height={ 350 }\n                      {...this.state}\n                      parentId={'chart-PRICE'}\n                      isMobile={this.props.isMobile}\n                      contracts={this.props.contracts}\n                      apiResults={this.state.apiResults}\n                      idleVersion={this.state.idleVersion}\n                      apiResults_unfiltered={this.state.apiResults_unfiltered}\n                      chartMode={this.state.idleVersion === this.state.latestVersion ? 'PRICE_V4' : 'PRICE'}\n                    />\n                  </Flex>\n                </DashboardCard>\n\n                <DashboardCard\n                  cardProps={{\n                    pb:3,\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex\n                    flexDirection={['column','row']}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      this.state.idleVersion === this.state.latestVersion && \n                      <Flex\n                        pt={2}\n                        width={[1,1/3]}\n                        id={'allocation-chart'}\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <AllocationChart\n                          height={310}\n                          {...this.props}\n                          parentId={'allocation-chart'}\n                        />\n                        <Rebalance\n                          {...this.props}\n                        />\n                      </Flex>\n                    }\n                    <Flex\n                      mb={[0,3]}\n                      id={'chart-ALL'}\n                      pl={[0,this.state.idleVersion === this.state.latestVersion ? 0 : 3]}\n                      width={[1, this.state.idleVersion === this.state.latestVersion ? 2/3 : 1]}\n                    >\n                      <Flex alignItems={'flex-start'} justifyContent={'flex-start'} flexDirection={'column'} width={1}>\n                        <Heading.h4\n                          mb={2}\n                          ml={3}\n                          mt={[3,4]}\n                          fontWeight={4}\n                          fontSize={[2,3]}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                        >\n                          Allocations over time\n                        </Heading.h4>\n                        <StatsChart\n                          height={350}\n                          {...this.state}\n                          chartMode={'ALL'}\n                          parentId={'chart-ALL'}\n                          isMobile={this.props.isMobile}\n                          contracts={this.props.contracts}\n                          apiResults={this.state.apiResults}\n                          idleVersion={this.state.idleVersion}\n                          apiResults_unfiltered={this.state.apiResults_unfiltered}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n\n                <Flex\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    id={'carousel-container'}\n                    justifyContent={'flex-end'}\n                  >\n                    <RoundIconButton\n                      buttonProps={{\n                        mr:3\n                      }}\n                      iconName={'ArrowBack'}\n                      disabled={this.state.carouselIndex === 0}\n                      handleClick={ e => this.handleCarousel('back') }\n                    />\n                    <RoundIconButton\n                      iconName={'ArrowForward'}\n                      handleClick={ e => this.handleCarousel('next') }\n                      disabled={this.state.carouselIndex === this.state.carouselMax}\n                    />\n                  </Flex>\n                  <Flex\n                    mt={5}\n                    height={'400px'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={['444%','200%']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        id='chart-AUM'\n                      >\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            ml={3}\n                            mt={3}\n                            mb={2}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Asset Under Management\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'AUM'}\n                            parentId={'chart-AUM'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-APR' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            APRs\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'APR'}\n                            parentId={'chart-APR'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                      title={'Risk Score'}\n                      description={'Idle Risk Score is a weighted average of the underlying protocols risks assessed by DeFi Score'}\n                      titleParentProps={{\n                        ml:16,\n                        mt:16\n                      }}\n                    >\n                      <Flex id='chart-SCORE' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'SCORE'}\n                            parentId={'chart-SCORE'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-VOL' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Volume\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'VOL'}\n                            parentId={'chart-VOL'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              </Box>\n            )\n          }\n\n          <DateRangeModal\n            minDate={this.state.minDate}\n            maxDate={this.state.maxDate}\n            handleSelect={this.setDateRange}\n            isOpen={this.state.dateRangeModalOpened}\n            closeModal={e => this.setDateRangeModal(false)}\n            startDate={this.state.startTimestampObj ? this.state.startTimestampObj._d : null}\n            endDate={this.state.endTimestampObj ? this.state.endTimestampObj._d : null}\n          />\n        </Flex>\n      );\n    }\n  }\n}\n\nexport default Stats;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport { Flex, Icon, Text, Box } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Utils extends Component {\n\n  state = {\n\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const SubComponent = this.props.selectedSubsection && this.props.selectedSubsection.subComponent ? this.props.selectedSubsection.subComponent : null;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.props.selectedSubsection ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  isMobile={this.props.isMobile}\n                  path={[this.props.selectedSubsection.label]}\n                  text={this.props.selectedSection.label.toUpperCase()}\n                  handleClick={ e => this.props.goToSection(this.props.selectedSection.route) }\n                />\n              </Flex>\n              <Flex\n                my={[2,3]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Title\n                  mb={2}\n                >\n                  {this.props.selectedSubsection.label}\n                </Title>\n                <Text\n                  textAlign={'center'}\n                >\n                  {this.props.selectedSubsection.desc}\n                </Text>\n              </Flex>\n              <SubComponent\n                {...this.props}\n                {...this.props.selectedSubsection.directProps}\n                toolProps={this.props.selectedSubsection.props}\n              />\n            </Box>\n          ) : (\n            <Flex\n              my={[2,3]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                mb={3}\n              >\n                Tools\n              </Title>\n              <Flex\n                width={1}\n                style={{\n                  flexWrap:'wrap'\n                }}\n              >\n              {\n                this.props.selectedSection.submenu.map( (tool,toolIndex) => (\n                  <DashboardCard\n                    isInteractive={true}\n                    key={`tool_${toolIndex}`}\n                    cardProps={{\n                      p:[3,4],\n                      mb:[3,3],\n                      mr:[0,'2%'],\n                      style:{\n                        flex: this.props.isMobile ? '1 1 100%' : '0 0 31%'\n                      },\n                      alignItems:'center',\n                      flexDirection:'column',\n                      justifyContent:'center'\n                    }}\n                    handleClick={ e => this.props.goToSection(this.props.selectedSection.route+'/'+tool.route) }\n                  >\n                    <Text\n                      fontSize={[3,4]}\n                      textAlign={'center'}\n                    >\n                      {tool.label}\n                    </Text>\n                    <Flex\n                      justifyContent={'center'}\n                    >\n                      <Icon\n                        my={[0,2]}\n                        size={'3em'}\n                        name={tool.icon}\n                      />\n                    </Flex>\n                    <Text\n                      fontSize={[2,2]}\n                      textAlign={'center'}\n                    >\n                      {tool.desc}\n                    </Text>\n                  </DashboardCard>\n                ) )\n              }\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Utils;\n","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n\nclass FundsOverview extends Component {\n\n  state = {\n    govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [\n      govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      avgAPY,\n      days\n    ] = await Promise.all([\n      this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    // console.log(govTokensTotalBalance,govTokensUserBalance,govTokensTotalBalanceTooltip);\n\n    const govTokensTotalApr = govTokensAprs ? Object.values(govTokensAprs).reduce( (totApr,govTokenApr) => {\n      return totApr.plus(this.functionsUtil.BNify(govTokenApr));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalAprTooltip = govTokensAprs ? Object.keys(govTokensAprs).map( govToken => {\n      const apr = govTokensAprs[govToken];\n      if (apr.gt(0)){\n        return `${govToken}: ${apr.toFixed(2)}%`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n\n    /*\n    const govTokensDistributionTooltip = govTokensUserDistribution ? Object.keys(govTokensUserDistribution).map( govToken => {\n      const speed = govTokensUserDistribution[govToken];\n      if (speed.gt(0)){\n        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n        return `+${speed.toFixed(4)} ${govToken}/${distributionFrequency}`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n    */\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      govTokensAprs,\n      aggregatedValues,\n      govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquity\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              chartToken={this.props.selectedToken}\n              enabledTokens={[this.props.selectedToken]}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLent',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )/* : this.state.govTokensUserBalance && Object.keys(this.state.govTokensUserBalance).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + ${this.state.govTokensTotalBalance.toFixed(4)}\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalBalanceTooltip.join(' / ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'apy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n                /*\n                this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length===1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      Object.keys(this.state.govTokensAprs).map((govToken,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          ml={govTokenIndex ? 2 : 0}\n                          key={`govToken_${govToken}`}\n                        >\n                          {this.state.govTokensAprs[govToken].toFixed(2)}% {govToken}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                ) : this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + {this.state.govTokensTotalApr.toFixed(2)}%\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalAprTooltip.join('; ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Risk Score\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'score',\n                  props:{\n                    decimals:1,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverview;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Icon, Checkbox, Box, Link, Input, Tooltip } from \"rimble-ui\";\n\nclass CurveRedeem extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    maxSlippage:0.2,\n    tokenConfig:null,\n    unevenAmounts:null,\n    selectedToken:null,\n    availableTokens:null,\n    buttonDisabled:false,\n    showMaxSlippage:false,\n    curveTokenConfig:null,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    curveTokensAmounts:null,\n    fastBalanceSelector:null,\n    redeemUnevenAmounts:false,\n    curveRedeemableIdleTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.initToken();\n  }\n\n  showMaxSlippage = () => {\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  async calculateSlippage(max_slippage=null){\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n\n    if (!inputValue || inputValue.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n    const [curveTokensAmounts,curveIdleTokensAmounts] = await Promise.all([\n      this.functionsUtil.getCurveTokensAmounts(this.props.account,normalizedAmount,true),\n      this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,normalizedAmount)\n    ])\n\n    const amounts = this.state.redeemUnevenAmounts ? curveIdleTokensAmounts : null;\n\n    let withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,false,amounts);\n    if (withdrawSlippage){\n      withdrawSlippage = withdrawSlippage.times(100);\n    }\n\n    this.setState({\n      withdrawSlippage,\n      curveTokensAmounts,\n      curveIdleTokensAmounts\n    });\n\n    // Add max slippage but don't save in state\n    if (withdrawSlippage && max_slippage){\n      withdrawSlippage = withdrawSlippage.plus(max_slippage);\n    }\n\n    return withdrawSlippage;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.tokenConfig.idle.token !== this.props.tokenConfig.idle.token;\n    if (tokenChanged){\n      await this.initToken();\n    }\n\n    const redeemUnevenAmountsChanged = prevState.redeemUnevenAmounts !== this.state.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    const inputChanged = prevState.inputValue !== this.state.inputValue;\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const maxSlippageChanged = parseFloat(prevState.maxSlippage) !== parseFloat(this.state.maxSlippage);\n    if (inputChanged || selectedTokenChanged || maxSlippageChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n\n    let buttonDisabled = false;\n\n    if (this.state.redeemUnevenAmounts){\n      buttonDisabled = !amount || amount.gt(this.state.curveTokenBalance);\n    } else {\n      buttonDisabled = !amount || amount.gt(this.state.redeemableBalance);\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    let inputValue = null;\n\n    if (this.state.redeemUnevenAmounts){\n      inputValue = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n    } else {\n      inputValue = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n    }\n\n    this.checkButtonDisabled(inputValue);\n\n    this.setState({\n      inputValue\n    });\n  }\n\n  changeToken = selectedToken => {\n    const tokenConfig = this.state.availableTokens[selectedToken];\n    this.setState({\n      tokenConfig,\n      selectedToken\n    });\n  }\n\n  initToken = async () => {\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenConfig = curveConfig.availableTokens[this.props.tokenConfig.idle.token];\n\n    const [curvePoolContract,curveSwapContract] = await Promise.all([\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract()\n    ]);\n\n    const [\n      curveTokenPrice,\n      curveTokenBalance,\n      curveRedeemableIdleTokens,\n    ] = await Promise.all([\n      this.functionsUtil.getCurveTokenPrice(),\n      this.functionsUtil.getCurveTokenBalance(this.props.account),\n      this.functionsUtil.getCurveRedeemableIdleTokens(this.props.account)\n    ]);\n\n    const redeemableBalance = curveTokenBalance ? curveTokenBalance.times(curveTokenPrice) : this.functionsUtil.BNify(0);\n\n    // const max_burn_amount = this.functionsUtil.normalizeTokenAmount(curveTokenBalance,curvePoolContract.decimals).toString();\n    // const amounts = this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,0);\n    // let redeemUnevenAmounts = await this.functionsUtil.getCurveUnevenTokenAmounts(amounts,max_burn_amount);\n\n    const unevenAmounts = [];\n\n    let tokenConfig = this.props.tokenConfig ? this.props.tokenConfig : this.state.tokenConfig;\n    let selectedToken = this.props.selectedToken ? this.props.selectedToken : this.state.selectedToken;\n    let availableTokens = this.state.availableTokens;\n\n    if (!availableTokens){\n      availableTokens = this.functionsUtil.getCurveAvailableTokens();\n      if (!selectedToken){\n        selectedToken = Object.keys(availableTokens)[0];\n        tokenConfig = availableTokens[selectedToken];\n      }\n    }\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      unevenAmounts,\n      curveTokenPrice,\n      availableTokens,\n      curveTokenConfig,\n      curvePoolContract,\n      curveSwapContract,\n      curveTokenBalance,\n      redeemableBalance,\n      curveRedeemableIdleTokens\n    });\n  }\n\n  redeem = async () => {\n\n    if (!this.state.curveTokenBalance){\n      return false;\n    }\n\n    const callbackRedeem = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveRedeem`,\n        eventAction: this.props.selectedToken,\n        eventValue: this.state.curveTokenBalance.toFixed()\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      }));\n\n      if (typeof this.props.callbackRedeem === 'function' && txSucceeded){\n        this.props.callbackRedeem(tx);\n      }\n    };\n\n    const callbackReceiptRedeem = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.state.curveSwapContract.name;\n    const withdrawSlippage = await this.calculateSlippage(this.state.maxSlippage);\n    const max_slippage = this.functionsUtil.BNify(this.state.maxSlippage).div(100);\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n    const curveTokenBalance = this.functionsUtil.normalizeTokenAmount(this.state.curveTokenBalance,this.state.curvePoolContract.decimals);\n\n    if (this.state.redeemUnevenAmounts){\n      const min_amounts = await this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,_amount,max_slippage);\n      console.log('remove_liquidity',_amount.toString(),min_amounts);\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts], null, callbackRedeem, callbackReceiptRedeem);\n    } else {\n      const coin_index = this.state.curveTokenConfig.migrationParams.coinIndex;\n      const amounts = await this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,_amount,false);\n      const min_amount = this.functionsUtil.normalizeTokenAmount(inputValue.minus(inputValue.times(withdrawSlippage.div(100))),this.state.curveTokenConfig.decimals);\n      let _token_amount = await this.functionsUtil.getCurveTokenAmount(amounts,false);\n      _token_amount = this.functionsUtil.BNify(_token_amount).isGreaterThan(curveTokenBalance) ? curveTokenBalance : this.functionsUtil.BNify(_token_amount);\n\n      console.log('remove_liquidity_one_coin',_amount,amounts,coin_index,_token_amount.toFixed(),min_amount);\n\n      // debugger;\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_one_coin', [_token_amount, coin_index, min_amount], null, callbackRedeem, callbackReceiptRedeem);\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  changeInputValue = (e) => {\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(inputValue);\n\n    const fastBalanceSelector = null;\n\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector,\n    }));\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  render() {\n\n    const showSlippage = !this.state.buttonDisabled && this.state.withdrawSlippage;\n    const curveTokenName = this.functionsUtil.getGlobalConfig(['curve','poolContract','token']);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            !this.state.curveTokenBalance ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3,\n                  minHeight:'195px',\n                  style:{\n                    display:'flex',\n                    alignItems:'center',\n                    justifyContent:'center'\n                  }\n                }}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Checking Curve Pool...'}\n                />\n              </DashboardCard>\n            ) : this.state.processing.loading ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    endMessage={`Finalizing redeem request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                    waitText={ this.props.waitText ? this.props.waitText : 'Redeem estimated in'}\n                  />\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    mb:2\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'1.8em'}\n                      color={'cellText'}\n                      name={'FileUpload'}\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Withdraw from the Curve Pool in a specific token or in uneven amounts of tokens (with no slippage).\n                    </Text>\n                    <Flex\n                      mt={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Checkbox\n                        required={false}\n                        label={`Redeem with no slippage`}\n                        checked={this.state.redeemUnevenAmounts}\n                        onChange={ e => this.toggleUnevenAmounts(e.target.checked) }\n                      />\n                      <Tooltip\n                        placement={'top'}\n                        message={`You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.`}\n                      >\n                        <Icon\n                          size={'1em'}\n                          color={'cellTitle'}\n                          name={\"InfoOutline\"}\n                        />\n                      </Tooltip>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n                {\n                  !this.state.redeemUnevenAmounts && (!this.props.selectedToken || (this.state.showMaxSlippage && showSlippage)) ? (\n                    <Box\n                      mb={3}\n                      width={1}\n                    >\n                      {\n                        !this.props.selectedToken && \n                          <Box\n                            width={1}\n                          >\n                            <Text\n                              mb={1}\n                            >\n                              Select destination token:\n                            </Text>\n                            <AssetSelector\n                              {...this.props}\n                              id={'token-from'}\n                              showBalance={false}\n                              onChange={this.changeToken}\n                              tokenConfig={this.state.tokenConfig}\n                              selectedToken={this.state.selectedToken}\n                              availableTokens={this.state.availableTokens}\n                            />\n                          </Box>\n                      }\n                      {\n                        this.state.showMaxSlippage && showSlippage && (\n                          <Box\n                            width={1}\n                            mt={ !this.props.selectedToken ? 2 : 0 }\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text>\n                                Choose max slippage:\n                              </Text>\n                              <Tooltip\n                                placement={'top'}\n                                message={`Max additional slippage on top of the one shown below`}\n                              >\n                                <Icon\n                                  ml={1}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                  name={\"InfoOutline\"}\n                                />\n                              </Tooltip>\n                            </Flex>\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [0.2,0.5,1,5].map( slippage => (\n                                  <FastBalanceSelector\n                                    cardProps={{\n                                      p:1\n                                    }}\n                                    textProps={{\n                                      fontSize:1\n                                    }}\n                                    percentage={slippage}\n                                    key={`selector_${slippage}`}\n                                    onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                    isActive={this.state.maxSlippage === parseFloat(slippage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Box>\n                        )\n                      }\n                    </Box>\n                  ) : this.state.redeemUnevenAmounts && this.state.curveTokensAmounts && !this.state.buttonDisabled && (\n                    <DashboardCard\n                      cardProps={{\n                        mt:1,\n                        mb:2,\n                        py:2,\n                        px:1\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You will receive:\n                        </Text>\n                        <Flex\n                          mt={2}\n                          width={1}\n                          boxShadow={0}\n                          style={{\n                            flexWrap:'wrap'\n                          }}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                          >\n                            {\n                              Object.keys(this.state.curveTokensAmounts).map( token => {\n                                const balance = this.state.curveTokensAmounts[token];\n                                return (\n                                  <Flex\n                                    mb={1}\n                                    mx={1}\n                                    minWidth={'21%'}\n                                    flexDirection={'row'}\n                                    key={`tokenBalance_${token}`}\n                                    justifyContent={'flex-start'}\n                                  >\n                                    <AssetField\n                                      token={token}\n                                      tokenConfig={{\n                                        token:token\n                                      }}\n                                      fieldInfo={{\n                                        name:'icon',\n                                        props:{\n                                          mr:1,\n                                          width:['1.4em','1.6em'],\n                                          height:['1.4em','1.6em']\n                                        }\n                                      }}\n                                    />\n                                    <SmartNumber\n                                      fontSize={[0,1]}\n                                      fontWeight={500}\n                                      maxPrecision={4}\n                                      color={'cellText'}\n                                      number={balance.toString()}\n                                    />\n                                  </Flex>\n                                );\n                            })\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    mb={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'flex-end'}\n                  >\n                    {\n                      showSlippage && (\n                        <Flex\n                          width={1}\n                          maxWidth={'50%'}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            textAlign={'right'}\n                            style={{\n                              whiteSpace:'nowrap'\n                            }}\n                            color={ this.state.withdrawSlippage.gt(0) ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                          >\n                            {\n                              parseFloat(this.state.withdrawSlippage.toFixed(2)) === 0 ?\n                                'No Slippage'\n                              : `${ this.state.withdrawSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.withdrawSlippage.abs().toFixed(2)}%`\n                            }\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={ this.state.redeemUnevenAmounts ? `You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.` : this.state.withdrawSlippage.gt(0) ? 'Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for' : 'Bonus comes as an advantage from current coin prices which usually appears for coins which are high in balance'}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                          {\n                            !this.state.redeemUnevenAmounts &&\n                              <Link\n                                ml={1}\n                                color={'copyColor'}\n                                hoverColor={'primary'}\n                                onClick={this.showMaxSlippage}\n                              >\n                                change\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    <Flex\n                      width={1}\n                      maxWidth={'50%'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                    >\n                      <Link\n                        fontSize={1}\n                        fontWeight={3}\n                        color={'dark-gray'}\n                        textAlign={'right'}\n                        hoverColor={'copyColor'}\n                        onClick={ (e) => this.setFastBalanceSelector(100) }\n                        style={{\n                          maxWidth:'100%',\n                          overflow:'hidden',\n                          whiteSpace:'nowrap',\n                          textOverflow:'ellipsis'\n                        }}\n                      >\n                        {\n                          this.state.redeemUnevenAmounts ? `${this.state.curveTokenBalance.toFixed(this.props.isMobile ? 2 : 4)} ${curveTokenName}` : `${this.state.redeemableBalance.toFixed(this.props.isMobile ? 2 : 4)} ${this.state.selectedToken}`\n                        }\n                      </Link>\n                    </Flex>\n                  </Flex>\n                  <Input\n                    min={0}\n                    type={\"number\"}\n                    required={true}\n                    height={'3.4em'}\n                    borderRadius={2}\n                    fontWeight={500}\n                    boxShadow={'none !important'}\n                    placeholder={`Insert amount`}\n                    onChange={this.changeInputValue.bind(this)}\n                    border={`1px solid ${this.props.theme.colors.divider}`}\n                    value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                  />\n                  <Flex\n                    mt={2}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      [25,50,75,100].map( percentage => (\n                        <FastBalanceSelector\n                          percentage={percentage}\n                          key={`selector_${percentage}`}\n                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                          isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  justifyContent={'center'}\n                >\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2],\n                      disabled:this.state.buttonDisabled\n                    }}\n                    handleClick={this.redeem}\n                  >\n                    Redeem\n                  </RoundButton>\n                </Flex>\n              </Flex>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveRedeem;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import theme from '../theme';\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport ShareModal from '../utilities/components/ShareModal';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Input, Box, Icon, Link, Checkbox, Tooltip, Image } from \"rimble-ui\";\n\nclass DepositRedeem extends Component {\n\n  state = {\n    txError:{},\n    tokenAPY:'-',\n    inputValue:{},\n    processing:{},\n    curveAPY:null,\n    canRedeem:false,\n    maxSlippage:0.2,\n    canDeposit:false,\n    action:'deposit',\n    directMint:false,\n    activeModal:null,\n    showBuyFlow:false,\n    unlentBalance:null,\n    tokenApproved:false,\n    skipMigration:false,\n    showRedeemFlow:false,\n    contractPaused:false,\n    buttonDisabled:false,\n    canRedeemCurve:false,\n    showMaxSlippage:false,\n    redeemGovTokens:false,\n    canDepositCurve:false,\n    fastBalanceSelector:{},\n    actionProxyContract:{},\n    migrationEnabled:false,\n    componentMounted:false,\n    curveTokenBalance:null,\n    redeemCurveEnabled:false,\n    depositCurveBalance:null,\n    depositCurveEnabled:true,\n    showAdvancedOptions:false,\n    depositCurveSlippage:null,\n    metaTransactionsEnabled:true\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadProxyContracts();\n  }\n\n  async componentDidMount(){\n\n  }\n\n  setShowRedeemFlow = (showRedeemFlow) => {\n    this.setState({\n      showRedeemFlow\n    });\n  }\n\n  setShowBuyFlow = (showBuyFlow) => {\n    this.setState({\n      showBuyFlow\n    });\n  }\n\n  toggleShowAdvancedOptions = showAdvancedOptions => {\n    this.setState((prevState) => ({\n      showAdvancedOptions:!prevState.showAdvancedOptions\n    }));\n  }\n\n  toggleSkipMigration = skipMigration => {\n    this.setState({\n      skipMigration\n    });\n  }\n\n  toggleRedeemCurve = redeemCurveEnabled => {\n    this.setState({\n      redeemCurveEnabled\n    });\n  }\n\n  toggleDepositCurve = depositCurveEnabled => {\n    this.setState({\n      depositCurveEnabled\n    });\n  }\n\n  toggleSkipMint = (directMint) => {\n    this.setState({\n      directMint\n    });\n  }\n\n  toggleRedeemGovTokens = (redeemGovTokens) => {\n    this.setState({\n      redeemGovTokens\n    });\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  async loadProxyContracts(){\n    const actions = ['deposit','redeem'];\n    const newState = {\n      actionProxyContract:{}\n    };\n\n    await this.functionsUtil.asyncForEach(actions,async (action) => {\n      const mintProxyContractInfo = this.functionsUtil.getGlobalConfig(['contract','methods',action,'proxyContract']);\n      const hasProxyContract = mintProxyContractInfo && mintProxyContractInfo.enabled;\n      newState.actionProxyContract[action] = hasProxyContract ? mintProxyContractInfo : null;\n      if (hasProxyContract){\n        const proxyContract = await this.props.initContract(mintProxyContractInfo.name,mintProxyContractInfo.address,mintProxyContractInfo.abi);\n        newState.actionProxyContract[action].contract = proxyContract.contract;\n        newState.actionProxyContract[action].approved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,mintProxyContractInfo.address,this.props.account);\n      }\n    });\n\n    this.setState(newState);\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadAPY(){\n    const tokenAprs = await this.functionsUtil.getTokenAprs(this.props.tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy).toFixed(2);\n\n      let curveAPY = null;\n      if (this.state.canDepositCurve){\n        curveAPY = await this.functionsUtil.getCurveAPY();\n        // console.log('curveAPY',curveAPY);\n        if (curveAPY){\n          curveAPY = curveAPY.plus(tokenAPY);\n        }\n      }\n      this.setState({\n        tokenAPY,\n        curveAPY\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    if (this.props.tokenBalance === null){\n      return false;\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance && this.props.tokenBalance !== null;\n\n    if (tokenChanged || tokenBalanceChanged){\n      await this.loadProxyContracts();\n      this.loadTokenInfo();\n      return false;\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const redeemGovTokensChanged = prevState.redeemGovTokens !== this.state.redeemGovTokens;\n    if (redeemGovTokensChanged || actionChanged){\n      this.checkButtonDisabled();\n    }\n\n    const depositCurveChanged = prevState.depositCurveEnabled !== this.state.depositCurveEnabled;\n    const metaTransactionsChanged = prevState.metaTransactionsEnabled !== this.state.metaTransactionsEnabled;\n    if (metaTransactionsChanged || depositCurveChanged){\n      const tokenApproved = await this.checkTokenApproved();\n      this.setState({\n        tokenApproved\n      });\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateCurveSlippage();\n    }\n  }\n\n  async calculateCurveSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,curvePoolContractInfo.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositCurveBalance = amount;\n        newState.depositCurveSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        // newState.redeemBalance = amount;\n        // newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateCurveSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  approveContract = async (callbackApprove,callbackReceiptApprove) => {\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      this.functionsUtil.enableERC20(this.props.selectedToken,curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        this.functionsUtil.enableERC20(this.props.selectedToken,proxyContract.address,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.selectedToken,this.props.tokenConfig.idle.address,callbackApprove,callbackReceiptApprove);\n      }\n    }\n  }\n\n  checkTokenApproved = async () => {\n\n    let tokenApproved = false;\n\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,curveDepositContract.address,this.props.account);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,proxyContract.address,this.props.account);\n      } else {\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,this.props.tokenConfig.idle.address,this.props.account);\n      }\n    }\n    return tokenApproved;\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = await this.checkTokenApproved();\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.approveContract(callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  loadTokenInfo = async () => {\n\n    if (this.state.componentMounted){\n      this.setState({\n        componentMounted:false\n      });\n    }\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token]);\n    const curveTokenEnabled = curveConfig.enabled && curveTokenConfig && curveTokenConfig.enabled;\n\n    const [\n      tokenApproved,\n      contractPaused,\n      curveSwapContract,\n      curveDepositContract,\n      unlentBalance,\n      {migrationEnabled},\n      curveTokenBalance,\n    ] = await Promise.all([\n      this.checkTokenApproved(),\n      this.functionsUtil.checkContractPaused(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract(),\n      this.functionsUtil.getUnlentBalance(this.props.tokenConfig),\n      this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account),\n      curveTokenEnabled ? this.functionsUtil.getCurveTokenBalance(this.props.account) : null\n    ]);\n\n    const canDeposit = this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0);\n    const canRedeem = this.props.idleTokenBalance && this.functionsUtil.BNify(this.props.idleTokenBalance).gt(0);\n\n    const canDepositCurve = curveTokenEnabled && canDeposit;\n    const depositCurveEnabled = canDepositCurve;\n\n    const canRedeemCurve = curveTokenEnabled && curveTokenBalance && curveTokenBalance.gt(0);\n    const redeemCurveEnabled = canRedeemCurve;\n\n    const newState = {...this.state};\n\n    // Check curve deposit enabled\n    if (newState.depositCurveEnabled && !curveTokenEnabled){\n      newState.depositCurveEnabled = false;\n    }\n    \n    newState.canRedeem = canRedeem;\n    newState.canDeposit = canDeposit;\n    newState.unlentBalance = unlentBalance;\n    newState.tokenApproved = tokenApproved;\n    newState.contractPaused = contractPaused;\n    newState.canRedeemCurve = canRedeemCurve;\n    newState.canDepositCurve = canDepositCurve;\n    newState.migrationEnabled = migrationEnabled;\n    newState.curveTokenBalance = curveTokenBalance;\n    newState.curveSwapContract = curveSwapContract;\n    newState.redeemCurveEnabled = redeemCurveEnabled;\n    newState.depositCurveEnabled = depositCurveEnabled;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.txError = {\n      redeem:false,\n      deposit:false\n    };\n    newState.processing = {\n      redeem:{\n        txHash:null,\n        loading:false\n      },\n      deposit:{\n        txHash:null,\n        loading:false\n      },\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      boost:{\n        txHash:null,\n        loading:false\n      }\n    };\n    newState.inputValue = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n    newState.fastBalanceSelector = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n\n    newState.componentMounted = true;\n\n    this.setState(newState,() => {\n      this.checkAction();\n      this.loadAPY();\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const redeemGovTokens = this.state.redeemGovTokens;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        if (!this.state.tokenApproved){\n          return this.approveToken();\n        }\n\n        if (localStorage){\n          this.functionsUtil.setLocalStorage('redirectToFundsAfterLogged',0);\n        }\n\n        this.setState({\n          lendingProcessing: this.props.account,\n          lendAmount: '',\n          genericError: '',\n        });\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n        const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n        // Handle Curve Deposit\n        if (curveTokenEnabled && this.state.depositCurveEnabled){\n\n          const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,curvePoolContractInfo.decimals);\n\n          const amounts = await this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,tokensToDeposit);\n          let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n          if (this.state.maxSlippage){\n            minMintAmount = this.functionsUtil.BNify(minMintAmount);\n            minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n            minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n          }\n          \n          const depositParams = [amounts,minMintAmount];\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, callbackDeposit, callbackReceiptDeposit);\n        } else {\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n          const depositMetaTransactionsEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','metaTransactionsEnabled']);\n          // const gasLimitDeposit = this.functionsUtil.BNify(1000000);\n          let depositParams = [];\n\n          // Use Proxy Contract if enabled\n          const mintProxyContractInfo = this.state.actionProxyContract[this.state.action];\n          if (depositMetaTransactionsEnabled && mintProxyContractInfo && this.props.biconomy && this.state.metaTransactionsEnabled){\n            const mintProxyContract = this.state.actionProxyContract[this.state.action].contract;\n            depositParams = [tokensToDeposit, this.props.tokenConfig.idle.address];\n            // console.log('mintProxyContract',mintProxyContractInfo.function,depositParams);\n            if (this.state.metaTransactionsEnabled){\n              const functionSignature = mintProxyContract.methods[mintProxyContractInfo.function](...depositParams).encodeABI();\n              contractSendResult = await this.functionsUtil.sendBiconomyTxWithPersonalSign(mintProxyContractInfo.name, functionSignature, callbackDeposit, callbackReceiptDeposit);\n            } else {\n              contractSendResult = await this.functionsUtil.contractMethodSendWrapper(mintProxyContractInfo.name, mintProxyContractInfo.function, depositParams, callbackDeposit, callbackReceiptDeposit);\n            }\n          // Use main contract if no proxy contract exists\n          } else {\n            let _skipMint = !this.state.directMint && this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMint']);\n            _skipMint = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : _skipMint;\n\n            // Mint if someone mint over X amount\n            if (_skipMint){\n              let [\n                maxUnlentPerc,\n                totalAUM\n              ] = await Promise.all([\n                this.functionsUtil.genericContractCall('idleDAIYield', 'maxUnlentPerc'),\n                this.functionsUtil.loadAssetField('pool',this.props.selectedToken,this.props.tokenConfig,this.props.account)\n              ]);\n\n              if (maxUnlentPerc && totalAUM){\n                const depositPerc = inputValue.div(totalAUM).times(100);\n                maxUnlentPerc = this.functionsUtil.BNify(maxUnlentPerc).div(1e3);\n                if (depositPerc.gte(maxUnlentPerc.times(2))){\n                  _skipMint = false;\n                }\n                // console.log(maxUnlentPerc.toFixed(5),inputValue.toFixed(5),totalAUM.toFixed(5),depositPerc.toFixed(5),depositPerc.gte(maxUnlentPerc.times(2)),_skipMint);\n              }\n            }\n\n            depositParams = [tokensToDeposit, _skipMint, '0x0000000000000000000000000000000000000000'];\n            contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'mintIdleToken', depositParams, callbackDeposit, callbackReceiptDeposit);\n          }\n        }\n      break;\n      case 'redeem':\n\n        if (redeemGovTokens){\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_gov`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: 0\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', [0], callbackRedeem, callbackReceiptRedeem);\n          \n        } else {\n\n          if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n            return false;\n          }\n\n          const txData = {\n            value:this.functionsUtil.BNify(inputValue)\n          };\n\n          let idleTokenToRedeem = null;\n          if (selectedPercentage){\n            idleTokenToRedeem = this.functionsUtil.BNify(this.props.idleTokenBalance).times(selectedPercentage);\n          } else {\n            const idleTokenPrice = await this.functionsUtil.genericContractCall(this.props.tokenConfig.idle.token, 'tokenPrice');\n            idleTokenToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals)).div(idleTokenPrice);\n          }\n\n          // Normalize number\n          idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(idleTokenToRedeem,18);\n\n          if (!idleTokenToRedeem){\n            return false;\n          }\n\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_partial`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: parseInt(inputValue)\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          let redeemParams = [idleTokenToRedeem];\n          // console.log(redeemParams,idleTokenToRedeem);\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', redeemParams, callbackRedeem, callbackReceiptRedeem, txData);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  showMaxSlippage = () => {\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  checkAction = () => {\n    let action = this.state.action;\n\n    switch(action){\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = 'deposit';\n        }\n      break;\n      default:\n      break;\n    }\n\n    if (action !== this.state.action){\n      this.setState({\n        action\n      },() => {\n        this.checkButtonDisabled();\n      });\n    } else {\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.props.tokenBalance));\n      break;\n      case 'redeem':\n        buttonDisabled = !this.state.canRedeemCurve && !this.state.redeemGovTokens && ( buttonDisabled || (amount && amount.gt(this.props.redeemableBalance)) );\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        amount = this.props.redeemableBalance ? this.functionsUtil.BNify(this.props.redeemableBalance).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem && !this.state.canRedeemCurve){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const govTokensDisabled = this.props.tokenConfig.govTokensDisabled;\n    const govTokensEnabled = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'govTokensEnabled']);\n    const skipMintForDepositEnabled = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : true;\n    const skipMintCheckboxEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMintCheckboxEnabled']) && skipMintForDepositEnabled;\n\n    const redeemGovTokenEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','redeemGovTokens','enabled']) && !govTokensDisabled && govTokensEnabled;\n    const redeemGovTokens = redeemGovTokenEnabled && this.state.redeemGovTokens && this.state.action === 'redeem';\n\n    const metaTransactionsAvailable = this.props.biconomy && this.state.actionProxyContract[this.state.action];\n    const useMetaTx = metaTransactionsAvailable && this.state.metaTransactionsEnabled;\n    const totalBalance = this.state.action === 'deposit' ? this.props.tokenBalance : this.props.redeemableBalance;\n    const migrateText = this.state.migrationEnabled && this.props.tokenConfig.migration.message !== undefined ? this.props.tokenConfig.migration.message : null;\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n    const depositCurve = curveTokenEnabled && this.state.depositCurveEnabled && this.state.action === 'deposit';\n\n    const showDepositOptions = this.state.action === 'deposit' && !this.state.contractPaused && (curveTokenEnabled || this.state.tokenApproved);\n\n    const canPerformAction = /*!depositCurve && !this.state.redeemCurveEnabled && */((this.state.action === 'deposit' && this.state.canDeposit) || (this.state.action === 'redeem' && this.state.canRedeem) || redeemGovTokens);\n    const showDepositCurve = showDepositOptions && curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canDepositCurve && this.state.action === 'deposit';\n    const showRedeemCurve = curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canRedeemCurve && this.state.action === 'redeem';\n\n    const showActionFlow = !redeemGovTokens && canPerformAction;\n    const showBuyFlow = this.state.componentMounted && (!showDepositCurve || this.state.showBuyFlow) && !this.state.depositCurveEnabled && this.state.tokenApproved && !this.state.contractPaused && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.action === 'deposit' && !this.state.canDeposit;\n    const showRedeemFlow = this.state.canRedeem && (!this.state.redeemCurveEnabled || this.state.showRedeemFlow);\n\n    const showCurveSlippage = depositCurve && this.state.depositCurveSlippage && this.state.depositCurveBalance && !this.state.buttonDisabled;\n\n    const showRebalanceOption = showDepositOptions && this.state.canDeposit && skipMintCheckboxEnabled && this.state.action === 'deposit';\n    const showAdvancedDepositOptions = showDepositCurve || showRebalanceOption;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select your asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n            />\n          </Box>\n          <Migrate\n            {...this.props}\n            migrateTextBefore={migrateText}\n            migrateText={migrateText !== null ? '' : null}\n            toggleSkipMigration={this.toggleSkipMigration.bind(this)}\n          >\n            {\n              !this.props.account ? (\n                <ConnectBox\n                  {...this.props}\n                />\n              ) :\n              this.state.componentMounted ? (\n                this.state.action ? (\n                  <Box width={1}>\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'redeem' }\n                          isDisabled={ !this.state.canRedeem && !this.state.canRedeemCurve }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    {\n                      showAdvancedDepositOptions ? (\n                        <DashboardCard\n                          cardProps={{\n                            pt:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                            pb:this.state.showAdvancedOptions ? 3 : 2,\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Link\n                              ml={1}\n                              mainColor={'primary'}\n                              hoverColor={'primary'}\n                              onClick={this.toggleShowAdvancedOptions}\n                            >\n                              { this.state.showAdvancedOptions ? 'Hide' : 'Show' } advanced options\n                            </Link>\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={this.state.showAdvancedOptions ? 'ArrowDropUp' : 'ArrowDropDown'}\n                            />\n                          </Flex>\n                          {\n                            this.state.showAdvancedOptions &&\n                              <Flex\n                                mt={1}\n                                flexDirection={'column'}\n                              >\n                                {\n                                  showDepositCurve && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        disabled={this.state.directMint}\n                                        label={`Deposit in the Curve Pool`}\n                                        checked={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                      />\n                                      <Link\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        (read more)\n                                      </Link>\n                                    </Flex>\n                                }\n                                {\n                                  showRebalanceOption && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        label={`Rebalance the pool`}\n                                        checked={this.state.directMint}\n                                        disabled={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                      />\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={this.functionsUtil.getGlobalConfig(['messages','directMint'])}\n                                      >\n                                        <Icon\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                          name={\"InfoOutline\"}\n                                        />\n                                      </Tooltip>\n                                    </Flex>\n                                }\n                              </Flex>\n                          }\n                        </DashboardCard>\n                      ) : (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          {\n                            showDepositCurve && (\n                              <Flex\n                                width={1}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <DashboardCard\n                                  isRainbow={true}\n                                  cardProps={{\n                                    py:3,\n                                    px:2,\n                                    mt:3,\n                                    display:'flex',\n                                    alignItems:'center',\n                                    flexDirection:'column',\n                                    justifyContent:'center',\n                                  }}\n                                >\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Image\n                                      height={'1.8em'}\n                                      src={curveConfig.params.image}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      px={2}\n                                      fontSize={1}\n                                      color={'dark-gray'}\n                                      textAlign={'center'}\n                                    >\n                                      Deposit your tokens in the Curve Pool and boost your APY up to {this.state.curveAPY ? this.state.curveAPY.toFixed(2) : '-'}%.\n                                      <Link\n                                        ml={1}\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        Read More\n                                      </Link>\n                                    </Text>\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={`Deposit in Curve`}\n                                      checked={this.state.depositCurveEnabled}\n                                      onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                    />\n                                  </Flex>\n                                </DashboardCard>\n                                {\n                                  (!this.state.showBuyFlow && !this.state.depositCurveEnabled && !this.state.canDeposit) &&\n                                    <Link\n                                      textAlign={'center'}\n                                      hoverColor={'primary'}\n                                      onClick={ e => this.setShowBuyFlow(true) }\n                                    >\n                                      I just want to deposit more {this.props.selectedToken}\n                                    </Link>\n                                }\n                              </Flex>\n                            )\n                          }\n                          {\n                            showRebalanceOption && (\n                              <DashboardCard\n                                cardProps={{\n                                  py:3,\n                                  px:2,\n                                  mt:3,\n                                  display:'flex',\n                                  alignItems:'center',\n                                  flexDirection:'column',\n                                  justifyContent:'center',\n                                }}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    color={'cellText'}\n                                    name={'InfoOutline'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    px={2}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    By checking this flag you can rebalance the pool and help all users gain an additional APR\n                                  </Text>\n                                </Flex>\n                                <Checkbox\n                                  mt={2}\n                                  required={false}\n                                  label={`Rebalance the pool`}\n                                  checked={this.state.directMint}\n                                  onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                />\n                              </DashboardCard>\n                            )\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (metaTransactionsAvailable && !showBuyFlow && !this.state.contractPaused) && \n                      <DashboardCard\n                        cardProps={{\n                          py:3,\n                          px:2,\n                          my:3,\n                          display:'flex',\n                          alignItems:'center',\n                          flexDirection:'column',\n                          justifyContent:'center',\n                        }}\n                      >\n                        {\n                          this.state.metaTransactionsEnabled && this.state.txError[this.state.action] && this.state.actionProxyContract[this.state.action].approved ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Seems like you are having some trouble with Meta-Transactions... Disable them by unchecking the box below and try again!\n                              </Text>\n                            </Flex>\n                          ) : this.functionsUtil.getWalletProvider() === 'WalletConnect' && this.state.metaTransactionsEnabled ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Please disable Meta-Transactions if you are using Argent Wallet to avoid failed transactions!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Text\n                              mt={1}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Meta-Transactions are {this.state.metaTransactionsEnabled ? 'available' : 'disabled'} for {this.state.action}s!<br />\n                              {\n                                this.state.metaTransactionsEnabled && !this.state.actionProxyContract[this.state.action].approved && `Please either enable the Smart-Contract to enjoy gas-less ${this.state.action} or just disable meta-tx.`\n                              }\n                            </Text>\n                          )\n                        }\n                        <Checkbox\n                          mt={2}\n                          required={false}\n                          checked={this.state.metaTransactionsEnabled}\n                          onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                          label={`${this.functionsUtil.capitalize(this.state.action)} with Meta-Transaction`}\n                        />\n                      </DashboardCard>\n                    }\n                    {\n                      showRedeemCurve && this.state.canRedeem && (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            isRainbow={true}\n                            cardProps={{\n                              py:3,\n                              px:2,\n                              mt:3,\n                              display:'flex',\n                              alignItems:'center',\n                              flexDirection:'column',\n                              justifyContent:'center',\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Image\n                                height={'1.8em'}\n                                src={curveConfig.params.image}\n                              />\n                              <Text\n                                mt={2}\n                                px={2}\n                                fontSize={1}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                              >\n                                Redeem your tokens from the Curve Pool.\n                                <Link\n                                  ml={1}\n                                  mainColor={'primary'}\n                                  hoverColor={'primary'}\n                                  onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                >\n                                  Read More\n                                </Link>\n                              </Text>\n                              {\n                                this.state.canRedeem &&\n                                  <Checkbox\n                                    mt={2}\n                                    required={false}\n                                    label={`Redeem from Curve`}\n                                    checked={this.state.redeemCurveEnabled}\n                                    onChange={ e => this.toggleRedeemCurve(e.target.checked) }\n                                  />\n                              }\n                            </Flex>\n                          </DashboardCard>\n                          {\n                            this.canRedeem &&\n                              <Link\n                                textAlign={'center'}\n                                hoverColor={'primary'}\n                                onClick={ e => this.setShowRedeemFlow(true) }\n                              >\n                                I just want to redeem my {this.props.selectedToken}\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (this.state.action === 'redeem' && this.state.unlentBalance && showRedeemFlow) &&\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'LocalGasStation'}\n                            />\n                            <Text\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Available balance for Cheap Redeem\n                            </Text>\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                                hoverColor={'copyColor'}\n                              >\n                                {this.state.unlentBalance.toFixed(4)} {this.props.selectedToken}\n                              </Text>\n                              <Tooltip\n                                placement={'top'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','cheapRedeem'])}\n                              >\n                                <Icon\n                                  ml={1}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                  name={\"InfoOutline\"}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                    }\n                    {\n                      (this.state.action === 'redeem' && redeemGovTokenEnabled && showRedeemFlow) && (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'InfoOutline'}\n                            />\n                            <Text\n                              mt={1}\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              By redeeming your {this.props.selectedToken} you will automatically get also the proportional amount of governance tokens accrued{ this.props.govTokensBalance && this.props.govTokensBalance.gt(0) ? ` (~ $${this.props.govTokensBalance.toFixed(2)})` : null }.\n                            </Text>\n                          </Flex>\n                          <Checkbox\n                            mt={2}\n                            required={false}\n                            checked={this.state.redeemGovTokens}\n                            label={`Redeem governance tokens only`}\n                            onChange={ e => this.toggleRedeemGovTokens(e.target.checked) }\n                          />\n                        </DashboardCard>\n                      )\n                    }\n                    {\n                      (this.state.contractPaused && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              name={'Warning'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Deposits for {this.props.selectedToken} are temporarily unavailable due to Smart-Contract maintenance. Redeems are always available.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : (!this.state.tokenApproved && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          {\n                            this.state.processing['approve'] && this.state.processing['approve'].loading ? (\n                              <Flex\n                                flexDirection={'column'}\n                              >\n                                <TxProgressBar\n                                  web3={this.props.web3}\n                                  waitText={`Approve estimated in`}\n                                  endMessage={`Finalizing approve request...`}\n                                  hash={this.state.processing['approve'].txHash}\n                                  cancelTransaction={this.cancelTransaction.bind(this)}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'1.8em'}\n                                  name={'LockOpen'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={3}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  {\n                                    this.state.depositCurveEnabled ? \n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} in the Curve Pool you need to approve the Smart-Contract first.`\n                                    : useMetaTx ?\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle using Meta-Transaction you need to approve our Smart-Contract first.`\n                                    :\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle you need to approve our Smart-Contract first.`\n                                  }\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:3,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.approveToken.bind(this)}\n                                >\n                                  Approve\n                                </RoundButton>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      ) : (!showBuyFlow && canPerformAction) && (\n                        !this.state.processing[this.state.action].loading ? (\n                          <Flex\n                            mt={2}\n                            flexDirection={'column'}\n                          >\n                            {\n                              showActionFlow && (\n                                <Flex\n                                  mb={3}\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  {\n                                    /*\n                                    showCurveSlippage &&\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:3,\n                                          mb:2\n                                        }}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'column'}\n                                        >\n                                          <Icon\n                                            size={'1.8em'}\n                                            color={'cellText'}\n                                            name={'FileUpload'}\n                                          />\n                                          <Text\n                                            mt={2}\n                                            fontSize={2}\n                                            color={'cellText'}\n                                            textAlign={'center'}\n                                          >\n                                            You can deposit {this.state.depositCurveBalance.toFixed(4)} {this.props.selectedToken} in the Curve Pool{ this.state.depositCurveSlippage ? (this.state.depositCurveSlippage.gt(0) ? ` with ${this.state.depositCurveSlippage.times(100).toFixed(2)}% of slippage` : ` with ${Math.abs(parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)))}% of bonus`) : '' }.\n                                          </Text>\n                                        </Flex>\n                                      </DashboardCard>\n                                    */\n                                  }\n                                  {\n                                    (totalBalance || this.props.tokenFeesPercentage) && (\n                                      <Box\n                                        mb={1}\n                                        width={1}\n                                      >\n                                        {\n                                          this.state.showMaxSlippage && showCurveSlippage && (\n                                            <Box\n                                              mb={2}\n                                              width={1}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text>\n                                                  Choose max slippage:\n                                                </Text>\n                                                <Tooltip\n                                                  placement={'top'}\n                                                  message={`Max additional slippage on top of the one shown below`}\n                                                >\n                                                  <Icon\n                                                    ml={1}\n                                                    size={'1em'}\n                                                    color={'cellTitle'}\n                                                    name={\"InfoOutline\"}\n                                                  />\n                                                </Tooltip>\n                                              </Flex>\n                                              <Flex\n                                                mt={2}\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                                justifyContent={'space-between'}\n                                              >\n                                                {\n                                                  [0.2,0.5,1,5].map( slippage => (\n                                                    <FastBalanceSelector\n                                                      cardProps={{\n                                                        p:1\n                                                      }}\n                                                      textProps={{\n                                                        fontSize:1\n                                                      }}\n                                                      percentage={slippage}\n                                                      key={`selector_${slippage}`}\n                                                      onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                                      isActive={this.state.maxSlippage === parseFloat(slippage)}\n                                                    />\n                                                  ))\n                                                }\n                                              </Flex>\n                                            </Box>\n                                          )\n                                        }\n                                        <Flex\n                                          width={1}\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                          justifyContent={'space-between'}\n                                        >\n                                        {\n                                          showCurveSlippage ? (\n                                            <Flex\n                                              width={1}\n                                              maxWidth={'50%'}\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                textAlign={'right'}\n                                                style={{\n                                                  whiteSpace:'nowrap'\n                                                }}\n                                                color={ this.state.depositCurveSlippage.gt(0) ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                                              >\n                                                {\n                                                  parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)) === 0 ?\n                                                    'No Slippage'\n                                                  : `${ this.state.depositCurveSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.depositCurveSlippage.times(100).abs().toFixed(2)}%`\n                                                }\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={this.functionsUtil.getGlobalConfig(['messages','curveBonusSlippage'])}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                              <Link\n                                                ml={1}\n                                                color={'copyColor'}\n                                                hoverColor={'primary'}\n                                                onClick={this.showMaxSlippage}\n                                              >\n                                                change\n                                              </Link>\n                                            </Flex>\n                                          ) : this.props.tokenFeesPercentage && (\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                color={'dark-gray'}\n                                                textAlign={'right'}\n                                                hoverColor={'copyColor'}\n                                              >\n                                                Performance fee: {this.props.tokenFeesPercentage.times(100).toFixed(2)}%\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={this.functionsUtil.getGlobalConfig(['messages','performanceFee'])}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                            </Flex>\n                                          )\n                                        }\n                                        {\n                                          totalBalance && (\n                                            <Link\n                                              fontSize={1}\n                                              fontWeight={3}\n                                              color={'dark-gray'}\n                                              textAlign={'right'}\n                                              hoverColor={'copyColor'}\n                                              onClick={ (e) => this.setFastBalanceSelector(100) }\n                                            >\n                                              {totalBalance.toFixed(6)} {this.props.selectedToken}\n                                            </Link>\n                                          )\n                                        }\n                                        </Flex>\n                                      </Box>\n                                    )\n                                  }\n                                  <Input\n                                    min={0}\n                                    type={\"number\"}\n                                    required={true}\n                                    height={'3.4em'}\n                                    borderRadius={2}\n                                    fontWeight={500}\n                                    boxShadow={'none !important'}\n                                    placeholder={`Insert amount`}\n                                    onChange={this.changeInputValue.bind(this)}\n                                    border={`1px solid ${theme.colors.divider}`}\n                                    value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                                  />\n                                  <Flex\n                                    mt={2}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'space-between'}\n                                  >\n                                    {\n                                      [25,50,75,100].map( percentage => (\n                                        <FastBalanceSelector\n                                          percentage={percentage}\n                                          key={`selector_${percentage}`}\n                                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                          isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                        />\n                                      ))\n                                    }\n                                  </Flex>\n                                </Flex>\n                              )\n                            }\n                            {\n                              canPerformAction && \n                                <Flex\n                                  justifyContent={'center'}\n                                  mt={ redeemGovTokens ? 2 : 0 }\n                                >\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:'auto',\n                                      minWidth:[1,1/2],\n                                      style:{\n                                        textTransform:'capitalize'\n                                      },\n                                      disabled:this.state.buttonDisabled\n                                    }}\n                                    handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                                  >\n                                    {this.state.action}{ redeemGovTokens ? ' Gov Tokens' : '' /*(depositCurve ? ' in Curve' : '')*/ }\n                                  </RoundButton>\n                                </Flex>\n                            }\n                          </Flex>\n                        ) : (\n                          <Flex\n                            mt={4}\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                              hash={this.state.processing[this.state.action].txHash}\n                              endMessage={`Finalizing ${this.state.action} request...`}\n                              waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                            />\n                          </Flex>\n                        )\n                      )\n                    }\n                  </Box>\n                ) : null\n              ) : (\n                <Flex\n                  mt={4}\n                  flexDirection={'column'}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading asset info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Migrate>\n        </Flex>\n        {\n          /*\n          showDepositCurve && this.state.depositCurveEnabled ? (\n            <CurveDeposit\n              {...this.props}\n            />\n          ) :\n          */\n          showRedeemCurve && this.state.redeemCurveEnabled && (\n            <Box\n              mt={3}\n              width={1}\n            >\n              <CurveRedeem\n                {...this.props}\n              />\n            </Box>\n          )\n        }\n        {\n          showBuyFlow &&\n            <Flex\n              mt={3}\n              width={[1,0.5]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <BuyModal\n                {...this.props}\n                showInline={true}\n                availableMethods={[]}\n                buyToken={this.props.selectedToken}\n              />\n            </Flex>\n        }\n\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.tokenAPY}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.tokenAPY}% APY on my ${this.props.selectedToken} with @idlefinance! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])} and start earning now from your idle tokens!`}\n        />\n\n      </Flex>\n    );\n  }\n}\n\nexport default DepositRedeem;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n           <Flex\n             mr={2}\n             p={['4px','7px']}\n             borderRadius={'50%'}\n             alignItems={'center'}\n             justifyContent={'center'}\n             backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n           >\n             <Icon\n               align={'center'}\n               color={'redeem'}\n               name={this.props.icon}\n               size={ this.props.isMobile ? '1.2em' : '1.4em' }\n             />\n           </Flex>\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Input, Icon, Tooltip } from \"rimble-ui\";\n\nclass EstimatedEarnings extends Component {\n\n  state = {\n    tokenApy:null,\n    chartData:null,\n    chartProps:null,\n    inputValue:1000,\n    maxInputValue:999999999999999\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadChart();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.loadChart();\n    }\n  }\n\n  async getTokenApy(){\n    const tokenApy = this.state.tokenApy || await this.functionsUtil.getTokenApy(this.props.tokenConfig);\n    if (this.state.tokenApy !== tokenApy){\n      this.setState({\n        tokenApy\n      });\n    }\n    return tokenApy;\n  }\n\n  async loadChart(){\n\n    const tokenApy = await this.getTokenApy();\n\n    const amount = this.functionsUtil.BNify(this.state.inputValue);\n    const earningsYear = amount.times(tokenApy.div(100));\n\n    const amountMonth = parseFloat(earningsYear.div(12));\n    const amount3Months = parseFloat(earningsYear.div(4));\n    const amount6Months = parseFloat(earningsYear.div(2));\n    const amountYear = parseFloat(earningsYear.div(1));\n\n    const chartData = [\n      {\n        perc:1/12,\n        label:'MONTH',\n        value:amountMonth,\n        month:amountMonth,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        monthColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:3/12,\n        label:'3 MONTHS',\n        value:amount3Months,\n        month3:amount3Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month3Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:6/12,\n        label:'6 MONTHS',\n        value:amount6Months,\n        month6:amount6Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month6Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:1,\n        label:'YEAR',\n        year:amountYear,\n        value:amountYear,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        yearColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      }\n    ];\n\n    let labelTextColorModifiers = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'chart','labelTextColorModifiers']);\n\n    const maxGridLines = 4;\n    const gridYStep = amountYear/maxGridLines;\n    const gridYValues = [0];\n    for (let i=1;i<=maxGridLines;i++){\n      const gridYValue = i*gridYStep;\n      gridYValues.push(gridYValue);\n    }\n\n    const chartProps = {\n      padding: 0.2,\n      animate: false,\n      indexBy: 'label',\n      // enableLabel: false,\n      labelSkipWidth: 16,\n      labelSkipHeight: 16,\n      keys: ['month','month3','month6','year'],\n      colors: ({ id, data }) => data[`${id}Color`],\n      label: d => this.functionsUtil.abbreviateNumber(d.value,2,4)+' '+this.props.selectedToken,\n      labelTextColor: labelTextColorModifiers ? { from: 'color', modifiers: [ labelTextColorModifiers ] } : null,\n      isInteractive:false,\n      minValue:0,\n      gridYValues,\n      // maxValue:amountYear,\n      axisLeft:{\n        format: v => this.functionsUtil.abbreviateNumber(v,1,3),\n        tickValues:gridYValues,\n        orient: 'left',\n        tickSize: 0,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle'\n      },\n      axisBottom:{\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n      },\n      theme:{\n        labels:{\n          text:{\n            fontSize:15,\n            fontWeight:600,\n            fill:theme.colors.counter,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        axis: {\n          ticks: {\n            text: {\n              fontSize:14,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '9 5'\n          }\n        },\n      },\n      margin: this.props.isMobile ? { top: 0, right: 0, bottom: 30, left: 0 } : { top: 10, right: 0, bottom: 50, left: 65 }\n    }\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  changeInputValue(e){\n    let inputValue = e.target.value.length && !isNaN(e.target.value) ? Math.min(this.state.maxInputValue,parseFloat(e.target.value)) : 0;\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    });\n  }\n\n  render() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const showAPYDisclaimer = idleTokenEnabled && this.functionsUtil.getGlobalConfig(['govTokens','IDLE','showAPR']);\n\n    return (\n      <DashboardCard\n        cardProps={{\n          p:[3,4]\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            width={[1,0.3]}\n            flexDirection={'column'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetField\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'icon',\n                  props:{\n                    mb:2,\n                    height:'2.5em'\n                  }\n                }}\n              />\n              <Text\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n              >\n                Set the amount and see your estimated earnings on time based on the current APY: { this.state.tokenApy ? `${this.state.tokenApy.toFixed(2)}%` : null}\n                {\n                  showAPYDisclaimer && \n                    <Flex\n                      style={{\n                        display:'inline-flex',\n                        verticalAlign:'middle'\n                      }}\n                    >\n                      <Tooltip\n                        placement={'top'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                      >\n                        <Icon\n                          ml={1}\n                          name={\"Info\"}\n                          size={'1em'}\n                          color={'cellTitle'}\n                        />\n                      </Tooltip>\n                    </Flex>\n                }\n              </Text>\n            </Flex>\n            <Flex\n              mt={3}\n              flexDirection={'column'}\n            >\n              <Input\n                min={0}\n                max={this.state.maxInputValue}\n                type={\"number\"}\n                required={true}\n                height={['3em','3.4em']}\n                borderRadius={2}\n                fontWeight={500}\n                textAlign={'center'}\n                boxShadow={'none !important'}\n                onChange={this.changeInputValue.bind(this)}\n                border={`1px solid ${theme.colors.divider}`}\n                placeholder={`Insert ${this.props.selectedToken.toUpperCase()} amount`}\n                value={this.state.inputValue && !isNaN(this.state.inputValue) ? this.state.inputValue : ''}\n              />\n            </Flex>\n            <Flex\n              mt={3}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                buttonProps={{\n                  width:[1,1/2],\n                }}\n                handleClick={this.loadChart.bind(this)}\n              >\n                CALCULATE\n              </RoundButton>\n            </Flex>\n          </Flex>\n          <Flex\n            mt={[3,0]}\n            width={[1,0.7]}\n            id={'estimated-earnings-chart'}\n          >\n            {\n              this.props.isMobile ? (\n                <Flex\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  {\n                    this.state.chartData !== null && this.state.chartData.map((v,index) => (\n                      <Flex\n                        py={2}\n                        my={2}\n                        width={1}\n                        flexDirection={'row'}\n                        key={`earnings_${index}`}\n                      >\n                        <Flex\n                          width={0.35}\n                          alignItems={'center'}\n                          justifyContent={'flex-start'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'legend'}\n                          >\n                            {v.label}\n                          </Text>\n                        </Flex>\n                        <Flex\n                          width={0.65}\n                          position={'relative'}\n                          alignItems={'center'}\n                          minHeight={['20px','35px']}\n                          justifyContent={'center'}\n                        >\n                          <Flex\n                            zIndex={1}\n                            position={'relative'}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontSize={1}\n                              fontWeight={3}\n                              color={'counter'}\n                            >\n                              {this.functionsUtil.abbreviateNumber(v.value,2,4)} {this.props.selectedToken}\n                            </Text>\n                          </Flex>\n                          <Flex\n                            right={0}\n                            width={v.perc}\n                            position={'absolute'}\n                            height={['20px','35px']}\n                            borderRadius={['20px 0 0 20px','35px 0 0 35px']}\n                            style={{background:`linear-gradient(-90deg, rgba(${v.color},0) 0%, rgba(${v.color},1) 100%)`}}\n                          ></Flex>\n                        </Flex>\n                      </Flex>\n                    ))\n                  }\n                </Flex>\n              ) : (\n                <GenericChart\n                  type={Bar}\n                  height={250}\n                  showLoader={true}\n                  {...this.state.chartProps}\n                  data={this.state.chartData}\n                  parentId={'estimated-earnings-chart'}\n                />\n              )\n            }\n          </Flex>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default EstimatedEarnings;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport FundsOverview from '../FundsOverview/FundsOverview';\nimport DepositRedeem from '../DepositRedeem/DepositRedeem';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EstimatedEarnings from '../EstimatedEarnings/EstimatedEarnings';\n\nclass AssetPage extends Component {\n\n  state = {\n    tokenFees:{},\n    tokenBalance:{},\n    tokenApproved:{},\n    activeModal:null,\n    govTokensBalance:{},\n    idleTokenBalance:{},\n    redeemableBalance:{},\n    govTokensDisabled:{},\n    availableGovTokens:{},\n    tokenFeesPercentage:{},\n    componentMounted:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadTokensInfo(){\n    if (this.props.account){\n      const newState = {...this.state};\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n        const tokenConfig = this.props.availableTokens[token];\n        const govTokenAvailableTokens = {};\n        govTokenAvailableTokens[token] = tokenConfig;\n\n        const [\n          tokenFeesPercentage,\n          tokenBalance,\n          tokenFees,\n          idleTokenPrice,\n          idleTokenBalance,\n          tokenApproved,\n          govTokensBalance\n        ] = await Promise.all([\n          this.functionsUtil.getTokenFees(tokenConfig),\n          this.functionsUtil.getTokenBalance(token,this.props.account),\n          this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n          this.functionsUtil.genericContractCall(tokenConfig.idle.token, 'tokenPrice'),\n          this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n          this.functionsUtil.checkTokenApproved(token,tokenConfig.idle.address,this.props.account),\n          this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,govTokenAvailableTokens,'DAI')\n        ]);\n\n        newState.tokenFees[token] = tokenFees;\n        newState.tokenBalance[token] = tokenBalance;\n        newState.tokenApproved[token] = tokenApproved;\n        newState.idleTokenBalance[token] = idleTokenBalance;\n        newState.govTokensBalance[token] = govTokensBalance;\n        newState.tokenFeesPercentage[token] = tokenFeesPercentage;\n        newState.govTokensDisabled[token] = tokenConfig.govTokensDisabled;\n        newState.redeemableBalance[token] = idleTokenBalance ? this.functionsUtil.fixTokenDecimals(idleTokenBalance.times(idleTokenPrice),tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      });\n\n      newState.availableGovTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n\n      newState.componentMounted = true;\n      this.setState(newState);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged || transactionsChanged){\n      this.loadTokensInfo();\n    }\n  }\n\n  render() {\n\n    const userHasFunds = this.props.account && this.state.idleTokenBalance[this.props.selectedToken] && this.functionsUtil.BNify(this.state.idleTokenBalance[this.props.selectedToken]).gt(0);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            <Breadcrumb\n              isMobile={this.props.isMobile}\n              path={[this.props.selectedToken]}\n              handleClick={ e => this.props.goToSection(this.props.selectedStrategy) }\n              text={this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])}\n            />\n          </Flex>\n          <Flex\n            width={0.5}\n            justifyContent={'flex-end'}\n          >\n            <CardIconButton\n              icon={'Add'}\n              {...this.props}\n              text={'Add funds'}\n              handleClick={ e => this.setActiveModal('buy') }\n            />\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Deposit / Redeem\n        </Title>\n        <Flex\n          width={1}\n        >\n          <DepositRedeem\n            {...this.props}\n            tokenFees={this.state.tokenFees[this.props.selectedToken]}\n            tokenBalance={this.state.tokenBalance[this.props.selectedToken]}\n            tokenApproved={this.state.tokenApproved[this.props.selectedToken]}\n            govTokensBalance={this.state.govTokensBalance[this.props.selectedToken]}\n            idleTokenBalance={this.state.idleTokenBalance[this.props.selectedToken]}\n            redeemableBalance={this.state.redeemableBalance[this.props.selectedToken]}\n            tokenFeesPercentage={this.state.tokenFeesPercentage[this.props.selectedToken]}\n          />\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverview\n                {...this.props}\n                tokenFees={this.state.tokenFees[this.props.selectedToken]}\n              />\n            </Flex>\n        }\n        {\n          userHasFunds && this.props.account && !this.state.govTokensDisabled[this.props.selectedToken] && Object.keys(this.state.availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id={\"yield-farming\"}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(this.state.availableGovTokens)}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.30,0.15]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.25],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                    props:{\n                      width:[0.35,0.30],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                    ]\n                  },\n                  {\n                    title:'DISTRIBUTION',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                    props:{\n                      width:[0.35,0.30],\n                    },\n                    fields:[\n                      {\n                        name:'userDistributionSpeed',\n                        props:{\n                          decimals:6\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'APR',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                    props:{\n                      width:[0.2,0.17],\n                    },\n                    fields:[\n                      {\n                        name:'apr',\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                    mobile:false,\n                    props:{\n                      width: 0.17,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                  */\n                ]}\n                {...this.props}\n                availableTokens={this.state.availableGovTokens}\n              />\n            </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'estimated-earnings-container'}\n          >\n            <Title my={[3,4]}>Estimated earnings</Title>\n            <EstimatedEarnings\n              {...this.props}\n            />\n          </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              enabledTokens={[this.props.selectedToken]}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Tooltip } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass CurveDeposit extends Component {\n\n  state = {\n    maxSlippage:0.2,\n    tokenConfig:null,\n    depositSlippage:null,\n    redeemableBalance:null,\n    curveTokensBalance:null,\n    migrationSucceeded:false,\n    migrationContractApproved:false,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.initToken();\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  async getMigrationParams(toMigrate){\n    const migrationParams = [];\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token]);\n\n    if (!curveTokenConfig){\n      return false;\n    }\n    \n    const migrationContractParams = curveTokenConfig.migrationParams;\n    if (migrationContractParams.n_coins){\n      const amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,toMigrate,true);\n      let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n      if (this.state.maxSlippage){\n        minMintAmount = this.functionsUtil.BNify(minMintAmount);\n        minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n        minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n      }\n\n      migrationParams.push(amounts);\n      migrationParams.push(minMintAmount);\n\n      // console.log(this.state.tokenConfig.idle.token,toMigrate,migrationParams);\n    }\n\n    return migrationParams;\n  }\n\n  async initToken(){\n\n    let migrationContractApproved = false;\n\n    // Init and check migration contract\n    const migrationContract = await this.functionsUtil.getCurveSwapContract();\n    if (migrationContract){\n      // Check migration contract\n      migrationContractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.idle.token,migrationContract.address,this.props.account);\n    }\n\n    let redeemableBalance = this.functionsUtil.BNify(this.props.idleTokenBalance);\n    if (redeemableBalance){\n      const idleTokenPrice = await this.functionsUtil.getIdleTokenPrice(this.props.tokenConfig);\n      if (idleTokenPrice){\n        redeemableBalance = redeemableBalance.times(idleTokenPrice);\n      }\n    } else {\n      redeemableBalance = this.functionsUtil.BNify(0);\n    }\n\n    const normalizeIdleTokenBalance = this.functionsUtil.normalizeTokenAmount(redeemableBalance,18);\n    const depositSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizeIdleTokenBalance);\n\n    // Copy token config\n    const tokenConfig = Object.assign({},this.props.tokenConfig);\n\n    // Add migration info\n    const oldContract = {\n      abi:this.props.tokenConfig.idle.abi,\n      name:this.props.tokenConfig.idle.token,\n      token:this.props.tokenConfig.idle.token,\n      address:this.props.tokenConfig.idle.address\n    };\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n    };\n\n    this.setState({\n      tokenConfig,\n      depositSlippage,\n      redeemableBalance,\n      migrationContractApproved\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const idleTokenBalanceChanged = prevProps.idleTokenBalance !== this.props.idleTokenBalance;\n    if (accountChanged || idleTokenBalanceChanged){\n      await this.initToken();\n    }\n  }\n\n  approveCallback = () => {\n    this.initToken();\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokenConfig){\n      return null;\n    }\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const hasCurveTokens = this.state.curveTokensBalance && this.state.curveTokensBalance.gt(0);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n            {\n              this.props.idleTokenBalance && this.props.idleTokenBalance.gt(0) && (\n                <Box\n                  width={1}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Approve the Curve contract\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ hasCurveTokens ? 'CheckBox' : 'LooksTwo'}\n                          color={ hasCurveTokens ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Deposit your {this.props.tokenConfig.idle.token}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                  {\n                    this.state.migrationContractApproved && (\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Choose max slippage:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`Max additional slippage on top of the one shown below`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <Flex\n                          mt={2}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          {\n                            [0.2,0.5,1,5].map( slippage => (\n                              <FastBalanceSelector\n                                cardProps={{\n                                  p:1\n                                }}\n                                textProps={{\n                                  fontSize:1\n                                }}\n                                percentage={slippage}\n                                key={`selector_${slippage}`}\n                                onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                isActive={this.state.maxSlippage === parseFloat(slippage)}\n                              />\n                            ))\n                          }\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                </Box>\n              )\n            }\n          {\n            this.state.tokenConfig ? (\n              <Box width={1}>\n                <Migrate\n                  {...this.props}\n                  showActions={false}\n                  getTokenPrice={false}\n                  migrationTextProps={{\n                    fontWeight:500\n                  }}\n                  migrationImage={{\n                    mb:1,\n                    height:'1.8em',\n                    src:curveConfig.params.image\n                  }}\n                  isMigrationTool={true}\n                  waitText={'Deposit estimated in'}\n                  tokenConfig={this.state.tokenConfig}\n                  callbackApprove={this.approveCallback.bind(this)}\n                  migrationParams={this.getMigrationParams.bind(this)}\n                  migrationCallback={this.migrationCallback.bind(this)}\n                  approveText={`To deposit your ${this.props.tokenConfig.idle.token} you need to approve Curve smart-contract first.`}\n                  migrationText={`You can deposit ${this.state.redeemableBalance.toFixed(4)} ${this.props.tokenConfig.idle.token} in the Curve Pool ${ this.state.depositSlippage ? (this.state.depositSlippage.gte(0) ? ` with <span style=\"color:${this.props.theme.colors.transactions.status.failed}\">${this.state.depositSlippage.times(100).toFixed(2)}% of slippage</span>` : ` with <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${Math.abs(parseFloat(this.state.depositSlippage.times(100).toFixed(2)))}% of bonus</span>`) : '' }.`}\n                >\n                  {\n                    !this.props.account ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'Input'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={2}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Please connect with your wallet interact with Idle.\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:2,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.props.connectAndValidateAccount}\n                          >\n                            Connect\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.migrationSucceeded ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'DoneAll'}\n                                color={this.props.theme.colors.transactions.status.completed}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You have successfully deposited your {this.props.tokenConfig.idle.token} in the Curve Pool!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.tokenConfig.idle.token} in your wallet.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                </Migrate>\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveDeposit;","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityCurve extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const curveTxs = await this.functionsUtil.getCurveTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = [];\n    const processedTxs = {};\n    let firstTxTimestamp = null;\n    let totalBalance = this.functionsUtil.BNify(0);\n    const curvePoolContract = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n        \n        firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n        const curveTokens = this.functionsUtil.BNify(tx.curveTokens);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            totalBalance = totalBalance.plus(curveTokens);\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          case 'CurveTransferOut':\n            totalBalance = totalBalance.minus(curveTokens);\n          break;\n          default:\n          break;\n        }\n\n        // Reset totalBalance if below zero\n        if (totalBalance.lt(0)){\n          totalBalance = this.functionsUtil.BNify(0);\n        }\n\n        const action = tx.action;\n        const balance = totalBalance;\n        const timeStamp = parseInt(tx.timeStamp);\n        const curveTokenPrice = this.functionsUtil.fixTokenDecimals(tx.curveTokenPrice,curvePoolContract.decimals);\n\n        // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY/MM/DD HH:mm'),tx.hash,tx.action,curveTokens.toString(),totalBalance.toString());\n\n        if (!curveTokenPrice.isNaN() && !curveTokenPrice.isNaN()){\n          tokensBalance.push({\n            action,\n            balance,\n            timeStamp,\n            curveTokens,\n            curveTokenPrice\n          });\n\n          processedTxs[tx.hash].push(action);\n        }\n      });\n    }\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    let aggregatedBalance = this.functionsUtil.BNify(0);\n    // let curveTokenBalance = this.functionsUtil.BNify(0);\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = await this.functionsUtil.getTokenApiData(Object.values(this.props.availableTokens)[0].address,false,firstTxTimestamp,null,false,3600);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      let foundBalances = {};\n      let tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      // eslint-disable-next-line\n      const filteredTokenData = tokensData.filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n\n      // eslint-disable-next-line\n      let filteredBalances = tokensBalance.filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n      \n      if (!filteredBalances.length){\n        if (prevBalances){\n          filteredBalances = prevBalances;\n          const lastFilteredTx = Object.values(filteredBalances).pop();\n          const currentBalance = parseFloat(lastFilteredTx.balance);\n\n          const lastTokenData = Object.values(filteredTokenData).pop();\n          let curveTokenPrice = null;\n          if (lastTokenData){\n            curveTokenPrice = await this.functionsUtil.getCurveTokenPrice(lastTokenData.blocknumber);\n          }\n\n          // Take idleToken price from API and calculate new balance\n          if (currentBalance>0 && timeStamp>firstTxTimestamp && curveTokenPrice){\n            // Set new curveTokenPrice\n            lastFilteredTx.curveTokenPrice = curveTokenPrice;\n            filteredBalances = [lastFilteredTx];\n          }\n        } else {\n          filteredBalances = [{\n            balance:this.functionsUtil.BNify(0),\n            curveTokenPrice:this.functionsUtil.BNify(0)\n          }];\n        }\n      }\n\n      const lastTx = Object.assign([],filteredBalances).pop();\n      let lastTxBalance = this.functionsUtil.BNify(lastTx.balance).times(lastTx.curveTokenPrice);\n\n      tokensBalances[curvePoolContract.token] = this.functionsUtil.BNify(lastTx.balance);\n      aggregatedBalance = lastTxBalance;\n\n      foundBalances = filteredBalances;\n\n      // console.log(momentDate.format('YYYY/MM/DD 00:00'),lastTx.balance.toString(),lastTx.curveTokenPrice.toString(),lastTxBalance.toString());\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        const aggregatedBalanceParsed = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalanceParsed;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalanceParsed : Math.min(minChartValue,aggregatedBalanceParsed);\n        maxChartValue = maxChartValue === null ? aggregatedBalanceParsed : Math.max(maxChartValue,aggregatedBalanceParsed);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    // Add token Data\n    chartData.push({\n      id:'USD',\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens','USD','color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 50 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0 &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const tokenInfo = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n                const tokenName = tokenInfo.name ? tokenInfo.name : token;\n                const color = tokenInfo.color.hex;\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={tokenName}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityCurve;","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquityCurve from '../PortfolioEquityCurve/PortfolioEquityCurve';\n\nclass FundsOverviewCurve extends Component {\n\n  state = {\n    compAPR:null,\n    aggregatedValues:[],\n    govTokensUserBalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    await this.functionsUtil.getCurveAvgBuyPrice();\n\n    // debugger;\n\n    await this.functionsUtil.getCurveAvgSlippage();\n\n    // debugger;\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [govTokensUserBalance,avgAPY,days] = await Promise.all([\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,'DAI'),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    let [tokenAllocation,compAPR] = await Promise.all([\n      this.functionsUtil.getTokenAllocation(this.props.tokenConfig,false,false),\n      this.functionsUtil.getCompAPR(this.props.selectedToken,this.props.tokenConfig)\n    ]);\n\n    if (tokenAllocation){\n      const compoundInfo = this.props.tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (compoundInfo){\n        if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n          const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n          compAPR = compAPR.times(compoundAllocationPerc);\n        }\n      }\n    }\n\n    this.setState({\n      compAPR,\n      aggregatedValues,\n      govTokensUserBalance\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquityCurve\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLentCurve',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPercCurve',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              /*\n              <Flex\n                mb={[2,0]}\n                width={[1,1/5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'flex-start'}\n              >\n                <Title\n                  mb={2}\n                  fontSize={[3,4]}\n                  component={Heading.h3}\n                >\n                  Fees\n                </Title>\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'feesCounter',\n                    props:{\n                      decimals:7,\n                      maxPrecision:8,\n                      style:{\n                        fontWeight:300,\n                        fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                        color:theme.colors.counter\n                      },\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n              */\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Avg Slippage\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveAvgSlippage',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewCurve;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport CurveDeposit from '../CurveDeposit/CurveDeposit';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewCurve from '../FundsOverviewCurve/FundsOverviewCurve';\n\nclass AssetPage extends Component {\n\n  state = {\n    inputValue:{},\n    processing:{},\n    tokenFees:null,\n    canRedeem:null,\n    canDeposit:null,\n    action:'deposit',\n    activeModal:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    tokenApproved:null,\n    selectedToken:null,\n    availableTokens:{},\n    redeemBalance:null,\n    depositBalance:null,\n    buttonDisabled:false,\n    curveTokenPrice:null,\n    depositSlippage:null,\n    idleTokenBalance:null,\n    withdrawSlippage:null,\n    govTokensBalance:null,\n    curveZapContract:null,\n    curveTokenConfig:null,\n    curveTokensAmounts:{},\n    govTokensDisabled:null,\n    componentMounted:false,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    redeemableBalance:null,\n    fastBalanceSelector:{},\n    curveAvailableTokens:{},\n    tokenFeesPercentage:null,\n    redeemUnevenAmounts:false,\n    curveDepositContract:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  changeFromToken = (selectedToken) => {\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    this.props.goToSection(`${curveConfig.params.route}/${selectedToken}`);\n  }\n\n  getSelectedToken(){\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    return this.props.urlParams.param1 && curveAvailableTokens[this.props.urlParams.param1] ? this.props.urlParams.param1 : Object.keys(curveAvailableTokens)[0];\n  }\n\n  setSelectedToken = async (selectedToken) => {\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      availableTokens,\n      curveTokenConfig\n    });\n  }\n\n  loadTokensInfo = async () => {\n\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    this.setState({\n      curveAvailableTokens\n    });\n\n    const selectedToken = this.getSelectedToken();\n    // Check if token is set the query params\n    if (selectedToken && selectedToken !== this.props.urlParams.param1){\n      this.changeFromToken(selectedToken);\n      return await this.setSelectedToken(selectedToken);\n    } else if (selectedToken !== this.state.selectedToken){\n      await this.setSelectedToken(selectedToken);\n    }\n\n    const newState = {...this.state};\n\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n\n    if (newState.selectedToken !== selectedToken){\n      newState.selectedToken = selectedToken;\n    }\n\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n\n    const [\n      curveZapContract,\n      curvePoolContract,\n      curveSwapContract,\n      curveDepositContract\n    ] = await Promise.all([\n      this.functionsUtil.getCurveZapContract(),\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract()\n    ]);\n\n    newState.curveZapContract = curveZapContract;\n    newState.curvePoolContract = curvePoolContract;\n    newState.curveSwapContract = curveSwapContract;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.availableTokens = availableTokens;\n\n\n    // console.log('curveTokenPrice',newState.curveTokenPrice.toFixed(6),'curveTokenBalance',newState.curveTokenBalance.toFixed(6),'redeemableBalance',newState.redeemableBalance.toFixed(20),'tokenBalance',newState.tokenBalance.toFixed(20));\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[selectedToken] = tokenConfig;\n\n    newState.tokenConfig = tokenConfig;\n    newState.curveTokenConfig = curveTokenConfig;\n\n    if (this.props.account){\n      [\n        newState.curveTokenPrice,\n        newState.curveTokenBalance,\n        newState.tokenFeesPercentage,\n        newState.tokenFees,\n        newState.tokenBalance,\n        newState.idleTokenBalance,\n        newState.tokenApproved,\n      ] = await Promise.all([\n        this.functionsUtil.getCurveTokenPrice(),\n        this.functionsUtil.getCurveTokenBalance(),\n        this.functionsUtil.getTokenFees(tokenConfig),\n        this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n        this.functionsUtil.getTokenBalance(selectedToken,this.props.account),\n        this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n        this.functionsUtil.checkTokenApproved(selectedToken,curveDepositContract.address,this.props.account),\n      ]);\n\n\n      newState.processing = {\n        redeem:{\n          txHash:null,\n          loading:false\n        },\n        deposit:{\n          txHash:null,\n          loading:false\n        },\n        approve:{\n          txHash:null,\n          loading:false\n        },\n      };\n      newState.inputValue = {\n        redeem:null,\n        deposit:null\n      };\n      newState.fastBalanceSelector = {\n        redeem:null,\n        deposit:null\n      };\n\n      newState.componentMounted = true;\n      newState.depositBalance = newState.tokenBalance;\n      newState.redeemBalance = newState.redeemableBalance;\n      newState.govTokensDisabled = tokenConfig.govTokensDisabled;\n      newState.canRedeem = newState.curveTokenBalance && newState.curveTokenBalance.gt(0);\n      newState.canDeposit = newState.idleTokenBalance && newState.idleTokenBalance.gt(0);\n      newState.redeemableBalance = newState.curveTokenBalance ? newState.curveTokenBalance.times(newState.curveTokenPrice) : this.functionsUtil.BNify(0);\n    }\n\n    this.setState(newState);\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async calculateSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.curvePoolContract.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositBalance = amount;\n        newState.depositSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        newState.redeemBalance = amount;\n        newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.urlParams.param1 !== this.props.urlParams.param1;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || transactionsChanged || tokenChanged){\n      await this.loadTokensInfo();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const redeemUnevenAmountsChanged = this.state.redeemUnevenAmounts !== prevState.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    if (actionChanged){\n      this.updateAssetSelector();\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  updateAssetSelector = async () => {\n    const newState = {};\n    switch (this.state.action){\n      case 'deposit':\n        this.loadTokensInfo();\n      break;\n      case 'redeem':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n        newState.curveAvailableTokens = {};\n        newState.curveTokenConfig = tokenConfig;\n        newState.selectedToken = tokenConfig.token;\n        newState.curveAvailableTokens[tokenConfig.token] = tokenConfig;\n      break;\n      default:\n      break;\n    }\n\n    this.setState(newState);\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.state.tokenBalance ? this.functionsUtil.BNify(this.state.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          amount = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n        } else {\n          amount = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.state.tokenBalance));\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.curveTokenBalance)) );\n        } else {\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.redeemableBalance)) );\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = this.state.tokenApproved;\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.state.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.functionsUtil.enableERC20(this.state.selectedToken,this.state.curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      // Handle deposit in curve\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.state.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,tokensToDeposit);\n        const minMintAmount = await this.functionsUtil.genericContractCall(this.state.curveSwapContract.name,'calc_token_amount',[amounts,true]);\n        const depositParams = [amounts,minMintAmount];\n\n        // No need for callback atm\n        contractSendResult = await this.props.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, null, callbackDeposit, callbackReceiptDeposit);\n      break;\n      case 'redeem':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        let curveTokensToRedeem = null;\n        if (selectedPercentage){\n          curveTokensToRedeem = this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage);\n        } else {\n          curveTokensToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals));\n          if (!this.state.redeemUnevenAmounts){\n            const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n            curveTokensToRedeem = curveTokensToRedeem.div(curveTokenPrice);\n          }\n        }\n\n        if (!curveTokensToRedeem){\n          return false;\n        }\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventLabel: tx.status,\n            eventCategory: `CurveRedeem`,\n            eventAction: this.state.selectedToken,\n            eventValue: curveTokensToRedeem.toFixed()\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const _amount = this.functionsUtil.normalizeTokenAmount(curveTokensToRedeem,this.state.curvePoolContract.decimals).toString();\n        let min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,0);\n\n        const contractName = this.state.curveDepositContract.name;\n        if (this.state.redeemUnevenAmounts){\n          console.log('remove_liquidity_imbalance',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_imbalance', [min_amounts, _amount], null, callbackRedeem, callbackReceiptRedeem);\n        } else {\n          min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,_amount);\n          console.log('remove_liquidity',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts], null, callbackRedeem, callbackReceiptRedeem);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    // console.log('contractSendResult',contractSendResult);\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    const userHasFunds = this.props.account && this.state.curveTokenBalance && this.functionsUtil.BNify(this.state.curveTokenBalance).gt(0);\n    const canPerformAction = true;\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            {\n              <Breadcrumb\n                isMobile={this.props.isMobile}\n                path={['Boost',this.state.selectedToken]}\n                handleClick={ e => this.props.goToSection('best') }\n                text={this.functionsUtil.getGlobalConfig(['strategies','best','title'])}\n              />\n            }\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Curve Pool\n        </Title>\n        <Flex\n          width={1}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Flex\n              width={[1,0.36]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select your asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  onChange={this.changeFromToken}\n                  selectedToken={this.state.selectedToken}\n                  tokenConfig={this.state.curveTokenConfig}\n                  showBalance={this.state.action === 'deposit'}\n                  availableTokens={this.state.curveAvailableTokens}\n                />\n              </Box>\n              <Box\n                width={1}\n              >\n                {\n                  canPerformAction ? (\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canRedeem }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  ) : (\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        size={'2.3em'}\n                        name={'MoneyOff'}\n                        color={'cellText'}\n                      />\n                      <Text\n                        mt={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You don't have any {this.state.tokenConfig.idle.token} in your wallet.\n                      </Text>\n                    </Flex>\n                  )\n                }\n              </Box>\n            </Flex>\n            <Flex\n              width={1}\n              mt={ this.props.account ? 3 : 0 }\n            >\n            {\n              this.state.action === 'deposit' ? (\n                <CurveDeposit\n                  {...this.props}\n                  {...this.state}\n                />\n              ) : this.state.action === 'redeem' && (\n                <CurveRedeem\n                  {...this.props}\n                  {...this.state}\n                />\n              )\n            }\n            </Flex>\n          </Flex>\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewCurve\n                {...this.props}\n                tokenFees={this.state.tokenFees}\n                tokenConfig={this.state.tokenConfig}\n                selectedToken={this.state.selectedToken}\n                availableTokens={this.state.availableTokens}\n                enabledTokens={Object.keys(this.state.availableTokens)}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.props.account && !this.state.govTokensDisabled[this.state.selectedToken] && Object.keys(availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id=\"earnings-estimation\"\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(availableGovTokens)}\n                handleClick={(props) => {}}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.33,0.22]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.26],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    props:{\n                      width:[0.33,0.26],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                      {\n                        name:'tooltip',\n                        props:{\n                          placement:'bottom',\n                          message:'The shown balance may be lower than the real one.',\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    mobile:false,\n                    props:{\n                      width: 0.26,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTokens={availableGovTokens}\n              />\n            </Flex>\n          */\n        }\n        {\n          /*\n          this.props.account && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'estimated-earnings-container'}\n            >\n              <Title my={[3,4]}>Estimated earnings</Title>\n              <EstimatedEarnings\n                {...this.props}\n              />\n            </Flex>\n          */\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              availableTokens={this.state.availableTokens}\n              enabledTokens={Object.keys(this.state.availableTokens)}\n              enabledActions={['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut']}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.state.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Button,\n  Form,\n  Icon,\n  Flex,\n  Link\n} from \"rimble-ui\";\nimport axios from 'axios';\nimport colors from '../../colors';\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass WelcomeModal extends React.Component {\n\n  state = {\n    email:null,\n    error:false,\n    subscribed:false,\n    sendingForm:false\n  };\n\n  functionsUtil = null;\n\n  constructor(props) {\n    super(props);\n    this.functionsUtil = new FunctionsUtil(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  componentDidUpdate = async () => {\n    this.functionsUtil.setProps(this.props);\n  }\n\n  sendUserInfo = (sendEmail=true) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const userInfo = {\n      address: this.props.account,\n      provider: walletProvider\n    };\n\n    if (sendEmail && this.state.email !== null){\n      userInfo.email = this.state.email;\n    }\n\n    this.functionsUtil.simpleIDPassUserInfo(userInfo);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.email){\n      return false;\n    }\n\n    const callback = () => {\n      this.setState({\n        sendingForm:false,\n        subscribed:true\n      });\n      window.setTimeout(this.props.closeModal,2500);\n    };\n\n    this.sendUserInfo();\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'send_email',\n      eventLabel: 'WelcomeModal'\n    });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      callback();\n    })\n    .catch(err => {\n      callback();\n    });\n\n    // Set signedUp in the localStorage\n    if (localStorage){\n      const walletAddress = this.props.account.toLowerCase();\n      let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : null;\n      if (lastLogin && lastLogin[walletAddress] && !lastLogin[walletAddress].signedUp){\n        lastLogin[walletAddress].signedUp = true;\n        this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n      }\n    }\n\n    this.setState({\n      sendingForm:true\n    })\n  };\n\n  closeModal = async () => {\n\n    const closeModal = () => {\n      this.props.closeModal();\n    };\n\n    try{\n      // Prevent sending email\n      this.sendUserInfo(false);\n\n      // Send Google Analytics event\n      if (globalConfigs.analytics.google.events.enabled){\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'UI',\n          eventAction: 'continue_without_email',\n          eventLabel: 'WelcomeModal'\n        },closeModal);\n\n        // Call callback after 1 second if stuck\n        setTimeout(closeModal,1000);\n      } else {\n        closeModal();\n      }\n    } catch (err) {\n      closeModal();\n    }\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        {\n          this.state.subscribed ? (\n            <ModalCard\n              closeFunc={this.closeModal}\n            >\n              <ModalCard.Header title={'All done'} icon={`images/done.svg`}></ModalCard.Header>\n              <ModalCard.Body>\n                <Flex width={1} flexDirection={'column'} mb={3}>\n                  <Text color={'dark-gray'} textAlign={'center'} fontSize={3} my={0}>\n                    Thanks for subscribing!\n                  </Text>\n                  <Button\n                    my={3}\n                    width={'100%'}\n                    borderRadius={4}\n                    onClick={this.closeModal}\n                  >\n                    CLOSE\n                  </Button>\n                </Flex>\n              </ModalCard.Body>\n            </ModalCard>\n          ) : (\n            <ModalCard closeFunc={this.closeModal}>\n              <ModalCard.Header title={'Stay up-to-date!'} icon={`images/notification.svg`}>\n              </ModalCard.Header>\n              <ModalCard.Body>\n                <Form onSubmit={this.handleSubmit}>\n                  <Flex width={1} flexDirection={'column'} mb={3}>\n                    <Text color={'mid-gray'} textAlign={'left'} fontSize={3} my={0}>\n                      Add your e-mail to receive updates about:\n                    </Text>\n                  </Flex>\n                  <Flex width={1} flexDirection={'column'} mt={2}>\n                    <Flex my={2} flexDirection={'row'} alignItems={'center'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Performance reports\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        New Protocols & Tokens\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Latest updates\n                      </Text>\n                    </Flex>\n                    <Form.Field width={1} label={''}>\n                      <Form.Input\n                        type=\"email\"\n                        name=\"EMAIL\"\n                        width={1}\n                        outline={'none'}\n                        border={0}\n                        px={3}\n                        py={4}\n                        fontSize={3}\n                        textAlign={['center','left']}\n                        placeholder={'Enter your e-mail'}\n                        onChange={this.handleValidation}\n                        required\n                      />\n                    </Form.Field>\n                    <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n                      <ButtonLoader\n                        buttonText={'SUBMIT'}\n                        isLoading={this.state.sendingForm}\n                        buttonProps={{className:header_styles.gradientButton,width:'100%',type:'submit'}}\n                      >\n                      </ButtonLoader>\n                      <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without e-mail</Link>\n                    </Flex>\n                  </Flex>\n                </Form>\n              </ModalCard.Body>\n            </ModalCard>\n          )\n        }\n      </Modal>\n    );\n  }\n}\n\nexport default WelcomeModal;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\n\nclass MigrateModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'continue_without_migrate',\n        eventLabel: 'MigrateModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowMigrateModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowMigrateModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = () => {\n    const tokenMigrationRoute = this.functionsUtil.getGlobalConfig(['tools','tokenMigration','route']);\n    this.props.goToSection('tools/'+tokenMigrationRoute);\n    this.props.closeModal();\n  }\n\n  render() {\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            iconHeight={'40px'}\n            title={'Migrate to Idle'}\n            icon={`images/migrate.svg`}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={3}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                You can migrate your funds from Compound, Aave, Fulcrum, iEarn and Idle V2 with just one transaction and with no cost.\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                my={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.protocolsTokensBalances && Object.keys(this.props.protocolsTokensBalances).map( token => (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      key={`token_${token}`}\n                      justifyContent={'space-between'}\n                    >\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'icon',\n                          props:{\n                            mr:2,\n                            height:'2.3em'\n                          }\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                      <SmartNumber\n                        mr={2}\n                        {...fieldProps}\n                        minPrecision={5}\n                        number={this.props.protocolsTokensBalances[token].balance} \n                      />\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'tokenName',\n                          props:fieldProps\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                    </Flex>\n                  ) )\n                }\n              </Flex>\n              <Flex\n                mb={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <ButtonLoader\n                  buttonText={'MIGRATE'}\n                  handleClick={this.migrate}\n                  isLoading={this.state.sendingForm}\n                  buttonProps={{\n                    width:['100%','50%'],\n                    className:header_styles.gradientButton\n                  }}\n                >\n                </ButtonLoader>\n                {\n                /*\n                <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without migrate</Link>\n                */\n                }\n                <Checkbox\n                  mt={2}\n                  required={false}\n                  color={'mid-gray'}\n                  checked={this.state.dontShowAgain}\n                  label={`Don't show this popup again`}\n                  onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                />\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default MigrateModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass UpgradeModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'close_upgrade_modal',\n        eventLabel: 'UpgradeModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowUpgradeModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowUpgradeModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = async (token,strategy=null) => {\n\n    if (!strategy){\n      strategy = this.props.selectedStrategy;\n    }\n\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  convert = async (token) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n\n    if (!this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            icon={`images/migrate.svg`}\n            title={'Upgrade Available'}\n            iconHeight={['35px','40px']}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={[2,3]}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                Idle now supports yield farming and governance tokens distribution, migrate now your portfolio with just one click!\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                mt={[2,3]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Flex\n                  fontSize={[2,3]}\n                  width={[0.5,0.28]}\n                  fontWeight={[4,5]}\n                  color={'copyColor'}\n                >\n                  {\n                    this.props.isMobile ? 'ASSET' : 'ASSET TO MIGRATE'\n                  }\n                </Flex>\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      BALANCE\n                    </Flex>\n                  )\n                }\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      OLD APY\n                    </Flex>\n                  )\n                }\n                <Flex\n                  fontSize={[2,3]}\n                  fontWeight={[4,5]}\n                  width={[0.25,0.19]}\n                  color={'copyColor'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.props.isMobile ? 'APY' : 'NEW APY'\n                  }\n                </Flex>\n                <Flex\n                  width={[0.25,0.15]}\n                >\n                  \n                </Flex>\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.tokensToMigrate && Object.keys(this.props.tokensToMigrate).map( tokenKey => {\n                    const token = this.props.tokensToMigrate[tokenKey].token;\n                    const strategy = this.props.tokensToMigrate[tokenKey].strategy;\n                    const tokenConfig = this.props.tokensToMigrate[tokenKey].tokenConfig;\n                    const balance = this.props.tokensToMigrate[tokenKey].oldContractBalanceFormatted;\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${tokenKey}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={[0.5,0.28]}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.8em','2.3em']\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                        </Flex>\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <SmartNumber\n                                {...fieldProps}\n                                minPrecision={5}\n                                number={balance}\n                                flexProps={{\n                                  justifyContent:'center'\n                                }}\n                              />\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <AssetField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'oldApy',\n                                  props:fieldProps\n                                }}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                        <Flex\n                          width={[0.25,0.19]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={token}\n                            tokenConfig={tokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={[0.25,0.15]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.migrate(token,strategy) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.oldIdleTokensToMigrate && Object.keys(this.props.oldIdleTokensToMigrate).map( token => {\n                    const tokenConfig = this.props.oldIdleTokensToMigrate[token].tokenConfig;\n\n                    if (!tokenConfig){\n                      return null;\n                    }\n\n                    const balance = this.props.oldIdleTokensToMigrate[token].balance;\n                    let newTokenConfig = null;\n\n                    if (tokenConfig.availableStrategies && !this.props.availableTokens[tokenConfig.baseToken]){\n                      newTokenConfig = this.props.availableStrategies[tokenConfig.availableStrategies[0]][tokenConfig.baseToken];\n                    } else {\n                      newTokenConfig = this.props.availableTokens[tokenConfig.baseToken];\n                    }\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${token}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={0.28}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:'2.3em'\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <SmartNumber\n                            {...fieldProps}\n                            minPrecision={5}\n                            number={balance}\n                            flexProps={{\n                              justifyContent:'center'\n                            }}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'oldApy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.15}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.convert(token) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                my={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <RoundButton\n                  handleClick={this.closeModal}\n                  buttonProps={{\n                    fontSize:[2,3],\n                    width:['100%','40%'],\n                  }}\n                >\n                  MIGRATE LATER\n                </RoundButton>\n                {\n                  <Checkbox\n                    mt={2}\n                    required={false}\n                    color={'mid-gray'}\n                    checked={this.state.dontShowAgain}\n                    label={`Don't show this popup again`}\n                    onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                  />\n                }\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UpgradeModal;","import React from \"react\";\nimport {\n  Heading,\n  // Text,\n  Modal,\n  Box,\n  Flex,\n  // Image,\n  EthAddress\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    // await this.functionsUtil.asyncForEach(allTokens, async (baseToken) => {\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n      /*\n      const tokenBalances = {};\n\n      tokenBalances[baseToken] = await this.functionsUtil.getTokenBalance(baseToken,this.props.account);\n\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokenBalances[strategyToken.idle.token] = await this.functionsUtil.getTokenBalance(strategyToken.idle.token,this.props.account);\n        }\n      });\n\n      balances.push(tokenBalances);\n      */\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n    // this.props.closeModal();\n  }\n\n  render(){\n    if (this.props.account){\n      // let renderBalances = null;\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                alignItems={'center'}\n                justifyContent={'center'}>\n                <Flex\n                  flexDirection={'column'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                  my={[2,3]}>\n                  <Box style={{'wordBreak': 'break-word'}}>\n                    <EthAddress address={this.props.account} />\n                  </Box>\n                </Flex>\n                <Flex\n                  mb={3}\n                  width={'100%'}\n                  alignItems={'center'}\n                  maxWidth={['100%','30em']}\n                  flexDirection={'column'}\n                >\n                  <Heading.h4\n                    textAlign={'center'}\n                  >\n                    Balances\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n              </Flex>\n            </ModalCard.Body>\n\n            <ModalCard.Footer>\n              {(this.props.context.active || (this.props.context.error && this.props.context.connectorName)) && (\n                <ButtonLoader\n                  buttonProps={{className:styles.gradientButton,borderRadius:'2rem',mt:[4,8],minWidth:['95px','145px'],size:['auto','medium']}}\n                  handleClick={ async () => { await this.logout() } }\n                  buttonText={'Logout wallet'}\n                  isLoading={this.state.logout}\n                >\n                </ButtonLoader>\n              )}\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from 'react';\nimport styles from './MenuAccount.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Icon, Image, Link, Text } from \"rimble-ui\";\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport AccountModal from \"../utilities/components/AccountModal\";\n\nclass MenuAccount extends Component {\n\n  state = {\n    isModalOpen: null,\n    idleTokenBalance: null\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadIdleTokenBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadIdleTokenBalance();\n    }\n  }\n\n  async loadIdleTokenBalance(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled){\n      let idleTokenBalance = this.functionsUtil.BNify(0);\n      const [\n        balance,\n        unclaimed\n      ] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed){\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n\n      return this.setState({\n        idleTokenBalance\n      });\n    }\n    return null;\n  }\n\n  toggleModal = (modalName) => {\n    this.setState(state => ({...state, isModalOpen: (state.isModalOpen===modalName ? null : modalName) }));\n  }\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem('walletProvider',false,null);\n    const connectorInfo = walletProvider ? this.functionsUtil.getGlobalConfig(['connectors',walletProvider.toLowerCase()]) : null;\n    const walletIcon = connectorInfo && connectorInfo.icon ? connectorInfo.icon : walletProvider ? `${walletProvider.toLowerCase()}.svg` : null;\n\n    return (\n      this.props.account ? (\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          alignItems={['flex-start','center']}\n        >\n          <Flex\n            p={0}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n            onClick={e => this.toggleModal('account')}\n          >\n            {\n              connectorInfo ? (\n                <Image\n                  width={'2em'}\n                  height={'2em'}\n                  mr={[2,'0.5rem']}\n                  display={'inline-flex'}\n                  src={`images/${walletIcon}`}\n                  alt={walletProvider.toLowerCase()}\n                />\n              ) : (\n                <Icon\n                  size={'2em'}\n                  mr={[0,'0.5rem']}\n                  color={'copyColor'}\n                  name={'AccountCircle'}\n                />\n              )\n            }\n            <ShortHash\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n              hash={this.props.account}\n            />\n          </Flex>\n          \n          {\n            this.state.idleTokenBalance && \n              <Flex\n                ml={[0,3]}\n                width={'auto'}\n              >\n                <Link\n                  style={{\n                    textDecoration:'none'\n                  }}\n                  className={styles.balanceButton}\n                  onClick={ e => this.props.setGovModal(true) }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={1}\n                      width={'1.7em'}\n                      height={'1.7em'}\n                      display={'inline-flex'}\n                      src={`images/tokens/IDLE.png`}\n                    />\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={500}\n                    >\n                      {this.state.idleTokenBalance.toFixed(2)} IDLE\n                    </Text>\n                  </Flex>\n                </Link>\n              </Flex>\n          }\n          <AccountModal\n            {...this.props}\n            isOpen={this.state.isModalOpen==='account'}\n            closeModal={e => this.toggleModal('account') }\n          />\n        </Flex>\n      ) : (\n        <Flex\n          width={1}\n          justifyContent={'flex-start'}\n        >\n          <CardIconButton\n            icon={'Power'}\n            {...this.props}\n            text={'Connect'}\n            handleClick={this.props.connectAndValidateAccount}\n          />\n        </Flex>\n      )\n    );\n  }\n}\n\nexport default MenuAccount;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    // const txStatusChanged = prevState.txStatus !== this.state.txStatus;\n    // if (txStatusChanged && this.state.txStatus === 'success'){\n    //   this.loadTokenInfo();\n    // }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          bgLayer={true}\n          mainColor={'white'}\n          minWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.png'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens!' : 'You don\\'t have any IDLE to claim'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Link\n                  href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                >\n                  <Flex\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={400}\n                    >\n                      Go to governance\n                    </Text>\n                    <Icon\n                      ml={1}\n                      size={'1em'}\n                      color={'white'}\n                      name={\"OpenInNew\"}\n                    />\n                  </Flex>\n                </Link>\n              </Flex>\n              {\n                this.state.unclaimed && this.state.unclaimed.gt(0) && \n                  <Flex\n                    mb={3}\n                    width={1}\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      // Sending transaction\n                      this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          textColor={'white'}\n                          web3={this.props.web3}\n                          cancelTextColor={'moon-gray'}\n                          cancelTextHoverColor={'white'}\n                          waitText={`Claim estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing Claim request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            color:'blue',\n                            width:[1,'45%'],\n                            mainColor:'white',\n                            contrastColor:'blue',\n                            disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                          }}\n                          handleClick={this.claim.bind(this)}\n                        >\n                          Claim\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n              }\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getTotalSupply`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,totalSupply,null);\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n      if (cachedData !== null){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance){\n        return this.functionsUtil.setCachedData(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getVestingContract = async (account=null) => {\n    account = account ? account : this.props.account;\n    const vestingContract = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n\n    if (parseInt(vestingContract) === 0){\n      return null;\n    }\n    // Init vesting contract\n    await this.props.initContract('VestingContract',vestingContract,VesterABI);\n    return vestingContract;\n  }\n\n  delegateVesting = async (account=null,delegate=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','setDelegate',[delegate],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  getVestingAmount = async (account=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      let vestingAmount = await this.functionsUtil.genericContractCall('VestingContract','vestingAmount');\n      if (vestingAmount){\n        return this.functionsUtil.BNify(vestingAmount);\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n      if (cachedData !== null){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedData(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n      if (cachedData !== null){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes){\n        return this.functionsUtil.setCachedData(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.BNify(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.BNify(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.BNify(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegatesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegatesVotesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const [\n      all_votes,\n      totalSupply,\n      delegations,\n    ] = await Promise.all([\n      this.getVotes(),\n      this.getTotalSupply(),\n      this.getDelegatesVotesChanges()\n    ]);\n\n    const delegateAccounts = {};\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    let delegates = [];\n    Object.keys(delegateAccounts).forEach((account) => {\n      const votes = +delegateAccounts[account];\n      if (votes === 0) return;\n      delegates.push({\n        votes: votes/1e18,\n        delegate: account\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / parseFloat(totalSupply))).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedData(cachedDataKey,delegates)\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n\n    let votes = await this.functionsUtil.getContractPastEvents(governanceContractName,'VoteCast', {fromBlock: 0, toBlock: 'latest'});\n\n    if (votes){\n      votes = votes.map( e => {\n        const {\n            voter,\n            votes,\n            support,\n            proposalId\n        } = e.returnValues;\n        return {\n          votes,\n          voter,\n          support,\n          proposalId\n        }\n      });\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null) => {\n\n    // Check for cached data\n    const cachedDataKey = 'getProposals';\n    let cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      if (voted_by !== null){\n        cachedData = cachedData.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const proposalCount = await this.functionsUtil.genericContractCall(governanceContractName,'proposalCount');\n\n    if (!proposalCount){\n      return [];\n    }\n\n    const proposalGets = [];\n    const proposalStateGets = [];\n    for (const i of Array.from(Array(parseInt(proposalCount)),(n,i) => i+1)) {\n      proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n      proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n    }\n\n    const [\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents,\n    ] = await Promise.all([\n      this.getVotes(),\n      Promise.all(proposalGets),\n      Promise.all(proposalStateGets),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock: 0, toBlock: 'latest'}),\n    ]);\n\n    /*\n    console.log(\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents\n    );\n    */\n\n    proposals.reverse();\n    proposalStates.reverse();\n    proposalQueuedEvents.reverse();\n    proposalCreatedEvents.reverse();\n    proposalCanceledEvents.reverse();\n    proposalExecutedEvents.reverse();\n\n    await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n      const proposalId = parseInt(p.id);\n\n      const createdEvent = proposalCreatedEvents[i];\n      const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n      // Init states array\n      p.states = [];\n\n      // Create created state\n      const createdBlockInfo = await this.props.web3.eth.getBlock(createdEvent.blockNumber);\n      const createdState = {\n        state: \"Pending\",\n        end_time: createdBlockInfo.timestamp,\n        start_time: createdBlockInfo.timestamp,\n        trx_hash: createdEvent.transactionHash\n      };\n      p.states.push(createdState);\n\n      // Push active state\n      const activeState = {\n        state: \"Active\",\n        end_time: null,\n        start_time: createdState.start_time,\n        trx_hash: null\n      };\n      p.states.push(activeState);\n\n      // Push canceled state\n      if (canceledEvent){\n        const canceledBlockInfo = await this.props.web3.eth.getBlock(canceledEvent.blockNumber);\n        const canceledState = {\n          state: \"Canceled\",\n          end_time: null,\n          start_time: canceledBlockInfo.timestamp,\n          trx_hash: canceledEvent.transactionHash\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n        p.states.push(canceledState);\n      } else {\n        // Push queued state\n        if (queuedEvent){\n          const queuedBlockInfo = await this.props.web3.eth.getBlock(queuedEvent.blockNumber);\n          const succeededState = {\n            state: \"Succeeded\",\n            end_time: null,\n            trx_hash: null,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          const queuedState = {\n            state: \"Queued\",\n            end_time: null,\n            start_time: queuedBlockInfo.timestamp,\n            trx_hash: queuedEvent.transactionHash\n          };\n\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n          // Push Succeeded state\n          p.states.push(succeededState);\n          // Push queued state\n          p.states.push(queuedState);\n        }\n\n        // Push executed state\n        if (executedEvent){\n          const executedBlockInfo = await this.props.web3.eth.getBlock(executedEvent.blockNumber);\n          const executedState = {\n            state: \"Executed\",\n            end_time: null,\n            start_time: executedBlockInfo.timestamp,\n            trx_hash: executedEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n          p.states.push(executedState);\n        }\n      }\n\n      // Check for defeated or expired\n      p.state = enumerateProposalState(proposalStates[i]);\n      const foundState = p.states.find( s => (s.state === p.state) );\n      if (!foundState){\n        const endBlockInfo = await this.props.web3.eth.getBlock(p.endBlock);\n        const endState = {\n          state: p.state,\n          end_time: null,\n          trx_hash: null,\n          start_time: endBlockInfo.timestamp,\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n        p.states.push(endState);\n      }\n\n      p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n      const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n      p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n      \n      // Idle\n      p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n      p.description = description.split(/\\n|↵/g);\n      p.description.shift();\n      p.description = p.description.join(\"\\n\");\n\n      // Compound\n      // p.title = description.split(/# |\\n/g)[1] || 'Untitled';\n      // p.description = description.split(/# |\\n/g)[2] || 'No description.';\n\n      // Save proposal\n      proposals[i] = {\n        eta:p.eta,\n        actions:{\n          values,\n          targets,\n          calldatas,\n          signatures\n        },\n        id:proposalId,\n        title:p.title,\n        state:p.state,\n        votes:p.votes,\n        states:p.states,\n        executed:p.executed,\n        endBlock:p.endBlock,\n        canceled:p.canceled,\n        forVotes:p.forVotes,\n        proposer:p.proposer,\n        timestamp:p.timestamp,\n        startBlock:p.startBlock,\n        description:p.description,\n        againstVotes:p.againstVotes\n      };\n    });\n\n    this.functionsUtil.setCachedData(cachedDataKey,proposals)\n    \n    if (voted_by === null) {\n      return proposals;\n    } else {\n      return proposals.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n    }\n  }\n}\n\nexport default GovernanceUtil;","import React, { Component } from 'react';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Button, Icon, Checkbox, Input } from \"rimble-ui\";\n\nclass DelegateVesting extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    newDelegate:'',\n    delegatee:null,\n    vestingAmount:null,\n    currentDelegate:null,\n    idleTokenDelegated:false,\n    delegateAddressValid:false,\n    delegateDifferentWallet:false,\n    vestingContractDelegated:false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const [\n        delegatesChanges,\n        currentDelegate,\n        vestingContract,\n      ] = await Promise.all([\n        this.governanceUtil.getDelegatesChanges(),\n        this.governanceUtil.getCurrentDelegate(this.props.account),\n        this.governanceUtil.getVestingContract(this.props.account),\n      ]);\n\n      // Init flags\n      let delegatee = null;\n      let vestingAmount = null;\n      let idleTokenDelegated = false;\n      let vestingContractDelegated = false;\n\n      if (vestingContract){\n        // Take vesting amount\n        vestingAmount = await this.governanceUtil.getVestingAmount(this.props.account);\n\n        // Check Token Delegated\n        idleTokenDelegated = currentDelegate && currentDelegate.toLowerCase() === this.props.account.toLowerCase();\n\n        // Check Vesting Contract Delegated\n        const lastDelegateTx = delegatesChanges.filter( d => (d.returnValues.delegator.toLowerCase() === vestingContract.toLowerCase() ) ).pop();\n        delegatee = lastDelegateTx ? lastDelegateTx.returnValues.toDelegate : false;\n        vestingContractDelegated = delegatee !== '0x0000000000000000000000000000000000000000';\n      }\n\n      return this.setState({\n        delegatee,\n        vestingAmount,\n        currentDelegate,\n        idleTokenDelegated,\n        vestingContractDelegated\n      });\n    }\n    return null;\n  }\n\n  async delegateTokens(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateTokens',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.idleTokenDelegated = true;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.setDelegate(this.props.account,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  async delegateVesting(revoke=false){\n\n    let delegate = this.state.delegateDifferentWallet ? this.state.newDelegate : this.props.account;\n    if (revoke){\n      delegate = '0x'+'0'.repeat(40);\n    }\n\n    const delegateValid = this.functionsUtil.checkAddress(delegate);\n    if (!delegateValid){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateVesting',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.delegatee=delegate;\n        newState.delegateDifferentWallet=false;\n        newState.vestingContractDelegated=!revoke;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.delegateVesting(this.props.account,delegate,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  changeDelegate(e){\n    const newDelegate = e.target.value;\n    const delegateAddressValid = this.functionsUtil.checkAddress(newDelegate);\n    this.setState({\n      newDelegate,\n      delegateAddressValid\n    });\n  }\n\n  setDelegateDifferentWallet(delegateDifferentWallet){\n    this.setState({\n      delegateDifferentWallet\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  render() {\n    return this.state.vestingAmount ? (\n      <Flex\n        p={2}\n        mt={3}\n        width={1}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'#f3f6ff'}\n        boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={1}\n            fontSize={3}\n            fontWeight={500}\n            color={'#3f4e9a'}\n            textAlign={'center'}\n          >\n            You have {this.state.vestingAmount.div(1e18).toFixed(5)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} in the Vesting Contract\n          </Text>\n          {\n            this.state.vestingContractDelegated && this.state.delegatee ? (\n              <Text\n                mb={1}\n                fontWeight={500}\n                color={'#3f4e9a'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                Currently your votes are delegated to {this.state.delegatee}\n              </Text>\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontWeight={500}\n                  color={'#3f4e9a'}\n                  fontSize={'15px'}\n                  textAlign={'center'}\n                >\n                  Follow the next steps to delegate your tokens:\n                </Text>\n                <Flex\n                  mt={1}\n                  mb={2}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  {\n                    this.state.delegateDifferentWallet ? (\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.delegateAddressValid ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.delegateAddressValid ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'#3f4e9a'}\n                          textAlign={'left'}\n                        >\n                          Insert delegate address\n                        </Text>\n                      </Flex>\n                    ) : (\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.idleTokenDelegated ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.idleTokenDelegated ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'#3f4e9a'}\n                          textAlign={'left'}\n                        >\n                          Delegate Tokens\n                        </Text>\n                      </Flex>\n                    )\n                  }\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.vestingContractDelegated ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.vestingContractDelegated ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={1}\n                      fontWeight={500}\n                      fontSize={'15px'}\n                      color={'#3f4e9a'}\n                      textAlign={'left'}\n                    >\n                      Delegate Vesting\n                    </Text>\n                  </Flex>\n                </Flex>\n              </Flex>\n            )\n          }\n        </Flex>\n        {\n          this.state.delegateDifferentWallet && !this.state.vestingContractDelegated && (\n            <Input\n              mb={2}\n              min={0}\n              type={'text'}\n              required={true}\n              borderRadius={2}\n              fontWeight={500}\n              textAlign={'center'}\n              width={['100%','30em']}\n              boxShadow={'none !important'}\n              value={this.state.newDelegate}\n              placeholder={`Insert delegate address`}\n              onChange={this.changeDelegate.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          )\n        }\n        {\n          this.state.processing && this.state.processing.loading ? (\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <TxProgressBar\n                web3={this.props.web3}\n                waitText={`Delegate estimated in`}\n                hash={this.state.processing.txHash}\n                endMessage={`Finalizing delegate request...`}\n                cancelTransaction={this.cancelTransaction.bind(this)}\n              />\n            </Flex>\n          ) : this.state.vestingContractDelegated ? (\n            <Button\n              size={'small'}\n              mainColor={'red'}\n              onClick={ e => this.delegateVesting(true) }\n            >\n              REVOKE DELEGATE\n            </Button>\n          ) : !this.state.idleTokenDelegated && !this.state.delegateDifferentWallet ? (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateTokens() }\n            >\n              DELEGATE TOKENS\n            </Button>\n          ) : !this.state.vestingContractDelegated && (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateVesting(false) }\n              disabled={ this.state.delegateDifferentWallet && !this.state.delegateAddressValid }\n            >\n              DELEGATE VESTING\n            </Button>\n          )\n        }\n        {\n          !this.state.vestingContractDelegated && \n            <Checkbox\n              mt={1}\n              required={false}\n              color={'#f3f6ff'}\n              label={`Delegate to different wallet`}\n              checked={this.state.delegateDifferentWallet}\n              onChange={ e => this.setDelegateDifferentWallet(e.target.checked) }\n            />\n        }\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default DelegateVesting;\n","import theme from '../theme';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport MenuAccount from '../MenuAccount/MenuAccount';\nimport RoundButton from '../RoundButton/RoundButton';\nimport GovModal from \"../utilities/components/GovModal\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport { Box, Flex, Text, Icon, Button } from \"rimble-ui\";\nimport DelegateVesting from '../DelegateVesting/DelegateVesting';\n\nclass DashboardHeader extends Component {\n\n  state = {\n    unclaimed:null,\n    vestingAmount:null,\n    govModalOpened:false\n  }\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(this.props.account);\n      return this.setState({\n        unclaimed\n      });\n    }\n    return null;\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: 'logout',\n      eventCategory: 'Connect'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async exit(){\n    this.props.goToSection('/',false);\n  }\n\n  setGovModal(govModalOpened){\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    const isDashboard = this.props.isDashboard;\n    const isGovernance = this.props.isGovernance;\n    const governanceRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const dashboardRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.props.availableStrategies)[0];\n    return (\n      <Box\n        mb={3}\n      >\n        <Flex\n          pb={2}\n          width={1}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n          alignItems={['flex-end','center']}\n          borderBottom={`1px solid ${theme.colors.divider}`}\n        >\n          <MenuAccount\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n          />\n          <Flex\n            mr={2}\n            flexDirection={['column','row']}\n            alignItems={['flex-end','center']}\n          >\n            {\n              governanceEnabled && isDashboard ? (\n                <RoundButton\n                  buttonProps={{\n                    mainColor:'redeem',\n                    size:this.props.isMobile ? 'small' : 'medium'\n                  }}\n                  handleClick={ (e) => { this.props.goToSection(governanceRoute,false) } }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      mr={[1,2]}\n                      size={'1.6em'}\n                      color={'white'}\n                      name={'ExitToApp'}\n                    />\n                    <Text\n                      fontWeight={3}\n                      color={'white'}\n                      fontSize={[2,3]}\n                    >\n                      Governance\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              ) : isGovernance && (\n                <RoundButton\n                  buttonProps={{\n                    mainColor:'redeem',\n                    size:this.props.isMobile ? 'small' : 'medium'\n                  }}\n                  handleClick={ (e) => { this.props.goToSection(dashboardRoute,false) } }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      mr={[1,2]}\n                      size={'1.6em'}\n                      color={'white'}\n                      name={'ExitToApp'}\n                    />\n                    <Text\n                      fontWeight={3}\n                      color={'white'}\n                      fontSize={[2,3]}\n                    >\n                      Dashboard\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              )\n            }\n            {\n              /*\n              <Link\n                display={'flex'}\n                onClick={ (e) => { this.exit() } }\n                style={{\n                  alignItems:'center',\n                  justifyContent:['flex-end','space-between']\n                }}\n              >\n                <Icon\n                  mr={2}\n                  size={'1.6em'}\n                  name={'ExitToApp'}\n                  color={'copyColor'}\n                />\n                <Text\n                  fontSize={2}\n                  fontWeight={3}\n                  color={'copyColor'}\n                >\n                  Exit\n                </Text>\n              </Link>\n              */\n            }\n          </Flex>\n        </Flex>\n        {\n          this.state.unclaimed && this.state.unclaimed.gt(0) &&\n            <Flex\n              p={2}\n              mt={3}\n              width={1}\n              borderRadius={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={'#f3f6ff'}\n              flexDirection={['column','row']}\n              boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n            >\n              <Text\n                fontWeight={500}\n                color={'#3f4e9a'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                IDLE Governance Token is now available, \n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n                >\n                  discover more\n                </ExtLink>! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to claim.\n              </Text>\n              <Button\n                ml={[0,2]}\n                mt={[2,0]}\n                size={'small'}\n                onClick={ e => this.setGovModal(true) }\n              >\n                CLAIM NOW\n              </Button>\n            </Flex>\n        }\n        {\n          this.props.isGovernance && \n            <DelegateVesting\n              {...this.props}\n            />\n        }\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false) }\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Stats from '../Stats/Stats';\nimport Utils from '../Utils/Utils';\nimport AssetPage from '../AssetPage/AssetPage';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CurveStrategy from '../CurveStrategy/CurveStrategy';\nimport WelcomeModal from \"../utilities/components/WelcomeModal\";\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport MigrateModal from \"../utilities/components/MigrateModal\";\nimport UpgradeModal from \"../utilities/components/UpgradeModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    baseRoute:null,\n    activeModal:null,\n    currentRoute:null,\n    pageComponent:null,\n    currentSection:null,\n    selectedSection:null,\n    tokensToMigrate:null,\n    showResetButton:false,\n    selectedSubsection:null,\n    oldIdleTokensToMigrate:null,\n    protocolsTokensBalances:null,\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    window.functionsUtil = this.functionsUtil;\n  }\n\n  async loadMenu() {\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n    const menu = Object.keys(strategies).filter( s => ( !strategies[s].comingSoon ) ).map(strategy => ({\n        submenu:[],\n        color:'#fff',\n        selected:false,\n        route:baseRoute+'/'+strategy,\n        label:strategies[strategy].title,\n        image:strategies[strategy].icon,\n        imageInactive:strategies[strategy].iconInactive,\n        bgColor:strategies[strategy].color,\n        component:strategies[strategy].component\n      })\n    );\n\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n\n    // Add Curve\n    if (curveConfig.enabled){\n      const curveParams = Object.assign({\n        submenu:[],\n        selected:false,\n        component:CurveStrategy,\n      },curveConfig.params);\n\n      menu.push(curveParams);\n    }\n\n    // Add Stats\n    menu.push(\n      {\n        icon:'Equalizer',\n        label:'Stats',\n        bgColor:'#21f36b',\n        color:'dark-gray',\n        component:Stats,\n        selected:false,\n        route:'/dashboard/stats',\n        submenu:[]\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        icon:'Build',\n        label:'Tools',\n        color:'dark-gray',\n        component:Utils,\n        selected:false,\n        route:'/dashboard/tools',\n        bgColor:this.props.theme.colors.primary,\n        submenu:Object.values(this.functionsUtil.getGlobalConfig(['tools'])).filter( u => (u.enabled) )\n      }\n    );\n\n    await this.setState({\n      menu\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    let currentRoute = baseRoute;\n\n    let pageComponent = null;\n    let selectedToken = null;\n    let currentSection = null;\n    let selectedStrategy = null;\n\n    // Set strategy\n    if (params.section){\n      currentSection = params.section;\n      const param1 = params.param1;\n      const param2 = params.param2;\n\n      const section_is_strategy = Object.keys(this.props.availableStrategies).includes(currentSection.toLowerCase());\n      const param1_is_strategy = param1 && Object.keys(this.props.availableStrategies).includes(param1.toLowerCase());\n\n      if (section_is_strategy || param1_is_strategy){\n        selectedStrategy = section_is_strategy ? currentSection : param1;\n        currentRoute += '/'+selectedStrategy;\n\n        // Set token\n        const param1_is_token = param1 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param1.toUpperCase());\n        const param2_is_token = param2 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param2.toUpperCase());\n        if (param1_is_token || param2_is_token){\n          selectedToken = param1_is_token ? param1.toUpperCase() : param2.toUpperCase();\n          currentRoute += '/'+selectedToken;\n\n          if (section_is_strategy){\n            pageComponent = AssetPage;\n          }\n        }\n      } else {\n        currentRoute += '/'+params.section;\n\n        if (params.param1 && params.param1.length){\n          currentRoute += '/'+params.param1;\n        }\n\n        // if (params.param2 && params.param2.length){\n        //   currentRoute += '/'+params.param2;\n        // }\n      }\n    }\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach(m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // console.log('pageComponent',params,pageComponent);\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    // console.log('loadParams',selectedStrategy,selectedToken);\n    await this.props.setStrategyToken(selectedStrategy,selectedToken);\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.checkModals();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const strategyChanged = this.props.selectedStrategy && prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized || strategyChanged){\n      this.checkModals();\n    }\n  }\n\n  async checkModals(){\n\n    if (this.props.selectedToken || !this.props.accountInizialized || !this.props.contractsInitialized || !this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    await this.checkTokensToMigrate();\n    await this.checkWelcomeModal();\n    await this.checkProtocolsTokensBalances();\n  }\n\n  async checkTokensToMigrate(){\n\n    const showUpgradeModal = this.functionsUtil.getStoredItem('dontShowUpgradeModal',false,null) !== null ? false : true;\n    if (this.props.selectedToken || !showUpgradeModal || !this.props.availableTokens){\n      return null;\n    }\n\n    const tokensToMigrate = await this.functionsUtil.getTokensToMigrate();\n    const oldIdleTokensToMigrate = await this.functionsUtil.getProtocolsTokensBalances('idle');\n\n    // console.log('tokensToMigrate',tokensToMigrate);\n    \n    if ((tokensToMigrate && Object.keys(tokensToMigrate).length>0) || (oldIdleTokensToMigrate && Object.keys(oldIdleTokensToMigrate).length>0)){\n      const activeModal = 'upgrade';\n      if (activeModal !== this.state.activeModal){\n        this.setState({\n          activeModal,\n          tokensToMigrate,\n          oldIdleTokensToMigrate\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkWelcomeModal(){\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show welcome modal\n    if (this.props.account && this.state.activeModal === null){\n      let welcomeIsOpen = false;\n\n      const welcomeModalProps = this.functionsUtil.getGlobalConfig(['modals','welcome']);\n\n      if (welcomeModalProps.enabled && localStorage){\n\n        // Check the last login of the wallet\n        const currTime = new Date().getTime();\n        const walletAddress = this.props.account.toLowerCase();\n        let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : {};\n\n        // First login\n        if (!lastLogin[walletAddress]){\n          lastLogin[walletAddress] = {\n            'signedUp':false,\n            'lastTime':currTime\n          };\n          welcomeIsOpen = true;\n        // User didn't sign up\n        } else if (!lastLogin[walletAddress].signedUp) {\n          const lastTime = parseInt(lastLogin[walletAddress].lastTime);\n          const timeFromLastLogin = (currTime-lastTime)/1000;\n          welcomeIsOpen = timeFromLastLogin>=welcomeModalProps.frequency; // 1 day since last login\n        }\n\n        if (welcomeIsOpen){\n          lastLogin[walletAddress].lastTime = currTime;\n          this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n        }\n      }\n\n      const activeModal = welcomeIsOpen ? 'welcome' : this.state.activeModal;\n      if (this.state.activeModal !== activeModal){\n        this.setState({\n          activeModal\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkProtocolsTokensBalances() {\n\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show migration modal if no other modals are opened\n    const migrateModalEnabled = this.functionsUtil.getGlobalConfig(['modals','migrate','enabled']);\n    const showMigrateModal = this.functionsUtil.getStoredItem('dontShowMigrateModal',false,null) !== null ? false : true;\n\n    if (this.state.activeModal === null && migrateModalEnabled && showMigrateModal && !this.state.protocolsTokensBalances){\n      const protocolsTokensBalances = await this.functionsUtil.getProtocolsTokensBalances();\n      const activeModal = protocolsTokensBalances && Object.keys(protocolsTokensBalances).length>0 ? 'migrate' : null;\n      const newState = {\n        activeModal,\n        protocolsTokensBalances\n      };\n      this.setState(newState);\n      return activeModal;\n    }\n\n    return null;\n  }\n\n  goToSection(section,isDashboard=true){\n\n    // Remove dashboard route\n    if (isDashboard){\n      section = section.replace(this.state.baseRoute +'/','');\n    }\n\n    const newRoute = isDashboard ? this.state.baseRoute +'/' + section : section;\n    window.location.hash=newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'goToSection',\n      eventLabel: newRoute\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  changeToken(selectedToken){\n    selectedToken = selectedToken.toUpperCase();\n    if (Object.keys(this.props.availableTokens).includes(selectedToken)){\n      const routeParts = [];\n\n      // Add section\n      if (this.state.currentSection.toLowerCase() !== this.props.selectedStrategy.toLowerCase()){\n        routeParts.push(this.state.currentSection);\n      }\n\n      // Add strategy\n      routeParts.push(this.props.selectedStrategy); \n\n      // Add token\n      routeParts.push(selectedToken);\n\n      this.goToSection(routeParts.join('/'));\n    }\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      match={{ params:{} }}\n                      urlParams={this.state.params}\n                      changeToken={this.changeToken.bind(this)}\n                      goToSection={this.goToSection.bind(this)}\n                      selectedSection={this.state.selectedSection}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <UpgradeModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          tokensToMigrate={this.state.tokensToMigrate}\n          isOpen={this.state.activeModal === 'upgrade'}\n          oldIdleTokensToMigrate={this.state.oldIdleTokensToMigrate}\n        />\n        <MigrateModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          isOpen={this.state.activeModal === 'migrate'}\n          protocolsTokensBalances={this.state.protocolsTokensBalances}\n        />\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n        <WelcomeModal\n          closeModal={this.resetModal}\n          account={this.props.account}\n          simpleID={this.props.simpleID}\n          network={this.props.network.current}\n          tokenName={this.props.selectedToken}\n          initSimpleID={this.props.initSimpleID}\n          baseTokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'welcome'}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      backgroundColor: \"white\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                style={{\n                  flex:'0 100%',\n                  justifyContent:'flex-start'\n                }}\n              >\n                <ImageButton\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex flexDirection={'row'} flexWrap={'wrap'} justifyContent={'space-between'}>\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Modal,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    currentSection:null,\n    showTxFees: false,\n    closeRemainingTime:null,\n    newToEthereumChoice: null,\n    showInstructions: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      newToEthereumChoice:null,\n      showInstructions: false,\n      currentSection:null\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'select_wallet',\n      eventLabel: walletProvider\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'blue'} style={{textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const newToEthereum = this.state.currentSection === 'new';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons isMobile={this.props.isMobile} connectionCallback={ this.closeModal } setConnector={ this.setConnector } width={1/2} size={ this.props.isMobile ? 'medium' : 'large' } />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/email.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use e-mail'} subcaption={'Powered by Portis'} handleClick={ e => this.setConnector('Portis','Portis') } />\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/mobile.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use phone number'} subcaption={'Powered by Fortmatic'} handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }/>\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n              <Box mb={3}>\n                <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex mb={[2,3]} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/ethereum-wallet.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`Ethereum wallet`} subcaption={'Choose your favourite'} handleClick={ e => this.setCurrentSection(e,'wallet') } />\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/new-wallet.png'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`New wallet`} subcaption={'Use email / phone'} handleClick={ e => this.setCurrentSection(e,'new') } />\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { (!this.state.currentSection) ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enaugh funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport Biconomy from \"@biconomy/mexa\";\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  contracts: [],\n  account: {},\n  accountBalance: {},\n  accountBalanceToken: {},\n  accountBalanceLow: {},\n  tokenConfig: {},\n  web3: {},\n  web3Infura: {},\n  initWeb3: () => {},\n  biconomy: {},\n  simpleID: {},\n  initSimpleID: () => {},\n  transactions: {},\n  checkPreflight: () => {},\n  initContract: () => {},\n  initAccount: () => {},\n  initializeContracts: () => {},\n  getAccountBalance: () => {},\n  getTokenDecimals: () => {},\n  rejectAccountConnect: () => {},\n  accountValidated: {},\n  accountValidationPending: {},\n  rejectValidation: () => {},\n  validateAccount: () => {},\n  accountInizialized: false,\n  contractsInitialized: false,\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  network: {\n    required: {},\n    current: {},\n    isCorrectNetwork: null,\n    checkNetwork: () => {}\n  },\n  modals: {\n    data: {\n      noWeb3BrowserModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      connectionModalIsOpen: {},\n      accountConnectionPending: {},\n      userRejectedConnect: {},\n      accountValidationPending: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n      lowFundsModalIsOpen: {},\n      connectionError: {}\n    },\n    methods: {\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeLowFundsModal: () => {},\n      openLowFundsModal: () => {}\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils = () => {\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.type = \"contract\";\n      transaction.status = status;\n      transaction.params = params;\n      transaction.transactionHash = hash;\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n\n    // window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if (connectorName === 'Infura' && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura\n            };\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // this.functionsUtil.customLog('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n\n    this.functionsUtil.customLog('initAccount',account);\n\n    if (this.props.customAddress){\n\n      // Set custom account\n      this.setState({\n        accountInizialized: true,\n        account: this.props.customAddress\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account){\n\n        const walletProvider = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // if (call_callback){\n        //   alert('confirmationCallback')\n        // }\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas  } : { from: account, gas })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          // this.functionsUtil.customLog('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      // this.functionsUtil.customLog('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // this.functionsUtil.customLog('updateTransaction',transactions);\n\n    // Save transactions in localStorage only if pending or succeeded\n    if (['pending','success','confirmed'].includes(transaction.status.toLowerCase())){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n        <ConnectionModalUtil\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ProposalField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const proposal = Object.assign({},this.props.proposal);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n\n    switch (fieldInfo.name){\n      case 'date':\n        const formattedDate = this.functionsUtil.strToMoment(proposal.timestamp*1000).format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        const state = fieldInfo.state ? fieldInfo.state : proposal.state;\n        switch (state) {\n          case 'Pending':\n            icon = \"HourglassEmpty\";\n            color = '#a5a5a5';\n          break;\n          case 'Active':\n            icon = \"Adjust\";\n            color = '#a5a5a5';\n          break;\n          case 'Canceled':\n            icon = \"Cancel\";\n            color = '#fa0000';\n          break;\n          case 'Defeated':\n            icon = \"Block\";\n            color = '#fa0000';\n          break;\n          case 'Succeeded':\n            icon = \"Done\";\n            color = '#00b84a';\n          break;\n          case 'Queued':\n            icon = \"Timelapse\";\n            color = '#ff9900';\n          break;\n          case 'Expired':\n            icon = \"ErrorOutline\";\n            color = '#a5a5a5';\n          break;\n          case 'Executed':\n            icon = \"CheckCircle\";\n            color = '#00b84a';\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ fieldProps.size ? fieldProps.size : (this.props.isMobile ? '1em' : '1.8em') }\n            />\n          </Flex>\n        );\n      break;\n      case 'id':\n        output = (\n          <Text {...fieldProps}>{proposal.id}</Text>\n        );\n      break;\n      case 'title':\n        output = (\n          <Text {...fieldProps}>{proposal.title}</Text>\n        );\n      break;\n      case 'votes':\n        const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n        const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n        const totalVotes = forVotes.plus(againstVotes);\n        output = (\n          <Text {...fieldProps}>{this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}</Text>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{proposal.state}</Text>\n        );\n      break;\n      case 'support':\n        let support = null;\n        if (this.props.delegate){\n          const delegate = this.props.delegate.delegate.toLowerCase();\n          const vote = proposal.votes.find( v => (v.voter.toLowerCase() === delegate) );\n          if (vote){\n            support = vote.support;\n          }\n        }\n        output = (\n          <Text {...fieldProps}>{ support === null ? 'NONE' : (support ? 'FOR' : 'AGAINST') }</Text>\n        );\n      break;\n      case 'forVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.forVotes} />\n        );\n      break;\n      case 'againstVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.againstVotes} />\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default ProposalField;\n","import React, { Component } from 'react';\nimport styles from './ProposalListFilters.module.scss';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\nimport TableCellHeader from '../../TableCellHeader/TableCellHeader';\n\nclass ProposalListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalListFilters;","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ProposalField from '../ProposalField/ProposalField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport ProposalListFilters from '../ProposalListFilters/ProposalListFilters';\n\nclass ProposalsList extends Component {\n\n  state = {\n    page:1,\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n    },\n    filters:{\n      status:{\n        pending:'Pending',\n        active:'Active',\n        canceled:'Canceled',\n        defeated:'Defeated',\n        succeeded:'Succeeded',\n        queued:'Queued',\n        expired:'Expired',\n        executed:'Executed'\n      },\n    },\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const proposalsChanged = JSON.stringify(prevProps.proposals) !== JSON.stringify(this.props.proposals);\n    if (pageChanged || proposalsChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.proposals){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    const proposals = Object.values(this.props.proposals)\n                        .filter(p => (\n                          (this.state.activeFilters.status === null || p.state.toLowerCase() === this.state.activeFilters.status.toLowerCase())\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalRows = proposals.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    proposals.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const filtersEnabled = typeof this.props.filtersEnabled === 'undefined' || this.props.filtersEnabled;\n    const hasActiveFilters = filtersEnabled && Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n    const hasRows = processedRows && processedRows.length>0;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Proposals...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'proposals-list-container'}\n              pt={[0, (!filtersEnabled || !hasRows ? 0 : hasActiveFilters ? '116px' : 5) ] }\n            >\n              {\n                hasRows ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    {\n                      filtersEnabled &&\n                        <ProposalListFilters\n                          {...this.props}\n                          filters={this.state.filters}\n                          activeFilters={this.state.activeFilters}\n                          resetFilters={this.resetFilters.bind(this)}\n                          applyFilters={this.applyFilters.bind(this)}\n                        />\n                    }\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'proposals-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (proposal,index) => {\n                          const proposalId = proposal.id;\n                          const handleClick = (e) => {\n                            return (proposalId ? this.props.goToSection(`proposals/${proposalId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={proposalId}\n                              proposal={proposal}\n                              handleClick={handleClick}\n                              key={`proposal-${proposalId}`}\n                              fieldComponent={ProposalField}\n                              rowId={`proposal-col-${proposalId}`}\n                              cardId={`proposal-card-${proposalId}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'proposals-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no proposals\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalsList;\n","import React, { Component } from 'react';\nimport { Flex, Text, Blockie } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass DelegateField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const delegate = Object.assign({},this.props.delegate);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'avatar':\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Blockie\n              opts={{\n                size: 7,\n                color: \"#dfe\",\n                bgcolor: \"#a71\",\n                spotcolor: \"#000\",\n                seed: delegate.delegate,\n              }}\n            />\n          </Flex>\n        );\n      break;\n      case 'rank':\n      case 'votes':\n      case 'delegate':\n      case 'proposals':\n      case 'vote_weight':\n        let value = delegate[fieldInfo.name];\n        if (fieldInfo.name === 'votes'){\n          value = this.functionsUtil.formatMoney(this.functionsUtil.BNify(value).toFixed(2,1),2);\n        }\n        output = (\n          <Text\n            {...fieldProps}\n          >\n            {value}\n          </Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default DelegateField;\n","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport DelegateField from '../DelegateField/DelegateField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\n\nclass DelegatesList extends Component {\n\n  state = {\n    page:1,\n    filters:{},\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{},\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const delegatesChanged = JSON.stringify(prevProps.delegates) !== JSON.stringify(this.props.delegates);\n    if (pageChanged || delegatesChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.delegates){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    let delegates = Object.values(this.props.delegates)\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    if (this.props.maxRows !== null && this.props.maxRows>0){\n      delegates = delegates.splice(0,this.props.maxRows);\n    }\n\n    // Calculate max number of pages\n    const totalRows = delegates.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    delegates.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Leaderboard...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'delegates-list-container'}\n            >\n              {\n                processedRows && processedRows.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'delegates-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (delegate,index) => {\n                          const delegateId = delegate.delegate;\n                          const handleClick = (e) => {\n                            return (delegateId ? this.props.goToSection(`leaderboard/${delegateId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={delegateId}\n                              delegate={delegate}\n                              key={`delegate-${index}`}\n                              handleClick={handleClick}\n                              fieldComponent={DelegateField}\n                              rowId={`delegate-col-${index}`}\n                              cardId={`delegate-card-${index}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'delegates-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no delegates\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default DelegatesList;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport StatsCard from '../StatsCard/StatsCard';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport DelegatesList from './DelegatesList/DelegatesList';\n\nclass Overview extends Component {\n\n  state = {\n    delegates:[],\n    proposals:[],\n    totalSupply:0,\n    dataLoaded:false,\n    votesDelegated:0,\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const [\n      delegates,\n      proposals,\n      totalSupply\n    ] = await Promise.all([\n      this.governanceUtil.getDelegates(),\n      this.governanceUtil.getProposals(),\n      this.governanceUtil.getTotalSupply()\n    ]);\n\n    const votesDelegated = delegates.reduce( (votesDelegated,d) => {\n      votesDelegated = votesDelegated+parseFloat(d.votes);\n      return votesDelegated;\n    },0);\n\n    const dataLoaded = true;\n\n    this.setState({\n      delegates,\n      proposals,\n      dataLoaded,\n      totalSupply,\n      votesDelegated\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Governance Overview\n        </Title>\n        {\n          !this.state.dataLoaded ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Data...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n                mb={[3,4]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Flex\n                  mb={[2,0]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Votes Delegated'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.votesDelegated.toFixed(2,1),2)}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Voting Addresses'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.delegates.length}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Proposals'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.proposals.length}\n                  />\n                </Flex>\n                <Flex\n                  pl={[0,1]}\n                  mb={[2,0]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'IDLE Circulating'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.totalSupply,0)}\n                  />\n                </Flex>\n              </Flex>\n              <Box\n                width={1}\n                mt={[4,5]}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Recent Proposals\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <ProposalsList\n                    {...this.props}\n                    rowsPerPage={5}\n                    filtersEnabled={false}\n                    proposals={this.state.proposals}\n                    cols={[\n                      {\n                        title: '#',\n                        props:{\n                          width:[0.1,0.05]\n                        },\n                        fields:[\n                          {\n                            name:'id',\n                            props:{\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'DATE',\n                        mobile:false,\n                        props:{\n                          width:[0.15,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'date'\n                          }\n                        ]\n                      },\n                      {\n                        title:'TITLE',\n                        props:{\n                          width:[0.75,0.60],\n                        },\n                        fields:[\n                          {\n                            name:'title'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTES',\n                        props:{\n                          width:[0.11,0.11],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        title:'STATUS',\n                        props:{\n                          width:[0.15,0.12],\n                          alignItems:['center','flex-start'],\n                          justifyContent:['center','flex-start']\n                        },\n                        parentProps:{\n                          justifyContent:['center','flex-start']\n                        },\n                        fields:[\n                          {\n                            name:'statusIcon',\n                            props:{\n                              mr:[0,2],\n                            },\n                          },\n                          {\n                            mobile:false,\n                            name:'status'\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Leaderboard\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <DelegatesList\n                    maxRows={100}\n                    {...this.props}\n                    rowsPerPage={5}\n                    delegates={this.state.delegates}\n                    cols={[\n                      {\n                        title: 'RANK',\n                        props:{\n                          width:[0.13,0.08]\n                        },\n                        fields:[\n                          {\n                            name:'rank'\n                          },\n                        ]\n                      },\n                      {\n                        title:'ADDRESS',\n                        props:{\n                          width:[0.60,0.50],\n                        },\n                        fields:[\n                          {\n                            mobile:false,\n                            name:'avatar',\n                            props:{\n                              mr:2\n                            }\n                          },\n                          {\n                            name:'delegate'\n                          }\n                        ]\n                      },\n                      {\n                        title:'VOTES',\n                        props:{\n                          width:[0.27,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTE WEIGHT',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'vote_weight',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'PROPOSALS VOTED',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'proposals',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Overview;\n","import React, { Component } from 'react';\nimport ConnectBox from '../../ConnectBox/ConnectBox';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Input, Button, Box, EthAddress } from \"rimble-ui\";\n\nclass DelegateVote extends Component {\n\n  state = {\n    newDelegate:'',\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  checkNewDelegate = () => {\n    return this.functionsUtil.checkAddress(this.state.newDelegate) && this.state.newDelegate.toLowerCase() !== this.props.currentDelegate.toLowerCase();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  setDelegate(address){\n    const addressOk = this.functionsUtil.checkAddress(address);\n\n    if (addressOk){\n\n      const callback = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventCategory: 'Delegate',\n          eventAction: address,\n          eventLabel: tx.status\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        if (typeof this.props.loadUserData === 'function' && tx.status === 'success'){\n          this.props.loadUserData();\n        }\n\n        this.setState({\n          processing: {\n            txHash:null,\n            loading:false\n          }\n        });\n      };\n\n      const callbackReceipt = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.governanceUtil.setDelegate(address,callback,callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n    return null;\n  }\n\n  changeDelegate = (e) => {\n    const newDelegate = e.target.value;\n    this.setState({\n      newDelegate\n    });\n  }\n\n  render() {\n\n    const isUndelegated = parseInt(this.props.currentDelegate) === 0;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n        !this.props.account ? (\n          <Flex\n            width={[1,0.36]}\n            alignItems={'stretch'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <ConnectBox\n              {...this.props}\n            />\n          </Flex>\n        ) : this.props.currentDelegate ? (\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:[1,0.5],\n              position:'relative',\n            }}\n            isInteractive={false}\n          >\n            {\n              this.props.canClose &&\n                <Box\n                  top={'0'}\n                  zIndex={1}\n                  right={'0'}\n                  position={'absolute'}\n                >\n                  <Button.Text\n                    icononly\n                    icon={'Close'}\n                    size={'2.5em'}\n                    mainColor={'statValue'}\n                    onClick={this.props.closeFunc}\n                  />\n                </Box>\n            }\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                /*\n                <Text\n                  mb={2}\n                  fontWeight={3}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  You have {this.functionsUtil.fixTokenDecimals(this.props.balance,18).toFixed(4)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} available.\n                </Text>\n                */\n              }\n              <Text\n                mb={1}\n                fontWeight={3}\n                color={'statValue'}\n                textAlign={'center'}\n              >\n                Current Delegate:\n              </Text>\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                justifyContent={isUndelegated ? 'center' : 'stretch'}\n              >\n                {\n                  isUndelegated ? (\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'dark-gray'}\n                      textAlign={'center'}\n                    >\n                      Undelegated\n                    </Text>\n                  ) : (\n                    <EthAddress\n                      width={1}\n                      address={this.props.account}\n                    />\n                  )\n                }\n              </Flex>\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Delegate estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing delegate request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mb={1}\n                      fontWeight={3}\n                      color={'statValue'}\n                      textAlign={'center'}\n                    >\n                      Set New Delegate:\n                    </Text>\n                    <Input\n                      min={0}\n                      type={'text'}\n                      width={'100%'}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      textAlign={'center'}\n                      boxShadow={'none !important'}\n                      value={this.state.newDelegate}\n                      placeholder={`Insert delegate address`}\n                      onChange={this.changeDelegate.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                    />\n                    <Flex\n                      mt={3}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          disabled:!this.checkNewDelegate()\n                        }}\n                        handleClick={ e => this.setDelegate(this.state.newDelegate) }\n                      >\n                        Delegate\n                      </RoundButton>\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          mainColor:this.props.theme.colors.redeem,\n                          disabled:this.props.currentDelegate.toLowerCase() === this.props.account.toLowerCase()\n                        }}\n                        handleClick={ e => this.setDelegate(this.props.account) }\n                      >\n                        Self-delegate\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        ) : (\n          <FlexLoader\n            flexProps={{\n              minHeight:'50vh',\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Loading Delegate...'}\n          />\n        )\n       } \n      </Flex>\n    );\n  }\n}\n\nexport default DelegateVote;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport DelegateVote from './DelegateVote/DelegateVote';\n\nclass Delegate extends Component {\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Breadcrumb\n            {...this.props}\n            text={'Governance'}\n            path={['Delegate votes']}\n            isMobile={this.props.isMobile}\n            handleClick={ e => this.props.goToSection('') }\n          />\n        </Flex>\n        <Box\n          width={1}\n        >\n          <Title\n            mb={[3,4]}\n          >\n            Delegate Votes\n          </Title>\n          <Flex\n            px={[0,3]}\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'delegate-container'}\n          >\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Delegate;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './NewProposal.module.scss';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Heading, Input, Form, Field, Textarea, Icon, Select, Link } from \"rimble-ui\";\n\nclass NewProposal extends Component {\n\n  state = {\n    title:'',\n    actions:[],\n    txError:false,\n    actionValue:0,\n    customABI:null,\n    description:'',\n    processing: {\n      txHash:null,\n      loading:false\n    },\n    validated:false,\n    newAction:false,\n    editAction:null,\n    actionInputs:null,\n    actionValid:false,\n    customAddress:null,\n    contractOptions:[],\n    proposalCreated:false,\n    functionsOptions:null,\n    selectedContract:null,\n    selectedFunction:null,\n    selectedSignature:null,\n    availableFunctions:null,\n    availableContracts:null\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const customABIChanged = prevState.customABI !== this.state.customABI;\n    // console.log('customABIChanged',customABIChanged,this.state.selectedContract);\n    if (customABIChanged && this.state.selectedContract === 'custom'){\n      this.loadFunctionsOptions();\n    }\n  }\n\n  loadData(){\n    const availableContracts = this.functionsUtil.getGlobalConfig(['governance','props','availableContracts']);\n    const contractOptions = [\n      {label:'Select a Contract',value:null}\n    ];\n\n    Object.keys(availableContracts).forEach( contractName => {\n      contractOptions.push({label:contractName,value:contractName});\n    });\n\n    contractOptions.push({label:'Custom',value:'custom'});\n\n    this.setState({\n      contractOptions,\n      availableContracts\n    });\n  }\n\n  handleInput(field,e,type=null){\n    let value = e.target.value;\n    this.setState({\n      [field]:value\n    });\n  }\n\n  validateForm(){\n    const validated = this.state.title.length>0 && this.state.description.length>0 && Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getContractABI(selectedContract=null){\n    selectedContract = selectedContract ? selectedContract : this.state.selectedContract;\n\n    let contractABI = null;\n    try {\n      contractABI = selectedContract === 'custom' ? JSON.parse(this.state.customABI) : this.state.availableContracts[selectedContract];\n    } catch (err) {\n      \n    }\n    return contractABI;\n  }\n\n  loadFunctionsOptions(selectedContract=null){\n    let actionInputs = null;\n    let functionsOptions = null;\n    let selectedFunction = null;\n    let selectedSignature = null;\n    let availableFunctions = null;\n\n    const contractABI = this.getContractABI(selectedContract);\n    if (contractABI){\n      availableFunctions = contractABI.filter( f => (!f.constant && f.type === 'function' && f.inputs.length>0 && ['nonpayable','payable'].includes(f.stateMutability)) )\n      functionsOptions = availableFunctions.map( (f,index) => ({\n                          label:f.name,\n                          value:index\n                        }));\n\n      // Add default option\n      functionsOptions.unshift({label:'Select a Function',value:null});\n    }\n\n    // console.log('loadFunctionsOptions',contractABI,functionsOptions);\n\n    this.setState({\n      actionInputs,\n      functionsOptions,\n      selectedFunction,\n      selectedSignature,\n      availableFunctions\n    });\n  }\n\n  changeContract(e){\n    const selectedContract = e.target.value;\n    const selectedContractChanged = selectedContract !== this.state.selectedContract;\n\n    if (selectedContractChanged){\n\n      // Reset function\n      let selectedFunction = null;\n      let selectedSignature = null;\n\n      const newState = {\n        selectedContract,\n        selectedFunction,\n        selectedSignature\n      };\n\n      // Load contract functions\n      if (selectedContract !== null){\n        const contractABI = this.getContractABI(selectedContract);\n        if (contractABI){\n          this.loadFunctionsOptions(selectedContract);\n        } else {\n          newState.functionsOptions = null;\n        }\n      }\n\n      // console.log('changeContract',newState);\n\n      this.setState(newState);\n    }\n  }\n\n  changeFunction(e){\n    const actionValue = 0;\n    let actionInputs = null;\n    const selectedSignature = e.target.value;\n    let selectedFunction = this.state.availableFunctions.find( (f,index) => (index === parseInt(selectedSignature)) );\n\n    if (selectedFunction){\n      actionInputs = new Array(selectedFunction.inputs.length);\n    } else {\n      selectedFunction  = null;\n    }\n\n    this.setState({\n      actionValue,\n      actionInputs,\n      selectedFunction,\n      selectedSignature\n    })\n  }\n  validateField(value,type){\n    if (value===null){\n      return false;\n    }\n    let valid = true;\n    if (type === 'json'){\n      valid = this.functionsUtil.isValidJSON(value);\n    } else {\n      const fieldPattern = this.getPatternByFieldType(type);\n      if (fieldPattern){\n        valid = value.toString().match(fieldPattern) !== null;\n      }\n    }\n    return valid;\n  }\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs || !this.state.selectedFunction){\n      return false;\n    }\n\n    const inputs = this.state.selectedFunction.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    // Check custom token\n    if (actionValid && this.state.selectedContract === 'custom'){\n      actionValid = actionValid && this.validateField(this.state.customABI,'json') && this.validateField(this.state.customAddress,'address');\n    }\n\n    // console.log('actionValid',this.state.selectedContract,this.validateField(this.state.customABI,'json'),this.state.customAddress,this.validateField(this.state.customAddress,'address'),actionValid);\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n        const selectedContract = null;\n        const selectedFunction = null;\n        const selectedSignature = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs,\n          selectedContract,\n          selectedFunction,\n          selectedSignature\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.selectedFunction.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.BNify(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.BNify(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.selectedFunction.inputs.length){\n      return false;\n    }\n\n    // Check contract\n    let target = null;\n    if (this.state.selectedContract !== 'custom'){\n      const contract = this.functionsUtil.getContractByName(this.state.selectedContract);\n      if (!contract){\n        return false;\n      } else {\n        target = contract._address;\n      }\n    } else {\n      const contractABIValid = this.functionsUtil.isValidJSON(this.state.customABI);\n      if (!contractABIValid){\n        return false;\n      } else {\n        target = this.state.customAddress;\n      }\n    }\n    \n    const customABI = this.state.customABI;\n    const customAddress = this.state.customAddress;\n    const inputTypes = this.state.selectedFunction.inputs.map( i => (i.type) );\n    const calldata = this.props.web3.eth.abi.encodeParameters(inputTypes,inputs);\n    const signature = this.state.selectedFunction.name+'('+inputTypes.join(',')+')';\n    const value = this.state.actionValue ? this.functionsUtil.BNify(this.state.actionValue).toFixed(0) : this.functionsUtil.BNify(0).toFixed(0);\n\n    const action = {\n      params:{\n        value,\n        target,\n        calldata,\n        signature\n      },\n      customABI,\n      customAddress,\n      inputs:this.state.actionInputs,\n      function:this.state.selectedFunction,\n      contract:this.state.selectedContract,\n      signature:this.state.selectedSignature\n    };\n\n    console.log(inputs,action);\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n    const customABI = action.customABI;\n    const actionValue = action.params.value;\n    const selectedContract = action.contract;\n    const selectedFunction = action.function;\n    const customAddress = action.customAddress;\n    const selectedSignature = action.signature;\n\n    this.setState({\n      customABI,\n      newAction,\n      editAction,\n      actionValue,\n      actionInputs,\n      customAddress,\n      selectedContract,\n      selectedFunction,\n      selectedSignature\n    });\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n    const selectedContract = null;\n    const selectedFunction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n      selectedContract,\n      selectedFunction\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventAction: 'propose',\n        eventCategory: 'Proposal',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n      \n      if (txSucceeded){\n        newState.actionValue = 0;\n        newState.customABI = null;\n        newState.newAction = null;\n        newState.editAction = null;\n        newState.actionInputs = null;\n        newState.customAddress = null;\n        newState.proposalCreated = true;\n        newState.selectedContract = null;\n        newState.functionsOptions = null;\n        newState.selectedFunction = null;\n        newState.selectedSignature = null;\n      } else {\n        newState.txError = true;\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const targets = [];\n    const values = [];\n    const signatures = [];\n    const calldatas = [];\n    const description = '#'+this.state.title+\"\\n\"+this.state.description;\n\n    Object.values(this.state.actions).forEach( action => {\n      values.push(action.params.value);\n      targets.push(action.params.target);\n      calldatas.push(action.params.calldata);\n      signatures.push(action.params.signature);\n    });\n\n    this.governanceUtil.propose(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n    // this.governanceUtil.proposeAndVoteFor(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  formValidated(){\n\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Create Proposal\n        </Title>\n        {\n        this.state.proposalCreated ? (\n          <DashboardCard\n            cardProps={{\n              py:3,\n              px:4,\n              width:[1,'auto']\n            }}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Icon\n                name={'Done'}\n                align={'center'}\n                size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n              <Text\n                mt={1}\n                fontWeight={3}\n                fontSize={[2,3]}\n                color={'dark-gray'}\n                textAlign={'center'}\n              >\n                The proposal has been successfully created\n              </Text>\n            </Flex>\n          </DashboardCard>\n        ) : \n        // Has balance\n        this.props.votes && this.props.votes.gte(this.props.proposalThreshold) ? (\n          <Form\n            width={1}\n            validated={this.state.validated}\n            onSubmit={this.handleSubmit.bind(this)}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={['center','space-between']}\n            >\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Proposal Description\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={\"Title\"}\n                    validated={this.state.validated}\n                  >\n                    <Input\n                      required\n                      width={1}\n                      type={'text'}\n                      className={styles.input}\n                      value={this.state.title}\n                      placeholder={'Title of your proposal'}\n                      onChange={ e => this.handleInput('title',e) }\n                    />\n                  </Field>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={'Description'}\n                    validated={this.state.validated}\n                  >\n                    <Textarea\n                      required\n                      rows={8}\n                      width={1}\n                      className={styles.input}\n                      value={this.state.description}\n                      placeholder={'Description of your proposal'}\n                      onChange={ e => this.handleInput('description',e) }\n                    />\n                  </Field>\n                </Flex>\n              </Flex>\n\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Actions\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          handleClick={ e => this.setEditAction(actionIndex) }\n                          title={ this.state.editAction === actionIndex ? 'Edit Action' : null }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Field\n                                  style={{\n                                    width:'100%',\n                                    display:'flex',\n                                    alignItems:'stretch',\n                                    flexDirection:'column'\n                                  }}\n                                  label={\"Select Contract\"}\n                                >\n                                  <Select\n                                    style={{\n                                      width:'100%'\n                                    }}\n                                    required={true}\n                                    value={this.state.selectedContract}\n                                    options={this.state.contractOptions}\n                                    onChange={this.changeContract.bind(this)}\n                                  />\n                                </Field>\n                                {\n                                  this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                  (\n                                    <Flex\n                                      width={1}\n                                      flexDirection={'column'}\n                                    >\n                                      <Field\n                                        width={1}\n                                        label={\"Contract Address\"}\n                                        validated={this.state.validated}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={'text'}\n                                          className={styles.input}\n                                          placeholder={'Custom contract address'}\n                                          pattern={this.getPatternByFieldType('address',true)}\n                                          onChange={ e => this.handleInput('customAddress',e,'address') }\n                                          value={this.state.customAddress ? this.state.customAddress : ''}\n                                        />\n                                      </Field>\n                                      <Field\n                                        width={1}\n                                        label={'Custom ABI'}\n                                        validated={this.state.validated}\n                                      >\n                                        <Textarea\n                                          required\n                                          rows={8}\n                                          width={1}\n                                          className={styles.input}\n                                          placeholder={'Insert the ABI of your contract'}\n                                          onChange={ e => this.handleInput('customABI',e,'json') }\n                                          value={this.state.customABI ? this.state.customABI : ''}\n                                        />\n                                      </Field>\n                                    </Flex>\n                                  )\n                                }\n                                {\n                                  this.state.selectedContract && this.state.functionsOptions &&\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      label={\"Select Function\"}\n                                    >\n                                      <Select\n                                        style={{\n                                          width:'100%'\n                                        }}\n                                        required={true}\n                                        options={this.state.functionsOptions}\n                                        onChange={this.changeFunction.bind(this)}\n                                        value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                      />\n                                    </Field>\n                                }\n                                {\n                                  this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                    <Field\n                                      label={`Value`}\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'number'}\n                                        className={styles.input}\n                                        placeholder={`Enter ETH value`}\n                                        onChange={ e => this.valueChange(e) }\n                                        value={this.state.actionValue ? this.state.actionValue : 0}\n                                      />\n                                    </Field>\n                                  )\n                                }\n                                {\n                                  this.state.selectedFunction &&\n                                    this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                      const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                      const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                      return (\n                                        <Field\n                                          style={{\n                                            width:'100%',\n                                            display:'flex',\n                                            alignItems:'stretch',\n                                            flexDirection:'column'\n                                          }}\n                                          key={`input_${inputIndex}`}\n                                          label={`${input.name} (${input.type})`}\n                                        >\n                                          <Input\n                                            required\n                                            width={1}\n                                            type={fieldType}\n                                            pattern={fieldPattern}\n                                            className={styles.input}\n                                            placeholder={`${input.name} (${input.type})`}\n                                            onChange={ e => this.inputChange(e,inputIndex) }\n                                            value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                          />\n                                        </Field>\n                                      )\n                                    })\n                                }\n                                {\n                                  this.state.selectedContract && this.state.selectedFunction &&\n                                    <Flex\n                                      mb={2}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <RoundButton\n                                        buttonProps={{\n                                          px:[0,4],\n                                          width:[1,'auto'],\n                                          type:'button',\n                                          disabled:!this.state.actionValid\n                                        }}\n                                        handleClick={this.addAction.bind(this)}\n                                      >\n                                        Save Action\n                                      </RoundButton>\n                                      <Link\n                                        mt={2}\n                                        color={'red'}\n                                        hoverColor={'red'}\n                                        onClick={this.deleteAction.bind(this)}\n                                      >\n                                        Delete Action\n                                      </Link>\n                                    </Flex>\n                                }\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {action.contract} - {action.params.signature}\n                                </Text>\n                                <Flex\n                                  p={['4px','7px']}\n                                  borderRadius={'50%'}\n                                  alignItems={'center'}\n                                  justifyContent={'center'}\n                                  backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                >\n                                  <Icon\n                                    name={'Edit'}\n                                    align={'center'}\n                                    color={'redeem'}\n                                    size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                  />\n                                </Flex>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.actions || Object.values(this.state.actions).length<this.props.proposalMaxOperations) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Action' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={\"Select Contract\"}\n                              >\n                                <Select\n                                  style={{\n                                    width:'100%'\n                                  }}\n                                  required={true}\n                                  options={this.state.contractOptions}\n                                  onChange={this.changeContract.bind(this)}\n                                />\n                              </Field>\n                              {\n                                this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                (\n                                  <Flex\n                                    width={1}\n                                    flexDirection={'column'}\n                                  >\n                                    <Field\n                                      width={1}\n                                      label={\"Contract Address\"}\n                                      validated={this.state.validated}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'text'}\n                                        className={styles.input}\n                                        placeholder={'Custom contract address'}\n                                        pattern={this.getPatternByFieldType('address',true)}\n                                        onChange={ e => this.handleInput('customAddress',e,'address') }\n                                        value={this.state.customAddress ? this.state.customAddress : ''}\n                                      />\n                                    </Field>\n                                    <Field\n                                      width={1}\n                                      label={'Custom ABI'}\n                                      validated={this.state.validated}\n                                    >\n                                      <Textarea\n                                        required\n                                        rows={8}\n                                        width={1}\n                                        className={styles.input}\n                                        placeholder={'Insert the ABI of your contract'}\n                                        onChange={ e => this.handleInput('customABI',e,'json') }\n                                        value={this.state.customABI ? this.state.customABI : ''}\n                                      />\n                                    </Field>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.selectedContract && this.state.functionsOptions && \n                                  <Field\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                    label={\"Select Function\"}\n                                  >\n                                    <Select\n                                      style={{\n                                        width:'100%'\n                                      }}\n                                      required={true}\n                                      options={this.state.functionsOptions}\n                                      onChange={this.changeFunction.bind(this)}\n                                      value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                    />\n                                  </Field>\n                              }\n                              {\n                                this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                  <Field\n                                    label={`Value`}\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                  >\n                                    <Input\n                                      required\n                                      width={1}\n                                      type={'number'}\n                                      className={styles.input}\n                                      placeholder={`Enter ETH value`}\n                                      onChange={ e => this.valueChange(e) }\n                                      value={this.state.actionValue ? this.state.actionValue : 0}\n                                    />\n                                  </Field>\n                                )\n                              }\n                              {\n                                this.state.selectedFunction &&\n                                  this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          className={styles.input}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                              }\n                              {\n                                this.state.selectedContract && this.state.selectedFunction &&\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                  >\n                                    <RoundButton\n                                      buttonProps={{\n                                        px:[0,4],\n                                        type:'button',\n                                        width:[1,'auto'],\n                                        disabled:!this.state.actionValid\n                                      }}\n                                      handleClick={this.addAction.bind(this)}\n                                    >\n                                      Add Action\n                                    </RoundButton>\n                                  </Flex>\n                              }\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Action\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n\n                </Flex>\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                // Sending transaction\n                this.state.processing && this.state.processing.loading ? (\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    waitText={`Proposal creation estimated in`}\n                    endMessage={`Finalizing proposal creation request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                  />\n                ) : (\n                  <RoundButton\n                    buttonProps={{\n                      type:'submit',\n                      width:[1,'15em'],\n                      disabled:!this.state.validated\n                    }}\n                  >\n                    Submit Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </Form>\n        ) : this.props.balance && this.props.balance.gte(this.props.proposalThreshold) ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Text\n              mb={3}\n              fontWeight={2}\n              fontSize={[2,3]}\n              color={'dark-gray'}\n              textAlign={'center'}\n            >\n              Please delegate your votes to yourself to create a new proposal.\n            </Text>\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        ) : (\n          <Text\n            fontWeight={2}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You need at least {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.proposalThreshold,18),0)} delegated votes to send a new proposal.\n          </Text>\n        )\n       }\n      </Flex>\n    );\n  }\n}\n\nexport default NewProposal;","import React, { Component } from 'react';\nimport { Flex, Text, Box, Link } from \"rimble-ui\";\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\n\nclass CastVote extends Component {\n\n  state = {\n    vote:null,\n    loaded:false,\n    userVote:null,\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    voteSucceed:false,\n    showDelegateBox:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const userVote = this.props.proposal.votes.find( v => (v.voter.toLowerCase() === this.props.account.toLowerCase()) );\n      this.setState({\n        userVote,\n        loaded:true\n      });\n    }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  toggleDelegateBox(showDelegateBox){\n    this.setState({\n      showDelegateBox\n    });\n  }\n\n  castVote(){\n\n    if (this.state.vote === null){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Proposal',\n        eventAction: 'CastVote',\n        eventLabel: this.state.vote\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      let userVote = null;\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        userVote = {\n          voter:this.props.account,\n          votes:this.props.votes.toString(),\n          support:this.state.vote === 'for',\n          proposalId:this.props.proposal.id,\n        };\n\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n\n      this.setState({\n        userVote,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const vote = this.state.vote === 'for';\n    const proposalId = this.props.proposal.id;\n\n    console.log(proposalId,vote);\n\n    this.governanceUtil.castVote(proposalId,vote,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  setVote = (vote) => {\n    this.setState({\n      vote\n    });\n  }\n\n  render() {\n    return this.state.userVote ? (\n\n        <Flex\n          p={3}\n          width={1}\n          mb={[2,3]}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={2}\n            fontWeight={4}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You have voted for the proposal #{this.props.proposal.id}:\n          </Text>\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:'auto'\n            }}\n            isInteractive={false}\n          >\n            <Flex\n              my={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <ProposalField\n                fieldInfo={{\n                  name:'statusIcon',\n                  state: this.state.userVote.support ? 'Executed' : 'Canceled',\n                  props:{\n                    mr:2\n                  }\n                }}\n              />\n              <Text\n                fontWeight={3}\n                fontSize={[2,3]}\n              >\n                {this.state.userVote.support ? 'For' : 'Against'}\n              </Text>\n            </Flex>\n          </DashboardCard>\n          <Text\n            fontSize={1}\n            fontWeight={500}\n            color={'statValue'}\n            textAlign={'center'}\n          >\n            voted with {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.state.userVote.votes,18).toFixed(0,1),0)} votes\n          </Text>\n        </Flex>\n      ) : this.props.proposal.state === 'Active' && (\n        <Box\n          p={3}\n          width={1}\n          mb={[2,3]}\n        >\n          {\n            // Data not loaded yet\n            !this.state.loaded ? (\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row',\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading data...'}\n              />\n            ) :\n            // No votes delegated\n            (!this.props.votes || this.props.votes.lte(0) || this.state.showDelegateBox) ? (\n              <DelegateVote\n                {...this.props}\n                canClose={this.state.showDelegateBox}\n                closeFunc={ e => this.toggleDelegateBox(false) }\n              />\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={2}\n                  fontWeight={4}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  Cast your vote for the proposal #{this.props.proposal.id}:\n                </Text>\n                {\n                  this.state.processing && this.state.processing.loading ? (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Vote estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing vote request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Flex\n                        mb={2}\n                        width={[1,0.4]}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('for');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'for' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Executed',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              For\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('against');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'against' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Canceled',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              Against\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Text\n                        mb={0}\n                        fontSize={1}\n                        fontWeight={500}\n                        color={'statValue'}\n                        textAlign={'center'}\n                      >\n                        You have {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.votes,18).toFixed(0,1),0)} votes delegated\n                      </Text>\n                      {\n                        this.props.balance && this.props.balance.gt(0) &&\n                          <Link\n                            mt={0}\n                            mainColor={'primary'}\n                            hoverColor={'primary'}\n                            onClick={ e => this.toggleDelegateBox(true) }\n                          >\n                            change delegate\n                          </Link>\n                      }\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,0.2],\n                          disabled:this.state.vote === null\n                        }}\n                        handleClick={this.castVote.bind(this)}\n                      >\n                        Vote\n                      </RoundButton>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Box>\n      );\n  }\n}\n\nexport default CastVote;","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport CastVote from '../CastVote/CastVote';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport { Box, Flex, Blockie, Text, Link } from \"rimble-ui\";\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\n\nclass ProposalDetails extends Component {\n\n  state = {\n    showActionParams:null,\n    processing:{\n      action:null,\n      txHash:null,\n      loading:false\n    },\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  toggleShowParams(showActionParams){\n    // Reset show action params\n    if (this.state.showActionParams === showActionParams){\n      showActionParams = null;\n    }\n    this.setState({\n      showActionParams\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        action:null,\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async queueProposal(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'queue',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.queueProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Queue'\n      }\n    }));\n  }\n\n  async executeProposal(){\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'execute',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.executeProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Execute'\n      }\n    }));\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    window.loadData = this.props.loadData;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    let proposal = this.props.proposal;\n    const lastState = Object.values(proposal.states).pop();\n    const hasVotes = proposal.votes && proposal.votes.length>0;\n    const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n    const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n    const totalVotes = forVotes.plus(againstVotes);\n    const forVotesPerc = forVotes.div(totalVotes).times(100).toFixed(2);\n    const againstVotesPerc = againstVotes.div(totalVotes).times(100).toFixed(2);\n    const forVotesAddrs = proposal.votes.filter( v => (v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n    const againstVotesAddrs = proposal.votes.filter( v => (!v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n\n    const canQueue = proposal.state.toLowerCase() === 'succeeded'; \n    const canExecute = proposal.state.toLowerCase() === 'queued';\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          {proposal.title}\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              labelTooltip={null}\n              title={'Proposal ID'}\n              value={`#${proposal.id}`}\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Created on ${this.functionsUtil.strToMoment(proposal.states[0].start_time*1000).format('DD MMM, YYYY')}`}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['110px','143px']}\n              labelTooltip={ null }\n              title={'Proposer'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: proposal.address,\n                  }}\n                />\n                <ShortHash\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[3,4]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                  hash={proposal.proposer}\n                />\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              title={'Status'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Updated on ${this.functionsUtil.strToMoment(lastState.start_time*1000).format('DD MMM, YYYY')}`}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <ProposalField\n                  {...this.props}\n                  proposal={proposal}\n                  fieldInfo={{\n                    name:'statusIcon',\n                    props:{\n                      size: this.props.isMobile ? '1.7em' : '2em'\n                    }\n                  }}\n                />\n                <Text\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[4,5]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                >\n                  {proposal.state}\n                </Text>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Total Votes'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}\n            />\n          </Flex>\n        </Flex>\n        <CastVote\n          {...this.props}\n          callback={this.props.loadData}\n        />\n        <Flex\n          width={1}\n          mb={[2,3]}\n          id={'details-container'}\n          justifyContent={'space-between'}\n          flexDirection={['column','row']}\n        >\n          <DashboardCard\n            cardProps={{\n              p:3,\n              mb:[2,0],\n              mr:[0,1],\n              width:[1,1/2]\n            }}\n            title={'Actions'}\n            titleParentProps={{\n              mt:0,\n              ml:0\n            }}\n          >\n            <Flex\n              pt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.actions.signatures.map( (action,actionIndex) => {\n                  const data = proposal.actions.calldatas[actionIndex];\n                  // const targetAddr = proposal.actions.targets[actionIndex];\n\n                  let decodedParams = null;\n                  let attrs = action.match(/\\(([a-z0-9,]+(\\[\\])?)\\)/i);\n                  attrs = attrs ? attrs[1].split(',') : null;\n\n                  if (attrs){\n                    decodedParams = this.props.web3.eth.abi.decodeParameters(attrs,data);\n                    if (decodedParams){\n                      decodedParams = Object.values(decodedParams).splice(0,attrs.length);\n                    }\n                  }\n\n                  return (\n                    <Flex\n                      py={1}\n                      width={1}\n                      flexDirection={'column'}\n                      alignItems={'flex-start'}\n                      key={`action_${actionIndex}`}\n                      justifyContent={'flex-start'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        mb={1}\n                        width={1}\n                        flexDirection={['column','row']}\n                        alignItems={['flex-start','center']}\n                      >\n                        <Flex\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'dark-gray'}\n                          >\n                            {parseInt(actionIndex)+1}\n                          </Text>\n                          <Text\n                            ml={2}\n                            fontSize={1}\n                            fontWeight={2}\n                            color={'dark-gray'}\n                          >\n                            {action}\n                          </Text>\n                        </Flex>\n                        {\n                          decodedParams &&\n                            <Link\n                              mt={[1,0]}\n                              ml={[0,1]}\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.toggleShowParams(actionIndex) }\n                            >\n                              {\n                                this.state.showActionParams === actionIndex ? '(hide params)' : '(show params)'\n                              }\n                            </Link>\n                        }\n                      </Flex>\n                      {\n                        decodedParams && this.state.showActionParams === actionIndex &&\n                          <Flex\n                            pl={[0,3]}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            {\n                              decodedParams.map( (param,paramIndex) => (\n                                <Text\n                                  fontSize={0}\n                                  color={'statValue'}\n                                  key={`param_${paramIndex}`}\n                                >\n                                  {param}\n                                </Text>\n                              ))\n                            }\n                          </Flex>\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n          </DashboardCard>\n          <DashboardCard\n            cardProps={{\n              p:3,\n              ml:[0,1],\n              width:[1,1/2]\n            }}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Proposal History\n              </Text>\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Date\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.states.map( (stateInfo,stateIndex) => {\n                  return (\n                    <Flex\n                      py={2}\n                      width={1}\n                      alignItems={'center'}\n                      key={`state_${stateIndex}`}\n                      justifyContent={'space-between'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <ProposalField\n                          {...this.props}\n                          proposal={proposal}\n                          fieldInfo={{\n                            name:'statusIcon',\n                            state:stateInfo.state,\n                            props:{\n                              size: this.props.isMobile ? '1.3em' : '1.5em'\n                            }\n                          }}\n                        />\n                        <Link\n                          ml={2}\n                          fontSize={1}\n                          fontWeight={2}\n                          target={'_blank'}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                          hoverColor={'primary'}\n                          rel={'nofollow noopener noreferrer'}\n                          href={this.functionsUtil.getEtherscanTransactionUrl(stateInfo.trx_hash)}\n                        >\n                          {stateInfo.state}\n                        </Link>\n                      </Flex>\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        textAlign={'left'}\n                        color={'dark-gray'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.strToMoment(stateInfo.start_time*1000).format('DD MMM, YYYY')}\n                      </Text>\n                    </Flex>\n                  );\n                })\n              }\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      hash={this.state.processing.txHash}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.state.processing.action} estimated in`}\n                      endMessage={`Finalizing ${this.state.processing.action.toLowerCase()} request...`}\n                    />\n                  </Flex>\n                ) : canQueue ? (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.queueProposal.bind(this)}\n                  >\n                    Queue Proposal\n                  </RoundButton>\n                ) : canExecute && (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.executeProposal.bind(this)}\n                  >\n                    Execute Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        </Flex>\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mb:[2,3]\n          }}\n          title={'Details'}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n        >\n          <Text\n            mt={2}\n            fontSize={[1,2]}\n            style={{\n              wordBreak:'break-word'\n            }}\n            dangerouslySetInnerHTML={{\n              __html:proposal.description.replace(/\\n/g,\"<br />\")\n            }}\n          >\n          </Text>\n        </DashboardCard>\n        {\n          hasVotes && \n            <DashboardCard\n              cardProps={{\n                p:3,\n                mb:[2,3]\n              }}\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    For ({forVotesPerc}%)\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against ({againstVotesPerc}%)\n                  </Text>\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-cursor-container'}\n                >\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-end'}\n                    borderRadius={'20px 0 0 20px'}\n                    style={{background:'rgba(0, 211, 149, 0.1)'}}\n                  >\n                    <Flex\n                      height={'100%'}\n                      width={`${forVotesPerc}%`}\n                      borderRadius={'20px 0 0 20px'}\n                      style={{background:'rgba(0, 211, 149, 1)'}}\n                    >\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-start'}\n                    borderRadius={'0 20px 20px 0'}\n                    style={{background:'rgba(211, 0, 0, 0.1)'}}\n                  >\n                    <Flex\n                      height={'100%'}\n                      width={`${againstVotesPerc}%`}\n                      borderRadius={'0 20px 20px 0'}\n                      style={{background:'rgba(211, 0, 0, 1)'}}\n                    >\n                    </Flex>\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-number-container'}\n                >\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-end'}\n                  >\n                    <Flex\n                      height={'100%'}\n                      width={`${forVotesPerc}%`}\n                      justifyContent={'flex-start'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'left'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(forVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-start'}\n                  >\n                    <Flex\n                      height={'100%'}\n                      minWidth={'10%'}\n                      width={`${againstVotesPerc}%`}\n                      justifyContent={parseFloat(againstVotesPerc)<=10 ? 'flex-start' : 'flex-end'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'right'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(againstVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </DashboardCard>\n        }\n        {\n          hasVotes && \n            <Flex\n              mb={4}\n              width={1}\n              id={'votes-addresses-container'}\n              justifyContent={'space-between'}\n              flexDirection={['column','row']}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mb:[2,0],\n                  mr:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'for-votes-addresses-container'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <Flex\n                    mb={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      For Addresses ({forVotesAddrs.length})\n                    </Text>\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      Votes\n                    </Text>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    style={{\n                      overflow:'scroll'\n                    }}\n                    maxHeight={'400px'}\n                    flexDirection={'column'}\n                  >\n                    {\n                      forVotesAddrs.map( (voteInfo,voteIndex) => {\n                        const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                        return (\n                          <Flex\n                            py={2}\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`vote_for_${voteIndex}`}\n                            justifyContent={'space-between'}\n                            borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Blockie\n                                opts={{\n                                  size: 7,\n                                  color: \"#dfe\",\n                                  bgcolor: \"#a71\",\n                                  spotcolor: \"#000\",\n                                  seed: voteInfo.voter,\n                                }}\n                              />\n                              <Link\n                                ml={2}\n                                fontSize={1}\n                                fontWeight={2}\n                                target={'_blank'}\n                                textAlign={'left'}\n                                color={'statValue'}\n                                lineHeight={'initial'}\n                                hoverColor={'primary'}\n                                rel={'nofollow noopener noreferrer'}\n                                href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                              >\n                                {\n                                  this.props.isMobile ? (\n                                    <ShortHash\n                                      fontSize={1}\n                                      fontWeight={2}\n                                      textAlign={'left'}\n                                      color={'statValue'}\n                                      hash={voteInfo.voter}\n                                      lineHeight={'initial'}\n                                    />\n                                  ) : voteInfo.voter\n                                }\n                              </Link>\n                            </Flex>\n                            <Text\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                            >\n                              {votes}\n                            </Text>\n                          </Flex>\n                        )\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  ml:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'against-votes-addresses-container'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against Addresses ({againstVotesAddrs.length})\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Votes\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  style={{\n                    overflow:'scroll'\n                  }}\n                  maxHeight={'400px'}\n                  flexDirection={'column'}\n                >\n                  {\n                    againstVotesAddrs.map( (voteInfo,voteIndex) => {\n                      const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                      return (\n                        <Flex\n                          py={2}\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          key={`vote_against_${voteIndex}`}\n                          borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'flex-start'}\n                          >\n                            <Blockie\n                              opts={{\n                                size: 7,\n                                color: \"#dfe\",\n                                bgcolor: \"#a71\",\n                                spotcolor: \"#000\",\n                                seed: voteInfo.voter,\n                              }}\n                            />\n                            <Link\n                              ml={2}\n                              fontSize={1}\n                              fontWeight={2}\n                              target={'_blank'}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              rel={'nofollow noopener noreferrer'}\n                              href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                            >\n                              {voteInfo.voter}\n                            </Link>\n                          </Flex>\n                          <Text\n                            fontSize={1}\n                            fontWeight={2}\n                            textAlign={'left'}\n                            color={'statValue'}\n                            lineHeight={'initial'}\n                          >\n                            {votes}\n                          </Text>\n                        </Flex>\n                      )\n                    })\n                  }\n                </Flex>\n              </DashboardCard>\n            </Flex>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default ProposalDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport NewProposal from './NewProposal/NewProposal';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport ProposalDetails from './ProposalDetails/ProposalDetails';\n\nclass Proposals extends Component {\n  state = {\n    proposals:null,\n    addProposal:false,\n    selectedProposal:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.contractsInitialized){\n      return false;\n    }\n\n    const proposals = await this.governanceUtil.getProposals();\n\n    const { match: { params } } = this.props;\n      \n    // Look if proposalId exists\n    let addProposal = false;\n    let selectedProposal = null;\n    if (params.item_id && parseInt(params.item_id)){\n      const proposalId = parseInt(params.item_id);\n      const foundProposal = proposals.find( p => parseInt(p.id) === proposalId );\n      // Set selected proposal\n      if (foundProposal){\n        selectedProposal = foundProposal;\n      }\n    } else if (params.item_id && params.item_id.toLowerCase() === 'new'){\n      addProposal = true;\n    }\n\n    this.setState({\n      proposals,\n      addProposal,\n      selectedProposal\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={(this.state.selectedProposal || this.state.addProposal) ? 'space-between' : 'flex-end'}\n        >\n          {\n            this.state.selectedProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                  path={['Proposals',this.state.selectedProposal.title]}\n                />\n              </Flex>\n            ) : this.state.addProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  path={['Proposals','Add proposal']}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            ) : (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.state.addProposal && \n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <CardIconButton\n                  icon={'Add'}\n                  {...this.props}\n                  text={'New Proposal'}\n                  handleClick={ e => this.props.goToSection(`proposals/new`) }\n                />\n              </Flex>\n          }\n        </Flex>\n        {\n          this.state.selectedProposal ? (\n            <Box\n              width={1}\n            >\n              <ProposalDetails\n                {...this.props}\n                loadData={this.loadData.bind(this)}\n                proposal={this.state.selectedProposal}\n              />\n            </Box>\n          ) : this.state.addProposal ? (\n            <Box\n              width={1}\n            >\n              <NewProposal\n                {...this.props}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Title\n                mb={[3,4]}\n              >\n                Governance Proposals\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'proposals'}\n                flexDirection={'column'}\n              >\n                <ProposalsList\n                  {...this.props}\n                  proposals={this.state.proposals}\n                  cols={[\n                    {\n                      title: '#',\n                      props:{\n                        width:[0.1,0.05]\n                      },\n                      fields:[\n                        {\n                          name:'id',\n                          props:{\n                          }\n                        },\n                      ]\n                    },\n                    {\n                      title:'DATE',\n                      mobile:false,\n                      props:{\n                        width:[0.15,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'date'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TITLE',\n                      props:{\n                        width:[0.75,0.60],\n                      },\n                      fields:[\n                        {\n                          name:'title'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTES',\n                      props:{\n                        width:[0.11,0.11],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      title:'STATUS',\n                      props:{\n                        width:[0.15,0.12],\n                        alignItems:['center','flex-start'],\n                        justifyContent:['center','flex-start']\n                      },\n                      parentProps:{\n                        justifyContent:['center','flex-start']\n                      },\n                      fields:[\n                        {\n                          name:'statusIcon',\n                          props:{\n                            mr:[0,2],\n                          },\n                        },\n                        {\n                          mobile:false,\n                          name:'status'\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Proposals;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport ExtLink from '../../ExtLink/ExtLink';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport { Box, Flex, Blockie, Icon } from \"rimble-ui\";\nimport ProposalsList from '../ProposalsList/ProposalsList';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\n\nclass DelegateDetails extends Component {\n\n  state = {\n    proposals:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadProposals();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const delegateChanged = JSON.stringify(prevProps.delegate) !== JSON.stringify(this.props.delegate);\n    if (delegateChanged){\n      this.loadProposals();\n    }\n  }\n\n  async loadProposals(){\n    const delegate = this.props.delegate;\n    const proposals = await this.governanceUtil.getProposals(delegate.delegate);\n\n    this.setState({\n      proposals\n    });\n  }\n\n  render() {\n\n    const delegate = this.props.delegate;\n\n    // rank\n    // votes\n    // delegate\n    // proposals\n    // vote_weight\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Delegate Details\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Rank'}\n              value={delegate.rank}\n              labelTooltip={ null }\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['100px','143px']}\n              labelTooltip={ null }\n              title={'Address'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: delegate.delegate,\n                  }}\n                />\n                <ExtLink\n                  href={this.functionsUtil.getEtherscanAddressUrl(delegate.delegate)}\n                >\n                  <Flex\n                    flexDirection={'row'}\n                    alignItems={'flex-end'}\n                    justifyContent={'flex-start'}\n                  >\n                    <ShortHash\n                      ml={2}\n                      lineHeight={1}\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                      color={'statValue'}\n                      hash={delegate.delegate}\n                    />\n                    <Icon\n                      ml={1}\n                      size={'1.2em'}\n                      name={'OpenInNew'}\n                      color={'statValue'}\n                    />\n                  </Flex>\n                </ExtLink>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Votes'}\n              labelTooltip={null}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(this.functionsUtil.BNify(delegate.votes).toFixed(2,1),2)}\n            />\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              labelTooltip={ null }\n              title={'Proposals Voted'}\n              value={delegate.proposals}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n        </Flex>\n        <Box\n          width={1}\n          mt={[4,5]}\n        >\n          <Title\n            mb={[2,3]}\n          >\n            Voting History\n          </Title>\n          <Flex\n            mb={[3,4]}\n            width={1}\n            id={'transactions'}\n            flexDirection={'column'}\n          >\n            <ProposalsList\n              {...this.props}\n              rowsPerPage={5}\n              delegate={delegate}\n              filtersEnabled={false}\n              proposals={this.state.proposals}\n              cols={[\n                {\n                  title: '#',\n                  props:{\n                    width:[0.08,0.05]\n                  },\n                  fields:[\n                    {\n                      name:'id',\n                      props:{\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  mobile:false,\n                  props:{\n                    width:0.12,\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'TITLE',\n                  props:{\n                    width:[0.66,0.57],\n                  },\n                  fields:[\n                    {\n                      name:'title'\n                    }\n                  ]\n                },\n                {\n                  title:'VOTE',\n                  props:{\n                    width:[0.14,0.14],\n                    textAlign:'center'\n                  },\n                  fields:[\n                    {\n                      name:'support',\n                      parentProps:{\n                        alignItems:'center'\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.12,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  parentProps:{\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default DelegateDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DelegatesList from './DelegatesList/DelegatesList';\nimport DelegateDetails from './DelegateDetails/DelegateDetails';\n\nclass Leaderboard extends Component {\n  state = {\n    maxRows:100,\n    delegates:null,\n    selectedDelegate:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const delegates = await this.governanceUtil.getDelegates();\n\n    const { match: { params } } = this.props;\n\n    // Select delegate\n    let selectedDelegate = null;\n    if (params.item_id){\n      const delegateId = params.item_id.toLowerCase();\n      const foundProposal = delegates.find( d => d.delegate.toLowerCase() === delegateId );\n      if (foundProposal){\n        selectedDelegate = foundProposal;\n      }\n    }\n\n    this.setState({\n      delegates,\n      selectedDelegate\n    });\n  }\n\n  render() {\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          this.state.selectedDelegate ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={1}\n                >\n                  <Breadcrumb\n                    {...this.props}\n                    text={'Governance'}\n                    pathLink={['leaderboard']}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => this.props.goToSection('') }\n                    path={['Leaderboard',this.state.selectedDelegate.delegate]}\n                  />\n                </Flex>\n              </Flex>\n              <DelegateDetails\n                {...this.props}\n                delegate={this.state.selectedDelegate}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Leaderboard']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('') }\n                />\n              </Flex>\n              <Title\n                mb={[3,4]}\n              >\n                Governance Leaderboard\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'leaderboard'}\n                flexDirection={'column'}\n              >\n                <DelegatesList\n                  {...this.props}\n                  delegates={this.state.delegates}\n                  cols={[\n                    {\n                      title: 'RANK',\n                      props:{\n                        width:[0.13,0.08]\n                      },\n                      fields:[\n                        {\n                          name:'rank'\n                        },\n                      ]\n                    },\n                    {\n                      title:'ADDRESS',\n                      props:{\n                        width:[0.60,0.50],\n                      },\n                      fields:[\n                        {\n                          mobile:false,\n                          name:'avatar',\n                          props:{\n                            mr:2\n                          }\n                        },\n                        {\n                          name:'delegate'\n                        }\n                      ]\n                    },\n                    {\n                      title:'VOTES',\n                      props:{\n                        width:[0.27,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTE WEIGHT',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'vote_weight',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'PROPOSALS VOTED',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'proposals',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Leaderboard;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Overview from './Overview';\nimport Delegate from './Delegate';\nimport Proposals from './Proposals';\nimport Leaderboard from './Leaderboard';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    votes:null,\n    balance:null,\n    baseRoute:null,\n    modalTitle:null,\n    activeModal:null,\n    currentRoute:null,\n    modalContent:null,\n    pageComponent:null,\n    currentSection:null,\n    selectedSection:null,\n    currentDelegate:null,\n    proposalThreshold:null,\n    selectedSubsection:null,\n    proposalMaxOperations:null\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    window.governanceUtil = this.governanceUtil;\n    window.functionsUtil = this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async loadMenu() {\n    const menu = [];\n    const baseRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:true,\n        route:baseRoute,\n        icon:'Dashboard',\n        label:'Overview',\n        color:'dark-gray',\n        component:Overview,\n        bgColor:this.props.theme.colors.primary,\n      }\n    );\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Proposals',\n        bgColor:'#00acff',\n        color:'dark-gray',\n        icon:'LightbulbOutline',\n        component:Proposals,\n        route:`${baseRoute}/proposals`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        bgColor:'#ff0000',\n        color:'dark-gray',\n        label:'Leaderboard',\n        component:Leaderboard,\n        icon:'FormatListNumbered',\n        route:`${baseRoute}/leaderboard`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Delegate',\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        component:Delegate,\n        icon:'CompareArrows',\n        route:`${baseRoute}/delegate`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        icon:'Forum',\n        mobile:false,\n        label:'Forum',\n        selected:false,\n        component:null,\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        isExternalLink:true,\n        route:`https://gov.idle.finance`,\n      }\n    );\n\n    await this.setState({\n      menu,\n      baseRoute\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.state.baseRoute;\n    const currentRoute = window.location.hash.substr(1);\n\n    let pageComponent = null;\n    let currentSection = null;\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach( m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n\n    // const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    // if (!governanceEnabled){\n    //   this.goToSection('/',false);\n    // }\n\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    /*\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n    */\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  goToSection(section,isGovernance=true){\n\n    // Remove dashboard route\n    if (isGovernance){\n      section = section.replace(this.state.baseRoute+'/','');\n    }\n\n    const newRoute = (isGovernance ? this.state.baseRoute+(section.length>0 ? '/'+section : '') : section).replace(/[/]+$/,'');\n    window.location.hash = newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventLabel: newRoute,\n      eventAction: 'goToSection'\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const [\n        {\n          proposalThreshold, proposalMaxOperations\n        },\n        votes,\n        balance,\n        currentDelegate\n      ] = await Promise.all([\n        this.governanceUtil.getProposalParams(),\n        this.governanceUtil.getCurrentVotes(this.props.account),\n        this.governanceUtil.getTokensBalance(this.props.account),\n        this.governanceUtil.getCurrentDelegate(this.props.account)\n      ]);\n\n      this.setState({\n        votes,\n        balance,\n        currentDelegate,\n        proposalThreshold,\n        proposalMaxOperations\n      });\n    }\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      votes={this.state.votes}\n                      balance={this.state.balance}\n                      urlParams={this.state.params}\n                      loadUserData={this.loadData.bind(this)}\n                      goToSection={this.goToSection.bind(this)}\n                      currentDelegate={this.state.currentDelegate}\n                      selectedSection={this.state.selectedSection}\n                      proposalThreshold={this.state.proposalThreshold}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      proposalMaxOperations={this.state.proposalMaxOperations}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","import ERC20 from '../abis/tokens/DAI.js';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            token:'cWBTC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:true,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            token:'aWBTC',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\nimport { ToastMessage } from \"rimble-ui\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = 'light';\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport React, { Component } from \"react\";\nimport Landing from \"../Landing/Landing\";\nimport { Web3Consumer } from 'web3-react';\nimport Dashboard from '../Dashboard/Dashboard';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport Governance from '../Governance/Governance';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    const params = props ? props.match.params : null;\n    const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n  }\n\n  clearCachedData = () => {\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null) => {\n    if (!this.state.cachedData[key.toLowerCase()] || JSON.stringify(this.state.cachedData[key.toLowerCase()]) !== JSON.stringify(data)){\n      const expirationDate = TTL ? parseInt(new Date().getTime()/1000)+(TTL) : null;\n      // console.log('setCachedData',key);\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key.toLowerCase()]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n      return true;\n    }\n    return false;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadAvailableTokens();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    this.functionsUtil.clearStoredData();\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider theme={theme}>\n          <Web3Provider\n            connectors={connectors}\n            libraryName={'web3.js'}\n            web3Api={Web3}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => <Dashboard\n                                              {...props}\n                                              web3={web3}\n                                              theme={theme}\n                                              modals={modals}\n                                              network={network}\n                                              context={context}\n                                              account={account}\n                                              isDashboard={true}\n                                              initWeb3={initWeb3}\n                                              biconomy={biconomy}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initAccount={initAccount}\n                                              initSimpleID={initSimpleID}\n                                              initContract={initContract}\n                                              transactions={transactions}\n                                              buyToken={this.state.buyToken}\n                                              logout={this.logout.bind(this)}\n                                              accountBalance={accountBalance}\n                                              validateAccount={validateAccount}\n                                              connecting={this.state.connecting}\n                                              cachedData={this.state.cachedData}\n                                              setToken={this.setToken.bind(this)}\n                                              accountValidated={accountValidated}\n                                              getTokenDecimals={getTokenDecimals}\n                                              rejectValidation={rejectValidation}\n                                              tokenConfig={this.state.tokenConfig}\n                                              getAccountBalance={getAccountBalance}\n                                              accountBalanceLow={accountBalanceLow}\n                                              accountInizialized={accountInizialized}\n                                              selectedToken={this.state.selectedToken}\n                                              connectorName={this.state.connectorName}\n                                              setStrategy={this.setStrategy.bind(this)}\n                                              userRejectedConnect={userRejectedConnect}\n                                              accountBalanceToken={accountBalanceToken}\n                                              initializeContracts={initializeContracts}\n                                              walletProvider={this.state.walletProvider}\n                                              buyModalOpened={this.state.buyModalOpened}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              rejectAccountConnect={rejectAccountConnect}\n                                              handleMenuClick={this.selectTab.bind(this)}\n                                              setConnector={this.setConnector.bind(this)}\n                                              availableTokens={this.state.availableTokens}\n                                              closeBuyModal={this.closeBuyModal.bind(this)}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              selectedStrategy={this.state.selectedStrategy}\n                                              userRejectedValidation={userRejectedValidation}\n                                              setStrategyToken={this.setStrategyToken.bind(this)}\n                                              accountValidationPending={accountValidationPending}\n                                              availableStrategies={this.state.availableStrategies}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              contractMethodSendWrapper={contractMethodSendWrapper}\n                                              setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            />\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) => <Governance\n                                                  {...props}\n                                                  web3={web3}\n                                                  theme={theme}\n                                                  modals={modals}\n                                                  network={network}\n                                                  context={context}\n                                                  account={account}\n                                                  initWeb3={initWeb3}\n                                                  biconomy={biconomy}\n                                                  isMobile={isMobile}\n                                                  simpleID={simpleID}\n                                                  isGovernance={true}\n                                                  contracts={contracts}\n                                                  initAccount={initAccount}\n                                                  initSimpleID={initSimpleID}\n                                                  initContract={initContract}\n                                                  transactions={transactions}\n                                                  buyToken={this.state.buyToken}\n                                                  logout={this.logout.bind(this)}\n                                                  accountBalance={accountBalance}\n                                                  validateAccount={validateAccount}\n                                                  connecting={this.state.connecting}\n                                                  cachedData={this.state.cachedData}\n                                                  setToken={this.setToken.bind(this)}\n                                                  accountValidated={accountValidated}\n                                                  getTokenDecimals={getTokenDecimals}\n                                                  rejectValidation={rejectValidation}\n                                                  tokenConfig={this.state.tokenConfig}\n                                                  getAccountBalance={getAccountBalance}\n                                                  accountBalanceLow={accountBalanceLow}\n                                                  accountInizialized={accountInizialized}\n                                                  selectedToken={this.state.selectedToken}\n                                                  connectorName={this.state.connectorName}\n                                                  setStrategy={this.setStrategy.bind(this)}\n                                                  userRejectedConnect={userRejectedConnect}\n                                                  accountBalanceToken={accountBalanceToken}\n                                                  initializeContracts={initializeContracts}\n                                                  walletProvider={this.state.walletProvider}\n                                                  buyModalOpened={this.state.buyModalOpened}\n                                                  contractsInitialized={contractsInitialized}\n                                                  openBuyModal={this.openBuyModal.bind(this)}\n                                                  rejectAccountConnect={rejectAccountConnect}\n                                                  handleMenuClick={this.selectTab.bind(this)}\n                                                  setConnector={this.setConnector.bind(this)}\n                                                  availableTokens={this.state.availableTokens}\n                                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                                  setCachedData={this.setCachedData.bind(this)}\n                                                  selectedStrategy={this.state.selectedStrategy}\n                                                  userRejectedValidation={userRejectedValidation}\n                                                  setStrategyToken={this.setStrategyToken.bind(this)}\n                                                  accountValidationPending={accountValidationPending}\n                                                  availableStrategies={this.state.availableStrategies}\n                                                  connectAndValidateAccount={connectAndValidateAccount}\n                                                  contractMethodSendWrapper={contractMethodSendWrapper}\n                                                  setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                                />\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <>\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          theme={theme}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          availableStrategies={this.state.availableStrategies}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil transactions={transactions} />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1fxux\",\"link\":\"Footer_link__2ZyxW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__3LsWh\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__3buhf\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__1ZEqc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bulletCard\":\"HowItWorks_bulletCard__3FM3y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__ShSGs\",\"genericSelector\":\"GenericSelector_genericSelector__36y-l\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__16UDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainViewport\":\"Landing_mainViewport__6-FCa\",\"headerContainer\":\"Landing_headerContainer__2su89\",\"bgContainer\":\"Landing_bgContainer__srd1P\",\"button\":\"Landing_button__37B6t\",\"graySection\":\"Landing_graySection__1Qz0S\",\"whiteSection\":\"Landing_whiteSection__1mX5m\",\"howItWork\":\"Landing_howItWork__2sVu4\",\"skewBg\":\"Landing_skewBg__d4FEJ\",\"bgHeart\":\"Landing_bgHeart__1Ylz-\",\"platformLogo\":\"Landing_platformLogo__3kL_M\",\"bulletCard\":\"Landing_bulletCard__z5toL\",\"bulletCardFirst\":\"Landing_bulletCardFirst__1kr7D\",\"bulletCardActive\":\"Landing_bulletCardActive__1-c54\",\"bulletPoint\":\"Landing_bulletPoint__sXkeK\",\"bulletRight\":\"Landing_bulletRight__24r1L\",\"bulletTop\":\"Landing_bulletTop__1D98q\",\"bulletLeft\":\"Landing_bulletLeft__Yeirx\",\"bulletBottom\":\"Landing_bulletBottom__OdDmd\",\"bulletBottomLeft\":\"Landing_bulletBottomLeft__WOkHg\",\"bulletBottomBottom\":\"Landing_bulletBottomBottom__1t9j_\",\"bulletMobile\":\"Landing_bulletMobile__2_A1d\",\"carouselItem\":\"Landing_carouselItem__iAvJJ\",\"pos1\":\"Landing_pos1__BEcBQ\",\"carouselItemMobile\":\"Landing_carouselItemMobile__9dvMX\",\"pos2\":\"Landing_pos2__2VA0X\",\"pos3\":\"Landing_pos3__2cKcn\",\"bentTube\":\"Landing_bentTube__10LD1\",\"bounceArrow\":\"Landing_bounceArrow__1mS5k\",\"bounce\":\"Landing_bounce__3i1p8\",\"rebalanceCircle\":\"Landing_rebalanceCircle__5B-sA\",\"spin\":\"Landing_spin__itue9\",\"carouselDesc\":\"Landing_carouselDesc__10ELo\",\"selected\":\"Landing_selected__3Tblg\",\"carouselNav\":\"Landing_carouselNav__1KJNZ\",\"footer\":\"Landing_footer__U-Goi\",\"socialIcon\":\"Landing_socialIcon__1AsMX\",\"gradientBackground\":\"Landing_gradientBackground__3tbgP\",\"bentTubeLeft\":\"Landing_bentTubeLeft__3pniz\",\"bentTubeRight\":\"Landing_bentTubeRight__17O9r\",\"bentTubeActive\":\"Landing_bentTubeActive__1ZzDg\",\"bg1\":\"Landing_bg1__xhb36\"};"],"sourceRoot":""}