{"version":3,"sources":["SmartNumber/SmartNumber.js","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","RoundButton/RoundButton.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","TrancheField/TrancheField.js","CardIconButton/CardIconButton.js","TxProgressBar/TxProgressBar.js","GenericSelector/GenericSelector.js","theme.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","utilities/components/Header.module.scss","Tos/Tos.module.scss","TransactionField/TransactionField.js","ExecuteTransaction/ExecuteTransaction.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","DashboardCard/DashboardCard.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","TrancheBox/TrancheBox.js","TrancheWelcome/TrancheWelcome.js","SendTxWithBalance/SendTxWithBalance.js","TrancheDetails/TrancheDetails.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","utilities/components/BuyModal.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","FlexLoader/FlexLoader.js","CustomField/CustomField.js","CustomList/CustomList.js","Title/Title.js","AssetField/AssetField.js","ImageButton/ImageButton.js","ExtLink/ExtLink.js"],"names":["SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","Component","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","RoundButton","assign","boxShadow","borderRadius","mainColor","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","children","ShortHash","state","loadData","prevProps","prevState","resolveAddress","shortenHash","hash","getENSName","ensName","setState","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","disabled","minWidth","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","name","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","cardProps","py","px","left","data","itemPos","xFormatted","mb","textAlign","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","selectedToken","setStateSafe","newState","callback","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","mr","backgroundColor","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","my","isOpened","cursor","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","transactions","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","mobile","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","Math","min","parseInt","timeStamp","tokenAmount","action","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","TrancheField","ready","loadField","_callee","fieldName","fieldInfo","fieldProps","addGovTokens","formatValue","addTokenName","output","_args","_context","undefined","protocol","abrupt","t0","loadTrancheField","tranche","trancheConfig","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","tokenChanged","accountChanged","trancheChanged","protocolChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","oldState","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","tokenName","trancheDetails","rgb","align","hex","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","feesStart","feesEnd","react_countup__WEBPACK_IMPORTED_MODULE_8___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","earningsCounter","earningsStart","earningsEnd","_ref3","govTokenConfig","govTokenIndex","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","message","getGovTokensDistributionSpeed","distributionFrequency","formattedValue","_isBigNumber","CardIconButton","isInteractive","isActive","isDisabled","image","imageProps","useIconOnly","iconColor","iconProps","iconBgColor","actionBg","redeem","textProps","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","transaction","Promise","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","mt","target","rel","href","getEtherscanTransactionUrl","cancelTransaction","cancelTextColor","cancelTextHoverColor","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","TwitterShareButton","share","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","parent","w","innerWidth","open","tweet","contrastColor","twitterIcon","ShareModal","closeModal","regenerator_default","getGlobalConfigs","analytics","google","events","enabled","escape","customText","isOpen","ModalCard","closeFunc","confettiEnabled","react_confetti_default","run","recycle","innerHeight","Header","Body","src_TwitterShareButton_TwitterShareButton","React","bg","radioBtn","button","IconBox","isVisible","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","loaderText","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","gradientButton","empty","select","selectDark","input","TransactionField","hashChanged","bgColor","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","ExecuteTransaction","txStatus","loading","console","log","eventData","methodName","contractName","getTransactionError","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","IdleGovToken","classCallCheck","getBalance","asyncToGenerator","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","idle","getDistribution","slicedToArray","getUniswapConversionRate","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","availableStrategies","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","disabledTokens","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","env","process","profiler","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","getContractByName","contract","contracts","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","networkId","ensConfig","TTL","provider","ens","addressCheck","current","supportedNetworks","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocolConfig","_ref4","_ref5","trancheTokenBalance","tranchePool","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","poolShare","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","totalBalanceConverted","_ref11","tokenBalanceConverted","getIdleTokenPrice","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getAmountDeposited","getTokenAprs","avgApy","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_ref20","_callee15","stakingRewards","tokensDistribution","_context15","_ref21","_callee14","eventFilters","transfers","previousHarvest","latestHarvest","previousBlock","_ref22","_ref23","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","transferAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","getBlockInfo","genericContractCallCached","returnValues","apr2apy","apr","apy","_x9","_ref24","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref25","_ref26","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref27","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref28","_callee18","_context18","_x14","_x15","_x16","getTrancheFirstDepositTx","_ref29","_callee19","_context19","_x17","_x18","_x19","getAmountDepositedTranche","_ref30","_callee20","_context20","_x20","_x21","_x22","_ref31","_callee21","_ref32","_ref33","userAvgPrice","_context21","_x23","_x24","getAmountLent","_callee22","amountLents","_args22","_context22","getEtherscanBaseTxs","_callee23","firstBlockNumber","endBlockNumber","debug","firstIdleBlockNumber","requiredNetwork","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args23","_context23","endpoints","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","makeRequest","now","_callee24","_args24","_context24","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee25","_ref38","allAvailableTokens","_args25","_context25","processStoredTxs","sort","_ref39","_callee26","_args26","_context26","_x25","_ref40","_callee27","processTxs","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args27","_context27","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","objectSpread","iTxs","withdrawnValue","processEtherscanTransactions","_x26","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref41","_callee32","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args32","_context32","baseTokenConfig","baseToken","baseTokenAddress","_ref42","_callee31","minedTxs","_context31","_ref43","_callee30","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context30","getCurveTokenPrice","t1","_ref44","_callee28","_context28","getTransactionReceipt","_x31","_x32","topics","baseTokensConfig","t2","_ref45","_callee29","_context29","_x33","_x34","_x29","_x30","_x28","_x27","_ref46","_callee38","txsToProcess","_args38","_context38","_ref47","_callee37","_context37","_ref48","_callee36","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context36","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref49","_callee33","_context33","txReceipt","_x39","_x40","_ref50","_callee34","_context34","_x41","_x42","oldContract","raw","_ref51","_callee35","_context35","_x43","_x44","abi","decodeLog","internalType","_token","_x37","_x38","_x36","_x35","alias","getCustomAddress","setCustomAddress","customAddress","_ref52","_callee39","error_callback","config","_args39","_context39","catch","_x45","makeEtherscanApiRequest","_ref53","_callee40","apiKeyIndex","apiKey","_args40","_context40","_x46","_ref54","_callee41","return_data","_args41","_context41","_x47","code","errorCode","split","array","prop","shift","configs","checkUrlOrigin","baseURL","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee42","page","googlePageviewInfo","isOrigin","_args42","_context42","ga","_ref56","_callee44","googleEventsInfo","debugEnabled","originOk","currentNetwork","_args44","_context44","addPostfixForTestnet","availableNetworks","_ref57","_callee43","_context43","hitCallback","hitCallbackFail","_x49","_x50","_x48","createContract","_ref58","_callee45","_context45","Contract","_x51","_x52","_x53","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","baseurl","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee48","activeOnly","whitelist","proposals","currTime","validProposals","_args48","_context48","getCachedData","addr","msg","payload","_ref60","_callee47","checkedStrategies","_context47","snapshot","metadata","strategies","_ref61","_callee46","_context46","symbol","_x55","_x54","_ref62","_callee49","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args49","_context49","rates","_x56","getTokenExchangeRate","_ref63","_callee50","exchangeRateParams","exchangeRate","_context50","_x57","_x58","getTokenDecimals","_ref64","_callee51","_context51","_x59","aprs","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee52","idleTokenConfig","feeDistributorConfig","etherscanEndpoint","etherscanTxlist","_context52","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee53","contractPaused","_args53","_context53","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref67","_callee55","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context55","lastAllocationsPromise","_ref68","_callee54","lastAllocations","_context54","_x61","_x62","alloc","_x60","checkMigration","_ref69","_callee56","migrationEnabled","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context56","getContractBalance","_x63","_x64","_ref70","_callee57","eventName","_args57","_context57","getContractPastEvents","_x65","_x66","estimateMethodGasUsage","_ref71","_callee58","methodParams","_contract$methods","functionCall","gasLimit","_ref72","_ref73","_args58","_context58","methods","getGasPrice","estimateGas","_x67","_x68","_ref74","_callee59","userAddress","signedParameters","callback_receipt","_contract$methods2","_context59","on","once","confirmationNumber","receipt","_x69","_x70","_x71","_x72","_x73","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","chainId","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref75","_callee60","biconomyInfo","res","_context60","limits","apiId","headers","x-api-key","_x74","sendTxWithPermit","_ref76","_callee61","_contract$methods3","messageToSign","_this$getSignaturePar","_context61","encodeABI","_address","personal","sign","_x75","_x76","_x77","_x78","_x79","_x80","buildBiconomyErc20ForwarderTx","_ref77","_callee62","tokenAddress","permitType","callData","buildParams","_context62","txGas","erc20ForwarderClient","buildTx","_x81","_x82","_x83","_x84","_x85","_ref78","_callee64","_context64","_ref79","_callee63","_context63","_x87","_x88","_x86","sendBiconomyTxWithErc20Forwarder","_ref80","_callee65","req","metaInfo","txResponse","fetchReceiptIntervalId","_context65","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x89","_x90","_x91","_x92","sendBiconomyTxWithPersonalSign","_ref81","_callee66","_this$getSignaturePar2","_context66","getNonce","call","_x93","_x94","_x95","_x96","signPermitEIP2612","_ref82","_callee67","erc20Name","owner","spender","deadline","domain","permit","domainData","_context67","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x97","_x98","_x99","_x100","_x101","_x102","_x103","_x104","signPermit","_ref83","_callee68","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args68","_context68","net","getId","round","nonceMethod","pow","allowed","response","_x105","_x106","_x107","_ref84","_callee69","permitParams","methodAbi","useNonce","_args69","_context69","_jsonInterface","f","inputs","unshift","_x108","_x109","_x110","_x111","_x112","_x113","_x114","sendSignedTx","_ref85","_callee70","MetaTransaction","dataToSign","_context70","_x115","_x116","_x117","_x118","_x119","checkTokenApproved","_ref86","_callee71","contractAddr","walletAddr","_ref87","_ref88","allowance","_context71","getAllowance","gte","_x120","_x121","_x122","_ref89","_callee72","_context72","_x123","_x124","_x125","contractMethodSendWrapperWithValue","txData","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref90","_callee73","stakedBalance","_args73","_context73","_x126","_x127","getTrancheStakingRewards","_ref91","_callee75","_context75","_ref92","_callee74","tokenGlobalConfig","_context74","_x130","_x128","_x129","_ref93","_callee76","field","_args76","_context76","_x131","_x132","_x133","_x134","_x135","_x136","_x137","_x138","_ref94","_callee77","strategyConfig","idleStrategyAddress","_ref95","_ref96","totalSupply","virtualPrice","_ref97","_ref98","staked1","lastPrice1","_ref99","_ref100","deposited1","lastPrice","_ref101","_ref102","redeemable1","staked2","_ref103","_ref104","trancheApy2","deposited3","_ref105","_ref106","trancheFee","_ref107","_ref108","deposited4","redeemable3","_ref109","_ref110","deposited2","redeemable2","_ref111","_ref112","earningsPerc","secondsFromFirstTx","idleGovTokenConfig","rewardsTokensInfo","_ref113","_ref114","rewardsTokens","incentiveTokens","govTokens","_args77","_context77","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","_x139","_x140","_x141","_x142","_x143","_x144","_x145","loadAssetField","_ref115","_callee78","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref116","_ref117","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref118","_ref119","amountLentCurve1","redeemableBalanceCurve","_ref120","_ref121","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref122","_ref123","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref124","_ref125","tokenPriceFirstDeposit","_ref126","_ref127","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref128","_ref129","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref130","_ref131","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref132","_ref133","amountLentCurve2","redeemableBalanceCurve1","_ref134","_ref135","redeemableBalance2","_args78","_context78","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x146","_x147","_x148","_x149","getIdleTokenSupply","_ref136","_callee79","idleTokenSupply","_args79","_context79","_x150","getIdleTokenPriceWithFee","_ref137","_callee80","_ref138","_ref139","fee","priceWFee","_args80","_context80","eq","_x151","_x152","_ref140","_callee81","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args81","_context81","_x153","clearCachedData","useLocalStorage","expirationDate","_ref141","_callee82","_ref142","_ref143","idleTokensTotalSupply","userShare","_context82","_x154","_x155","_callee84","coverProtocolConfig","nexusMutualConfig","_args84","_context84","_ref145","_callee83","coverage","coverageTokens","protocolImage","_context83","tokens","expirationTimestamp","utc","_x156","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref146","_callee86","incidentsInfo","_ref147","_ref148","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context86","directProps","startBlock","contractInfo","buyer","_ref149","_callee85","cover","coverId","claimSubmittedEvent","_ref150","_ref151","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref152","_ref153","_context85","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x158","_x157","getBatchedDepositExecutions","_ref154","_callee87","_context87","_x159","getBatchedDeposits","_callee89","filter_by_status","batchDepositConfig","batchedDeposits","_args89","_context89","_ref156","_callee88","currBatchIndex","batchIndex","_ref157","_ref158","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context88","_x160","getETHBalance","_ref159","_callee90","fixDecimals","_args90","_context90","_x161","_ref160","_callee91","_ref161","_ref162","_args91","_context91","_x162","_x163","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","match","_ref163","_callee92","_args92","_context92","_x164","_ref164","_callee93","_args93","_context93","_x165","_ref165","_callee94","_args94","_context94","_x166","_x167","getProtocolBalance","_ref166","_callee95","_context95","_x168","_x169","getAprs","_ref167","_callee96","_context96","addresses","_x170","genericIdleCall","_ref168","_callee97","callParams","_args97","_context97","_x171","_ref169","_callee98","_contract$methods4","_args98","_context98","_x172","_x173","getTxDecodedLogs","_ref170","_callee100","logAddr","decodeLogs","internalTransfers","_context100","_ref171","_callee99","_context99","_x178","_x179","_x174","_x175","_x176","_x177","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee101","_context101","_ref173","_callee102","_context102","getBlock","_x180","_ref174","_callee103","_args103","_context103","getPastEvents","_x181","_x182","_ref175","_callee104","_args104","_context104","_x183","_x184","_ref176","_callee105","_contract$methods5","_args105","_context105","_x185","_x186","_ref177","_callee106","_args106","_context106","_x187","_x188","getUnlentBalance","_ref178","_callee107","unlentBalance","_context107","_x189","_ref179","_callee108","_args108","_context108","_x190","_ref180","_callee110","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_ref184","_ref185","_args110","_context110","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref181","_callee109","_ref182","_ref183","protocolBalance","protocolAllocation","_context109","functions","_x192","_x193","protocolAllocationPerc","getGovTokensBalances","total","getTokenConversionRate","_x191","getSushiswapPoolTokenPrice","_ref186","_callee111","pairAddresses","_ref187","_ref188","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref189","_ref190","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context111","getSushiswapConversionRate","_x194","_x195","_ref191","_callee112","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context112","_x196","_x197","_ref192","_callee113","unires","_context113","addressForPrice","_x198","_x199","getCurveDepositedTokens","_ref193","_callee114","idleTokensBalances","remainingCurveTokens","_args114","_context114","_x200","getCurveUnevenTokenAmounts","_ref194","_callee115","amounts","max_burn_amount","unevenAmounts","_context115","getCurveDepositContract","_x201","_x202","_callee116","curveRatesInfo","_context116","strategyTokens","getCurveAPYContract","_callee117","blocksForPrevTokenPrice","_ref197","_ref198","prevTokenPrice","blocksMultiplier","curveAPR","_context117","getCurveTokenSupply","_callee118","_context118","getCurvePoolContract","_callee119","_args119","_context119","_callee120","_args120","_context120","_ref202","_callee121","_ref203","_ref204","_context121","_x203","_callee122","depositContractInfo","_context122","getCurveZapContract","_callee123","zapContractInfo","_context123","_callee124","poolContractInfo","_context124","getCurveSwapContract","_callee125","migrationContractInfo","_context125","getCurveIdleTokensAmounts","_callee127","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args127","_context127","_ref210","_callee126","coinIndex","curveIdleTokens","_context126","migrationParams","_x204","getCurveTokensAmounts","_callee129","useCoinIndex","_args129","_context129","_ref212","_callee128","_ref213","_ref214","idleTokenPrice","totalTokenSupply","_context128","_x205","getCurveAmounts","_ref215","_callee131","_args131","_context131","_ref216","_callee130","_context130","_x208","_x206","_x207","getCurveTokenAmount","_ref217","_callee132","_args132","_context132","_x209","getCurveSlippage","_ref218","_callee133","uneven_amounts","depositContract","_ref219","_ref220","Sv","_args133","_context133","_x210","_x211","_ref221","_callee134","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref222","_ref223","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args134","_context134","_x212","_callee136","_args136","_context136","_ref225","_callee135","_ref226","_ref227","_context135","_x213","getStkAaveApr","_ref228","_callee137","aaveConversionRate","stkAaveAPR","destTokenConfig","stkAaveValue","_args137","_context137","_x214","_x215","getCompAPR","_ref229","_callee138","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args138","_context138","_x216","_x217","getCompSpeed","_ref230","_callee139","cTokenAddress","compSpeed","_context139","_x218","_ref231","_callee140","cTokenInfo","compoundAllocationPerc","_ref232","_ref233","cTokenTotalSupply","compoundPoolShare","_args140","_context140","_x219","_callee142","_args142","_context142","_ref235","_callee141","_ref236","_ref237","_context141","_x220","_callee144","_args144","_context144","_ref239","_callee143","_ref240","_ref241","compApr","_context143","_x221","getTokensCsv","_callee147","csv","_context147","prototype","sum","pv","cv","avg","_ref243","_callee146","strategy","_context146","_ref244","_callee145","header","aprAvg","scoreAvg","lastRow","_context145","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x223","_x222","_callee149","govToken","convertToken","_args149","_context149","_ref246","_callee148","compTokenBalance","_context148","_x224","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref247","_callee151","govTokensUserDistribution","_args151","_context151","_ref248","_callee150","_context150","_x226","_x225","_ref249","_callee153","govTokensDistribution","tokenGovTokens","_args153","_context153","_ref250","_callee152","govSpeed","_context152","_x228","_x227","getGovTokensAprs","_ref251","_callee155","govTokensAprs","_args155","_context155","_ref252","_callee154","_ref253","_ref254","_ref255","_ref256","cTokenConfig","_context154","aprTooltipMode","_x231","_x229","_x230","_callee157","_args157","_context157","_ref258","_callee156","govTokenBalance","tokenConversionRate","fromTokenConfig","_context156","_x232","_callee158","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args158","_context158","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref260","_callee160","govTokensAmounts","_context160","getGovTokensUserAmounts","_ref261","_callee159","_context159","getGovTokenAddessByIndex","_x235","_x236","_x233","_x234","_ref262","_callee161","_context161","_x237","_x238","_ref263","_callee162","_context162","_x239","_x240","_callee165","govTokenConfigForced","_args165","_context165","_ref265","_callee164","_context164","_ref266","_callee163","_context163","_x242","_x243","_x241","getTokenFees","_callee166","_args166","_context166","_callee167","_ref269","_ref270","feePercentage","gain","fees","_args167","_context167","_ref271","_callee168","_args168","_context168","_x244","getTotalTVL","_callee169","tokensTVL","_context169","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee173","_context173","_ref274","_callee172","_context172","_ref275","_callee171","oldTokenTVL","idleTokenName","_ref276","_ref277","oldTokenConfig","_ref281","_ref282","oldTokenPrice","oldTotalSupply","_context171","showAUM","_ref278","_callee170","_ref279","_ref280","govTokenConversionRate","govTokenBalanceConverted","_context170","_x247","oldProtocols","oldProtocol","protocolPos","_x246","_x245","getSubstackLatestFeed","_callee174","endpointInfo","idleSubstackFeed","latestFeed","_context174","items","getAggregatedStats","_callee175","tvls","totalAUM","_args175","_context175","getAggregatedStats_chain","_callee179","avgAPR","_args179","_context179","_ref286","_callee178","_context178","_ref287","_callee177","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context177","_ref288","_callee176","_ref289","_ref290","_context176","_x250","_x249","_x248","getTokenApy","_ref291","_callee180","_context180","_x251","getTokensToMigrate","_callee183","tokensToMigrate","_args183","_context183","_ref293","_callee182","_context182","_ref294","_callee181","_ref295","_context181","_x253","_x252","getProtocolsTokensBalances","_callee185","tokenBalances","minTokenBalance","protocolsTokens","_args185","_context185","_ref297","_callee184","tokenContract","_context184","_x254","_ref298","_callee186","_args186","_context186","_x255","_x256","_x257","getAvgAPYStats","_ref299","_callee187","apiResults","_args187","_context187","_x258","_x259","_ref300","_callee188","count","_conversionRate","_args188","_context188","_x260","_x261","getTokenScore","_ref301","_callee189","_ref302","_ref303","tokenScore","_context189","protocolScore","getTokenScoreApi","_x262","_x263","_ref304","_callee190","scores","_context190","_x264","_x265","_ref305","_callee193","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args193","_context193","_ref306","_callee192","addrIndex","protocolApr","protocolApy","govTokenAPR","_context192","_ref307","_callee191","_context191","_x269","_x267","_x268","_x266","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","defaultOpacity","hidden","interactive","rainbow","TableRow","FieldComponent","fieldComponent","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","placement","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","selectToken","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","baseName","showTooltip","long","features","feature","selectTrancheType","tranchesDetails","Title","aligItems","trancheType","TrancheBox","SendTxWithBalance","inputValue","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","required","checked","togglePermitEnabled","approveDescription","balanceSelectorInfo","placeholder","ConnectBox","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","resetModal","loadActionData","selectedProtocol","selectedTranche","trancheAPY","cdoConfig","cantUnstake","cantWithdraw","otherTrancheType","otherTrancheDetails","flexWrap","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","BuyModal","showInline","availableMethods","buyToken","PortfolioEquityTranches","transactionsList","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","rewardTokensInfo","trancheBalanceInfo","rewardToken","rewardTokenInfo","distributionSpeed","reedemable","tokenIcon","CustomList","Button","claimCallback","TranchePage","componentLoaded","loadTransactions","filteredTranchesTypes","src_TrancheDetails_TrancheDetails","TrancheWelcome","userHasFunds","src_StakingRewardsTranche_StakingRewardsTranche","src_FundsOverviewTranche_FundsOverviewTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","build_default","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesConfig","tranchesTokens","tranchesBalances","weight","_this4","portfolioDonutData","balanceValue","trancheName","balanceInfo","_this5","breadcrumbPath","goBack","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","selectTranche","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","scriptID","remoteResourceParams","precall","async","parentElement","head","stylesheetId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","rewardMultiplier","accountingData","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","programDuration","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","caption","imageSrc","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","_d","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionParams","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","baseEndpoint","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","StrategyPage","remainingTokens","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","totalBalanceWithScore","apyLong","riskScore","yieldFarming","src_PortfolioDonut_PortfolioDonut","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","openTooltipModal","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","appName","forumURL","darkModeEnabled","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","COMP","stkAAVE","aToken","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","stake","unstake","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descShort","descLong","best","risk","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","42","1337","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","providers","infura","nexus","etherscan","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","tools","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","showAllTokens","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","payments","bank","showDefaultOnly","card","wallet","wyre","captionPos","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","getAccountBalance","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","Footer","Tos","h1","h2","listStyle","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","maxHeight","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","_args4","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","_args7","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","_ref19","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this9","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","CustomField","componentHasChildren","fieldPath","customFieldName","customFieldProps","rowIndex","HeadingComponent","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.bca2843d.chunk.js","sourcesContent":["import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision)+` ${tokenName}` }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         isDisabled={this.props.isDisabled}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const [\n              tranchePool,\n              tranchePrice\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    // console.log('getTrancheTokensDistribution',stakingRewards);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const previousHarvest = transfers.length>1 ? transfers[transfers.length-2] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const previousBlock = previousHarvest ? previousHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(previousBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n\n          const elapsedBlocks = latestHarvest.blockNumber-previousBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n          const transferAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const tokensPerBlock = transferAmount.div(elapsedBlocks);\n          const tokensPerSecond = transferAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerDay,\n            tokensPerYear,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.tranche,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        // Set first deposit tx\n        if (!firstDepositTx){\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig,trancheConfig,account) => {\n      const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n      if (trancheUserInfo){\n        return trancheUserInfo.firstDepositTx;\n      }\n      return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account,trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats','tokens',tokenConfig.token]);\n      tokenConfig = {...tokenConfig,...tokenGlobalConfig};\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name,'expectedUserReward',[account,tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount,tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true,addTokenName=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n        }\n        // console.log('tranchePool',tokenConfig.CDO.name,totalSupply,virtualPrice,output);\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name,'fee');\n        if (output){\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheFieldRaw(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2){\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2){\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter){\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd =  earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3){\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue){\n          output = output.toFixed(decimals)+'%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          output = this.apr2apy(output.div(100)).times(100);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig,trancheConfig,account),\n          this.loadTrancheFieldRaw(`earningsPerc`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx){\n          const secondsFromFirstTx = parseInt(Date.now()/1000)-parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLEDistribution':\n        const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n          }\n          // console.log('trancheIDLEDistribution',rewardsTokensInfo.IDLE,output);\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => incentiveTokens && !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        // console.log(field,tokenConfig,rewardsTokens,incentiveTokens,govTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]);\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest',TTL=null) => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,TTL);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n\n      if (!protocolInfo.enabled){\n        return;\n      }\n\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.getTokenExchangeRate(contractName,protocolInfo.functions.exchangeRate) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    [\n      tokenAllocation.totalAllocationConverted,\n      tokenAllocation.totalAllocationWithUnlentConverted\n    ] = await Promise.all([\n      this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig),\n      this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig)\n    ]);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCallCached(aTokenConfig.token,'getIncentivesController',[],{},'latest',null);\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCallCached(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.getContractBalance(aTokenConfig.token,tokenConfig.idle.address);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldInfo.props}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    const tokenConfig = this.props.tokenConfig || this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n    return (\n      <DashboardCard\n        cardProps={{\n          py:3,\n          px:3,\n          border:null,\n          style:{\n            // border:`1px solid ${trancheDetails.color.hex}`\n          }\n        }}\n      >\n        <Flex\n          pb={2}\n          mb={3}\n          width={1}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n          alignItems={['flex-start','baseline']}\n          borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n        >\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Icon\n              mr={2}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n              size={this.props.isMobile ? '1.8em' : '2.2em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[4,6]}\n              lineHeight={'1'}\n              color={trancheDetails.color.hex}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            alignItems={'flex-end'}\n            flexDirection={'column'}\n          >\n            <TrancheField\n              fieldInfo={{\n                name:`${trancheDetails.baseName}Apy`,\n                showTooltip:false,\n                props:{\n                  decimals:2,\n                  fontWeight:4,\n                  fontSize:[4,6],\n                  lineHeight:'1',\n                  textAlign:'center',\n                  flexProps:{\n                    justifyContent:'center'\n                  },\n                  color:this.props.trancheDetails.color.hex\n                },\n              }}\n              {...this.props}\n              tokenConfig={tokenConfig}\n              token={strategyInfo.token}\n              tranche={strategyInfo.tranche}\n              protocol={strategyInfo.protocol}\n            />\n            <Text\n              fontSize={0}\n              color={'cellText'}\n              textAlign={'right'}\n            >\n              Current APY (variable)\n            </Text>\n            {\n              /*\n              <TrancheField\n                fieldInfo={{\n                  showLoader:false,\n                  name:'trancheIDLEDistribution',\n                  props:{\n                    decimals:2,\n                    fontWeight:2,\n                    fontSize:[0,1],\n                    color:'cellText',\n                    textAlign:'center',\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  },\n                }}\n                {...this.props}\n                tokenConfig={tokenConfig}\n                token={strategyInfo.token}\n                trancheConfig={tokenConfig.AA}\n                tranche={strategyInfo.tranche}\n                protocol={strategyInfo.protocol}\n              />\n              */\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          <Text\n            mb={3}\n            fontWeight={3}\n            color={'copyColor'}\n          >\n            {trancheDetails.description.long}\n          </Text>\n          <Flex\n            width={1}\n            my={3}\n            flexDirection={'column'}\n          >\n            {\n              trancheDetails.features.map( (feature,index) => (\n                <Flex\n                  mb={2}\n                  width={1}\n                  mt={[0,1]}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    name={'Done'}\n                    color={trancheDetails.color.hex}\n                  />\n                  <Text\n                    fontWeight={3}\n                    fontSize={[2,3]}\n                    color={trancheDetails.color.hex}\n                  >\n                    {feature}\n                  </Text>\n                </Flex>\n              ))\n            }\n          </Flex>\n          <Button\n            mt={3}\n            width={1}\n            contrastColor={'cardBg'}\n            icon={trancheDetails.icon}\n            mainColor={trancheDetails.color.hex}\n            onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n          >\n            {\n              this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n            }\n          </Button>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text } from \"rimble-ui\";\nimport TrancheBox from '../TrancheBox/TrancheBox';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    return (\n      <Box\n        mb={3}\n        width={1}\n      >\n        {\n          !this.props.tokenConfig ? (\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Title\n                mb={3}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mb={[3,4]}\n                mx={'auto'}\n                width={[1,0.8]}\n                aligItems={'center'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontWeight={2}\n                  fontSize={[1,2]}\n                  textAlign={'center'}\n                >\n                  {\n                    this.props.isMobile ?\n                      this.functionsUtil.getGlobalConfig(['strategies','tranches','descShort'])\n                    :\n                      this.functionsUtil.getGlobalConfig(['strategies','tranches','descLong'])\n                  }\n                </Text>\n              </Flex>\n            </Flex>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3,4]}\n              color={'copyColor'}\n              textAlign={'center'}\n            >\n              Select your preferred Tranche\n            </Title>\n          )\n        }\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          justifyContent={'space-between'}\n        >\n          {\n            Object.keys(tranchesDetails).map( trancheType => (\n              <Flex\n                mb={[3,0]}\n                flexDirection={'column'}\n                key={`tranche_${trancheType}`}\n                width={[1,(1/Object.keys(tranchesDetails).length)-0.04]}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <TrancheBox\n                    {...this.props}\n                    tokenConfig={this.props.tokenConfig}\n                    trancheDetails={tranchesDetails[trancheType]}\n                  />\n                </Flex>\n              </Flex>\n            ))\n          }\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Icon, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Button\n            mb={2}\n            size={'small'}\n            width={'auto'}\n            contrastColor={'cardBg'}\n            icon={otherTrancheDetails.icon}\n            mainColor={otherTrancheDetails.color.hex}\n            onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n          >\n            Switch to {otherTrancheDetails.name}\n          </Button>\n        </Flex>\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          >\n            <Icon\n              mr={2}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={2}\n                  lineHeight={'1'}\n                  color={'cellText'}\n                >\n                  +\n                </Text>\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'trancheIDLEDistribution',\n                    props:{\n                      decimals:4,\n                      fontSize:1,\n                      fontWeight:2,\n                      lineHeight:'1',\n                      color:'cellText'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tranche={this.props.selectedTranche}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            /*\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n            */\n          }\n          {\n            this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !this.state.userHasAvailableFunds }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        color:'flashColor',\n                        textAlign:'center',\n                        fontSize:['13px','15px']\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Staked Amount\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:[]\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    if (accountChanged || trancheConfigChanged || portfolioChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n    const [\n      stakingRewards,\n      rewardTokensInfo\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    // console.log('stakingRewards',stakingRewards,rewardTokensInfo,trancheBalanceInfo);\n\n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken]);\n      const tokenAmount = this.functionsUtil.BNify(stakingRewards[rewardToken]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.tokensPerDay : null;\n      if (trancheBalanceInfo){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken}/day` : '-'\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <CustomList\n          rows={this.state.stakingRewardsRows}\n          cols={[\n            {\n              title:'TOKEN',\n              props:{\n                width:[0.18,0.16]\n              },\n              fields:[\n                {\n                  type:'image',\n                  props:{\n                    mr:2,\n                    size:this.props.isMobile ? '1.2em' : '1.8em'\n                  },\n                  path:['tokenIcon']\n                },\n                {\n                  type:'text',\n                  path:['token'],\n                }\n              ]\n            },\n            {\n              mobile:false,\n              title:'BALANCE',\n              props:{\n                width:[0.27,0.24],\n                justifyContent:['center','flex-start']\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['balance'],\n                  props:{\n                    decimals: this.props.isMobile ? 4 : 8\n                  }\n                },\n              ]\n            },\n            {\n              title:'REDEEMABLE',\n              desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n              props:{\n                width:[0.29,0.24],\n                justifyContent:['center','flex-start']\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['reedemable'],\n                  props:{\n                    decimals: this.props.isMobile ? 4 : 8\n                  }\n                },\n              ]\n            },\n            {\n              title:'DISTRIBUTION',\n              desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n              props:{\n                width:[0.29,0.24],\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['distributionSpeed'],\n                  props:{\n                    decimals: this.props.isMobile ? 4 : 8\n                  }\n                }\n              ]\n            },\n            {\n              title:'',\n              props:{\n                width:[0.26,0.16],\n              },\n              parentProps:{\n                width:1\n              },\n              fields:[\n                {\n                  funcProps:{\n                    disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0))\n                  },\n                  fieldComponent:ExecuteTransaction,\n                  props:{\n                    params:[],\n                    parentProps:{\n                      width:1\n                    },\n                    Component:Button,\n                    componentProps:{\n                      style:{\n                        width:'100%'\n                      },\n                      value:'Claim',\n                      borderRadius:4,\n                      mainColor:'redeem',\n                      size:this.props.isMobile ? 'small' : 'medium'\n                    },\n                    action:'Claim',\n                    methodName:'claim',\n                    callback:this.claimCallback.bind(this),\n                    contractName:this.props.trancheConfig.CDORewards.name\n                  }\n                }\n              ]\n            }\n          ]}\n          {...this.props}\n        />\n      : this.props.children\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTransactions();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n\n    // console.log('loadTransactions',this.props.selectedProtocol,this.props.selectedToken,this.props.trancheType,transactions);\n    const componentLoaded = true;\n\n    this.setState({\n      transactions,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,Math.min(0.5,(1/filteredTranchesTypes.length)-0.02)]}\n                  >\n                    <TrancheDetails\n                      {...this.props}\n                      selectedTranche={trancheType}\n                      cdoConfig={this.props.tokenConfig.CDO}\n                      selectTrancheType={this.props.selectTrancheType}\n                      trancheConfig={this.props.tokenConfig[trancheType]}\n                    />\n                  </Flex>\n                ))\n              }\n            </Flex>\n          )\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Staking Rewards</Title>\n              <StakingRewardsTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche) so the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APR is determined?',\n                        a: `The base APR, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APR of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie SeniorRatio = Senior TVL / (Senior TVL + Junior TVL)). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees are collected on profit harvests. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues go into FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APR part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  key={`tranche-${protocol}`}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat || (v => v),\n      sliceLabel: this.props.sliceLabel || (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip } from \"rimble-ui\";\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n    // console.log('loadPortfolio',portfolio);\n\n    if (portfolio){\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          value:balanceValue,\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Icon\n                      mr={2}\n                      name={this.state.trancheDetails.icon}\n                      color={this.state.trancheDetails.color.hex}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Title\n                  mb={3}\n                >\n                  Perpetual Yield Tranches\n                </Title>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            sliceLabel={d => d.value}\n                            defaultLabel={'Total Funds'}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.25,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.21, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.14],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}Pool` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:this.props.account === null,\n                      props:{\n                        width:[ this.props.account === null ? 0.29 : 0 ,0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    // console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() );\n    const claimContracts = this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() );\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport ERC20 from '../contracts/ERC20.json';\nimport Tranches from '../Tranches/Tranches';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport NexusMutualIncidents from '../abis/nexus/NexusMutualIncidents.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport NexusMutualDistributor from '../abis/nexus/NexusMutualDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledgerlive:{\n      enabled:true,\n      subcaption:'Ledger Live Browser'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield','idleFEIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:['idleTUSDYield','idleSUSDYield','idleRAIYield']\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  tranches:{\n    AA:{\n      color:{\n        // hex:'#00ff06',\n        hex:'#00a9fe',\n        rgb:[0, 169, 254],\n        hsl:['200', '100%', '50%']\n      },\n      type:'AA',\n      route:'senior',\n      icon:'Security',\n      baseName:'senior',\n      name:'Senior Tranche',\n      features:[\n        'Covered by Junior tranches funds',\n        'Minimized risk exposure',\n        'No locking period or epochs',\n        'Auto-Reinvest accrued tokens',\n        'Staking for additional rewards'\n      ],\n      description:{\n        long:'The Senior Tranche offers the safest way to access the lending market and enjoy its returns thanks to the built-in funds coverage.',\n        deposit:'By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    },\n    BB:{\n      color:{\n        hex:'#ff9900',\n        rgb:[255, 153, 0],\n        hsl:['36', '100%', '50%']\n      },\n      type:'BB',\n      route:'junior',\n      icon:'TrendingUp',\n      baseName:'junior',\n      name:'Junior Tranche',\n      features:[\n        'Leverage yield using Senior tranches funds',\n        'Higher risk exposure by protecting senior tranches',\n        'No locking period or epochs',\n        'Auto-Reinvest accrued tokens',\n        'Staking for additional rewards'\n      ],\n      description:{\n        long:'The Junior Tranche offers the maximum performance in terms of interests for your assets but expose your funds to an higher risk.',\n        deposit:'By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    }\n  },\n  strategies:{\n    tranches:{\n      token:'DAI',\n      visible:true,\n      type:'tranche',\n      protocol:'idle',\n      color:'#f32121',\n      comingSoon:false,\n      title:'Tranches',\n      addGovTokens:true,\n      titlePostfix:null,\n      iconName:'Whatshot',\n      component: Tranches,\n      govTokensEnabled:true,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/tranches-on.png',\n      iconInactive:'images/strategies/tranches-off.png',\n      iconInactiveDark:'images/strategies/tranches-white.png',\n      desc:'Diversify your risk profile with dynamic tranched yield derivatives',\n      descShort:'The aim of Idle Perpetual Yield Tranches is to pool capital of users (eg DAI), deposit it into a lending provider (eg Idle Finance) and split the interest received between 2 classes of users with different risk profiles.',\n      descLong:'The aim of Idle Perpetual Yield Tranches is to pool capital of users (eg DAI), deposit it into a lending provider (eg Idle Finance) and split the interest received between 2 classes of users with different risk profiles. One will gain more interest and will be more risky (Junior tranche) and the other will have a lower APR but more safety (Senior tranche). In the case of an hack or a loss of funds of the lending provider integrated (or any other protocol integrated by this provider), all funds still available will be used to refund Senior tranche holders first with the aim of making them whole, and with remaining funds, if any, Junior holders after.',\n    },\n    best:{\n      token:'DAI',\n      visible:true,\n      color:'#f32121',\n      type:'strategy',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      visible:true,\n      color:'#2196F3',\n      type:'strategy',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      FEI:{\n        decimals:18,\n        enabled:false,\n        color:{\n          hex:'#229b6e',\n          rgb:[34, 155, 110],\n          hsl:['158', '64%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-07-30',\n        conversionRateField:'feiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:false,\n        enabled:false,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              abi:IdleDepositForwarder,\n              permitType:'EIP2612_Permit',\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit', // 'foo'\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      nexus:{\n        endpoints:{\n          1:'https://api.nexusmutual.io/v1/',\n          42:'https://api.staging.nexusmutual.io/v1/',\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys:[\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:true,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  events:{\n    DAI:{\n      fields:{\n        to:'dst',\n        from:'src',\n        value:'wad'\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              fromBlock:12561464,\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              fromBlock:12649361,\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    nexusMutual:{\n      enabled:true,\n      icon:'Security',\n      route:'coverage',\n      label:'Coverage',\n      desc:'Buy Nexus Mutual coverage without KYC for your deposits',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleDAIYield',\n            token:'idleDAIYield', // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000011',\n            realAddress:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4', // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleUSDTYield',\n            token:'idleUSDTYield', // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000012',\n            realAddress:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          }\n        },\n      },\n      directProps:{\n        // startBlock:25858186, // Kovan\n        startBlock:12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo:{\n          abi:NexusMutualDistributor,\n          name:'NexusMutualDistributor',\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address:'0xf2b36f823eae36e53a5408d8bd452748b24fbf76' // Mainnet\n        },\n        incidentsInfo:{\n          abi:NexusMutualIncidents,\n          name:'NexusMutualIncidents',\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address:'0x8ceba69a8e96a4ce71aa65859dbdb180b489a719' // Mainnet\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1714470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  insurance:{\n    nexusMutual:{\n      label:'Nexus Mutual',\n      image:'images/protocols/nexus-mutual.png',\n      imageDark:'images/protocols/nexus-mutual-white.png'\n    },\n    coverProtocol:{\n      label:'Cover Protocol',\n      image:'images/protocols/cover-logo.svg',\n      imageDark:'images/protocols/cover-logo.svg',\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI','FEI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n      const tokens = this.props.availableTranches[protocol];\n      await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n        const tokenConfig = tokens[token];\n        await Promise.all([\n          this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n          this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n          this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n          this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n          this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n          this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n        ]);\n      });\n    });\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'IdleCDO_AA_idleDAIYield',\n        token:'IdleCDO_AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'IdleCDO_BB_idleDAIYield',\n        token:'IdleCDO_BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n\n    const cachedData = {...this.state.cachedData};\n    Object.keys(cachedData).forEach( key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null){\n        delete cachedData[key];\n      }\n    });\n\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach( key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null){\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n\n    await this.setState({\n      cachedData\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }),() => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    window.clearCachedData = this.clearCachedData;\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive){\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Clear cached data\n    this.clearCachedData(()=>{\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version','themeMode','lastLogin','cachedData']);\n    });\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    availableTranches={availableTranches}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      availableTranches={availableTranches}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          availableTranches={availableTranches}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n"],"sourceRoot":""}