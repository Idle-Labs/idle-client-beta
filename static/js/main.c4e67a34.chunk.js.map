{"version":3,"sources":["PageNotFound/PageNotFound.module.scss","utilities/components/Header.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","NewsletterForm/NewsletterForm.module.scss","TwitterShareButton/TwitterShareButton.module.scss","MenuAccount/MenuAccount.module.scss","CryptoInput/CryptoInput.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","Governance/ProposalListFilters/ProposalListFilters.module.scss","Tos/Tos.module.scss","Governance/NewProposal/NewProposal.module.scss","DashboardCard/DashboardCard.module.scss","colors.js","theme.js","ExtLink/ExtLink.js","utilities/IdleGovToken.js","SmartNumber/SmartNumber.js","FlexLoader/FlexLoader.js","GenericChart/GenericChart.js","VariationNumber/VariationNumber.js","AllocationChart/AllocationChart.js","AssetField/AssetField.js","DashboardCard/DashboardCard.js","GenericSelector/GenericSelector.js","AssetSelector/AssetSelector.js","TokenSwap/TokenSwap.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","NexusMutual/NexusMutual.js","Title/Title.js","TableRow/TableRow.js","TableCellHeader/TableCellHeader.js","TableHeader/TableHeader.js","AssetsList/AssetsList.js","CustomField/CustomField.js","CustomList/CustomList.js","RoundButton/RoundButton.js","PortfolioDonut/PortfolioDonut.js","ChartCustomTooltip/ChartCustomTooltip.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","utilities/components/ShortHash.js","TransactionField/TransactionField.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","StrategyPage/StrategyPage.js","utilities/components/ModalCard.js","ImageButton/ImageButton.js","utilities/components/BuyModal.js","TxProgressBar/TxProgressBar.js","FastBalanceSelector/FastBalanceSelector.js","Migrate/Migrate.js","BatchDeposit/BatchDeposit.js","IconBox/IconBox.js","SendTxWithBalance/SendTxWithBalance.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/FunctionsUtil.js","Footer/Footer.js","Tos/Tos.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","Faquestion/Faquestion.js","Faq/Faq.js","FlexCards/FlexCards.js","AuditCard/AuditCard.js","HowItWorks/HowItWorks.js","StrategyBox/StrategyBox.js","NewsletterForm/NewsletterForm.js","RoundIconButton/RoundIconButton.js","FloatingToastMessage/FloatingToastMessage.js","AssetsUnderManagement/AssetsUnderManagement.js","Landing/Landing.js","DashboardMenu/DashboardMenu.js","Stats/StatsChart.js","Rebalance/Rebalance.js","StatsCard/StatsCard.js","Breadcrumb/Breadcrumb.js","utilities/components/DateRangeModal.js","ExecuteTransaction/ExecuteTransaction.js","Stats/Stats.js","Utils/Utils.js","FundsOverview/FundsOverview.js","ConnectBox/ConnectBox.js","CurveRedeem/CurveRedeem.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","DepositRedeem/DepositRedeem.js","CardIconButton/CardIconButton.js","EstimatedEarnings/EstimatedEarnings.js","AssetPage/AssetPage.js","CurveDeposit/CurveDeposit.js","PortfolioEquityCurve/PortfolioEquityCurve.js","FundsOverviewCurve/FundsOverviewCurve.js","CurveStrategy/CurveStrategy.js","utilities/components/WelcomeModal.js","utilities/components/TooltipModal.js","utilities/components/MigrateModal.js","utilities/components/UpgradeModal.js","utilities/GovernanceUtil.js","Notifications/Notifications.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","DelegateVesting/DelegateVesting.js","DashboardHeader/DashboardHeader.js","Dashboard/Dashboard.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","Governance/ProposalField/ProposalField.js","Governance/ProposalListFilters/ProposalListFilters.js","Governance/ProposalsList/ProposalsList.js","Governance/DelegateField/DelegateField.js","Governance/DelegatesList/DelegatesList.js","Governance/Overview.js","Governance/DelegateVote/DelegateVote.js","Governance/Delegate.js","Governance/NewProposal/NewProposal.js","Governance/CastVote/CastVote.js","Governance/ProposalDetails/ProposalDetails.js","Governance/Proposals.js","Governance/DelegateDetails/DelegateDetails.js","Governance/Leaderboard.js","Governance/Governance.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","Footer/Footer.module.scss","Notifications/Notifications.module.scss","LoadingSpinner/LoadingSpinner.module.scss","HowItWorks/HowItWorks.module.scss","GenericSelector/GenericSelector.module.scss","Landing/Landing.module.scss"],"names":["module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","gradientButton","empty","tooltip","radioBtn","bg","twitterIcon","balanceButton","newLink","newPill","mainInput","button","newPillContainerAnim","input","defaultOpacity","hidden","interactive","active","rainbow","disabled","baseColors","black","white","blue","darkBlue","green","yellow","red","blurple","consensysblue","colors","base","text","readableColor","light","tint","dark","shade","theme","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","fonts","serif","sansSerif","counter","space","radii","width","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","gradient-bg","primary-light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","transparent","lineChartStroke","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider","redeem","deposit","migrate","legend","cardBg","transactions","action","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","actionBg","status","completed","pending","failed","blacks","whites","zIndices","messageStyle","color","backgroundColor","borderColor","success","warning","danger","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","fontSize","height","minWidth","padding","medium","large","borderRadius","ExtLink","react_default","a","createElement","index_es","Object","assign","target","rel","this","props","children","Component","IdleGovToken","_this","classCallCheck","tokenName","tokenConfig","functionsUtil","setProps","FunctionsUtil","getGlobalConfig","getBalance","asyncToGenerator","regenerator_default","mark","_callee","balance","wrap","_context","prev","next","getTokenBalance","account","sent","BNify","isNaN","abrupt","stop","claimRewards","_ref2","_callee2","callback","callbackReceipt","_context2","contractMethodSendWrapper","_x","_x2","apply","arguments","getPriorVotes","_callee3","priorVotes","_args3","_context3","length","undefined","genericContractCall","refreshIdleSpeed","_callee4","_context4","getUnclaimedTokens","_callee5","rewards","_context5","fixTokenDecimals","decimals","getAPR","_ref6","_callee6","token","conversionRate","IDLETokenConfig","cachedDataKey","APR","_ref7","_ref8","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","_context6","enabled","concat","idle","Promise","all","getDistribution","getTokenAllocation","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","times","div","setCachedData","_x3","_x4","getSpeed","_ref9","_callee7","idleTokenAddress","cachedData","idleSpeeds","_context7","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","_callee8","blocksPerYear","distribution","_context8","address","_x6","getUserDistribution","_callee10","availableTokens","fixByFrequency","totalSpeed","_args10","_context10","selectedStrategy","availableStrategies","asyncForEach","keys","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","plus","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","output","totalAllocation","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","SmartNumber","loadUtils","_this2","formattedNumber","number","type","formatMoney","precision","abbreviateNumber","maxPrecision","minPrecision","flexProps","alignItems","flexDirection","justifyContent","forEach","p","showUnit","unitPos","unit","unitProps","FlexLoader","loaderProps","textProps","GenericChart","state","componentUnmounted","window","addEventListener","handleWindowSizeChange","bind","removeEventListener","prevProps","isMobile","newState","objectSpread","parentId","chartContainer","document","getElementById","chartWidth","parseFloat","offsetWidth","parentIdHeight","chartContainerH","chartHeight","setState","ChartType","parseInt","chartProps","showLoader","data","src_FlexLoader_FlexLoader","minHeight","size","ml","loaderText","VariationNumber","IconDirection","direction","name","iconSize","iconPos","AllocationChart","chartData","selectedSlice","protocolsAllocations","protocolsAllocationsPerc","loadData","prevState","selectedToken","setStateSafe","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","e","_this3","onMouseLeave","sliceLabel","value","tooltipFormat","v","radialLabel","container","inline","display","labels","fontWeight","fontFamily","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","modifiers","margin","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","toLowerCase","protocolAllocationPercParsed","toFixed","push","id","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","position","zIndex","textAlign","mb","src","src_SmartNumber_SmartNumber","src_GenericChart_GenericChart","Pie","AssetField","ready","loadField","fieldName","isRisk","fieldInfo","fieldProps","addGovTokens","govTokens","getGovTokensDistributionSpeed","tokenPrice","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","earningsCounter","feePercentage","feesStart","feesEnd","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","startTimestamp","y","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","path","_args","loadAssetField","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","getTokenFees","getCurveAPY","gt","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","earningsPerc","showAPR","migration","oldContract","values","oldProtocols","oldProtocol","foundProtocol","find","protocolPos","indexOf","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","rowId","$allocationChartRowElement","jQuery","innerWidth","css","innerHeight","Math","min","assertThisInitialized","max","strToMoment","Date","format","subtract","_d","getTime","getCachedData","add","random","getFrequencySeconds","getTokenApiData","timestamp","idleRate","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","curve","axisBottom","enableArea","areaOpacity","enableGridX","enableGridY","pointBorderWidth","enableSlices","isInteractive","defs","linearGradientDef","offset","fill","match","PerformanceChartRowElement","$PerformanceChartRowElement","clone","map","idlePrice","minus","blocknumber","pointLabelYOffset","getArrayPath","defineProperty","tokenChanged","accountChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","filter","tx","loader","funcProps","icon1","placement","message","tooltipProps","icon2","strategyIcon","strategy","strategyName","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","_ref11","countUpRef","style","ref","_ref15","govTokenConfig","govTokenIndex","key","boxShadow","showDirection","src_VariationNumber_VariationNumber","earningsCurve","governanceTokenName","idleTokenConfig","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","buttonLabel","onClick","handleClick","src_AllocationChart_AllocationChart","CustomComponent","customValue","Icon","customFieldName","pop","customFieldProps","Text","formattedValue","_isBigNumber","DashboardCard","isDisabled","isActive","isVisible","isRainbow","cardProps","background","className","styles","mt","titleParentProps","h4","lineHeight","titleProps","description","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","JSON","stringify","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","menuIsOpen","src_DashboardCard_DashboardCard","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","searchInput","searchInputHidden","CustomOption","selectedValue","o","px","py","genericSelector","isFocused","react_select_browser_esm","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","AssetSelector","toUpperCase","src_AssetField_AssetField","mr","showCustomField","showBalance","flex","src_GenericSelector_GenericSelector","changeToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","remoteResources","url","j","split","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","href","loadTokens","toolProps","getContractByName","abi","initContract","fromTokenChanged","destTokenChanged","loadKyberWidget","_this4","src_AssetSelector_AssetSelector","my","mx","mainColor","LoadingSpinner","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","NexusMutual","step","steps","1","2","3","loading","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","stepIndex","flexBasis","textDecoration","hoverColor","activeColor","changeSelectedToken","required","border","placeholder","src_ButtonLoader_ButtonLoader","getQuote","Title","HeadingComponent","component","Heading","h1","TableRow","FieldComponent","fieldComponent","cardId","rowProps","cols","colInfo","colIndex","visible","mobile","parentProps","fields","fieldIndex","overflow","colProps","TableCellHeader","ColTitle","whiteSpace","desc","openTooltipModal","TableHeader","pb","src_TableCellHeader_TableCellHeader","AssetsList","enabledTokens","src_TableHeader_TableHeader","src_TableRow_TableRow","CustomField","componentHasChildren","fieldType","fieldPath","row","Image","Button","CustomList","rows","rowIndex","RoundButton","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","_ref","getIdleTokenPrice","getGovTokensUserBalances","govTokensUserBalances","govTokenBalance","tokenPercentage","tokenColorHsl","substr","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","convertToken","Fragment","ChartCustomTooltip","point","itemPos","xFormatted","ChartCustomTooltipRow","pr","textTransform","dangerouslySetInnerHTML","__html","PortfolioEquity","startDate","chartwidth","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","filteredTxs","index","hash","timeStamp","tokenAmount","lt","idleTokens","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTx","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","momentDate","isSameOrAfter","isAfter","formattedDate","_loop","aggregatedBalances","date","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","strokeDasharray","sliceTooltip","slideData","slice","points","src_ChartCustomTooltip_ChartCustomTooltip","src_ChartCustomTooltipRow_ChartCustomTooltipRow","serieId","yFormatted","formattedBalance","ShortHash","shortenHash","shortHash","txStart","txEnd","React","TransactionField","hashChanged","bgColor","transaction","maxWidth","textOverflow","align","components_ShortHash","amount","tokenSymbol","TransactionListFilters","maxHeight","isOpened","activeFilters","assets","actions","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","borderTop","filters","filterCategory","filterValues","filterValue","filterLabel","isChecked","checked","filterName","TransactionsList","page","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","txsIndexes","includes","sort","b","getTxAction","parsedValue","preventDefault","loadTxs","count","firstBlockNumber","enabledActions","hashKey","blockNumber","hasActiveFilters","m","pt","src_TransactionListFilters_TransactionListFilters","txHash","txHashKey","open","prevPage","nextPage","h3","TotalEarningsCounter","loadTotalEarnings","getAccountPortfolio","depositedTokens","avgAPY","totalEarnings","totalAmountLent","tokenAprs","tokenEarnings","tokenWeight","amountLentToken","getTokenAprs","getAmountLent","avgApy","totalBalance","counterStyle","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","amountLents","aggregatedEarnings","earningsYear","avgBuyPrice","idleTokenPrice","earningsPercStep","possibleSteps","maxPossibleStep","getAvgBuyPrice","avgApr","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","c","statusColors","statusIcon","statusColor","portfolioCoverage","statusIconProps","reduce","batchInfo","deposited","batchDeposits","redeemable","batchRedeems","avgScore","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","src_Title_Title","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","src_PortfolioEquity_PortfolioEquity","image","src_RoundButton_RoundButton","goToSection","route","src_AssetsList_AssetsList","borderBottom","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","src_TransactionsList_TransactionsList","textSize","ModalCard","closeFunc","objectWithoutProperties","icononly","bgLayer","backgroundSize","Header","iconHeight","subtitle","subtitleProps","subtitle2","Body","Footer","BackButton","Outline","ImageButton","imageSrc","imageProps","iconName","caption","contrastColor","buttonStyle","badge","captionPos","subcaption","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","provider","buyParams","onSuccess","onClose","currentState","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","providers","analytics","google","events","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","defaultProvider","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","methods","method","loadAvailableMethods","toConsumableArray","showAllTokens","InnerComponent","flexWrap","src_ImageButton_ImageButton","methodInfo","imagePropsExtended","noOptionsMessage","inputValue","isOpen","components_ModalCard","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","initProgressBar","getTransaction","resolve","reject","customLog","web3","eth","err","getBlockTime","blockTime","axios","get","getPredictionTable","predictTable","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","secondsPassed","timePassed","setTimeout","updateProgressBar","getTxInfo","txProgressBarKey","txProgressBarData","localStorage","getItem","parse","setLocalStorage","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","textColor","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","cancelTransaction","cancelTextColor","cancelTextHoverColor","FastBalanceSelector","onMouseDown","replaceArrayProps","Migrate","nonce","approve","usePermit","oldTokenName","oldIdleTokens","skipMigration","buttonDisabled","migrationEnabled","fastBalanceSelector","oldContractBalance","biconomyLimitReached","metaTransactionsEnabled","oldContractTokenDecimals","migrationContractApproved","setAction","toggleSkipMigration","changeInputValue","checkButtonDisabled","setInputValue","selectedPercentage","setFastBalanceSelector","executeAction","oldContractName","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","normalizeTokenAmount","txSucceeded","eventData","eventValue","getTransactionError","transactionHash","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractInfo","migrationContractName","tokenApproved","migrationContract","checkTokenApproved","oldIdleTokensConverted","oldTokenPrice","getTokenPrice","oldContractInfo","oldContractABI","biconomyLimits","getTokenDecimals","getContractBalance","biconomy","checkBiconomyLimits","allowed","migrationEnabledCallback","disapproveMigration","disableERC20","approveMigration","callbackApprove","callbackReceiptApprove","enableERC20","migrationMethod","callbackMigrate","callbackReceiptMigrate","callbackPermit","useMetaTx","toMigrate","_skipRebalance","minAmountForRebalance","migrationParams","_migrationContract$me","functionSignature","permitContract","functionInfo","nonceMethod","expiry","migrationCallback","showBalanceSelector","integerValue","skipMintForDeposit","encodeABI","sendBiconomyTxWithPersonalSign","functions","f","call","signPermit","permitName","biconomyChanged","usePermitChanged","actionChanged","fastBalanceSelectorChanged","contractApproved","batchMigrationInfo","batchMigrationEnabled","batchMigrationDepositEnabled","depositEnabled","SkipMigrationComponent","biconomyEnabled","isMigrationTool","migrateTextBefore","migrateText","showActions","src_TransactionField_TransactionField","src_TxProgressBar_TxProgressBar","balanceSelectorInfo","src_FastBalanceSelector_FastBalanceSelector","functionName","migrationImage","migrationIcon","migrationText","migrationTextProps","approveText","BatchDeposit","canClaim","batchTotals","canDeposit","execute","claim","lastExecution","permitEnabled","hasDeposited","permitSigned","showPermitBox","currBatchIndex","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","checkBatchs","loadStrategies","urlParams","param2","executeSucceededChanged","contractApprovedChanged","callbackExecute","callbackReceiptExecute","getBatchedDepositExecutions","batchExecutions","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","availableStrategiesKeys","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","migrateFunction","setStrategyToken","_this5","batchId","callbackClaim","_this6","callbackReceiptClaim","_this7","canExecuteBatch","strategyDefaultValue","s","connectAndValidateAccount","togglePermitEnabled","src_Migrate_Migrate","utc","IconBox","SendTxWithBalance","getFastBalanceSelector","checkContractApproved","contractInfo","executeTx","_amount","params","methodName","methodParams","contractName","getTransactionParams","approveCallback","tokenBalanceChanged","contractChanged","tokenConfigChanged","changeInputCallback","infoBox","src_IconBox_IconBox","link","src_ExtLink_ExtLink","approveDescription","CoverProtocol","swapInfo","selectedAction","successMessage","defaultCoverage","selectedCoverage","transactionSucceeded","collateral","selectedActionChanged","inputValueChanged","swapInfoChanged","updateData","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","txReceipt","logs","log","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","apy","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","contract","isClaim","now","apyPrice","currTime","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","txAction","src_SendTxWithBalance_SendTxWithBalance","components_BuyModal","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","env","process","appName","version","baseURL","forumURL","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","batchDepositExecutionSchedule","curveInstructions","addPostfixForTestnet","debugEnabled","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","governance","test","startBlock","availableContracts","IDLE","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","showAUM","protocol","aprTooltipMode","COMP","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","strategies","best","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","descLong","descShort","risk","new","TTL","scores","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","idleDAI+idleUSDC+idleUSDT","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d","9599092","9599138","9599263","9599267","9599295","9599299","9599307","9599315","9599579","9599866","9600156","9600433","9600704","9600982","9601051","9601073","9601077","9601345","9601619","9601891","9602144","9602429","9602724","9602993","9603272","9603536","9603826","9603840","9604038","9604182","9604457","9604701","9604979","9605247","9605505","9605793","9606073","9606368","9606639","9606896","9607147","9607406","9607722","9608130","9608395","9608656","9608959","9609544","9609811","9610073","9610341","9610601","9610871","9611120","9611386","9611665","9611949","9612210","9612487","9612758","9613012","9613276","9613542","9613824","9614069","9614327","9614596","9614864","9615111","9615394","9615679","9615958","9616245","9616531","9616803","9617053","9617326","0x9ba00d6856a4edf4665bca2c2309936572473b7e","9598633","9598646","9598684","9598823","9598869","9598915","skipRebalance","skipMint","minAmountForMint","skipMintCheckboxEnabled","proxyContract","IdleProxyMinter","function","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","1337","isForked","requiredNetwork","requiredConfirmations","accountBalanceMinimum","infura","etherscan","endpoints","snapshot","proposals","urls","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","coverProtocol","subComponent","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","insurance","ETH","ens","tokenSwap","USDS","WETH","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","bank","card","wallet","wyre","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","event","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","connectorName","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","mode","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","ethereumjsABI","require","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","console","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","_args2","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","_args4","prevAvgBuyPrice","_args5","idleTokensBalance","getDepositTimestamp","deposits","depositTimestamp","getAmountDeposited","userAvgPrice","amountDeposited","_args8","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","results","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","_args9","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","allAvailableTokens","_args11","processStoredTxs","_callee13","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args13","_context13","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_callee18","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args18","_context18","baseTokenAddress","_callee17","minedTxs","_context17","_ref19","_callee16","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context16","getCurveTokenPrice","_ref20","_callee14","_context14","getTransactionReceipt","_x10","_x11","topics","baseTokensConfig","t2","_ref21","_callee15","_context15","_x12","_x13","_x9","_ref22","_callee24","txsToProcess","_args24","_context24","_ref23","_callee23","_context23","_ref24","_callee22","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context22","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref25","_callee19","_context19","_x18","_x19","_ref26","_callee20","_context20","_x20","_x21","raw","_ref27","_callee21","_context21","_x22","_x23","decodeLog","_token","_x16","_x17","_x15","_x14","alias","cachedRequests","_ref28","_callee25","error_callback","config","_args25","_context25","catch","_x24","_ref29","_callee26","return_data","_args26","_context26","_x25","code","errorCode","array","prop","shift","configs","checkUrlOrigin","_ref30","_callee28","googleEventsInfo","originOk","currentNetwork","_args28","_context28","ga","_ref31","_callee27","_context27","hitCallback","hitCallbackFail","_x27","_x28","_x26","createContract","_ref32","_callee29","_context29","Contract","_x29","_x30","_x31","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee31","activeOnly","validProposals","_args31","_context31","msg","_ref34","_callee30","checkIDLEBalance","checkLockedIDLEBalance","_ref35","_ref36","IDLEBalance","lockedIDLEBalance","_context30","metadata","_x32","_ref37","_callee32","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args32","_context32","_x33","_ref38","_callee33","_context33","_x34","aprs","allocations","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","addr","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee34","contractPaused","_args34","_context34","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref40","_callee37","rebalancer","idleRebalancerInstance","allocationsPromises","availableTokensPromises","protocolIndex","nextAllocations","newTotalAllocation","newProtocolsAllocations","shouldRebalance","_context37","allocationPromise","_ref41","_callee35","_context35","lastAmounts","_x36","_x37","availableTokenPromise","_ref42","_callee36","_context36","_x38","_x39","accumulator","availableTokenInfo","nextAllocation","protocolAllocation","protocolAllocationPerc","newProtocolAllocation","_x35","_ref43","_callee38","_context38","_x40","_x41","_ref44","_callee39","signedParameters","callback_receipt","_contract$methods","_context39","getGasPrice","once","confirmationNumber","receipt","_x42","_x43","_x44","_x45","_x46","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","soliditySHA3","toBuffer","_ref45","_callee40","biconomyInfo","res","_context40","headers","x-api-key","_x47","sendTxWithPermit","_ref46","_callee41","_contract$methods2","messageToSign","_this$getSignaturePar","_context41","_address","personal","sign","_x48","_x49","_x50","_x51","_x52","_x53","_ref47","_callee42","_this$getSignaturePar2","_context42","getNonce","_x54","_x55","_x56","_x57","signPermitEIP2612","_ref48","_callee43","erc20Name","owner","spender","deadline","domain","domainData","_context43","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","currentProvider","jsonrpc","substring","_x58","_x59","_x60","_x61","_x62","_x63","_x64","_x65","_ref49","_callee44","baseContractName","holder","spenderContractName","callback_permit","baseContract","spenderContract","permitConfig","_args44","_context44","net","getId","response","permitParams","methodAbi","_jsonInterface","useNonce","inputs","unshift","_x66","_x67","_x68","_x69","_x70","_x71","_x72","_x73","_x74","sendSignedTx","_ref50","_callee45","MetaTransaction","dataToSign","_context45","_x75","_x76","_x77","_x78","_x79","_ref51","_callee46","contractAddr","walletAddr","allowance","_context46","getAllowance","_x80","_x81","_x82","_ref52","_callee47","_context47","_x83","_x84","_x85","txData","toTwosComplement","_ref53","_callee48","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref54","_ref55","curveAvgBuyPrice","curveTokenBalance","_ref56","_ref57","amountLentCurve1","redeemableBalanceCurve","_ref58","_ref59","earningPerYear","_ref60","_ref61","amountLent1","redeemableBalance1","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref62","_ref63","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref64","_ref65","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref66","_ref67","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref68","_ref69","amountLentCurve2","redeemableBalanceCurve1","_ref70","_ref71","redeemableBalance2","_args48","_context48","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getIdleGovToken","t3","getCompDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x86","_x87","_x88","_x89","_ref72","_callee49","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args49","_context49","_x90","clearCachedData","useLocalStorage","_ref73","_callee50","_ref74","_ref75","idleTokensTotalSupply","userShare","_context50","_x91","_x92","_callee52","_args52","_context52","_ref77","_callee51","coverageTokens","protocolImage","_context51","_x93","_ref78","_callee53","etherscanEndpoint","_context53","_x94","_callee55","filter_by_status","_args55","_context55","_ref80","_callee54","_ref81","_ref82","_context54","_x95","_ref83","_callee56","fixDecimals","_ref84","_ref85","_args56","_context56","_x96","_x97","copyToClipboard","copyText","select","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref86","_callee57","_context57","getProtocolBalance","_x98","_x99","_ref87","_callee58","_context58","_x100","_x101","getAprs","_ref88","_callee59","_context59","_x102","genericIdleCall","_ref89","_callee60","callParams","_args60","_context60","_x103","estimateGas","_ref90","_callee61","_contract$methods3","_args61","_context61","_x104","_x105","getTxDecodedLogs","_ref91","_callee63","logAddr","decodeLogs","internalTransfers","_context63","_ref92","_callee62","_context62","_x110","_x111","_x106","_x107","_x108","_x109","getBlockNumber","_callee64","_context64","getContractPastEvents","_ref94","_callee65","_args65","_context65","getPastEvents","_x112","_x113","_ref95","_callee66","_contract$methods4","_args66","_context66","_x114","_x115","_ref96","_callee67","_args67","_context67","_x116","_x117","apr2apy","getUnlentBalance","_ref97","_callee68","unlentBalance","_context68","_x118","_ref98","_callee69","_args69","_context69","_x119","_ref99","_callee71","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args71","_context71","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref100","_callee70","_ref101","_ref102","protocolBalance","_context70","_x121","_x122","getGovTokensBalances","total","getTokenConversionRate","_x120","getUniswapConversionRate_path","_ref103","_callee72","unires","_context72","_x123","_ref104","_callee73","tokenConfigFrom","tokenConfigDest","_context73","_x124","_x125","getCurveDepositedTokens","_ref105","_callee74","idleTokensBalances","remainingCurveTokens","_args74","_context74","_x126","getCurveUnevenTokenAmounts","_ref106","_callee75","amounts","max_burn_amount","unevenAmounts","_context75","getCurveDepositContract","_x127","_x128","_callee76","curveRatesInfo","_context76","strategyTokens","getCurveAPYContract","_callee77","blocksForPrevTokenPrice","_ref109","_ref110","prevTokenPrice","blocksMultiplier","curveAPR","_context77","getCurveTokenSupply","_callee78","_context78","getCurvePoolContract","_callee79","_args79","_context79","_callee80","_args80","_context80","_ref114","_callee81","_ref115","_ref116","_context81","_x129","_callee82","depositContractInfo","_context82","getCurveZapContract","_callee83","zapContractInfo","_context83","_callee84","poolContractInfo","_context84","getCurveSwapContract","_callee85","_context85","getCurveIdleTokensAmounts","_callee87","max_slippage","curveTokenSupply","curveTokenShare","_args87","_context87","_ref122","_callee86","curveIdleTokens","_context86","_x130","getCurveTokensAmounts","_callee89","useCoinIndex","_args89","_context89","_ref124","_callee88","_ref125","_ref126","totalTokenSupply","_context88","_x131","getCurveAmounts","_ref127","_callee91","_args91","_context91","_ref128","_callee90","_context90","_x134","_x132","_x133","getCurveTokenAmount","_ref129","_callee92","_args92","_context92","_x135","getCurveSlippage","_ref130","_callee93","uneven_amounts","_ref131","_ref132","virtualPrice","Sv","_args93","_context93","_x136","_x137","getCompAPR","_ref133","_callee94","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args94","_context94","_x138","_x139","getCompSpeed","_ref134","_callee95","cTokenAddress","compSpeed","_context95","_x140","_ref135","_callee96","annualize","cTokenInfo","compoundAllocationPerc","_ref136","_ref137","cTokenTotalSupply","compoundPoolShare","_args96","_context96","_x141","_callee98","_args98","_context98","_ref139","_callee97","_ref140","_ref141","_context97","_x142","_callee100","_args100","_context100","_ref143","_callee99","_ref144","_ref145","compApr","_context99","_x143","getTokensCsv","_callee103","csv","_context103","prototype","sum","pv","cv","avg","_ref147","_callee102","_context102","_ref148","_callee101","header","aprAvg","scoreAvg","lastRow","_context101","protocolsData","p1","p2","rate","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x145","_x144","_callee105","_args105","_context105","_ref150","_callee104","compTokenBalance","_context104","_x146","speed","getGovTokensUserDistributionSpeed","_ref151","_callee107","govTokensUserDistribution","_args107","_context107","_ref152","_callee106","_context106","_x148","_x147","_ref153","_callee109","govTokensDistribution","_args109","_context109","_ref154","_callee108","govSpeed","_context108","_x150","_x149","_ref155","_callee111","_args111","_context111","_ref156","_callee110","_ref157","_ref158","compoundInfo","_context110","_x153","_x151","_x152","_callee113","_args113","_context113","_ref160","_callee112","tokenConversionRate","fromTokenConfig","_context112","_x154","getGovTokenConfigByAddress","_callee114","checkShowBalance","govTokensEarnings","_args114","_context114","acc","govTokenAmount","_callee117","govTokenConfigForced","_args117","_context117","_ref163","_callee116","govTokensAmounts","_context116","_ref164","_callee115","govTokenAddress","_context115","_x156","_x157","_x155","_callee118","_args118","_context118","_callee119","_ref167","_ref168","gain","fees","_args119","_context119","_ref169","_callee120","_args120","_context120","_x158","getAggregatedStats","_callee124","avgAPR","totalAUM","_args124","_context124","_ref171","_callee123","_context123","_ref172","_callee122","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context122","_ref173","_callee121","_ref174","_ref175","tokenBalanceConverted","_context121","_x161","_x160","_x159","getTokenApy","_ref176","_callee125","_context125","_x162","_callee128","_args128","_context128","_ref178","_callee127","_context127","_ref179","_callee126","_ref180","_context126","_x164","_x163","getProtocolsTokensBalances","_callee130","tokenBalances","minTokenBalance","protocolsTokens","_args130","_context130","_ref182","_callee129","tokenContract","_context129","_x165","_ref183","_callee131","_args131","_context131","_x166","_x167","_x168","_ref184","_callee132","_args132","_context132","_x169","_x170","_ref185","_callee133","_ref186","_ref187","_context133","protocolScore","getTokenScoreApi","_x171","_x172","_ref188","_callee134","_context134","_x173","_x174","_ref189","_callee136","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args136","_context136","_ref190","_callee135","addrIndex","protocolApr","protocolApy","_context135","_x176","_x177","_x175","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","currYear","getFullYear","governanceEnabled","columnWidth","footer","react_router_dom","Tos","h2","listStyle","src_Footer_Footer","TorusConnector","kwargs","Torus","api","rest","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","Faquestion","isShowingAnswer","question","answer","Faq","openedAnswer","selectedSection","generalQuestions","q","guidelinesQuestions","ratesQuestions","section","_this$state","generalDivs","src_Faquestion_Faquestion","toggleAnswer","guidelinesDivs","ratesDivs","isGeneralSelected","isGuidelinesSelected","isRatesSelected","setSection","FlexCards","itemPerc","itemsPerRow","cards","AuditCard","transform","HowItWorks","bulletCard","StrategyBox","getHighestAprToken","highestValue","tokensAprs","strategyUrl","fontStyle","NewsletterForm","validated","privacy","handleSubmit","handleValidation","messageColor","post","then","parentNode","classList","onSubmit","Field","outline","toggleCheckbox","RoundIconButton","FloatingToastMessage","ToastComponent","ToastMessage","Success","Processing","Failure","closeElem","handleClose","AssetsUnderManagement","totalAUMEndOfYear","loadTotalAUM","scrolling","Landing","carouselMax","carouselIndex","activeCarousel","runConfetti","activeBullet","testPerformed","carouselOffsetLeft","setActiveCarousel","carouselIntervalID","randomAllocationEnabled","handleCarousel","multiplier","$element","processScrolling","bulletCards","getElementsByClassName","offsetParent","offsetY","offsetTop","getAllocations","remainingAllocation","totProtocols","alloc","startLending","updateSelectedTab","setConfetti","connectAndGoToRoute","goToLocation","processCustomParam","mainViewport","paddingBottom","isCorrectNetwork","textAlignLast","overflowY","strategyIndex","src_StrategyBox_StrategyBox","src_RoundIconButton_RoundIconButton","src_HowItWorks_HowItWorks","src_AssetsUnderManagement_AssetsUnderManagement","src_AuditCard_AuditCard","gradientBackground","h5","sandbox","src_FlexCards_FlexCards","src_Faq_Faq","src_NewsletterForm_NewsletterForm","toastMessageProps","src_FloatingToastMessage_FloatingToastMessage","closeToastMessage","DashboardMenu","buyModalOpened","menu","visibleLinks","menuLink","showMobile","menuIndex","LinkComponent","isExternalLink","RouterLink","selected","StatsChart","chartType","parseAum","loadApiData","CustomTooltipRow","CustomTooltip","maxGridLines","apiResults","apiResults_unfiltered","totalItems","versionInfo","tempData","axisBottomIndex","idleChartData","divergingData","maxRange","_i","_i2","_i3","prevValue","_i4","prevApr","prevData","startBalance","currentBalance","_i5","_i6","chartMode","idleVersion","redeems","idleSupply","idleTokensPrev","eq","diff","Bar","indexBy","enableLabel","minValue","maxValue","axisRight","markers","lineStyle","strokeOpacity","textStyle","legendOrientation","legendOffsetX","labelTextColor","labelSkipWidth","labelSkipHeight","dataFrom","translateX","itemsSpacing","indexValue","depositFormatted","redeemFormatted","aum","z","foundItem","pos","showAdvanced","serieColor","protocolColor","protocolAllocationFormatted","protocolData","protocolPaused","borderCollapse","allocationPerc","protocolEarning","earning","additionalProtocol","chartRow","baseProfit","firstProtocolData","firstProtocolBlock","protocolRate","idlePerformance","d1","rowData","lastRowData","lastTokenPrice","tokenExchangeRate","tokenPriceFixed","lastYDiff","showAdvancedChanged","apiResultsChanged","Rebalance","StatsCard","titleMinHeight","valueProps","labelTooltip","Breadcrumb","showPathMobile","pathLink","Link","borderLeft","DateRangeModal","quickSelection","ranges","endDate","componentDidUpdate","selection","handleSelect","startTimestampObj","endTimestampObj","handleQuickSelect","react_date_range_dist","minDate","maxDate","ExecuteTransaction","txStatus","ExecuteComponent","componentProps","Stats","delta","rebalances","buttonGroups","statsVersions","minStartTime","govTokensPool","showRefreshIdleSpeed","dateRangeModalOpened","quickSelections","weeks","month","setDateRange","isSame","isBefore","maxEndDate","toggleAdvancedCharts","setDateRangeModal","filterTokenData","setIdleVersion","firstResult","lastResult","firstIdlePrice","lastIdlePrice","firstCompoundData","lastCompoundData","compoundWithCOMPInfo","compoundAvgApr","firstCompoundPrice","lastCompoundPrice","compoundApr","compoundData","compoundRate","prevRow","prevTotalAllocation","hasRebalanced","prevP","prevAllocation","loadParams","latestVersion","versionInfoExtra","param","currentNetworkAvailableTokens","customToken","getLatestAvailableVersion","getVersionInfo","newEndTimestampObj","newStartTimestampObj","initWeb3","loadCarousel","strategyChanged","dateChanged","versionChanged","idleTokenEnabled","versionsOptions","versionDefaultValue","src_Breadcrumb_Breadcrumb","src_StatsCard_StatsCard","Stats_StatsChart","src_Rebalance_Rebalance","components_DateRangeModal","statsTokens","statsProtocols","src_ExecuteTransaction_ExecuteTransaction","Utils","SubComponent","selectedSubsection","submenu","tool","toolIndex","FundsOverview","govTokensTotalApr","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","totBalance","totApr","ConnectBox","CurveRedeem","maxSlippage","showMaxSlippage","redeemUnderlying","curveTokensAmounts","redeemUnevenAmounts","curveRedeemableIdleTokens","toggleUnevenAmounts","setMaxSlippage","initToken","normalizedAmount","withdrawSlippage","curveIdleTokensAmounts","redeemUnevenAmountsChanged","inputChanged","maxSlippageChanged","calculateSlippage","loadSelectedTokenConfig","curveConfig","min_amounts","coin_index","min_amount","showSlippage","curveTokenName","selectDestinationToken","TwitterShareButton","share","parent","w","tweet","ShareModal","escape","customText","confettiEnabled","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","DepositRedeem","txError","canRedeem","activeModal","showBuyFlow","showRedeemFlow","canRedeemCurve","canDepositCurve","actionProxyContract","componentMounted","redeemCurveEnabled","depositCurveBalance","depositCurveEnabled","showAdvancedOptions","depositCurveSlippage","setShowRedeemFlow","setShowBuyFlow","toggleShowAdvancedOptions","toggleRedeemCurve","toggleDepositCurve","toggleSkipMint","toggleRedeemGovTokens","setActiveModal","approveContract","approveToken","loadTokenInfo","curveTokenEnabled","checkAction","loadAPY","contractSendResult","callbackDeposit","callbackReceiptDeposit","curvePoolContractInfo","tokensToDeposit","minMintAmount","depositParams","_tokensToDeposit","depositMetaTransactionsEnabled","_depositParams","mintProxyContractInfo","mintProxyContract","_mintProxyContract$me","_skipMint","maxUnlentPerc","depositPerc","_callbackRedeem","_callbackReceiptRedeem","redeemParams","lendingProcessing","lendAmount","genericError","loadProxyContracts","hasProxyContract","approved","depositCurveChanged","calculateCurveSlippage","govTokensDisabled","skipMintForDepositEnabled","redeemGovTokenEnabled","metaTransactionsAvailable","depositCurve","showDepositOptions","canPerformAction","showDepositCurve","showRedeemCurve","showActionFlow","showCurveSlippage","showRebalanceOption","showAdvancedDepositOptions","batchDepositDepositEnabled","showBatchDeposit","tokenFeesPercentage","src_ConnectBox_ConnectBox","src_CurveRedeem_CurveRedeem","components_ShareModal","CardIconButton","useIconOnly","iconColor","iconBgColor","EstimatedEarnings","tokenApy","maxInputValue","loadChart","amountMonth","amount3Months","amount6Months","amountYear","monthColor","month3","month3Color","month6","month6Color","year","yearColor","showAPYDisclaimer","verticalAlign","AssetPage","tokenFees","loadTokensInfo","userHasFunds","src_CardIconButton_CardIconButton","src_DepositRedeem_DepositRedeem","src_FundsOverview_FundsOverview","src_EstimatedEarnings_EstimatedEarnings","depositSlippage","getMigrationParams","idleTokenBalanceChanged","underlyingBalanceToDeposit","normalizeIdleTokenBalance","hasCurveTokens","PortfolioEquityCurve","aggregatedBalanceParsed","FundsOverviewCurve","src_PortfolioEquityCurve_PortfolioEquityCurve","redeemBalance","depositBalance","setSelectedToken","getSelectedToken","param1","updateAssetSelector","curveTokensToRedeem","src_CurveDeposit_CurveDeposit","src_FundsOverviewCurve_FundsOverviewCurve","WelcomeModal","subscribed","sendingForm","sendUserInfo","sendEmail","walletProvider","lastLogin","signedUp","header_styles","TooltipModal","content","MigrateModal","dontShowAgain","toggleDontShowAgain","tokenMigrationRoute","protocolsTokensBalances","UpgradeModal","convert","oldIdleTokensToMigrate","GovernanceUtil","getTotalSupply","totalSupply","getTokensBalance","getVestingContract","vestingContract","VesterABI","delegateVesting","delegate","getVestingAmount","vestingAmount","getCurrentDelegate","getCurrentVotes","votes","_args7","getTimelockDelay","queueProposal","proposalId","executeProposal","proposeAndVoteFor","targets","signatures","calldatas","batcher","Batcher","propose","args","castVote","support","setDelegate","_args14","getDelegatesChanges","delegationsCalls","fromBlock","delegatesContractName","toBlock","all_delegations","delegations","getDelegatesVotesChanges","getDelegates","all_votes","delegateAccounts","_args17","getVotes","_e$returnValues","returnValues","rank","vote_weight","voter","splice","getProposalParams","govContractName","proposalThreshold","proposalMaxOperations","governanceContractName","_e$returnValues2","getProposals","voted_by","filter_by_state","enumerateProposalState","proposalCount","proposalGets","proposalStateGets","_arr","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_args21","reverse","createdEvent","canceledEvent","executedEvent","queuedEvent","createdBlockInfo","createdState","activeState","canceledBlockInfo","canceledState","queuedBlockInfo","succeededState","queuedState","executedBlockInfo","executedState","endBlockInfo","endState","_createdEvent$returnV","states","getBlock","end_time","start_time","trx_hash","endBlock","eta","executed","canceled","forVotes","proposer","againstVotes","Notifications","tabOpened","mouseOverBell","unreadNotifications","lastOpenTimestamp","mouseOverNotifications","governanceUtil","loadNotifications","clickEvent","updateLastOpenTimestamp","notificationsChanged","notificationsParams","activeSnapshotProposals","governanceProposals","snapshotProposalBaseUrl","authorIpfsHash","governanceProposalUrl","batchDepositBaseUrl","batchToken","hasUnreadNotifications","onMouseOut","setMouseOverBell","onMouseOver","toggleTab","bell","ring","setMouseOverNotifications","notification","AccountModal","loadBalances","strategyToken","setConnector","context","acccount","renderBalances","toolName","toolConfig","MenuAccount","isModalOpen","toggleModal","modalName","loadIdleTokenBalance","unclaimed","connectorInfo","walletIcon","governanceRoute","dashboardRoute","alt","src_Notifications_Notifications","setGovModal","isDashboard","isGovernance","components_AccountModal","GovModal","claimCallback","DelegateVesting","newDelegate","delegatee","currentDelegate","delegateAddressValid","delegateDifferentWallet","vestingContractDelegated","delegatesChanges","lastDelegateTx","delegator","toDelegate","revoke","changeDelegate","setDelegateDifferentWallet","DashboardHeader","govModalOpened","src_MenuAccount_MenuAccount","src_DelegateVesting_DelegateVesting","components_GovModal","Dashboard","currentRoute","pageComponent","currentSection","showResetButton","timeoutId","modalTitle","modalContent","curveParams","CurveStrategy","u","section_is_strategy","param1_is_strategy","param1_is_token","param2_is_token","sectionRoute","subm","loadMenu","accountInizialized","initAccount","initializeContracts","checkModals","prevParams","checkTokensToMigrate","checkWelcomeModal","checkProtocolsTokensBalances","showUpgradeModal","welcomeIsOpen","welcomeModalProps","lastTime","migrateModalEnabled","showMigrateModal","newRoute","routeParts","PageComponent","src_DashboardMenu_DashboardMenu","overflowX","src_DashboardHeader_DashboardHeader","components_UpgradeModal","components_MigrateModal","components_TooltipModal","components_WelcomeModal","current","baseTokenName","WrongNetworkBanner","NetworkUtil","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","NoWalletModal","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Web3ConnectionButtons","useWeb3Context","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","ConnectionModal","showTxFees","closeRemainingTime","newToEthereumChoice","showInstructions","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","renderModalContent","TOSacceptance","showConnectionButtons","newToEthereum","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","accountBalance","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","updateTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","customAddress","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","Sentry","increaseAmount","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","gasLimit","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","call_callback","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","ProposalField","proposal","totalVotes","vote","ProposalListFilters","ProposalsList","rowsPerPage","totalRows","defeated","succeeded","queued","expired","processedRows","processList","pageChanged","proposalsChanged","filtersEnabled","hasRows","Governance_ProposalListFilters_ProposalListFilters","DelegateField","opts","bgcolor","spotcolor","seed","DelegatesList","maxRows","delegatesChanged","delegateId","Overview","dataLoaded","votesDelegated","Governance_ProposalsList_ProposalsList","Governance_DelegatesList_DelegatesList","DelegateVote","checkNewDelegate","loadUserData","isUndelegated","canClose","Delegate","Governance_DelegateVote_DelegateVote","NewProposal","actionValue","customABI","newAction","editAction","actionInputs","actionValid","contractOptions","proposalCreated","functionsOptions","selectedContract","selectedFunction","selectedSignature","availableFunctions","validateForm","checkInputs","loadFunctionsOptions","contractABI","getContractABI","constant","stateMutability","valid","fieldPattern","getPatternByFieldType","returnString","RegExp","inputIndex","inputInfo","inputValid","validateField","inputTypes","calldata","encodeParameters","handleInput","actionIndex","setEditAction","changeContract","pattern","changeFunction","payable","valueChange","inputChange","addAction","deleteAction","setNewAction","CastVote","loaded","userVote","voteSucceed","showDelegateBox","setVote","Governance_ProposalField_ProposalField","toggleDelegateBox","ProposalDetails","showActionParams","lastState","hasVotes","forVotesPerc","againstVotesPerc","forVotesAddrs","againstVotesAddrs","canQueue","canExecute","timelockDelay","Governance_CastVote_CastVote","decodedParams","attrs","decodeParameters","toggleShowParams","paramIndex","stateInfo","stateIndex","voteInfo","voteIndex","Proposals","addProposal","selectedProposal","item_id","foundProposal","Governance_ProposalDetails_ProposalDetails","Governance_NewProposal_NewProposal","DelegateDetails","loadProposals","Leaderboard","selectedDelegate","Governance_DelegateDetails_DelegateDetails","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","outputs","anonymous","indexed","ERC20","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","transactionToastMeta","transactionAction","charAt","newMessage","App","selectedTab","connecting","unsubscribeFromHistory","showToastMessage","customParam","setCustomAddress","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","self","hasMetamask","web3_react_dist_default","libraryName","web3Api","web3_react_dist","RimbleWeb3","needsPreflight","react_router","src_Dashboard_Dashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","Governance","components_Header","src_Web3Debugger_Web3Debugger","exact","src_Landing_Landing","react_cookie_consent_build_default","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","loading-dots","loading-dots--dot","dot-keyframes","graySection","whiteSection","howItWork","skewBg","bgHeart","platformLogo","bulletCardFirst","bulletCardActive","bulletPoint","bulletRight","bulletTop","bulletLeft","bulletBottom","bulletBottomLeft","bulletBottomBottom","bulletMobile","carouselItem","pos1","carouselItemMobile","pos2","pos3","bentTube","bounceArrow","bounce","rebalanceCircle","spin","carouselDesc","carouselNav","socialIcon","bentTubeLeft","bentTubeRight","bentTubeActive","bg1"],"mappings":"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","file":"static/js/main.c4e67a34.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"NewsletterForm_gradientButton__PMcBV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceButton\":\"MenuAccount_balanceButton__3t7wZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__35W_s\",\"newPill\":\"CryptoInput_newPill__2Q8cA\",\"mainInput\":\"CryptoInput_mainInput__1zffg\",\"button\":\"CryptoInput_button__1N9EQ\",\"gradientButton\":\"CryptoInput_gradientButton__2kh5r\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__RvOCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"ProposalListFilters_radioBtn__2_8YL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"NewProposal_input__KvbCb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"active\":\"DashboardCard_active__2XLas\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #e0e0e0'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    lineChartStroke:'#dbdbdb',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#fff',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      sliceLabel: d => d.value+'%',\n      tooltipFormat: v => v+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {} : {\n            display: 'none'\n          }\n        },\n        labels:{\n          text:{\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontWeight:600,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()] && globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon : `${this.state.selectedSlice.label.toLowerCase()}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({},() => {\n        this.loadField();\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPerc:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            curve:'monotoneX',\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            enableSlices:false,\n            isInteractive:false,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      boxShadow:1,\n      borderRadius:2,\n      position:'relative',\n      minHeight:'initial',\n      background:'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import theme from \"../theme\";\nimport Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={theme.fontSizes[2]}\n          color={theme.colors.copyColor}\n          fontWeight={theme.fontWeights[3]}\n          fontFamily={theme.fonts.sansSerif}\n          className={[styles.searchInput,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? '#fbfbfb' : '#ffffff' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={ fieldInfo.style ? fieldInfo.style : {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'primary'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null;\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase()) && \n                          (this.state.activeFilters.assets === null || tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase()) &&\n                          ( availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.functionsUtil.BNify(0);\n    let totalEarnings = this.functionsUtil.BNify(0);\n    let totalAmountLent = this.functionsUtil.BNify(0);\n\n    await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountLent,\n        tokenEarnings\n      ] = await Promise.all([\n        this.functionsUtil.getTokenAprs(tokenConfig),\n        this.functionsUtil.getAmountLent([token],this.props.account),\n        this.functionsUtil.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n      const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n      const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n    });\n\n    const earningsStart = totalEarnings;\n    const earningsEnd = totalAmountLent.times(avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n    const maxPrecision =  this.props.maxPrecision || 10;\n    const minPrecision =  this.props.minPrecision || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n    const amountLents = await this.functionsUtil.getAmountLent(this.props.enabledTokens,this.props.account);\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(Object.keys(amountLents),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountLents[token],token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    Object.keys(amountLents).forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'#ffffff'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Image } from \"rimble-ui\";\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountLent([token],this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.aggregatedValues = [\n          {\n            flexProps:{\n              pr:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              label:'',\n              title:'Avg APY',\n              value:avgAPY.toFixed(2)+'<small>%</small>',\n              description:this.functionsUtil.getGlobalConfig(['messages','apyLong'])\n            }\n          },\n          {\n            flexProps:{\n              px:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Total Earnings',\n              description:'Total earnings does not include accrued governance tokens: '+(govTokensTotalBalance && govTokensTotalBalance.gt(0) ? ` (${govTokensTotalBalanceTooltip.join(' / ')})` : ''),\n              children:(\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <TotalEarningsCounter\n                    {...this.props} \n                    portfolio={portfolio}\n                  />\n                  {\n                    /*\n                    <CountUp\n                      delay={0}\n                      decimals={8}\n                      decimal={'.'}\n                      separator={''}\n                      useEasing={false}\n                      duration={31536000}\n                      end={parseFloat(earningsEnd)}\n                      start={parseFloat(earningsStart)}\n                      formattingFn={ n => '$ '+this.functionsUtil.abbreviateNumber(n,8,10,8) }\n                    >\n                      {({ countUpRef, start }) => (\n                        <span\n                          ref={countUpRef}\n                          style={{\n                            lineHeight:1,\n                            color:this.props.theme.colors.copyColor,\n                            fontFamily:this.props.theme.fonts.counter,\n                            fontWeight: this.props.isMobile ? 600 : 700,\n                            fontSize:this.props.isMobile ? '21px' : '1.7em',\n                          }}\n                        />\n                      )}\n                    </CountUp>\n                    */\n                  }\n                  {\n                    /*\n                    govTokensTotalBalance && govTokensTotalBalance.gt(0) &&\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        {govTokensTotalBalanceTooltip.join(' / ')}\n                      </Text>\n                    */\n                  }\n                </Flex>\n              ),\n              label:'',\n            }\n          },\n          {\n            flexProps:{\n              pl:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Avg Risk Score',\n              value:avgScore.toFixed(1),\n              label:''\n            }\n          },\n        ];\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        this.state.aggregatedValues.map((v,i) => (\n                          <Flex\n                            {...v.flexProps}\n                            flexDirection={'column'}\n                            key={`aggregatedValue_${i}`}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                py:[3,4],\n                                mb:[2,0]\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  v.props.children ? v.props.children : (\n                                    <Text\n                                      lineHeight={1}\n                                      fontWeight={[3,4]}\n                                      color={'copyColor'}\n                                      fontFamily={'counter'}\n                                      fontSize={[4,'1.7em']}\n                                      dangerouslySetInnerHTML={{ __html: v.props.value }}\n                                    >\n                                    </Text>\n                                  )\n                                }\n                                  <Flex\n                                    mt={2}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={[1,2]}\n                                      color={'cellText'}\n                                    >\n                                      {v.props.title}\n                                    </Text>\n                                  {\n                                    v.props.description && (\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={v.props.description}\n                                      >\n                                        <Icon\n                                          ml={2}\n                                          name={\"Info\"}\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                        />\n                                      </Tooltip>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </DashboardCard>\n                          </Flex>\n                        ))\n                      }\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.33]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.66]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}/Claim`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        background: props.background ? props.background : 'url(images/bg-bottom-right.png) no-repeat bottom right',\n        backgroundSize: !props.background ? '65%' : null\n      }}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? '#f7f8ff' : 'white'}\n          contrastColor={this.props.isActive ? '#f7f8ff' : 'white'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      availableMethods[method] = globalConfigs.payments.methods[method];\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n                  if (!availableProviders || !availableProviders.length){\n                    return false;\n                  }\n\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton isMobile={ this.props.isMobile } key={`method_${method}`} {...methodInfo.props} imageProps={ imageProps } handleClick={ e => this.selectMethod(e,method) } />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    placeholder={'Select your country'}\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    value={this.state.selectedCountry}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    className={styles.gradientButton}\n                    borderRadius={4}\n                    my={2}\n                    mx={[0, 2]}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                    onClick={ e => this.goBack(e) }\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.props.tokenConfig.name,'nonceMethod']);\n          if (this.props.usePermit && permitContract){\n            const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n            const nonce = nonceMethod ? await permitContract.methods[nonceMethod](this.props.account).call() : null;\n            this.functionsUtil.signPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, nonce, expiry, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchDeposit`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                {\n                  /*\n                  <IconBox\n                    cardProps={{\n                      mt:3\n                    }}\n                    text={'You will start earning gov tokens after the batch is executed'}\n                  />\n                  */\n                }\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                        color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                      {\n                        /*\n                        <Tooltip\n                          placement={'top'}\n                          message={`Batches are executed twice a week`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.1em'}\n                            color={'cellTitle'}\n                            name={'InfoOutline'}\n                          />\n                        </Tooltip>\n                        */\n                      }\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.1em'}\n                            color={'cellTitle'}\n                            name={'InfoOutline'}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                                {\n                                  /*\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                    <Text.span\n                                      fontWeight={500}\n                                      display={'block'}\n                                      color={'copyColor'}\n                                      textAlign={'center'}\n                                    >\n                                      Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedToken}\n                                    </Text.span>\n                                  */\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={2}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n    \n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector\n    }));\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n    this.setState({\n      inputValue\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n    const params = await this.props.getTransactionParams(_amount);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    if (params){\n      const {\n        methodName,\n        methodParams\n      } = params;\n      const contractName = this.props.contractInfo.name;\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, null, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(){\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    return null;\n  }\n\n  async loadData(){\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      contractApproved\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Deposit estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing deposit request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.props.tokenBalance && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.props.tokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            disabled:this.state.buttonDisabled\n                          }}\n                          handleClick={this.executeTx.bind(this)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || null) : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.blue}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.blue}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.blue}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.blue}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.blue}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                              buttonStyle={{\n                                boxShadow:isMint ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null\n                              }}\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                              buttonStyle={{\n                                boxShadow:isBuyClaim ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null\n                              }}\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                              buttonStyle={{\n                                boxShadow:isBuyNoClaim ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null\n                              }}\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import IDLE from '../contracts/IDLE.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.4',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on sunday and wednesday. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        addPostfixForTestnet:true, // Append testnet to eventCategory\n        debugEnabled:false // Enable sending for test environments\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0x826c61c3183B261E4d4a9a28aDbc358061ECd207'\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#002868',\n          rgb:[0, 40, 104],\n          hsl:['217', '100%', '20%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        label:'DyDx',\n        legend:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn'\n      },\n      aave:{\n        label:'Aave',\n        legend:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        },\n        data:{\n          '0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d':{},\n          '0x9ba00d6856a4edf4665bca2c2309936572473b7e':{\"9598633\":\"1000000\",\"9598646\":\"1000001\",\"9598684\":\"1000002\",\"9598823\":\"1000003\",\"9598869\":\"1000004\",\"9598915\":\"1000005\",\"9599092\":\"1000008\",\"9599138\":\"1000009\",\"9599263\":\"1000011\",\"9599267\":\"1000011\",\"9599295\":\"1000012\",\"9599299\":\"1000012\",\"9599307\":\"1000012\",\"9599315\":\"1000012\",\"9599579\":\"1000017\",\"9599866\":\"1000022\",\"9600156\":\"1000026\",\"9600433\":\"1000031\",\"9600704\":\"1000036\",\"9600982\":\"1000042\",\"9601051\":\"1000044\",\"9601073\":\"1000045\",\"9601077\":\"1000045\",\"9601345\":\"1000053\",\"9601619\":\"1000058\",\"9601891\":\"1000063\",\"9602144\":\"1000068\",\"9602429\":\"1000073\",\"9602724\":\"1000078\",\"9602993\":\"1000083\",\"9603272\":\"1000088\",\"9603536\":\"1000093\",\"9603826\":\"1000098\",\"9603840\":\"1000098\",\"9604038\":\"1000102\",\"9604182\":\"1000104\",\"9604457\":\"1000109\",\"9604701\":\"1000114\",\"9604979\":\"1000119\",\"9605247\":\"1000124\",\"9605505\":\"1000129\",\"9605793\":\"1000134\",\"9606073\":\"1000139\",\"9606368\":\"1000144\",\"9606639\":\"1000149\",\"9606896\":\"1000153\",\"9607147\":\"1000158\",\"9607406\":\"1000163\",\"9607722\":\"1000168\",\"9608130\":\"1000175\",\"9608395\":\"1000180\",\"9608656\":\"1000185\",\"9608959\":\"1000190\",\"9609544\":\"1000260\",\"9609811\":\"1000293\",\"9610073\":\"1000314\",\"9610341\":\"1000331\",\"9610601\":\"1000332\",\"9610871\":\"1000333\",\"9611120\":\"1000335\",\"9611386\":\"1000336\",\"9611665\":\"1000337\",\"9611949\":\"1000339\",\"9612210\":\"1000340\",\"9612487\":\"1000341\",\"9612758\":\"1000343\",\"9613012\":\"1000344\",\"9613276\":\"1000346\",\"9613542\":\"1000347\",\"9613824\":\"1000349\",\"9614069\":\"1000351\",\"9614327\":\"1000353\",\"9614596\":\"1000355\",\"9614864\":\"1000356\",\"9615111\":\"1000358\",\"9615394\":\"1000360\",\"9615679\":\"1000361\",\"9615958\":\"1000363\",\"9616245\":\"1000365\",\"9616531\":\"1000367\",\"9616803\":\"1000369\",\"9617053\":\"1000371\",\"9617326\":\"1000373\"}\n        }\n      },\n      curve:{\n        label:'',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:5000,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        1: 'https://mainnet.infura.io/v3/',\n        42: 'https://kovan.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      snapshot:{\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY,\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829'\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.png',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    coverProtocol:{\n      enabled:true,\n      route:'cover-protocol',\n      label:'Cover Protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.png',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      desc:'Buy Coverage for your Idle portfolio or provide liquidity to Cover Protocol',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens with Kyber Widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      totalBalance:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let depositTimestamp = null;\n      deposits[selectedToken] = depositTimestamp;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!depositTimestamp){\n                depositTimestamp = tx.timeStamp;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            depositTimestamp = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = depositTimestamp;\n    });\n\n    return deposits;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase()){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = () => {\n    return this.getStoredItem('walletProvider',false,null);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    if (proposals){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => p.msg.payload.end>currTime );\n      }\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime){\n          validProposals.push(p);\n        } else {\n          const checkIDLEBalance = p.msg.payload.metadata.strategies.find( m => m.name=== 'erc20-balance-of' && m.params.address.toLowerCase() === this.getGlobalConfig(['governance','IDLE','address']).toLowerCase() ) || null;\n          const checkLockedIDLEBalance = p.msg.payload.metadata.strategies.find( m => m.name=== 'erc20-balance-of' && m.params.address.toLowerCase() === this.getGlobalConfig(['contracts','LockedIDLE','address']).toLowerCase() ) || null;\n\n          const [\n            IDLEBalance,\n            lockedIDLEBalance\n          ] = await Promise.all(\n            checkIDLEBalance ? this.getTokenBalance('IDLE',p.address) : null,\n            checkLockedIDLEBalance ? this.getTokenBalance('LockedIDLE',p.address) : null\n          );\n\n          // Add proposal is passed token balance check\n          if ((!checkIDLEBalance || this.BNify(IDLEBalance).gt(0)) && (!checkLockedIDLEBalance || this.BNify(lockedIDLEBalance).gt(0))){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    let output = await this.makeRequest(endpoint);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n\n    if (!globalConfigs.contract.methods.rebalance.enabled || !tokenConfig){\n      return false;\n    }\n\n    const rebalancer = await this.genericContractCall(tokenConfig.idle.token, 'rebalancer');\n\n    if (!rebalancer){\n      return false;\n    }\n\n    const idleRebalancerInstance = await this.createContract('idleRebalancerInstance',rebalancer,globalConfigs.contract.methods.rebalance.abi);\n\n\n    if (!idleRebalancerInstance || !idleRebalancerInstance.contract){\n      return false;\n    }\n\n    // Take next protocols allocations\n    const allocationsPromises = [];\n    const availableTokensPromises = [];\n\n    for (let protocolIndex=0;protocolIndex<tokenConfig.protocols.length;protocolIndex++){\n      const allocationPromise = new Promise( async (resolve, reject) => {\n        try{\n          const allocation = await idleRebalancerInstance.contract.methods.lastAmounts(protocolIndex).call();\n          resolve({\n            allocation,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      allocationsPromises.push(allocationPromise);\n\n      const availableTokenPromise = new Promise( async (resolve, reject) => {\n        try {\n          const protocolAddr = await this.genericContractCall(tokenConfig.idle.token, 'allAvailableTokens', [protocolIndex]);\n          resolve({\n            protocolAddr,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      availableTokensPromises.push(availableTokenPromise);\n    }\n\n    let nextAllocations = null;\n    let allAvailableTokens = null;\n\n    try{\n      nextAllocations = await Promise.all(allocationsPromises);\n      allAvailableTokens = await Promise.all(availableTokensPromises);\n    } catch (error){\n      \n    }\n\n    nextAllocations = nextAllocations && nextAllocations.length ? nextAllocations.filter(v => (v !== null)) : null;\n    allAvailableTokens = allAvailableTokens && allAvailableTokens.length ? allAvailableTokens.filter(v => (v !== null)) : null;\n\n    if ((!allAvailableTokens || !allAvailableTokens.length) || (!nextAllocations || !nextAllocations.length)){\n      return false;\n    }\n\n    // Merge nextAllocations and allAvailableTokens\n    let newTotalAllocation = this.BNify(0);\n    const newProtocolsAllocations = allAvailableTokens.reduce((accumulator,availableTokenInfo) => {\n      if (availableTokenInfo.protocolAddr){\n        const nextAllocation = nextAllocations.find(v => { return v.protocolIndex === availableTokenInfo.protocolIndex; });\n        if (nextAllocation){\n          const allocation = this.BNify(nextAllocation.allocation);\n          accumulator[availableTokenInfo.protocolAddr.toLowerCase()] = allocation;\n          newTotalAllocation = newTotalAllocation.plus(allocation);\n        }\n      }\n      return accumulator;\n    },{});\n\n    // Check if newAllocations differs from currentAllocations\n    let shouldRebalance = false;\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    const protocolsAllocationsPerc = tokenAllocation ? tokenAllocation.protocolsAllocationsPerc : null;\n\n    if (typeof protocolsAllocationsPerc === 'object'){\n      Object.keys(protocolsAllocationsPerc).forEach((protocolAddr) => {\n\n        // Get current protocol allocation percentage\n        const protocolAllocation = protocolsAllocationsPerc[protocolAddr];\n        const protocolAllocationPerc = parseFloat(protocolAllocation).toFixed(3);\n        \n        // Calculate new protocol allocation percentage\n        const newProtocolAllocation = newProtocolsAllocations[protocolAddr.toLowerCase()] ? newProtocolsAllocations[protocolAddr.toLowerCase()] : this.BNify(0);\n        const newProtocolAllocationPerc = newProtocolAllocation ? parseFloat(newProtocolAllocation.div(newTotalAllocation)).toFixed(3) : this.BNify(0);\n\n        // this.customLog(protocolAddr,protocolAllocation.toString(),newProtocolAllocation.toString(),newTotalAllocation.toString(),protocolAllocationPerc,newProtocolAllocationPerc);\n\n        if (protocolAllocationPerc !== newProtocolAllocationPerc){\n          shouldRebalance = true;\n        }\n      });\n    }\n\n    return shouldRebalance;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, nonce, expiry, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    this.props.web3.currentProvider.send({\n      from: holder,\n      jsonrpc: '2.0',\n      params: [holder, data],\n      method: 'eth_signTypedData_v4',\n      id: Date.now().toString().substring(9),\n    }, (error, response) => {\n      if (error || (response && response.error)) {\n        return callback(null,error);\n      } else if (response && response.result) {\n        if (typeof callback_permit === 'function'){\n          callback_permit();\n        }\n        const signedParameters = this.getSignatureParameters_v4(response.result);\n        const { r, s, v } = signedParameters;\n        const permitParams = [expiry, v, r, s];\n\n        const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n        const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n        if (!isNaN(parseInt(nonce)) && useNonce){\n          permitParams.unshift(nonce);\n        }\n        const params = methodParams.concat(permitParams);\n        this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n      }\n    });\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const value = this.props.web3.utils.toWei('0','ether');\n    const allowance = await this.getAllowance(contractName,contractAddr,walletAddr);\n    return allowance && this.BNify(allowance).gt(this.BNify(value.toString()));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // this.customLog('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [daysFirstDeposit,earningsPerc] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        // output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        const amountLents = account ? await this.getAmountLent([token],account) : false;\n        if (amountLents && amountLents[token]){\n          output = amountLents[token];\n        }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n\n            let redeemableBalance = tokenBalance;\n\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n\n            output = redeemableBalance;\n\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}`;\n    /*\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    */\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      // Set cached data\n      if (!this.BNify(tokenBalance).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address !== null ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address) => {\n    return await this.getProtocolBalance(contractName,address);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n      const one = this.normalizeTokenDecimals(18);\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),[tokenConfigFrom.address, WETHAddr, tokenConfigDest.address]]);\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency) => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      switch (frequency){\n        case 'day':\n          const blocksPerDay = blocksPerYear.div(365.242199);\n          speed = speed.times(blocksPerDay);\n        break;\n        case 'week':\n          const blocksPerWeek = blocksPerYear.div(52.1429);\n          speed = speed.times(blocksPerWeek);\n        break;\n        case 'month':\n          const blocksPerMonth = blocksPerYear.div(12);\n          speed = speed.times(blocksPerMonth);\n        break;\n        case 'year':\n          speed = speed.times(blocksPerYear);\n        break;\n        default:\n        break;\n      }\n      return speed;\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (compoundInfo){\n                  if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',totalAllocation.toFixed(5));\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4',govToken,tokenBalanceConverted.toFixed(5));\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      // console.log('CACHED -',count,cachedDataKey,this.BNify(cachedData).toFixed());\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    // console.log('TOKEN DATA - ',tokenConfig.address,isRisk,tokenData);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true);\n\n    if (tokenData){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(Date.now()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          if (!this.BNify(tokenScore).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n    let compAPR = null;\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      if (compAPR){\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(compAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(compAPR);\n      }\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return null;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink pb={[3,2]} href={'https://developers.idle.finance'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Developers</ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Terms of Service</Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Privacy Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Cookie Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Brand Assets</ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Overview</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Proposals</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Leaderboard</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Forum</Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>info@idle.finance</Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'white'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              fontWeight={3}\n              color={this.props.isOpened ? 'blue' : 'dark-gray'}\n              my={0}>\n                {this.props.question}\n              </Heading.h4>\n          </Box>\n          <Flex width={1/5} justifyContent={'flex-end'}>\n            <Icon\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n              color={this.props.isOpened ? 'blue' : 'copyColor'}\n              size={\"1.5em\"}\n            />\n          </Flex>\n        </Flex>\n        <Flex width={1}>\n          {this.props.isOpened &&\n            <Text.p textAlign={'justify'} fontSize={[1,2]} dangerouslySetInnerHTML={{ __html: this.props.answer }}></Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Faquestion from '../Faquestion/Faquestion';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Faq extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection: 'general',\n    generalQuestions: [\n      {\n        q: 'What is Idle?',\n        a: `Idle is a decentralized rebalancing protocol that allows users to automatically and algorithmically manage their digital asset allocation among different third-party DeFi protocols. You can choose to maximize your interest rate returns through our MaxYield strategy or minimize your risk exposure through our RiskAdjusted allocation strategy.`\n      },\n      {\n        q: 'What third-party protocols and assets does Idle support?',\n        a: `Idle connects with Compound, Aave, dYdX, Fulcrum, and DSR, and supports DAI, USDC and USDT.  Security is fundamental at Idle, meaning that our products will only connect to protocols that are audited by a top security firm and battle-tested in terms of time in market and digital assets locked. To add more security, we passed through multiple audit reviews and we use <a href=\"https://defiscore.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">DeFiScore</a> risk assessment to evaluate the risk across DeFi protocols.`\n      },\n      {\n        q: 'Can you walk me through an example?',\n        a: `When utilizing the Idle protocol, a user supplies capital for lending as a part of Idle’s non-custodial smart contract pools; the protocol will automatically rebalance the pool’s current allocation to achieve optimized interest rates, based on the strategy.`\n      }\n    ],\n    guidelinesQuestions: [\n      {\n        q: 'How do I manage my assets?',\n        a: `You can access Idle’s user dashboard where you can deposit funds, monitor performances and see insights, rebalance funds, convert from FIAT to crypto, and redeem back your assets.`\n      },\n      {\n        q: 'How does the rebalancing process work?',\n        a: `A rebalance calculation involves assessing the total assets within a pool, incorporating underlying protocol rate functions and levels of supply and demand, and finally determining an allocation that achieves the optimal interest rate possible after the rebalance takes place, based on the strategy.`\n      },\n      {\n        q: 'What are IdleTokens?',\n        a: `IdleTokens represent your balance in the protocol, and accrue interest over time. As a specific Idle’s pool earns interest, its idleToken becomes convertible into an increasing quantity of the underlying asset. IdleTokens conform to the ERC-20 standard.`\n      }\n    ],\n    ratesQuestions: [\n      {\n        q: 'Has Idle had a security audit?',\n        a: `Idle completed multiple and incremental security audits with Quantstamp in December 2019 and April/May 2020 (<a href=\"https://certificate.quantstamp.com/full/idle-finance\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">view the report</a>). Any issues affecting the performance of the protocol or security of funds have been resolved. Users should review our Terms of Service before using the protocol.`\n      },\n      {\n        q: 'How are digital assets custodied?',\n        a: `Idle does not custody digital assets. When you interact with the Idle protocol, your digital assets will be sent to a smart contract that Idle does not control. The smart contract has the concept of “accounts,” to which only you have access. These accounts have balances for each asset, which then are lent out to underlying protocols. When you want to withdraw, the smart contract interacts with the underlying platforms to withdraw digital assets and route them to your wallet.`\n      },\n      {\n        q: 'Who is the administrator of the Idle smart contract?',\n        a: `We have few administrative privileges (eg pause deposits in case of emergency), but we cannot, in any case, withdraw or move user funds directly. You can read more about here <a href=\"https://developers.idle.finance/advanced/admin-powers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developers.idle.finance/advanced/admin-powers</a>`\n      }\n    ]\n  };\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const {generalQuestions, selectedSection, guidelinesQuestions, ratesQuestions} = this.state;\n    const generalDivs = generalQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`general-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const guidelinesDivs = guidelinesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`guidelines-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const ratesDivs = ratesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`rates-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const isGeneralSelected = selectedSection === 'general';\n    const isGuidelinesSelected = selectedSection === 'guidelines';\n    const isRatesSelected = selectedSection === 'rates';\n    return (\n      <Flex\n        flexDirection={'column'}\n      >\n        <Title\n          mb={3}\n          mt={[3,4]}\n          fontWeight={5}\n          fontSize={[5,6]}\n          component={Heading.h4}\n        >\n          Frequently asked questions\n        </Title>\n\n        <Flex\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n          alignItems={'center'}\n        >\n          <Flex width={[1,3/5]} px={[2,0]} flexDirection={'row'} justifyContent={'space-between'}>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGeneralSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('general')}\n                color={isGeneralSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGeneralSelected ? 'selected' : '']}\n              >\n                General\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGuidelinesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('guidelines')}\n                color={isGuidelinesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGuidelinesSelected ? 'selected' : '']}\n              >\n                Liquidity Providers\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isRatesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('rates')}\n                color={isRatesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isRatesSelected ? 'selected' : '']}\n              >\n                Security\n              </Text>\n            </Flex>\n          </Flex>\n          <Box width={1} mt={[3, 4]} mb={[4, 0]}>\n            {isGeneralSelected && generalDivs}\n            {isGuidelinesSelected && guidelinesDivs}\n            {isRatesSelected && ratesDivs}\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faq;\n","import React, { Component } from 'react';\nimport { Flex, Link, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FlexCards extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    const itemPerc = this.props.itemsPerRow ? Math.floor(100/this.props.itemsPerRow)-2 : Math.floor(100/this.props.cards.length)-1;\n    const justifyContent = this.props.justifyContent ? this.props.justifyContent : 'space-between';\n\n    return (\n      <Flex\n        width={1}\n        px={[3,0]}\n        style={{\n          flexWrap:'wrap'\n        }}\n        alignItems={'flex-start'}\n        justifyContent={justifyContent}\n        flexDirection={['column','row']}\n      >\n        {\n          this.props.cards.map( (p,index) => (\n            <DashboardCard\n              isInteractive={true}\n              key={`card_${index}`}\n              cardProps={{\n                p:2,\n                mb:[2,3],\n                display:'flex',\n                alignItems:'center',\n                height:['65px','80px'],\n                justifyContent:'center',\n                mx: justifyContent !== 'space-between' ? [0,2] : 0,\n                style:{\n                  textAlign:'center',\n                  flex:this.props.isMobile ? null : `0 ${itemPerc}%`,\n                }\n              }}\n            >\n              {\n                p.link ? (\n                  <Link\n                    px={[5,4]}\n                    style={{\n                      width:'100%',\n                      height:'100%',\n                      display:'flex',\n                      alignItems:'center',\n                      justifyContent:'center',\n                    }}\n                    href={p.link}\n                    target={'_blank'}\n                    textAlign={'center'}\n                    rel={'nofollow noopener noreferrer'}\n                  >\n                    <Image\n                      src={p.image}\n                      width={'auto'}\n                      height={'auto'}\n                      maxHeight={'50px'}\n                    />\n                  </Link>\n                ) : (\n                  <Image\n                    src={p.image}\n                    width={'auto'}\n                    height={'auto'}\n                    maxHeight={['35px','50px']}\n                  />\n                )\n              }\n            </DashboardCard>\n            \n          ) )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexCards;","import React, { Component } from 'react';\nimport { Flex, Text, Link, Icon } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass AuditCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          my:[2,0],\n          mx:[0,3],\n          width:[1,'auto']\n        }}\n        isInteractive={this.props.link ? true : false}\n        handleClick={this.props.link ? e => window.open(this.props.link) : null}\n      >\n        <Flex\n          flexDirection={'column'}\n        >\n          <Text\n            mb={2}\n            color={'blue'}\n            fontSize={[1,3]}\n          >\n            {this.props.date}\n          </Text>\n          <Text\n            mb={2}\n            fontSize={4}\n            fontWeight={500}\n          >\n            {this.props.title}\n          </Text>\n          <Link\n            hoverColor={'blue'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'center'\n            }}\n          >\n            VIEW REPORT\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'blue'}\n              style={{\n                transform:'rotate(180deg)'\n              }}\n              name={'KeyboardBackspace'}\n            />\n          </Link>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default AuditCard;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './HowItWorks.module.scss';\nimport { Box, Flex, Heading, Image } from \"rimble-ui\";\n\nclass HowItWorks extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Box\n        p={[3,4]}\n        id={'how-it-works'}\n      >\n        <Flex flexDirection={['column','column']} alignItems={'center'} justifyContent={'center'}>\n          <Title\n            mt={[3,4]}\n            mb={[3,4]}\n            fontWeight={5}\n            fontSize={[5,6]}\n            component={Heading.h4}\n          >\n            How it works\n          </Title>\n          <Flex\n            width={1}\n            alignItems={'center'}\n            maxWidth={['24em','90em']}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/choose-strategy.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Choose your strategy\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Build your portfolio with different allocation strategies that aim to maximize your returns and keeping you in your risk comfort zone\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/deposit-stablecoins.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Deposit your crypto-assets\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Just deposit and relax. Your funds will be automatically allocated among DeFi protocols and you will immediately start earning interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/rebalance.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Automated Rebalancing\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Idle automatically keeps the appropriate allocation mix, depending on the strategy. Idle consistently checks for better opportunities.\n                </Heading.h4>\n              </Box>\n            </Flex>\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/insights-redeem.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Easy insights and redeem\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Monitor your funds’ performance and rebalance events, see your estimated earnings and easlily redeem back your funds + interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default HowItWorks;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Link, Icon, Tooltip, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StrategyBox extends Component {\n\n  state = {\n    selectedToken:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.getHighestAprToken();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.getHighestAprToken();\n    }\n  }\n\n  getHighestAprToken = async () => {\n\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n\n    if (!this.props.contractsInitialized || strategyInfo.comingSoon){\n      return false;\n    }\n\n    let selectedToken = null;\n    let highestValue = null;\n    const tokensAprs = {};\n    const availableTokens = this.props.availableStrategies[this.props.strategy];\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      switch (this.props.strategy){\n        case 'best':\n        default:\n          const tokenAPR = await this.functionsUtil.getTokenAprs(tokenConfig);\n          if (tokenAPR && tokenAPR.avgApr !== null){\n            tokensAprs[token] = tokenAPR.avgApr;\n            if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n              highestValue = tokenAPR.avgApr;\n              selectedToken = token;\n            }\n          }\n        break;\n        case 'risk':\n        const tokenScore = await this.functionsUtil.getTokenScore(tokenConfig,true);\n          if (!highestValue || highestValue.lt(tokenScore)){\n            highestValue = tokenScore;\n            selectedToken = token;\n          }\n        break;\n      }\n    });\n\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n    const strategyUrl = '/#'+this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+this.props.strategy;\n    // const chartColor = strategyInfo.chartColor ? strategyInfo.chartColor : null;\n    const tokenConfig = this.state.selectedToken ? this.props.availableStrategies[this.props.strategy][this.state.selectedToken] : null;\n\n    return (\n      <DashboardCard\n        cardProps={{\n          pt:[3,3],\n          mt:[3,0],\n          ml:['0.35em',0],\n          width:[1,'21em'],\n          mr:['0.35em','2em'],\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'flex-start',\n          height:['fit-content','400px']\n        }}\n        isVisible={ typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true }\n      >\n        <Flex\n          mb={2}\n          justifyContent={'center'}\n        >\n          <Image\n            src={strategyInfo.icon}\n            height={['2.2em','2.8em']}\n          />\n        </Flex>\n        <Flex\n          my={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n        >\n          <Title\n            fontWeight={5}\n            fontSize={[4,'1.7em']}\n          >\n            {strategyInfo.title}\n          </Title>\n        </Flex>\n        <Flex\n          mt={2}\n          mb={[2,3]}\n          minHeight={'50px'}\n          alignItems={'flex-start'}\n          justifyContent={'center'}\n        >\n          <Text\n            px={[3,4]}\n            fontWeight={500}\n            textAlign={'center'}\n          >\n            {strategyInfo.desc}\n          </Text>\n        </Flex>\n        {\n          strategyInfo.comingSoon ? (\n            <Flex\n              mt={3}\n              mb={[0,3]}\n              height={'126px'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n              alignItems={['flex-end','end']}\n            >\n              <Image\n                width={1}\n                src={'/images/strategy-placeholder.jpg'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              mt={[0,3]}\n              flexDirection={'row'}\n              alignItems={'flex-start'}\n              justifyContent={'center'}\n              minHeight={['69px','88px']}\n            >\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                borderRight={`1px solid ${this.props.theme.colors.divider}`}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    APY\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <AssetField\n                  fieldInfo={{\n                    name:'apy',\n                    showTooltip:false,\n                    props:{\n                      decimals:2,\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n                <AssetField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'idleDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    SCORE\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','scoreShort'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <AssetField\n                  fieldInfo={{\n                    name:'score',\n                    props:{\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !strategyInfo.comingSoon && \n            <Flex\n              mt={2}\n              width={1}\n              height={'60px'}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n              id={`${this.props.strategy}_performance_chart`}\n            >\n              <Image\n                width={1}\n                height={'60px'}\n                src={`/images/strategies/${this.props.strategy}-chart.png`} />\n              {\n                /*\n                <AssetField\n                  fieldInfo={{\n                    name:'aprChart'\n                  }}\n                  chartProps={{\n                    lineWidth:2\n                  }}\n                  {...this.props}\n                  color={chartColor}\n                  tokenConfig={tokenConfig}\n                  token={this.state.selectedToken}\n                  rowId={`${this.props.strategy}_performance_chart`}\n                />\n                */\n              }\n            </Flex>\n        }\n        <Flex\n          width={1}\n          height={'64px'}\n          position={'relative'}\n          boxShadow={'0px -6px 6px -4px rgba(0,0,0,0.1)'}\n        >\n          {\n            strategyInfo.comingSoon ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mr={2}\n                  fontSize={3}\n                  fontWeight={550}\n                  color={'copyColor'}\n                  style={{\n                    fontStyle:'italic'\n                  }}\n                  hoverColor={'copyColor'}\n                >\n                  Coming Soon\n                </Text>\n              </Flex>\n            ) : (\n              <Link\n                href={strategyUrl}\n                style={{display:'flex',width:'100%'}}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mr={2}\n                      fontSize={3}\n                      fontWeight={4}\n                      color={'copyColor'}\n                      hoverColor={'copyColor'}\n                    >\n                      Start with {strategyInfo.title}\n                    </Text>\n                    <Icon\n                      size={'1.2em'}\n                      color={'copyColor'}\n                      name={'ArrowForward'}\n                    />\n                  </Flex>\n              </Link>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StrategyBox;\n","import React, { Component } from \"react\";\nimport { Flex, Box, Button, Form, Text, Checkbox, Link } from 'rimble-ui';\nimport axios from 'axios';\nimport styles from './NewsletterForm.module.scss';\nimport globalConfigs from '../configs/globalConfigs';\n\nclass NewsletterForm extends Component {\n  state = {\n    validated: false,\n    privacy: false,\n    email: null,\n    message: ''\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { validated: false };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.privacy){\n      this.setState({message:'Please check the privacy policy box to proceed.', messageColor:'red' });\n      return false;\n    }\n\n    this.setState({validated:true });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      if (r.data.status === 'success'){\n        this.setState({message:'Thanks! Check your e-mail and confirm your subscription', messageColor:'green' });\n      } else {\n        this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n      }\n    })\n    .catch(err => {\n      this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n    });\n  }\n\n  toggleCheckbox(e) {\n    this.setState({ privacy: e.target.checked });\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n\n    return (\n        <Box mt={[2,3]} maxWidth={'45em'} width={1}>\n          <Form onSubmit={this.handleSubmit}>\n            <Flex flexDirection={['column','row']} alignItems={['center','flex-start']} justifyContent={'center'}>\n              <Box width={[1,7/10]}>\n                <Form.Field width={1} label={''}>\n                  <Form.Input\n                    type=\"email\"\n                    name=\"EMAIL\"\n                    required\n                    width={1}\n                    outline={'none'}\n                    border={0}\n                    fontSize={[2,5]}\n                    borderRadius={0}\n                    pl={0}\n                    pb={3}\n                    textAlign={['center','left']}\n                    placeholder={'Enter your e-mail'}\n                    boxShadow={'none !important'}\n                    borderBottom={'1px solid #a6a6a6'}\n                    onChange={this.handleValidation}\n                  />\n                </Form.Field>\n                <Flex mb={[3,0]} flexDirection={'row'} alignItems={'center'}>\n                  <Checkbox onClick={ e => this.toggleCheckbox(e) } label={'I\\'ve read and accepted the'} required />\n                  <Link color={'blue'} hoverColor={'blue'} target={'_blank'} rel=\"nofollow noopener noreferrer\" href={\"https://www.iubenda.com/privacy-policy/61211749\"}>Privacy Policy</Link>\n                </Flex>\n                {this.state.message && this.state.message.length &&\n                  <Text.p py={0} mt={[2,3]} mb={3} textAlign={['center','left']} color={this.state.messageColor}>{this.state.message}</Text.p>\n                }\n              </Box>\n              <Box width={[1,3/10]} my={[0,'26px']}>\n                <Button className={styles.gradientButton} type=\"submit\" width={1}>\n                  GET UPDATES\n                </Button>\n              </Box>\n            </Flex>\n          </Form>\n        </Box>\n    );\n  }\n}\nexport default NewsletterForm;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      boxShadow:1,\n      width:'40px',\n      height:'40px',\n      mainColor:'white',\n      borderRadius:'50%',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Flex, ToastMessage, Link, Icon } from \"rimble-ui\";\n\nclass FloatingToastMessage extends Component {\n  state = {}\n\n  render() {\n    let ToastComponent = null;\n\n    switch (this.props.variant){\n      case 'success':\n        ToastComponent = ToastMessage.Success;\n      break;\n      case 'processing':\n        ToastComponent = ToastMessage.Processing;\n      break;\n      case 'failure':\n        ToastComponent = ToastMessage.Failure;\n      break;\n      default:\n      break;\n    }\n\n    if (ToastComponent){\n      return (\n        <Flex width={ !this.props.isMobile ? '420px': '100vw' } position={'fixed'} zIndex={'9999'} p={ !this.props.isMobile ? '1em' : 0 } right={'0'} bottom={'0'}>\n          <ToastComponent\n            style={{width:'100%'}}\n            message={this.props.message}\n            secondaryMessage={this.props.secondaryMessage}\n            closeElem={false}\n          />\n          <Link onClick={this.props.handleClose} style={ this.props.isMobile ? {position:'absolute',top:'10px',right:'10px',width:'20px',height:'20px'} : {position:'absolute',top:'22px',right:'22px',width:'16px',height:'16px'}}>\n            <Icon\n              name={'Close'}\n              color={'dark-gray'}\n              size={ this.props.isMobile ? '20' : '16' }\n            />\n          </Link>\n        </Flex>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default FloatingToastMessage;","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport { Box, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const {\n      avgAPY,\n      totalAUM\n    } = await this.functionsUtil.getAggregatedStats();\n\n    const totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n\n    this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              {\n                this.props.subtitle ? this.props.subtitle : (\n                  <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>Assets Under Management <Text.span color={'cellTitle'} fontWeight={3} fontSize={'70%'}>(V3 + V4)</Text.span></Text.span>\n                )\n              }\n            </Title>\n          )\n        }\n      </Box>\n    ) : null;\n  }\n}\n\nexport default AssetsUnderManagement;\n","import Faq from '../Faq/Faq';\nimport Title from '../Title/Title';\nimport Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport ExtLink from '../ExtLink/ExtLink';\nimport styles from './Landing.module.scss';\nimport FlexCards from '../FlexCards/FlexCards';\nimport AuditCard from '../AuditCard/AuditCard';\nimport HowItWorks from '../HowItWorks/HowItWorks';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport StrategyBox from '../StrategyBox/StrategyBox';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport NewsletterForm from '../NewsletterForm/NewsletterForm';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport { Image, Flex, Box, Heading, Link, Text, Icon } from 'rimble-ui';\nimport FloatingToastMessage from '../FloatingToastMessage/FloatingToastMessage';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nlet scrolling = false;\n\nclass Landing extends Component {\n  state = {\n    avgApr:null,\n    carouselMax:2,\n    carouselIndex:0,\n    activeCarousel:1,\n    runConfetti:false,\n    activeBullet:null,\n    protocolsAprs:null,\n    testPerformed:false,\n    totalAllocation:null,\n    carouselOffsetLeft:0,\n    setActiveCarousel:null,\n    carouselIntervalID:null,\n    protocolsAllocations:null,\n    randomAllocationEnabled:false,\n  };\n\n  // Clear all the timeouts\n  async componentWillUnmount(){\n\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  setActiveCarousel = (activeCarousel) => {\n    activeCarousel = activeCarousel<=3 ? activeCarousel : 1;\n    this.setState({activeCarousel});\n  }\n\n  async componentDidMount(){\n    this.props.processCustomParam(this.props);\n\n    if (this.props.contractsInitialized){\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const multiplier = this.props.isMobile ? 1 : 0.75;\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left*multiplier)+'px';\n\n    this.setState({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n    this.props.processCustomParam(this.props,prevProps);\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (contractsInitialized) {\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  processScrolling = () => {\n    if (scrolling){\n\n      const bulletCards = document.getElementsByClassName('bulletCard');\n      let activeBullet = 0;\n\n      for (let i=0;i<bulletCards.length;i++){\n        const bulletCard = bulletCards[i];\n        if (bulletCard && bulletCard.offsetParent){\n          const offsetY = bulletCard.offsetTop ? bulletCard.offsetTop : bulletCard.offsetParent.offsetTop;\n          if (window.scrollY >= offsetY-200){\n            activeBullet = i+2;\n          }\n        }\n      }\n      scrolling = false;\n\n      if (parseInt(activeBullet) !== parseInt(this.state.activeBullet)){\n        this.setState({activeBullet});\n      }\n    }\n  };\n\n  getAllocations = async () => {\n\n    let totalAllocation = this.functionsUtil.BNify(0);\n\n    const newState = {\n      avgApr: null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.functionsUtil.asyncForEach(this.props.tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [protocolBalance, tokenDecimals, exchangeRate] = await Promise.all([\n        this.functionsUtil.getProtocolBalance(contractName),\n        this.functionsUtil.getTokenDecimals(contractName),\n        ( protocolInfo.functions.exchangeRate ? this.functionsUtil.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.functionsUtil.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      const protocolAllocation = this.functionsUtil.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n    });\n\n    if (this.state.randomAllocationEnabled){\n      let remainingAllocation = parseFloat(totalAllocation.toString());\n      const totProtocols = Object.keys(protocolsAllocations).length;\n      Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n        let alloc = parseFloat(protocolsAllocations[protocolAddr].toString());\n        if (i === totProtocols-1){\n          alloc = remainingAllocation;\n        } else {\n          alloc = parseFloat(Math.random()*(remainingAllocation-(remainingAllocation/3))+(remainingAllocation/3));\n          remainingAllocation -= alloc;\n        }\n        protocolsAllocations[protocolAddr] = this.functionsUtil.BNify(alloc);\n      });\n    }\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    newState.totalAllocation = totalAllocation;\n    newState.protocolsAllocations = protocolsAllocations;\n    newState.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (this.state.protocolsAprs){\n      newState.avgApr = this.functionsUtil.getAvgApr(this.state.protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    this.setState(newState);\n\n    return newState;\n  }\n\n  getAprs = async () => {\n    const Aprs = await this.functionsUtil.genericIdleCall('getAPRs');\n\n    if (!Aprs){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n    const protocolsAprs = {};\n\n    this.props.tokenConfig.protocols.forEach((info,i) => {\n      // const protocolName = info.name;\n      const protocolAddr = info.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        const protocolApr = aprs[addrIndex];\n        protocolsAprs[protocolAddr] = this.functionsUtil.BNify(+this.functionsUtil.toEth(protocolApr));\n      }\n    });\n\n    const newState = {\n      avgApr: null,\n      protocolsAprs\n    };\n\n    if (this.state.protocolsAllocations && this.state.totalAllocation){\n      newState.avgApr = this.functionsUtil.getAvgApr(protocolsAprs,this.state.protocolsAllocations,this.state.totalAllocation);\n    }\n\n    this.setState(newState);\n    return newState;\n  };\n\n  startLending = async e => {\n    this.props.updateSelectedTab(e, '1');\n    window.location.href = '#invest';\n  }\n\n  setConfetti = (runConfetti) => {\n    this.setState({\n      runConfetti\n    })\n  }\n\n  connectAndGoToRoute = (route) => {\n\n    const goToLocation = () => {\n      window.location = \"/#\"+route;\n    }\n\n    if (this.props.account){\n      goToLocation();\n    } else {\n      this.props.connectAndValidateAccount(goToLocation);\n    }\n  }\n\n  render() {\n    const { network } = this.props;\n    const availableTokens = [];\n    Object.values(this.props.availableStrategies).forEach( tokens => {\n      Object.keys(tokens).forEach( token => {\n        if (availableTokens.indexOf(token) === -1){\n          availableTokens.push(token);\n        }\n      });\n    });\n    return (\n      <Box\n        height={'100vh'}\n        className={styles.mainViewport}\n        style={{\n          paddingBottom: !network.isCorrectNetwork ? \"8em\" : \"0\"\n        }}\n      >\n        <Box\n          pl={[3,5]}\n          pr={[3,0]}\n          pt={['2.5em', '3em']}\n          className={styles.headerContainer}\n          minHeight={ Math.max((this.props.innerHeight+this.props.innerHeight*0.025),768) }\n        >\n          <Box position={'relative'} zIndex={10}>\n            <Flex\n              overflow={'hidden'}\n              alignItems={'flex-start'}\n              flexDirection={['column','row']}\n              mt={['7em',Math.max(window.innerHeight*0.225,145)+'px']}\n            >\n              <Flex\n                width={[1,1/3]}\n                justifyContent={['center','flex-end']}\n              >\n                <Flex\n                  pb={3}\n                  width={1}\n                  textAlign={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['50em', '24em']}\n                  alignItems={['center','flex-start']}\n                >\n                  <Heading.h1\n                    fontWeight={5}\n                    color={'white'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    lineHeight={['initial','2.5rem']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    The best place\n                  </Heading.h1>\n                  <Heading.h1\n                    mb={[2,3]}\n                    color={'white'}\n                    fontWeight={300}\n                    lineHeight={'initial'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    for your money\n                  </Heading.h1>\n                  <Heading.h2\n                    style={{\n                      width:'100%',\n                    }}\n                    color={'white'}\n                    fontWeight={400}\n                    fontSize={[2,'1.2em']}\n                    textAlign={['center','justify']}\n                  >\n                    Choose your strategy and earn the yield you deserve without worry about finding the best option, either if you want to optimize returns or risks.\n                  </Heading.h2>\n                  {\n                    !this.props.isMobile && \n                      <Flex\n                        mt={4}\n                      >\n                        <RoundButton\n                          handleClick={ (e) => {\n                            window.location.hash = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.functionsUtil.getGlobalConfig(['strategies']))[0];\n                          }}\n                        >\n                          Go to Dashboard\n                        </RoundButton>\n                      </Flex>\n                  }\n                </Flex>\n              </Flex>\n              <Flex\n                mr={['auto',0]}\n                width={[1,2/3]}\n                ml={[0,'100px']}\n                textAlign={'center'}\n                position={'relative'}\n                flexDirection={'column'}\n                height={['415px','460px']}\n                justifyContent={['flex-start','flex-end']}\n              >\n                <Flex\n                  left={0}\n                  right={0}\n                  width={'100%'}\n                  height={'400px'}\n                  top={['initial','0']}\n                  position={'absolute'}\n                  bottom={['0','initial']}\n                  overflow={this.state.carouselIndex === 0 ? 'visible' : 'hidden'}\n                >\n                  <Flex\n                    top={['initial',0]}\n                    flexDirection={'row'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={[Object.keys(globalConfigs.strategies).length*100+'%','140%']}\n                    height={['auto','400px']}\n                    bottom={['5px','initial']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      overflowY:'visible',\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    {\n                      Object.keys(globalConfigs.strategies).map((strategy,strategyIndex) => (\n                        <StrategyBox\n                          {...this.props}\n                          strategy={strategy}\n                          key={`strategy_${strategy}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  mt={[0,'20px']}\n                  id={'carousel-container'}\n                  justifyContent={['center','flex-start']}\n                >\n                  <RoundIconButton\n                    buttonProps={{\n                      mr:[4,3]\n                    }}\n                    iconName={'ArrowBack'}\n                    disabled={this.state.carouselIndex === 0}\n                    handleClick={ e => this.handleCarousel('back') }\n                  />\n                  <RoundIconButton\n                    iconName={'ArrowForward'}\n                    handleClick={ e => this.handleCarousel('next') }\n                    disabled={this.state.carouselIndex === this.state.carouselMax}\n                  />\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <HowItWorks />\n\n        <Box\n          mb={[3,4]}\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'partners'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Audited and Battle-tested\n            </Title>\n            <Text\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              We take security very seriously, that's why our Smart-Contracts are fully Audited and battle-tested.\n            </Text>\n            <Flex\n              width={1}\n              px={[3,4]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetsUnderManagement\n                {...this.props}\n                counterStyle={{\n                  display:'block',\n                  color:'dark-gray',\n                  overflow: 'hidden',\n                  textAlign: 'center',\n                  whiteSpace: 'nowrap',\n                  textOverflow: 'ellipsis',\n                  fontFamily:this.props.theme.fonts.counter,\n                  fontWeight:this.props.theme.fontWeights[5],\n                  fontSize: this.props.isMobile ? this.props.theme.fontSizes[5] : this.props.theme.fontSizes[8],\n                }}\n                subtitle={null}\n                subtitleProps={{\n                  textAlign:'center'\n                }}\n              />\n              <Link\n                mb={3}\n                target={'_blank'}\n                textAlign={'center'}\n                rel={'nofollow noopener noreferrer'}\n                href={'https://certificate.quantstamp.com/view/idle-finance'}\n              >\n                <Image\n                  width={'15em'}\n                  src={'images/quantstamp-badge.svg'}\n                />\n              </Link>\n              <Title\n                my={[2,3]}\n                mt={[3,4]}\n                fontWeight={3}\n                fontSize={[3,4]}\n                color={'dark-gray'}\n                component={Heading.h4}\n              >\n                Full Audit Report:\n              </Title>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <AuditCard\n                  title={'Idle Protocol'}\n                  date={'December 10th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-finance'}\n                />\n                <AuditCard\n                  title={'Idle Governance'}\n                  date={'November 26th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-goverance'}\n                />\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n        <Box\n          mt={[4,5]}\n          px={[3,4]}\n          py={[4,5]}\n          id={'integrators'}\n          className={styles.gradientBackground}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','75em']}\n          >\n            <Title\n              mb={3}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Build with Idle\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Just few lines of code to integrate the power of Idle into your dApp\n            </Text>\n            <Flex\n              mt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={['center','space-between']}\n            >\n              {\n                /*\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  alignItems={['center','flex-start']}\n                >\n                  <FlexCards\n                    itemsPerRow={4}\n                    cards={[\n                      {\n                        link:'https://zerion.io',\n                        image:'images/integrators/zerion.svg'\n                      },\n                      {\n                        link:'https://gnosis.io',\n                        image:'images/integrators/gnosis.png'\n                      },\n                      {\n                        link:'https://cryptolocally.com',\n                        image:'images/integrators/cryptolocally.png'\n                      },\n                      {\n                        link:'https://www.peepsdemocracy.com',\n                        image:'images/integrators/peeps.png'\n                      }\n                    ]}\n                    {...this.props}\n                  />\n                </Flex>\n                */\n              }\n              <Flex\n                mt={2}\n                width={1}\n                flexDirection={['column','row']}\n                alignItems={['center','flex-start']}\n                justifyContent={['center','flex-start']}\n              >\n                <Flex\n                  mb={[3,0]}\n                  width={[1,0.5]}\n                  flexDirection={'column'}\n                  alignItems={['center','flex-start']}\n                  justifyContent={['center','flex-start']}\n                >\n                  <Title\n                    mb={3}\n                    fontWeight={5}\n                    component={Heading.h5}\n                    fontSize={[4,'1.75em']}\n                  >\n                    Designed for Developers\n                  </Title>\n\n                  <Text\n                    mb={3}\n                    pr={[0,5]}\n                    textAlign={['center','justify']}\n                  >\n                    A fully integrated suite of DeFi yield products easy to integrate into your dApp so your teams don't need to stitch together disparate protocols or spend months integrating and updating yield functionality.<br />One integration to rule them all.\n                  </Text>\n                  <Text\n                    mb={2}\n                    fontWeight={500}\n                  >\n                    Supported Assets:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    flexDirection={'row'}\n                  >\n                    {\n                      availableTokens.map( token => (\n                        <AssetField\n                          token={token}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              width:'2.2em',\n                              height:'2.2em'\n                            }\n                          }}\n                          key={`asset_${token}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={['column','row']}\n                    justifyContent={['center','flex-start']}\n                  >\n                    <RoundButton\n                      buttonProps={{\n                        width:[1,'auto']\n                      }}\n                      handleClick={ (e) => {\n                        window.open('https://developers.idle.finance')\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'flex-end'}\n                        justifyContent={'center'}\n                      >\n                        <Text\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'white'}\n                        >\n                          Read the docs\n                        </Text>\n                        <Icon\n                          ml={2}\n                          size={'1.2em'}\n                          color={'white'}\n                          name={'KeyboardArrowRight'}\n                        />\n                      </Flex>\n                    </RoundButton>\n                    <Text\n                      mt={[2,0]}\n                      ml={[0,2]}\n                    >\n                      or\n                    </Text>\n                    <ExtLink\n                      mt={[2,0]}\n                      ml={[0,2]}\n                      fontSize={2}\n                      hoverColor={'primary'}\n                      href={'https://idlefinance.typeform.com/to/PUC7nO'}\n                    >\n                      Contact Us\n                    </ExtLink>\n                    {\n                      /*\n                      <RoundButton\n                        buttonProps={{\n                          ml:2,\n                          mainColor:'red',\n                          width:[1,'auto']\n                        }}\n                        handleClick={ (e) => {\n                          window.open('https://idlefinance.typeform.com/to/PUC7nO')\n                        }}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'flex-end'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={3}\n                            color={'white'}\n                            fontSize={[1,2]}\n                          >\n                            Contact us\n                          </Text>\n                          <Icon\n                            ml={2}\n                            name={'Send'}\n                            size={'1.2em'}\n                            color={'white'}\n                          />\n                        </Flex>\n                      </RoundButton>\n                      */\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={[1,0.5]}\n                >\n                  <iframe\n                    height={\"350\"}\n                    title={'integrate'}\n                    style={{\n                      border:'0',\n                      width: '100%',\n                      height: '350px',\n                      overflow:'hidden',\n                      transform: 'scale(1)',\n                    }}\n                    sandbox={\"allow-scripts allow-same-origin\"}\n                    src={\"https://carbon.now.sh/embed?bg=rgba%28255%2C255%2C255%2C0%29&t=cobalt&wt=none&l=auto&ds=false&dsyoff=20px&dsblur=68px&wc=true&wa=true&pv=0px&ph=0px&ln=false&fl=1&fm=Fira+Code&fs=13.5px&lh=143%25&si=false&es=2x&wm=false&code=const%2520idleTokenAbi%2520%253D%2520require%28%27idleToken.json%27%29%253B%2520%252F%252F%2520Include%2520idleToken%2520ABI%250Aconst%2520user%2520%253D%2520%270x...%27%253B%2520%252F%252F%2520set%2520user%2520address%2520%250Aconst%2520idleDAI%2520%253D%2520%270x3fE7940616e5Bc47b0775a0dccf6237893353bB4%27%253B%2520%252F%252F%2520idleDAIYield%2520address%250A%250A%252F%252F%2520Initialize%2520web3%2520contract%250Aconst%2520idleToken%2520%253D%2520new%2520web3.eth.Contract%28idleTokenAbi%252C%2520idleDAI%29%253B%250A%250A%252F%252F%2520Approve%2520contract%250Aconst%2520_amount%2520%253D%2520%271000000000000000000%27%253B%2520%252F%252F%25201%2520DAI%250Aawait%2520idleToken.approve%28idleTokenAddress%252C%2520_amount%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B%250A%250A%252F%252F%2520Deposit%2520tokens%250Aawait%2520idleToken.mintIdleToken%28_amount%252C%2520true%252C%2520user%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B\"}\n                  >\n                  </iframe>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'investors'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Backed By\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle has been funded by industry leaders\n            </Text>\n            <FlexCards\n              justifyContent={'center'}\n              itemsPerRow={4}\n              cards={[\n                {\n                  link:'https://consensys.net',\n                  image:'images/investors/consensys.png'\n                },\n                {\n                  link:'https://www.gumi-cryptos.com',\n                  image:'images/investors/gumi.png'\n                },\n                {\n                  link:'https://www.greenfield.one',\n                  image:'images/investors/greenfield.png'\n                },\n                /*\n                {\n                  link:'https://quantstamp.com',\n                  image:'images/investors/quantstamp.png'\n                },\n                */\n                {\n                  link:'https://dialectic.ch',\n                  image:'images/investors/dialectic.png'\n                },\n                {\n                  link:'https://www.thelao.io',\n                  image:'images/investors/the-lao.png'\n                },\n                {\n                  link:'https://br.capital',\n                  image:'images/investors/br-capital.png'\n                },\n                {\n                  link:'https://www.longhashventures.com',\n                  image:'images/investors/lh-ventures.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'protocols'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Built with the best\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle infrastructure rely on the most powerful DeFi protocols\n            </Text>\n            <FlexCards\n              cards={[\n                {\n                  link:'https://app.compound.finance',\n                  image:'images/partners/compound.svg'\n                },\n                /*\n                {\n                  link:'https://fulcrum.trade',\n                  image:'images/partners/fulcrum.svg'\n                },\n                */\n                {\n                  link:'https://aave.com',\n                  image:'images/partners/aave.svg'\n                },\n                {\n                  link:'https://dydx.exchange',\n                  image:'images/partners/dydx.svg'\n                },\n                {\n                  link:'https://oasis.app/',\n                  image:'images/partners/oasis.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box id=\"faq\" pt={[4,5]} pb={[4,6]}>\n          <Box maxWidth={['50em','60em']} mx={'auto'} px={[3,5]}>\n            <Faq selectedToken={this.props.selectedToken} tokenConfig={this.props.tokenConfig} />\n          </Box>\n        </Box>\n\n        <Flex id=\"contacts\" flexDirection={'column'} position={'relative'} justifyContent={'center'} alignItems={'center'} pb={[3,6]} px={[3,6]}>\n          <Flex flexDirection={'column'} justifyContent={['center','flex-start']} alignItems={['center','flex-start']} width={1} maxWidth={['35em','70em']}>\n            <Heading.h3 color={'blue'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Don't be shy, let's talk.\n            </Heading.h3>\n            <Heading.h3 color={'dark-gray'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Let's build something great together.\n            </Heading.h3>\n            <NewsletterForm />\n          </Flex>\n        </Flex>\n\n        <Footer tokenConfig={this.props.tokenConfig} />\n\n        {\n          this.props.toastMessageProps &&\n            <FloatingToastMessage isMobile={this.props.isMobile} {...this.props.toastMessageProps} handleClose={this.props.closeToastMessage} />\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Landing;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Icon, Text, Image } from 'rimble-ui';\n\nclass DashboardMenu extends Component {\n  state = {\n    buyModalOpened:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setBuyModalOpened(buyModalOpened){\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length){\n      return null;\n    }\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return !this.props.isMobile || showMobile;\n    });\n\n    if (!visibleLinks.length){\n      return null;\n    }\n\n    return (\n      <Flex\n        p={0}\n        flexDirection={['row','column']}\n      >\n        {\n          !this.props.isMobile &&\n            <Flex\n              p={3}\n              mb={3}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <RouterLink to=\"/\">\n                <Image\n                  position={'relative'}\n                  height={['35px','38px']}\n                  src=\"images/logo-gradient.svg\"\n                />\n              </RouterLink>\n            </Flex>\n        }\n        {\n          visibleLinks.map((menuLink,menuIndex) => {\n            const isExternalLink = menuLink.isExternalLink;\n            const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n            return (\n              <Box\n                my={[0,3]}\n                key={`menu-${menuIndex}`}\n                width={[1/visibleLinks.length,'auto']}\n              >\n                <LinkComponent\n                  to={menuLink.route}\n                  href={menuLink.route}\n                  style={{textDecoration:'none'}}\n                >\n                  <Flex\n                    p={[2,3]}\n                    borderRadius={[0,2]}\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    backgroundColor={ menuLink.selected ? '#f3f6ff' : 'transparent' }\n                    boxShadow={menuLink.selected ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={['column','row']}\n                      justifyContent={['center','flex-start']}\n                    >\n                      {menuLink.image &&\n                        <Image\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          src={ menuLink.selected ? menuLink.image : (menuLink.imageInactive ? menuLink.imageInactive : menuLink.image)}\n                          height={['1.2em','1.6em']}\n                        />\n                      }\n                      {menuLink.icon &&\n                        <Icon\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          name={menuLink.icon}\n                          size={ this.props.isMobile ? '1.4em' : '1.6em' }\n                          color={ menuLink.selected ? menuLink.bgColor : 'copyColor' }\n                        />\n                      }\n                      <Text\n                        fontWeight={3}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                        fontSize={['11px',2]}\n                        style={{\n                          whiteSpace:'nowrap'\n                        }}\n                      >\n                        {menuLink.label}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </LinkComponent>\n                {\n                  /*\n                  menuLink.submenu.length>0 && (\n                    <Flex className={[styles.submenu]} style={{maxHeight:menuLink.selected ? menuLink.submenu.length*36+'px' : '0' }} flexDirection={'column'} borderLeft={ menuLink.selected ? '2px solid rgba(0,0,0,0.3)' : null }>\n                      {\n                        menuLink.submenu.map((submenuLink,submenuIndex) => {\n                          return (\n                            <RouterLink key={`submenu-${menuIndex}-${submenuIndex}`} to={`${menuLink.route}/${submenuLink.route}`} style={{textDecoration:'none'}}>\n                              <Flex py={2} pl={'40px'} flexDirection={'row'} alignItems={'center'}>\n                                <Text fontSize={'0.85rem'}>{submenuLink.label}</Text>\n                              </Flex>\n                            </RouterLink>\n                          )\n                        })\n                      }\n                    </Flex>\n                  )\n                  */\n                }\n              </Box>\n            );\n          })\n        }\n        {\n        /*\n        !this.props.isMobile  &&\n          <Box\n            width={'auto'}\n            borderTop={`1px solid ${theme.colors.divider}`}\n          >\n            <Flex\n              p={[2,3]}\n              style={{\n                cursor:'pointer'\n              }}\n              borderRadius={[0,2]}\n              flexDirection={'row'}\n              alignItems={'center'}\n              onClick={ e => this.setBuyModalOpened(true) }\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={['column','row']}\n                justifyContent={['center','flex-start']}\n              >\n                <Icon\n                  mr={[0,3]}\n                  ml={[0,2]}\n                  mb={[1,0]}\n                  size={'1.6em'}\n                  align={'center'}\n                  color={'copyColor'}\n                  name={'AddCircleOutline'}\n                />\n                <Text\n                  fontWeight={3}\n                  fontSize={[0,2]}\n                  color={'copyColor'}\n                  textAlign={'center'}\n                  style={{\n                    whiteSpace:'nowrap'\n                  }}\n                >\n                  Add Funds\n                </Text>\n              </Flex>\n            </Flex>\n          </Box>\n        <BuyModal\n          {...this.props}\n          isOpen={this.state.buyModalOpened}\n          closeModal={ e => this.setBuyModalOpened(false) }\n        />\n        */\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default DashboardMenu;","import moment from 'moment';\nimport theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\nimport { Flex, Text, Box } from 'rimble-ui';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StatsChart extends Component {\n  state = {\n    chartProps:{},\n    chartType:null,\n    chartData:null,\n    chartWidth:null\n  };\n\n  async componentDidMount() {\n    this.setState({\n      chartData:null,\n      chartType:null,\n      chartProps:null,\n    });\n    this.loadUtils();\n    this.loadApiData();\n  }\n\n  async componentDidUpdate(prevProps) {\n    const showAdvancedChanged = prevProps.showAdvanced !== this.props.showAdvanced;\n    const apiResultsChanged = prevProps.apiResults !== this.props.apiResults;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (apiResultsChanged || showAdvancedChanged || tokenChanged){\n      this.componentDidMount();\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  parseAum = value => {\n    return (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken || !this.props.chartMode || !this.props.apiResults){\n      return false;\n    }\n\n    const CustomTooltipRow = props => (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n\n    const CustomTooltip = props => {\n      return (\n        <DashboardCard\n          key={props.point.id}\n          cardProps={{\n            py:2,\n            px:3,\n            width:1,\n            left: props.point.data.itemPos>50 ? '-110%' : '0'\n          }}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            {\n              props.point.data.xFormatted && \n                <Text\n                  mb={2}\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                  textAlign={'left'}\n                >\n                  {props.point.data.xFormatted}\n                </Text>\n            }\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const maxGridLines = 4;\n    const apiResults = this.props.apiResults;\n    const apiResults_unfiltered = this.props.apiResults_unfiltered;\n    const totalItems = apiResults.length;\n    const protocols = Object.assign([],this.props.tokenConfig.protocols);\n    // const compoundProtocol = this.props.tokenConfig.protocols.find( p => (p.name === 'compound'));\n\n    const versionInfo = globalConfigs.stats.versions[this.props.idleVersion];\n\n    let keys = {};\n    let tempData = {};\n    let gridYStep = 0;\n    let itemIndex = 0;\n    let chartData = [];\n    let chartProps = {};\n    let chartType = Line;\n    let gridYValues = [];\n    let maxChartValue = 0;\n    let axisBottomIndex = 0;\n    let idleChartData = null;\n    let firstIdleBlock = null;\n\n    switch (this.props.chartMode){\n      case 'VOL':\n        let divergingData = {};\n\n        const startTimestamp = parseInt(apiResults_unfiltered[0].timestamp);\n        const endTimestamp = parseInt(moment()._d.getTime()/1000);\n\n        for (let timestamp=startTimestamp;timestamp<=endTimestamp;timestamp+=86400){\n          const date = moment(timestamp*1000).format(\"YYYY/MM/DD\");\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n        }\n\n        let lastRow = null;\n        apiResults_unfiltered.forEach(row => {\n          const date = moment(row.timestamp*1000).format(\"YYYY/MM/DD\");\n          const idleTokens = this.functionsUtil.fixTokenDecimals(row.idleSupply,18);\n\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp:row.timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n\n          if (lastRow){\n            const idleTokensPrev = this.functionsUtil.fixTokenDecimals(lastRow.idleSupply,18);\n            const idleTokensDiff = !idleTokens.eq(idleTokensPrev);\n            if (idleTokensDiff){\n              const diff = idleTokens.minus(idleTokensPrev);\n              // Deposits\n              if (diff.gte(0)){\n                divergingData[date].deposits+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,divergingData[date].deposits);\n              } else {\n                divergingData[date].redeems+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,Math.abs(divergingData[date].deposits));\n              }\n            }\n\n          } else {\n            divergingData[date].deposits+=parseFloat(idleTokens);\n          }\n\n          lastRow = row;\n        });\n\n        chartData = Object.values(divergingData).filter(v => {\n          return (!this.props.startTimestamp || v.timestamp>=this.props.startTimestamp) && (!this.props.endTimestamp || v.timestamp<=this.props.endTimestamp);\n        });\n\n        let maxRange = 0;\n        chartData.forEach(v => {\n          maxRange = Math.max(maxRange,Math.abs(v.deposits),Math.abs(v.redeems));\n        })\n\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          indexBy: 'date',\n          enableLabel: false,\n          minValue:-maxRange,\n          maxValue:maxRange,\n          label: d => {\n            return Math.abs(d.value);\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days',\n          },\n          axisLeft: null,\n          axisRight: {\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:8,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(Math.abs(v),0)\n          },\n          markers: [\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { strokeOpacity: 0 },\n              textStyle: { fill: theme.colors.transactions.action.deposit },\n              legend: 'deposits',\n              legendPosition: 'top-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { stroke: theme.colors['dark-gray'], strokeDasharray: '5 3' },\n              textStyle: { fill: theme.colors.transactions.action.redeem },\n              legend: 'redeems',\n              legendPosition: 'bottom-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n          ],\n          keys:['deposits','redeems'],\n          padding:0.4,\n          colors:[theme.colors.transactions.action.deposit, theme.colors.transactions.action.redeem],\n          labelTextColor: 'inherit:darker(1.4)',\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 80 : 100,\n              itemHeight: 18,\n              translateX: 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            },\n            tooltip:{\n              container:{\n                boxShadow:null,\n                background:null\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 50, bottom: 45, left: 50 } : { top: 20, right: 70, bottom: 70, left: 50 },\n          tooltip:(data) => {\n            const xFormatted = this.functionsUtil.strToMoment(data.indexValue).format('MMM DD');\n            const point = {\n              id:data.id,\n              data:{\n                xFormatted\n              }\n            };\n            const depositFormatted = this.functionsUtil.abbreviateNumber(data.data.deposits,2)+' '+this.props.selectedToken;\n            const redeemFormatted = this.functionsUtil.abbreviateNumber(data.data.redeems,2)+' '+this.props.selectedToken;\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                <CustomTooltipRow\n                  label={'Deposits'}\n                  color={theme.colors.deposit}\n                  value={depositFormatted}\n                />\n                <CustomTooltipRow\n                  label={'Redeem'}\n                  color={theme.colors.redeem}\n                  value={redeemFormatted}\n                />\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      /*\n      case 'AUM_ALL':\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens[globalConfigs.network.requiredNetwork]),async (tokenName,i) => {\n          const tokenConfig = availableTokens[globalConfigs.network.requiredNetwork][tokenName];\n          const tokenDataApi = await this.props.getTokenData(tokenConfig.address);\n          chartData.push({\n            id:tokenName,\n            color: tokenConfig.color,\n            data: tokenDataApi.map((d,i) => {\n              const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n              const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,tokenConfig.decimals);\n              const aum = idleTokens.times(idlePrice);\n              return {\n                x: moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\"),\n                y: parseInt(aum.toString())\n              };\n            })\n          });\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken,\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v),\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            legendPosition: 'middle'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            format: '%b %d',\n            tickValues: this.props.isMobile ? 'every 4 days' : 'every 3 days',\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 36,\n            legendPosition: 'middle'\n          },\n          enableArea:false,\n          curve:\"linear\",\n          enableSlices:'x',\n          enableGridX:true,\n          enableGridY:false,\n          colors:d => d.color,\n          pointSize:0,\n          pointColor:{ from: 'color', modifiers: []},\n          pointBorderWidth:1,\n          pointLabel:\"y\",\n          pointLabelYOffset:-12,\n          useMesh:true,\n          animate:false,\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 60, bottom: 40, left: 60 },\n        };\n      break;\n      */\n      case 'AUM':\n\n        maxChartValue = 0;\n\n        chartData.push({\n          id:'AUM',\n          color: 'hsl('+globalConfigs.stats.tokens[this.props.selectedToken].color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n            const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n            const aum = idleTokens.times(idlePrice);\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(aum.toString());\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x,y };\n          })\n        });\n\n        // Add allocation\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          apiResults.map((d,i) => {\n            return d.protocolsData.filter((protocolAllocation,x) => {\n                return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            })\n            .map((protocolAllocation,z) => {\n              const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n              if (!protocolPaused){\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals));\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                let foundItem = chartData[0].data.filter(item => { return item.x === x });\n                if (foundItem){\n                  foundItem = foundItem[0];\n                  const pos = chartData[0].data.indexOf(foundItem);\n                  if (!foundItem.allocations){\n                    foundItem.allocations = {};\n                  }\n                  foundItem.allocations[p.name] = y;\n                  chartData[0].data[pos] = foundItem;\n                }\n              }\n              return undefined;\n            })[0]\n          }).filter((v) => { return v !== undefined; } )\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:v => this.functionsUtil.formatMoney(v,v<1 ? 3 :0),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:true,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            if (typeof point === 'object' && typeof point.data === 'object'){\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  <CustomTooltipRow\n                    label={point.serieId}\n                    color={point.serieColor}\n                    value={point.data.yFormatted}\n                  />\n                  {\n                    point.data.allocations && typeof point.data.allocations === 'object' &&\n                      Object.keys(point.data.allocations).map(protocolName => {\n                        const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                        const protocolAllocation = point.data.allocations[protocolName];\n                        const protocolAllocationFormatted = this.functionsUtil.formatMoney(protocolAllocation,protocolAllocation<1 ? 3 : 0);\n                        const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                        return (\n                          <CustomTooltipRow\n                            label={protocolName}\n                            color={protocolColor}\n                            key={`${point.id}_${protocolName}`}\n                            value={`${protocolAllocationFormatted} (${protocolAllocationPerc})`}\n                          />\n                        );\n                      })\n                  }\n                </CustomTooltip>\n              );\n              /*\n              return (\n                <div\n                    key={point.id}\n                    style={{\n                      background: 'white',\n                      color: 'inherit',\n                      fontSize: 'inherit',\n                      borderRadius: '2px',\n                      boxShadow: 'rgba(0, 0, 0, 0.25) 0px 1px 2px',\n                      padding: '5px 9px'\n                    }}\n                >\n                  <div>\n                    <table style={{width:'100%',borderCollapse:'collapse'}}>\n                      <tbody>\n                        <tr>\n                          <td style={{padding:'3px 5px'}}>\n                            <span style={{display:'block', width: '12px', height: '12px', background: point.serieColor}}></span>\n                          </td>\n                          <td style={{padding:'3px 5px'}}>{point.serieId}</td>\n                          <td style={{padding:'3px 5px'}}><strong>{point.data.yFormatted}</strong></td>\n                        </tr>\n                        {\n                          point.data.allocations && typeof point.data.allocations === 'object' &&\n                            Object.keys(point.data.allocations).map(protocolName => {\n                              const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                              const protocolAllocation = this.functionsUtil.formatMoney(point.data.allocations[protocolName],0);\n                              const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                              return (\n                                <tr key={`${point.id}_${protocolName}`}>\n                                  <td style={{padding:'3px 5px'}}>\n                                    <span style={{display:'block', width: '12px', height: '12px', background: protocolColor}}></span>\n                                  </td>\n                                  <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{protocolName}</td>\n                                  <td style={{padding:'3px 5px'}}><strong>{protocolAllocation}</strong> ({protocolAllocationPerc})</td>\n                                </tr>\n                              );\n                            })\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              );\n              */\n            }\n\n            return null;\n          }\n        };\n      break;\n      case 'ALL':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\");\n\n          let row = {\n            date\n          };\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const foundProtocol = this.props.tokenConfig.protocols.find((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() });\n            if (foundProtocol){\n              const protocolName = this.functionsUtil.capitalize(foundProtocol.name);\n              if (!protocolPaused){\n                let allocation = parseFloat(this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals));\n                keys[protocolName] = 1;\n                row[protocolName] = allocation;\n                row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName.toLowerCase()].color.hsl.join(',')+')';\n                // console.log(protocolName,this.functionsUtil.BNify(protocolData.allocation).toString(),this.props.tokenConfig.decimals,allocation);\n                maxChartValue = Math.max(maxChartValue,allocation);\n              } else {\n                row[protocolName] = 0;\n              }\n            }\n          });\n\n\n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n            orient: 'left',\n            tickSize: 0,\n            tickPadding: 10,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            tickValues:gridYValues,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickSize: 0,\n            tickPadding: 10,\n            orient: 'bottom-left',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize:this.props.isMobile ? 12 : 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize:this.props.isMobile ? 12 : 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 60 },\n          tooltip:({ id, value, color }) => {\n            const allocation = this.functionsUtil.formatMoney(value,0);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation} {this.props.selectedToken}</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'ALL_PERC':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\")\n          let row = {\n            date:moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\")\n          };\n          if (tempData[date]){\n            row = tempData[date];\n          }\n\n          const totalAllocation = d.protocolsData.reduce((accumulator,protocolAllocation) => {\n            const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n            return this.functionsUtil.BNify(accumulator).plus(allocation);\n          },0);\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const protocolName = this.props.tokenConfig.protocols.filter((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() })[0].name;\n            if (!protocolPaused){\n              const allocation = this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals);\n              const allocationPerc = parseFloat(allocation.div(totalAllocation).times(100));\n              keys[protocolName] = 1;\n              row[protocolName] = allocationPerc;\n              row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n            } else if (typeof row[protocolName] !== undefined) {\n              row[protocolName] = 0;\n            } \n          });\n          \n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          data: chartData,\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 40, bottom: 40, left: 60 },\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => parseInt(v)+'%'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            orient: 'bottom',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          tooltip:({ id, value, color }) => {\n            const allocation = parseInt(value)===100 ? this.functionsUtil.formatMoney(value,0) : this.functionsUtil.formatMoney(value,2);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation}%</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'APR':\n\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n                if (!protocolPaused){\n                  const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                  const y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.rate,18));\n\n                  maxChartValue = Math.max(maxChartValue,y);\n\n                  return { x, y };\n                }\n                return undefined;\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(2)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    // const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'SCORE':\n\n        let prevValue = 0;\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(protocolAllocation.defiScore);\n\n                y = isNaN(y) || !y ? prevValue : y;\n                prevValue = y;\n                maxChartValue = Math.max(maxChartValue,y);\n\n                return { x, y };\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            let y = parseFloat(d.idleScore);\n            y = isNaN(y) || !y ? prevValue : y;\n            prevValue = y;\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // debugger;\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(1),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE_V4':\n\n        itemIndex = 0;\n        maxChartValue = 0;\n        // let prevApy = null;\n        let prevApr = null;\n        let prevData = null;\n        let startBalance = this.functionsUtil.BNify(1);\n        let currentBalance = this.functionsUtil.BNify(1);\n        let avgApy = this.functionsUtil.BNify(0);\n\n        // console.log('PRICE_V4',apiResults);\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const apr = this.functionsUtil.fixTokenDecimals(d.idleRate,18).div(100);\n          // const apy = this.functionsUtil.apr2apy(apr);\n          \n          avgApy = avgApy.plus(apr.times(100));\n\n          if (prevApr){\n            const days = (d.timestamp-prevData.timestamp)/86400;\n            // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n            const earnings = currentBalance.times(prevApr.times(days).div(365));\n            currentBalance = currentBalance.plus(earnings);\n\n            const earning = currentBalance.div(startBalance).minus(1).times(100);\n            y = parseFloat(earning);\n\n            // apy = earning.times(365).div(totDays).toFixed(2);\n            apy = avgApy.div(i+1).toFixed(2);\n          }\n\n          prevData = d;\n          // prevApy = apy;\n          prevApr = apr;\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        protocols.forEach( p => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          // prevApy = null;\n          prevApr = null;\n          prevData = null;\n          let baseProfit = 0;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n          avgApy = this.functionsUtil.BNify(0);\n          startBalance = this.functionsUtil.BNify(1);\n          currentBalance = this.functionsUtil.BNify(1);\n\n          apiResults.forEach( (d,i) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n                if (protocolData[field]){\n                  return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(protocolData[field]));\n                }\n                return this.functionsUtil.BNify(acc);\n              },0) : this.functionsUtil.BNify(protocolData[rateField]);\n\n              const protocolPaused = protocolRate.eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => (d1.blocknumber>=firstProtocolBlock) );\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n\n                let y = 0;\n                let apy = 0;\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const apr = this.functionsUtil.fixTokenDecimals(protocolRate,18).div(100);\n\n                avgApy = avgApy.plus(apr.times(100));\n                // const apy = this.functionsUtil.apr2apy(apr);\n\n                if (prevData){\n                  const days = (d.timestamp-prevData.timestamp)/86400;\n                  // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n                  const earnings = currentBalance.times(prevApr.times(days).div(365));\n                  currentBalance = currentBalance.plus(earnings);\n\n                  const earning = currentBalance.div(startBalance).minus(1).times(100);\n                  y = parseFloat(earning)+baseProfit;\n\n                  apy = avgApy.div(i+1).toFixed(2);\n                }\n\n                prevData = d;\n                prevApr = apr;\n\n                if (firstIdleBlock === null){\n                  firstIdleBlock = parseInt(d.blocknumber);\n                }\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n                // const blocknumber = d.blocknumber;\n\n                itemIndex++;\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                chartRow.data.push(rowData);\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE':\n        // let prevTokenPrice = null;\n        maxChartValue = 0;\n        let firstTokenPrice = null;\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          let days = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n          if (!firstTokenPrice){\n            firstTokenPrice = tokenPrice;\n          } else {\n            y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n\n            days = (d.timestamp-apiResults[0].timestamp)/86400;\n            const earning = tokenPrice.div(firstTokenPrice).minus(1).times(100);\n            apy = earning.times(365).div(days).toFixed(2);\n\n            // console.log(firstTokenPrice.toString(),tokenPrice.toString(),earning.toString(),days,y,apy);\n          }\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        await this.functionsUtil.asyncForEach(protocols,async (p) => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          let baseProfit = 0;\n          firstTokenPrice = null;\n          let lastRowData = null;\n          let lastTokenPrice = null;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n\n          await this.functionsUtil.asyncForEach(apiResults,async (d) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData && protocolData[rateField]){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolPaused = this.functionsUtil.BNify(protocolData[rateField]).eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => {\n                      return d1.blocknumber>=firstProtocolBlock;\n                    });\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n                let tokenExchangeRate = protocolData.price;\n                let tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n\n                // Take data from\n                if (protocolInfo && protocolInfo.data && protocolInfo.data[p.address.toLowerCase()] && protocolInfo.data[p.address.toLowerCase()][d.blocknumber]){\n                  tokenExchangeRate = this.functionsUtil.BNify(globalConfigs.stats.protocols[p.name].data[p.address.toLowerCase()][d.blocknumber]);\n                  tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                }/* else if (p.name === 'aave'){\n                  // Token holders (aDAI = 0xc025c03e10f656d3ee76685d53d236824d8ef3da , aUSDC = 0xd2c734fbd8f5d1c809185e014016dd4097e94711)\n                  let aaveTokenBalance = await this.functionsUtil.genericContractCall(p.token,'balanceOf',['0xd2c734fbd8f5d1c809185e014016dd4097e94711'],{},d.blocknumber);\n                  if (aaveTokenBalance){\n                    if (!Object.values(aave_data).length){\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(1,p.decimals);\n                      aave_data[d.blocknumber] = aaveTokenBalance.toString();\n                    } else {\n                      const firstBalance = Object.values(aave_data)[0];\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(this.functionsUtil.BNify(aaveTokenBalance).div(this.functionsUtil.BNify(firstBalance)).toFixed(p.decimals),p.decimals);\n                      aave_data[d.blocknumber] = tokenExchangeRate.toString();\n                    }\n                  }\n                }\n                */\n\n                let y = baseProfit;\n                let apy = 0;\n\n                if (!firstTokenPrice){\n                  firstTokenPrice = tokenPriceFixed;\n                } else {\n                  if (tokenPriceFixed.lt(lastTokenPrice)){\n                    firstTokenPrice = tokenPriceFixed;\n                    const lastYDiff = chartRow.data[chartRow.data.length-1].y-chartRow.data[chartRow.data.length-2].y;\n                    y = lastRowData.y+lastYDiff;\n                    baseProfit = y;\n                  } else {\n                    y += parseFloat(tokenPriceFixed.div(firstTokenPrice).minus(1).times(100));\n                  }\n\n                  const days = (d.timestamp-apiResults[0].timestamp)/86400;\n                  const earning = tokenPriceFixed.div(firstTokenPrice).minus(1).times(100);\n                  apy = earning.times(365).div(days).toFixed(2);\n                }\n\n                y = Math.max(0,y);\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                lastRowData = rowData;\n                chartRow.data.push(rowData);\n                lastTokenPrice = tokenPriceFixed;\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      chartType,\n      chartProps,\n      chartData\n    });\n  }\n\n  render() {\n    return(\n      <GenericChart\n        showLoader={true}\n        {...this.state.chartProps}\n        height={this.props.height}\n        type={this.state.chartType}\n        data={this.state.chartData}\n        width={this.state.chartWidth}\n        isMobile={this.props.isMobile}\n        parentId={this.props.parentId}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default StatsChart;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass Rebalance extends Component {\n\n  state = {\n    loading:true,\n    processing:{\n      rebalance:{\n        txHash:null,\n        loading:false\n      },\n    },\n    shouldRebalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.checkRebalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged || accountChanged){\n      this.checkRebalance();\n    }\n  }\n\n  checkRebalance = async () => {\n    this.setState({\n      loading:true,\n    });\n\n    const shouldRebalance = await this.functionsUtil.checkRebalance(this.props.tokenConfig);\n\n    this.setState({\n      loading:false,\n      shouldRebalance\n    });\n  }\n\n  rebalance = async (e) => {\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Rebalance',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      let txDenied = false;\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (tx.status === 'success'){\n        // Toast message\n        window.toastProvider.addMessage(`Rebalance completed`, {\n          secondaryMessage: `Now the pool is balanced!`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"success\",\n        });\n\n      } else if (!txDenied){\n        window.toastProvider.addMessage(`Rebalance error`, {\n          secondaryMessage: `The rebalance has failed, try again...`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"failure\",\n        });\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          rebalance:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n\n      this.checkRebalance();\n    }\n\n    const callback_receipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            rebalance:{\n              ...prevState.processing.rebalance,\n              txHash\n            }\n          }\n        })\n      );\n    };\n\n    this.props.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'rebalance', [], null , callback, callback_receipt);\n\n    this.setState({\n      processing:{\n        rebalance:{\n          txHash:null,\n          loading:true\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        px={3}\n        width={1}\n        minHeight={'100px'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n      {\n        this.state.loading ? (\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking rebalance...'}\n          />\n        ) : (\n          this.state.processing.rebalance.loading ? (\n            <TxProgressBar web3={this.props.web3} waitText={`Rebalance estimated in`} endMessage={`Finalizing rebalance request...`} hash={this.state.processing.rebalance.txHash} />\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                mt={0}\n                mb={3}\n                textAlign={'center'}\n              >\n                {this.state.shouldRebalance ? 'Rebalance the entire pool. All users will bless you.' : 'The pool is already balanced.'}\n              </Text>\n              <RoundButton\n                buttonProps={{\n                  width:'auto',\n                  disabled:!this.state.shouldRebalance\n                }}\n                handleClick={e => this.rebalance(e)}\n              >\n                Rebalance\n              </RoundButton>\n            </Flex>\n          )\n        )\n      }\n      </Flex>\n    )\n  }\n}\n\nexport default Rebalance;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React from \"react\";\nimport {\n  Modal,\n  Button,\n  Flex,\n  Field,\n  Select\n} from \"rimble-ui\";\nimport moment from 'moment';\nimport ModalCard from './ModalCard';\nimport 'react-date-range/dist/styles.css';\nimport { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/theme/default.css';\n\nclass DateRangeModal extends React.Component {\n\n  state = {\n    quickSelection:'',\n    ranges:{\n      startDate: this.props.startDate ? this.props.startDate : new Date(),\n      endDate: this.props.endDate ? this.props.endDate : new Date(),\n      key: 'selection'\n    }\n  }\n\n  handleSelect(ranges){\n    this.setState({\n      quickSelection:'',\n      ranges:ranges.selection\n    });\n  }\n\n  handleQuickSelect(e){\n    let startDate = null;\n    let endDate = moment(new Date());\n    const quickSelection = e.target.value;\n\n    switch (quickSelection){\n      case 'day':\n        startDate = endDate.clone().subtract(1,'day');\n      break;\n      case 'week':\n        startDate = endDate.clone().subtract(1,'week');\n      break;\n      case 'weeks':\n        startDate = endDate.clone().subtract(2,'week');\n      break;\n      case 'month':\n        startDate = endDate.clone().subtract(1,'month');\n      break;\n      default:\n        startDate = null;\n        endDate = null;\n      break;\n    }\n\n    if (startDate && endDate){\n      startDate = startDate._d;\n      endDate = endDate._d;\n\n      const ranges = {\n        startDate,\n        endDate,\n        key:'selection'\n      };\n\n      this.setState({\n        ranges,\n        quickSelection\n      }, () => {\n        this.closeModal();\n      });\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.startDate !== this.props.startDate || prevProps.endDate !== this.props.endDate){\n      this.setState({\n        ranges:{\n          startDate: this.props.startDate ? this.props.startDate : new Date(),\n          endDate: this.props.endDate ? this.props.endDate : new Date(),\n          key: 'selection'\n        }\n      });\n    }\n  }\n\n  closeModal(){\n    const newState = this.props.handleSelect(this.state.ranges,this.state.quickSelection);\n    const ranges = {\n      startDate:newState.startTimestampObj ? newState.startTimestampObj._d : new Date(),\n      endDate:newState.endTimestampObj ? newState.endTimestampObj._d : new Date(),\n      key: 'selection'\n    };\n    this.setState({\n      ranges\n    });\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Header title={'Select Date Range'}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} flexDirection={'column'} alignItems={'center'}>\n              <Field label=\"Quick Date Selection\" style={{display:'flex',width:'100%',alignItems:'stretch',justifyContent:'center'}}>\n                <Select\n                  style={{\n                    color:'#7d888d',\n                    fontSize:'14px',\n                    height:'2.5em',\n                    boxShadow:'none'\n                  }}\n                  width={'100%'}\n                  required={true}\n                  onChange={this.handleQuickSelect.bind(this)}\n                  value={this.state.quickSelection}\n                  options={[\n                    { value: '', label: \"Select an option\" },\n                    { value: \"day\", label: \"Last day\" },\n                    { value: \"week\", label: \"Last week\" },\n                    { value: \"weeks\", label: \"Last 2 weeks\" },\n                    { value: \"month\", label: \"Last month\" }\n                  ]}\n                />\n              </Field>\n              <DateRange\n                ranges={[this.state.ranges]}\n                minDate={this.props.minDate}\n                maxDate={this.props.maxDate}\n                onChange={this.handleSelect.bind(this)}\n              />\n            </Flex>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              APPLY\n              </Button>\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n\n}\n\nexport default DateRangeModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  execute(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n      this.setState({\n        txStatus:tx.status,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,this.props.params,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              hash={this.state.processing.txHash}\n              waitText={`${this.props.action} estimated in`}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;\n","import moment from 'moment';\nimport Title from '../Title/Title';\nimport StatsChart from './StatsChart';\nimport React, { Component } from 'react';\nimport Rebalance from '../Rebalance/Rebalance';\nimport StatsCard from '../StatsCard/StatsCard';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport DateRangeModal from '../utilities/components/DateRangeModal';\nimport { Flex, Text, Heading, Box, Icon, Button, Link } from 'rimble-ui';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nclass Stats extends Component {\n  state = {\n    aum:null,\n    apr:null,\n    days:'-',\n    delta:null,\n    earning:null,\n    minDate:null,\n    maxDate:null,\n    carouselMax:1,\n    rebalances:'-',\n    buttonGroups:[],\n    apiResults:null,\n    carouselIndex:0,\n    idleVersion:null,\n    statsVersions:{},\n    minStartTime:null,\n    endTimestamp:null,\n    showAdvanced:true,\n    govTokensPool:null,\n    unlentBalance:null,\n    quickSelection:null,\n    startTimestamp:null,\n    endTimestampObj:null,\n    shouldRebalance:null,\n    carouselOffsetLeft:0,\n    startTimestampObj:null,\n    showRefreshIdleSpeed:false,\n    apiResults_unfiltered:null,\n    dateRangeModalOpened:false\n  };\n\n  quickSelections = {\n    day:'Last day',\n    week:'Last week',\n    weeks:'Last 2 weeks',\n    month:'Last month'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadParams();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  showRefreshIdleSpeed(){\n    this.setState({\n      showRefreshIdleSpeed:true\n    });\n  }\n\n  getLatestAvailableVersion(){\n    const statsVersions = globalConfigs.stats.versions;\n    let latestVersion = null;\n    Object.keys(statsVersions).forEach( version => {\n      const versionInfo = statsVersions[version];\n      if (versionInfo.enabledStrategies.includes(this.props.selectedStrategy)){\n        latestVersion = version;\n      }\n    });\n\n    return latestVersion;\n  }\n\n  getVersionInfo(version){\n    if (!version){\n      version = this.state.idleVersion;\n    }\n\n    if (!globalConfigs.stats.versions[version]){\n      return null;\n    }\n\n    const versionInfo = Object.assign({},globalConfigs.stats.versions[version]);\n\n    if (versionInfo.strategiesParams && versionInfo.strategiesParams[this.props.selectedStrategy]){\n      const versionInfoExtra = versionInfo.strategiesParams[this.props.selectedStrategy];\n      Object.keys(versionInfoExtra).forEach( param => {\n        versionInfo[param] = versionInfoExtra[param];\n      });\n    }\n\n    return versionInfo;\n  }\n\n  async loadParams() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    const newState = {};\n    const { match: { params } } = this.props;\n\n    const currentNetworkAvailableTokens = Object.keys(this.props.availableTokens);\n\n    if (!!params.customToken && currentNetworkAvailableTokens.indexOf(params.customToken.toUpperCase()) !== -1 ){\n      newState.selectedToken = params.customToken.toUpperCase();\n    } else {\n      newState.selectedToken = this.props.selectedToken.toUpperCase();\n    }\n\n    newState.tokenConfig = this.props.availableTokens[newState.selectedToken];\n    newState.minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp,'YYYY-MM-DD');\n    newState.maxEndDate = moment();\n\n    newState.endTimestampObj = moment(moment().format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    newState.latestVersion = this.getLatestAvailableVersion();\n    newState.idleVersion = this.state.idleVersion === null ? newState.latestVersion : this.state.idleVersion;\n\n    const versionInfo = this.getVersionInfo(newState.idleVersion);\n\n    // console.log('loadParams',newState.latestVersion,newState.idleVersion,versionInfo);\n\n    if (newState.idleVersion && versionInfo.endTimestamp){\n      const newEndTimestampObj = moment(moment(versionInfo.endTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.endTimestampObj.isAfter(newEndTimestampObj)){\n        newState.endTimestampObj = newEndTimestampObj;\n        newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n      }\n\n      if (!newState.maxEndDate || newState.maxEndDate.isAfter(newEndTimestampObj)){\n        newState.maxEndDate = newEndTimestampObj;\n      }\n    }\n\n    newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n\n    // Set start date\n    newState.startTimestampObj = newState.endTimestampObj.clone().subtract(1,'month');\n    newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n\n    if (newState.idleVersion && versionInfo.startTimestamp){\n      const newStartTimestampObj = moment(moment(versionInfo.startTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.startTimestampObj.isBefore(newStartTimestampObj)){\n        newState.startTimestampObj = newStartTimestampObj;\n        newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n      }\n\n      if (newState.minStartTime.isBefore(newStartTimestampObj)){\n        newState.minStartTime = newStartTimestampObj;\n      }\n    }\n\n    newState.minDate = newState.minStartTime._d;\n    newState.maxDate = newState.maxEndDate._d;\n\n    if (newState !== this.state){\n      await this.setStateSafe(newState);\n    }\n  }\n\n  setDateRange = (ranges,quickSelection=null) => {\n\n    const minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp);\n\n    let startTimestampObj = moment(ranges.startDate).isSameOrAfter(minStartTime) ? moment(ranges.startDate) : minStartTime;\n    let endTimestampObj = moment(ranges.endDate);\n\n    if (startTimestampObj.isSame(endTimestampObj)){\n      endTimestampObj.add(1,'day');\n    }\n\n    endTimestampObj = moment(endTimestampObj.format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    if (startTimestampObj.isBefore(this.state.minStartTime)){\n      startTimestampObj = this.state.minStartTime;\n    }\n\n    if (endTimestampObj.isAfter(this.state.maxEndDate)){\n      endTimestampObj = this.state.maxEndDate;\n    }\n\n    const startTimestamp = parseInt(startTimestampObj._d.getTime()/1000);\n    const endTimestamp = parseInt(endTimestampObj._d.getTime()/1000);\n\n    const newState = {\n      minStartTime,\n      endTimestamp,\n      quickSelection,\n      startTimestamp,\n      endTimestampObj,\n      startTimestampObj\n    };\n\n    this.setStateSafe(newState);\n\n    return newState;\n  }\n\n  toggleAdvancedCharts = (e) => {\n    e.preventDefault();\n    this.setStateSafe({\n      showAdvanced:!this.state.showAdvanced\n    });\n  }\n\n  setDateRangeModal = (dateRangeModalOpened) => {\n    if (dateRangeModalOpened !== this.state.dateRangeModalOpened){\n      this.setStateSafe({\n        dateRangeModalOpened\n      });\n    }\n  }\n\n  async componentDidMount() {\n\n    if (!this.props.web3){\n      this.props.initWeb3();\n      return false;\n    }\n\n    const style = document.createElement('style');\n    style.id = 'crisp-custom-style';\n    style.type = 'text/css';\n    style.innerHTML = `\n    .crisp-client{\n      display:none !important;\n    }`;\n    document.body.appendChild(style);\n\n    this.loadUtils();\n    await this.loadParams();\n    this.loadApiData();\n    this.loadCarousel();\n  }\n\n  loadCarousel(){\n    const carouselMax = this.props.isMobile ? 3 : 2;\n    this.setStateSafe({\n      carouselMax\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const strategyChanged = prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const dateChanged = prevState.startTimestamp !== this.state.startTimestamp || prevState.endTimestamp !== this.state.endTimestamp;\n    const versionChanged = prevState.idleVersion !== this.state.idleVersion;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n\n    if (mobileChanged){\n      this.loadCarousel();\n    }\n\n    if (contractsInitialized || tokenChanged || strategyChanged || versionChanged){\n      // console.log('componentDidUpdate',this.props.selectedStrategy,this.props.selectedToken);\n      await this.componentDidMount();\n    } else if (dateChanged){\n      this.loadApiData();\n    }\n  }\n\n  filterTokenData = (apiResults) => {\n    return apiResults.filter((r,i) => {\n      return (!this.state.startTimestamp || r.timestamp >= this.state.startTimestamp) && (!this.state.endTimestamp || r.timestamp <= this.state.endTimestamp);\n    });\n  }\n\n  setIdleVersion = idleVersion => {\n    this.setStateSafe({\n      idleVersion\n    });\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    // Get COMP APR\n    // const compAPR = await this.functionsUtil.getCompAPR(this.props.tokenConfig);\n    // console.log('compAPR',compAPR.toString());\n\n    const startTimestamp = this.state.minDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.minDate).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n    const endTimestamp = this.state.maxDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.maxDate).format('DD/MM/YYYY 23:59:59'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n\n    const isRisk = ['v3','v4'].includes(this.state.idleVersion) && this.props.selectedStrategy === 'risk';\n    let apiResults_unfiltered = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    const apiResults = this.filterTokenData(apiResults_unfiltered);\n\n    // console.log('loadApiData',startTimestamp,endTimestamp,new Date(startTimestamp*1000),new Date(endTimestamp*1000),apiResults,apiResults_unfiltered);\n\n    if (!apiResults || !apiResults_unfiltered || !apiResults.length || !apiResults_unfiltered.length){\n      return false;\n    }\n\n    const firstResult = apiResults[0];\n    const lastResult = Object.values(apiResults).pop();\n\n    window.moment = moment;\n\n    let days = (lastResult.timestamp-firstResult.timestamp)/86400;\n    if (days === 0){\n      days = 1;\n    }\n\n    let apr = null;\n    let delta = 'N/A';\n\n    const idleTokens = this.functionsUtil.fixTokenDecimals(lastResult.idleSupply,18);\n    const firstIdlePrice = this.functionsUtil.fixTokenDecimals(firstResult.idlePrice,this.props.tokenConfig.decimals);\n    const lastIdlePrice = this.functionsUtil.fixTokenDecimals(lastResult.idlePrice,this.props.tokenConfig.decimals);\n\n    // Calculate AUM\n    let aum = idleTokens.times(lastIdlePrice);\n    // Convert Token balance\n    aum = await this.functionsUtil.convertTokenBalance(aum,this.props.selectedToken,this.props.tokenConfig,isRisk);\n\n    const compoundInfo = this.props.tokenConfig.protocols.filter((p) => { return p.name === 'compound' })[0];\n    const firstCompoundData = compoundInfo ? firstResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n    const lastCompoundData = compoundInfo ? lastResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n\n    if (this.state.idleVersion === 'v4') {\n\n      apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.functionsUtil.fixTokenDecimals(r.idleRate,18);\n        return this.functionsUtil.BNify(sum).plus(idleRate);\n      },0);\n\n      // Calculate average\n      apr = apr.div(apiResults.length);\n\n      if (compoundInfo){\n        const compoundWithCOMPInfo = globalConfigs.stats.protocols.compoundWithCOMP;\n        const rateField = compoundWithCOMPInfo.rateField ? compoundWithCOMPInfo.rateField : 'rate';\n\n        let compoundAvgApr = apiResults.reduce( (sum,r) => {\n\n          const compoundData = r.protocolsData.find((pData,x) => {\n            return pData.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase()\n          });\n\n          let compoundRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n            if (compoundData[field]){\n              return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(compoundData[field]));\n            }\n            return this.functionsUtil.BNify(acc);\n          },0) : this.functionsUtil.BNify(compoundData[rateField]);\n\n          compoundRate = this.functionsUtil.fixTokenDecimals(compoundRate,18);\n\n          return this.functionsUtil.BNify(sum).plus(compoundRate);\n        },0);\n\n        // Calculate average\n        compoundAvgApr = compoundAvgApr.div(apiResults.length);\n\n        // compoundAvgApr = this.functionsUtil.apr2apy(compoundAvgApr.div(100)).times(100);\n        // apr = this.functionsUtil.apr2apy(apr.div(100)).times(100);\n\n        delta = apr.minus(compoundAvgApr);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n\n      apr = apr.toFixed(2);\n\n    } else {\n      const earning = lastIdlePrice.div(firstIdlePrice).minus(1).times(100);\n      apr = earning.times(365).div(days).toFixed(2);\n      if (firstCompoundData && lastCompoundData){\n        const firstCompoundPrice = this.functionsUtil.fixTokenDecimals(firstCompoundData.price,this.props.tokenConfig.decimals);\n        const lastCompoundPrice = this.functionsUtil.fixTokenDecimals(lastCompoundData.price,this.props.tokenConfig.decimals);\n        const compoundApr = lastCompoundPrice.div(firstCompoundPrice).minus(1).times(100);\n        delta = earning.minus(compoundApr).times(365).div(days);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n    }\n\n    // Count rebalances\n    let rebalances = 0;\n    apiResults.forEach((row,index) => {\n      if (index){\n        const prevRow = apiResults[index-1];\n\n        const totalAllocation = row.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        const prevTotalAllocation = prevRow.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        let hasRebalanced = false;\n        row.protocolsData.forEach( p => {\n          if (hasRebalanced){\n            return;\n          }\n          const prevP = prevRow.protocolsData.find( prevP => (prevP.protocolAddr.toLowerCase() === p.protocolAddr.toLowerCase()) );\n          const allocation = this.functionsUtil.fixTokenDecimals(p.allocation,this.props.tokenConfig.decimals);\n          const prevAllocation = this.functionsUtil.fixTokenDecimals(prevP.allocation,this.props.tokenConfig.decimals);\n          const allocationPerc = parseInt(parseFloat(allocation.div(totalAllocation).times(100)));\n          const prevAllocationPerc = parseInt(parseFloat(prevAllocation.div(prevTotalAllocation).times(100)));\n          if (allocationPerc!==prevAllocationPerc){\n            rebalances++;\n            hasRebalanced = true;\n          }\n        });\n      }\n    });\n\n    // Add gov tokens balance to AUM\n    const govTokensPool = await this.functionsUtil.getGovTokenPool(null,null,'DAI');\n    if (govTokensPool){\n      aum = aum.plus(govTokensPool);\n    }\n\n    // Format AUM\n    aum = this.functionsUtil.formatMoney(parseFloat(aum));\n\n    let unlentBalance = await this.functionsUtil.getUnlentBalance(this.props.tokenConfig);\n    if (unlentBalance){\n      unlentBalance = this.functionsUtil.formatMoney(parseFloat(unlentBalance));\n    }\n\n    this.setStateSafe({\n      aum,\n      apr,\n      days,\n      delta,\n      apiResults,\n      rebalances,\n      govTokensPool,\n      unlentBalance,\n      apiResults_unfiltered\n    });\n  }\n\n  selectToken = async (strategy,token) => {\n    await this.props.setStrategyToken(strategy,token);\n    this.props.changeToken(token);\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left)+'px';\n\n    this.setStateSafe({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  render() {\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n\n    if (!this.props.availableStrategies){\n      return (\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'40px'\n          }}\n          flexProps={{\n            minHeight:'50vh',\n            flexDirection:'column'\n          }}\n          text={'Loading assets...'}\n        />\n      );\n    }\n\n    if (!this.props.selectedToken){\n      const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n      const enabledTokens = [];\n      const statsTokens = this.functionsUtil.getGlobalConfig(['stats','tokens']);\n      const statsProtocols = this.functionsUtil.getGlobalConfig(['stats','protocols']);\n      Object.keys(statsTokens).forEach(token => {\n        const tokenInfo = statsTokens[token];\n        if (tokenInfo.enabled){\n          enabledTokens.push(token);\n        }\n      });\n      return (\n        <Flex\n          mb={3}\n          width={1}\n          flexDirection={'column'}\n        >\n          <AssetsUnderManagement\n            {...this.props}\n          />\n          {\n            Object.keys(strategies).map(strategy => {\n              const strategyInfo = strategies[strategy];\n              const availableTokens = this.props.availableStrategies[strategy];\n              if (!availableTokens){\n                return false;\n              }\n              return (\n                <Box\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  key={`strategy-container-${strategy}`}\n                >\n                  <Title\n                    mt={3}\n                    mb={[3,4]}\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={'baseline'}\n                      justifyContent={'center'}\n                    >\n                      {strategyInfo.title}\n                      {\n                        strategyInfo.titlePostfix &&\n                          <Text\n                            ml={2}\n                            fontWeight={3}\n                            fontSize={[2,4]}\n                            color={'dark-gray'}\n                          >\n                            {strategyInfo.titlePostfix}\n                          </Text>\n                      }\n                    </Flex>\n                  </Title>\n                  <AssetsList\n                    enabledTokens={enabledTokens}\n                    handleClick={(props) => this.selectToken(strategy,props.token)}\n                    cols={[\n                      {\n                        title:'CURRENCY',\n                        props:{\n                          width:[0.26,0.15]\n                        },\n                        fields:[\n                          {\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2.3em']\n                            }\n                          },\n                          {\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.22,0.14],\n                        },\n                        fields:[\n                          {\n                            name:'allocationChart',\n                            mobile:false,\n                            parentProps:{\n                              width:0.3\n                            },\n                            style:{\n                              overflow:'visible'\n                            },\n                            showLoader:false,\n                          },\n                          {\n                            name:'pool',\n                            props:{\n                              ml:1\n                            },\n                            parentProps:{\n                              width:[1,0.7]\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'APY',\n                        desc:apyLong,\n                        props:{\n                          width: [0.29,0.14],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'apy',\n                            showTooltip:true\n                          },\n                          {\n                            name:'idleDistribution',\n                            showLoader:false,\n                            props:{\n                              decimals:this.props.isMobile ? 1 : 2,\n                              fontSize:this.props.isMobile ? '9px' : 0\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'RISK SCORE',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','riskScore']),\n                        mobile:false,\n                        props:{\n                          width:[0.27,0.16],\n                        },\n                        fields:[\n                          {\n                            name:'score'\n                          }\n                        ]\n                      },\n                      {\n                        title:'APR LAST WEEK',\n                        mobile:false,\n                        props:{\n                          width: 0.25,\n                        },\n                        parentProps:{\n                          width:1,\n                          pr:[2,4]\n                        },\n                        fields:[\n                          {\n                            name:'aprChart',\n                          }\n                        ]\n                      },\n                      {\n                        title:'',\n                        props:{\n                          width:[0.23,0.16],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label:this.props.isMobile ? 'View' : 'View stats',\n                            props:{\n                              width:1,\n                              fontSize:3,\n                              fontWeight:3,\n                              height:'45px',\n                              borderRadius:4,\n                              boxShadow:null,\n                              mainColor:'redeem',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectToken(strategy,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    selectedStrategy={strategy}\n                    availableTokens={availableTokens}\n                  />\n                  {\n                    !this.props.isMobile &&\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-end'}\n                      >\n                        {\n                          Object.values(statsProtocols).filter( p => (p.legend) ).map( (p,index) => (\n                            <Flex\n                              mr={3}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              key={`legend_${index}`}\n                            >\n                              <Box\n                                mr={1}\n                                width={'10px'}\n                                height={'10px'}\n                                borderRadius={'50%'}\n                                backgroundColor={`rgb(${p.color.rgb.join(',')})`}\n                              >\n                              </Box>\n                              <Text.span\n                                fontSize={1}\n                                color={'cellText'}\n                              >\n                                {p.label}\n                              </Text.span>\n                            </Flex>\n                          ))\n                        }\n                      </Flex>\n                  }\n                </Box>\n              );\n            })\n          }\n          {\n            idleTokenEnabled && !this.state.showRefreshIdleSpeed ? (\n              <Flex\n                width={1}\n                my={[2,3]}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Link\n                  hoverColor={'primary'}\n                  onClick={this.showRefreshIdleSpeed.bind(this)}\n                >\n                  Refresh Idle Speed\n                </Link>\n              </Flex>\n            ) : idleTokenEnabled && this.state.showRefreshIdleSpeed &&\n              <Flex\n                p={2}\n                width={1}\n                my={[2,3]}\n                borderRadius={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                backgroundColor={'#f3f6ff'}\n                boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n              >\n                <Text\n                  fontWeight={500}\n                  color={'#3f4e9a'}\n                  textAlign={'center'}\n                  fontSize={[1,'15px']}\n                >\n                  By executing this transaction you can adjust the IDLE distribution speed among the pools.\n                </Text>\n                <ExecuteTransaction\n                  action={'Refresh'}\n                  Component={Button}\n                  parentProps={{\n                    mt:1\n                  }}\n                  componentProps={{\n                    size:'small',\n                    value:'REFRESH IDLE SPEED'\n                  }}\n                  params={[]}\n                  contractName={'IdleController'}\n                  methodName={'refreshIdleSpeeds'}\n                  {...this.props}\n                >\n                  <Flex\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Icon\n                      mr={1}\n                      name={'Done'}\n                      size={'1.4em'}\n                      color={this.props.theme.colors.transactions.status.completed}\n                    />\n                    <Text\n                      fontWeight={500}\n                      fontSize={'15px'}\n                      color={'copyColor'}\n                      textAlign={'center'}\n                    >\n                      Idle Speed Refreshed\n                    </Text>\n                  </Flex>\n                </ExecuteTransaction>\n              </Flex>\n          }\n        </Flex>\n      );\n    } else {\n      const versionsOptions = Object.keys(globalConfigs.stats.versions).filter( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return versionInfo.enabledTokens.includes(this.props.selectedToken) && versionInfo.enabledStrategies.includes(this.props.selectedStrategy);\n      }).map( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return {\n          value:version,\n          label:versionInfo.label\n        }\n      });\n\n      const versionInfo = this.getVersionInfo(this.state.idleVersion);\n\n      let performanceTooltip = null;\n      if (this.state.idleVersion && versionInfo){\n        const showPerformanceTooltip = this.functionsUtil.getGlobalConfig(['stats','versions',this.state.idleVersion,'showPerformanceTooltip']);\n        performanceTooltip = showPerformanceTooltip ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'performanceTooltip']) : null;\n      }\n\n      const versionDefaultValue = versionsOptions.find( v => (v.value === this.state.idleVersion) );\n\n      return (\n        <Flex\n          p={0}\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n          /*\n          }\n          <Flex position={['absolute','relative']} left={0} px={[3,0]} zIndex={10} width={1} flexDirection={'row'} mb={[0,3]}>\n            <Flex alignItems={'center'} width={[2/3,1/2]}>\n              <RouterLink to=\"/\">\n                <Image src=\"images/logo-gradient.svg\"\n                  height={['35px','48px']}\n                  position={'relative'} />\n              </RouterLink>\n              <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={3} lineHeight={'initial'} fontSize={[4,5]} ml={[1,2]}>\n                <Text.span fontSize={'80%'}>|</Text.span> Stats\n              </Heading.h3>\n            </Flex>\n            <Flex flexDirection={'row'} width={[1/3,1/2]} justifyContent={'flex-end'} alignItems={'center'}>\n              {\n                this.state.buttonGroups && \n                  this.props.isMobile ? (\n                    <ButtonGroup\n                      isMobile={this.props.isMobile}\n                      components={ this.state.buttonGroups.reduce((components,array) => components.concat(array),[]) }\n                      theme={'light'}\n                    />\n                  ) :\n                  this.state.buttonGroups.map((buttonGroup,i) => (\n                    <ButtonGroup\n                      key={`buttonGroup_${i}`}\n                      isMobile={this.props.isMobile}\n                      components={buttonGroup}\n                      theme={'light'}\n                    />\n                  ))\n              }\n            </Flex>\n          </Flex>\n          */\n          }\n          <Box\n            mb={[3,4]}\n          >\n            <Flex\n              flexDirection={['column','row']}\n            >\n              <Flex\n                width={[1,0.4]}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  text={'ASSETS OVERVIEW'}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('stats') }\n                  path={[this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])]}\n                />\n              </Flex>\n              <Flex\n                mt={[3,0]}\n                width={[1,0.6]}\n                flexDirection={['column','row']}\n                justifyContent={['center','space-between']}\n              >\n                <Flex\n                  width={[1,0.26]}\n                  flexDirection={'column'}\n                >\n                  <GenericSelector\n                    innerProps={{\n                      p:1,\n                      height:['100%','46px'],\n                    }}\n                    name={'idle-version'}\n                    options={versionsOptions}\n                    defaultValue={versionDefaultValue}\n                    onChange={ v => this.setIdleVersion(v) }\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.3]}\n                  flexDirection={'column'}\n                >\n                  <AssetSelector\n                    innerProps={{\n                      p:1\n                    }}\n                    {...this.props}\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.39]}\n                  flexDirection={'column'}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:1,\n                      display:'flex',\n                      alignItems:'center',\n                      height:['46px','100%'],\n                      justifyContent:'center'\n                    }}\n                    isInteractive={true}\n                    handleClick={ e => this.setDateRangeModal(true) }\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'copyColor'}\n                    >\n                    {\n                      this.state.quickSelection\n                      ?\n                        this.quickSelections[this.state.quickSelection]\n                      : this.state.startTimestampObj && this.state.endTimestampObj &&\n                        `${this.state.startTimestampObj.format('DD/MM/YY')} - ${this.state.endTimestampObj.format('DD/MM/YY')}`\n                    }\n                    </Text>\n                  </DashboardCard>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n\n          {\n            this.state.idleVersion && (versionInfo.startTimestamp>parseInt(new Date().getTime()/1000)) ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    width:[1,0.5],\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={'AccessTime'}\n                    />\n                    <Text\n                      mt={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Idle Stats {this.state.idleVersion} will be available shortly!\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={[3,0]}\n                  mb={[3,4]}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                    flexDirection={['column','row']}\n                  >\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        value={this.state.aum}\n                        title={'Asset Under Management'}\n                        label={ this.state.unlentBalance ? `Unlent funds: ${this.state.unlentBalance} ${this.props.selectedToken}` : this.props.selectedToken }\n                        labelTooltip={ this.state.unlentBalance ? this.functionsUtil.getGlobalConfig(['messages','cheapRedeem']) : null}\n                      />\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Avg APY'}\n                        label={'Annualized'}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={['column','row']}\n                        >\n                          <VariationNumber\n                            direction={'up'}\n                            iconPos={'right'}\n                            iconSize={'1.8em'}\n                            justifyContent={'flex-start'}\n                            width={1}\n                            >\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                              fontSize={[4,5]}\n                            >\n                              {this.state.apr}\n                              <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                            </Text>\n                          </VariationNumber>\n                        </Flex>\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Overperformance on Compound'}\n                        label={'Annualized'}\n                      >\n                        {\n                          this.state.delta && !isNaN(this.state.delta) ? (\n                            <VariationNumber\n                              direction={'up'}\n                              iconPos={'right'}\n                              iconSize={'1.8em'}\n                              justifyContent={'flex-start'}\n                              >\n                              <Text\n                                lineHeight={1}\n                                fontSize={[4,5]}\n                                fontWeight={[3,4]}\n                                color={'statValue'}\n                              >\n                                {this.state.delta}\n                                <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                              </Text>\n                            </VariationNumber>\n                          ) : (\n                            <Text\n                              lineHeight={1}\n                              fontSize={[4,5]}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                            >\n                              {this.state.delta}\n                            </Text>\n                          )\n                        }\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        label={' '}\n                        title={'Rebalances'}\n                        value={this.state.rebalances.toString()}\n                      />\n                    </Flex>\n                    {\n                    /*\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Current APR</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.currApr}\n                            <Text.span color={'copyColor'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Days Live</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.days}\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    */\n                    }\n                  </Flex>\n                </Box>\n\n                <DashboardCard\n                  title={'Historical Performance'}\n                  description={performanceTooltip}\n                  cardProps={{\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex id='chart-PRICE' width={1} mb={3}>\n                    <StatsChart\n                      height={ 350 }\n                      {...this.state}\n                      parentId={'chart-PRICE'}\n                      isMobile={this.props.isMobile}\n                      contracts={this.props.contracts}\n                      apiResults={this.state.apiResults}\n                      idleVersion={this.state.idleVersion}\n                      apiResults_unfiltered={this.state.apiResults_unfiltered}\n                      chartMode={this.state.idleVersion === this.state.latestVersion ? 'PRICE_V4' : 'PRICE'}\n                    />\n                  </Flex>\n                </DashboardCard>\n\n                <DashboardCard\n                  cardProps={{\n                    pb:3,\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex\n                    flexDirection={['column','row']}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      this.state.idleVersion === this.state.latestVersion && \n                      <Flex\n                        pt={2}\n                        width={[1,1/3]}\n                        id={'allocation-chart'}\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <AllocationChart\n                          height={310}\n                          {...this.props}\n                          parentId={'allocation-chart'}\n                        />\n                        <Rebalance\n                          {...this.props}\n                        />\n                      </Flex>\n                    }\n                    <Flex\n                      mb={[0,3]}\n                      id={'chart-ALL'}\n                      pl={[0,this.state.idleVersion === this.state.latestVersion ? 0 : 3]}\n                      width={[1, this.state.idleVersion === this.state.latestVersion ? 2/3 : 1]}\n                    >\n                      <Flex alignItems={'flex-start'} justifyContent={'flex-start'} flexDirection={'column'} width={1}>\n                        <Heading.h4\n                          mb={2}\n                          ml={3}\n                          mt={[3,4]}\n                          fontWeight={4}\n                          fontSize={[2,3]}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                        >\n                          Allocations over time\n                        </Heading.h4>\n                        <StatsChart\n                          height={350}\n                          {...this.state}\n                          chartMode={'ALL'}\n                          parentId={'chart-ALL'}\n                          isMobile={this.props.isMobile}\n                          contracts={this.props.contracts}\n                          apiResults={this.state.apiResults}\n                          idleVersion={this.state.idleVersion}\n                          apiResults_unfiltered={this.state.apiResults_unfiltered}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n\n                <Flex\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    id={'carousel-container'}\n                    justifyContent={'flex-end'}\n                  >\n                    <RoundIconButton\n                      buttonProps={{\n                        mr:3\n                      }}\n                      iconName={'ArrowBack'}\n                      disabled={this.state.carouselIndex === 0}\n                      handleClick={ e => this.handleCarousel('back') }\n                    />\n                    <RoundIconButton\n                      iconName={'ArrowForward'}\n                      handleClick={ e => this.handleCarousel('next') }\n                      disabled={this.state.carouselIndex === this.state.carouselMax}\n                    />\n                  </Flex>\n                  <Flex\n                    mt={5}\n                    height={'400px'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={['444%','200%']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        id='chart-AUM'\n                      >\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            ml={3}\n                            mt={3}\n                            mb={2}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Asset Under Management\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'AUM'}\n                            parentId={'chart-AUM'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-APR' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            APRs\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'APR'}\n                            parentId={'chart-APR'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                      title={'Risk Score'}\n                      description={'Idle Risk Score is a weighted average of the underlying protocols risks assessed by DeFi Score'}\n                      titleParentProps={{\n                        ml:16,\n                        mt:16\n                      }}\n                    >\n                      <Flex id='chart-SCORE' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'SCORE'}\n                            parentId={'chart-SCORE'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-VOL' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Volume\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'VOL'}\n                            parentId={'chart-VOL'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              </Box>\n            )\n          }\n\n          <DateRangeModal\n            minDate={this.state.minDate}\n            maxDate={this.state.maxDate}\n            handleSelect={this.setDateRange}\n            isOpen={this.state.dateRangeModalOpened}\n            closeModal={e => this.setDateRangeModal(false)}\n            startDate={this.state.startTimestampObj ? this.state.startTimestampObj._d : null}\n            endDate={this.state.endTimestampObj ? this.state.endTimestampObj._d : null}\n          />\n        </Flex>\n      );\n    }\n  }\n}\n\nexport default Stats;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Icon, Text, Box, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Utils extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const SubComponent = this.props.selectedSubsection && this.props.selectedSubsection.subComponent ? this.props.selectedSubsection.subComponent : null;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.props.selectedSubsection ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  isMobile={this.props.isMobile}\n                  path={[this.props.selectedSubsection.label]}\n                  text={this.props.selectedSection.label.toUpperCase()}\n                  handleClick={ e => this.props.goToSection(this.props.selectedSection.route) }\n                />\n              </Flex>\n              <Flex\n                my={[2,3]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Title\n                  mb={2}\n                >\n                  {this.props.selectedSubsection.label}\n                </Title>\n                <Text\n                  textAlign={'center'}\n                >\n                  {this.props.selectedSubsection.desc}\n                </Text>\n              </Flex>\n              <SubComponent\n                {...this.props}\n                {...this.props.selectedSubsection.directProps}\n                toolProps={this.props.selectedSubsection.props}\n              />\n            </Box>\n          ) : (\n            <Flex\n              my={[2,3]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                mb={3}\n              >\n                Tools\n              </Title>\n              <Flex\n                width={1}\n                style={{\n                  flexWrap:'wrap'\n                }}\n              >\n              {\n                this.props.selectedSection.submenu.map( (tool,toolIndex) => (\n                  <DashboardCard\n                    isInteractive={true}\n                    key={`tool_${toolIndex}`}\n                    cardProps={{\n                      p:[3,4],\n                      mb:[3,3],\n                      mr:[0,'2%'],\n                      style:{\n                        flex: this.props.isMobile ? '1 1 100%' : '0 0 31%'\n                      },\n                      alignItems:'center',\n                      flexDirection:'column',\n                      justifyContent:'center'\n                    }}\n                    handleClick={ e => this.props.goToSection(this.props.selectedSection.route+'/'+tool.route) }\n                  >\n                    <Text\n                      fontSize={[3,4]}\n                      textAlign={'center'}\n                    >\n                      {tool.label}\n                    </Text>\n                    <Flex\n                      justifyContent={'center'}\n                    >\n                      {\n                        tool.image ? (\n                          <Image\n                            my={[0,2]}\n                            height={'2.2em'}\n                            src={tool.image}\n                          />\n                        ) : tool.icon && (\n                          <Icon\n                            my={[0,2]}\n                            size={'3em'}\n                            name={tool.icon}\n                          />\n                        )\n                      }\n                    </Flex>\n                    <Text\n                      fontSize={[2,2]}\n                      textAlign={'center'}\n                    >\n                      {tool.desc}\n                    </Text>\n                  </DashboardCard>\n                ) )\n              }\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Utils;\n","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n\nclass FundsOverview extends Component {\n\n  state = {\n    govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [\n      govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      avgAPY,\n      days\n    ] = await Promise.all([\n      this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    // console.log(govTokensTotalBalance,govTokensUserBalance,govTokensTotalBalanceTooltip);\n\n    const govTokensTotalApr = govTokensAprs ? Object.values(govTokensAprs).reduce( (totApr,govTokenApr) => {\n      return totApr.plus(this.functionsUtil.BNify(govTokenApr));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalAprTooltip = govTokensAprs ? Object.keys(govTokensAprs).map( govToken => {\n      const apr = govTokensAprs[govToken];\n      if (apr.gt(0)){\n        return `${govToken}: ${apr.toFixed(2)}%`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n\n    /*\n    const govTokensDistributionTooltip = govTokensUserDistribution ? Object.keys(govTokensUserDistribution).map( govToken => {\n      const speed = govTokensUserDistribution[govToken];\n      if (speed.gt(0)){\n        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n        return `+${speed.toFixed(4)} ${govToken}/${distributionFrequency}`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n    */\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      govTokensAprs,\n      aggregatedValues,\n      govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquity\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              chartToken={this.props.selectedToken}\n              enabledTokens={[this.props.selectedToken]}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLent',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )/* : this.state.govTokensUserBalance && Object.keys(this.state.govTokensUserBalance).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + ${this.state.govTokensTotalBalance.toFixed(4)}\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalBalanceTooltip.join(' / ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'apy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n                /*\n                this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length===1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      Object.keys(this.state.govTokensAprs).map((govToken,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          ml={govTokenIndex ? 2 : 0}\n                          key={`govToken_${govToken}`}\n                        >\n                          {this.state.govTokensAprs[govToken].toFixed(2)}% {govToken}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                ) : this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + {this.state.govTokensTotalApr.toFixed(2)}%\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalAprTooltip.join('; ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Risk Score\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'score',\n                  props:{\n                    decimals:1,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverview;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Icon, Checkbox, Box, Link, Input, Tooltip } from \"rimble-ui\";\n\nclass CurveRedeem extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    maxSlippage:0.2,\n    tokenConfig:null,\n    unevenAmounts:null,\n    selectedToken:null,\n    availableTokens:null,\n    buttonDisabled:false,\n    showMaxSlippage:false,\n    redeemUnderlying:true,\n    curveTokenConfig:null,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    curveTokensAmounts:null,\n    fastBalanceSelector:null,\n    redeemUnevenAmounts:false,\n    curveRedeemableIdleTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.initToken();\n  }\n\n  showMaxSlippage(){\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  async calculateSlippage(max_slippage=null){\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n\n    if (!inputValue || inputValue.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n    let withdrawSlippage = null;\n    let curveTokensAmounts = null;\n    let curveIdleTokensAmounts = null;\n    if (this.state.redeemUnevenAmounts){\n      [\n        curveTokensAmounts,\n        curveIdleTokensAmounts\n      ] = await Promise.all([\n        this.functionsUtil.getCurveTokensAmounts(this.props.account,normalizedAmount,true),\n        this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,normalizedAmount)\n      ]);\n      withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,false,curveIdleTokensAmounts);\n    } else {\n      withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,false);\n      const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n      const redeemableBalance = inputValue.times(curveTokenPrice).minus(inputValue.times(withdrawSlippage.times(100).plus(this.state.maxSlippage || this.functionsUtil.BNify(0)).div(100)));\n      curveTokensAmounts = {};\n      curveTokensAmounts[this.state.selectedToken] = redeemableBalance;\n    }\n\n    if (withdrawSlippage){\n      withdrawSlippage = withdrawSlippage.times(100);\n    }\n\n    this.setState({\n      withdrawSlippage,\n      curveTokensAmounts,\n      curveIdleTokensAmounts\n    });\n\n    // Add max slippage but don't save in state\n    if (withdrawSlippage && max_slippage){\n      withdrawSlippage = withdrawSlippage.plus(max_slippage);\n    }\n\n    return withdrawSlippage;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.tokenConfig.idle.token !== this.props.tokenConfig.idle.token;\n    if (tokenChanged){\n      await this.initToken();\n    }\n\n    const redeemUnevenAmountsChanged = prevState.redeemUnevenAmounts !== this.state.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    const inputChanged = prevState.inputValue !== this.state.inputValue;\n    const maxSlippageChanged = parseFloat(prevState.maxSlippage) !== parseFloat(this.state.maxSlippage);\n    const tokenConfigChanged = JSON.stringify(prevState.tokenConfig) !== JSON.stringify(this.state.tokenConfig);\n    if (inputChanged || tokenConfigChanged || maxSlippageChanged){\n      this.calculateSlippage();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.loadSelectedTokenConfig();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n\n    let buttonDisabled = false;\n\n    // if (this.state.redeemUnevenAmounts){\n      buttonDisabled = !amount || amount.gt(this.state.curveTokenBalance);\n    // } else {\n      // buttonDisabled = !amount || amount.gt(this.state.redeemableBalance);\n    // }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue(){\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    let inputValue = null;\n\n    // if (this.state.redeemUnevenAmounts){\n    inputValue = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n    // } else {\n      // inputValue = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n    // }\n\n    this.checkButtonDisabled(inputValue);\n\n    this.setState({\n      inputValue\n    });\n  }\n\n  selectDestinationToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  async loadSelectedTokenConfig(){\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const tokenConfig = this.state.availableTokens[this.state.selectedToken];\n    const curveTokenConfig = curveConfig.availableTokens[tokenConfig.idle.token];\n    this.setState({\n      tokenConfig,\n      curveTokenConfig\n    });\n  }\n\n  async initToken(){\n    const [curvePoolContract,curveSwapContract] = await Promise.all([\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract()\n    ]);\n\n    const [\n      curveTokenPrice,\n      curveTokenBalance,\n      curveRedeemableIdleTokens,\n    ] = await Promise.all([\n      this.functionsUtil.getCurveTokenPrice(),\n      this.functionsUtil.getCurveTokenBalance(this.props.account),\n      this.functionsUtil.getCurveRedeemableIdleTokens(this.props.account)\n    ]);\n\n    const unevenAmounts = [];\n    const redeemableBalance = curveTokenBalance ? curveTokenBalance.times(curveTokenPrice) : this.functionsUtil.BNify(0);\n\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();;\n    const selectedToken = Object.keys(availableTokens)[0];\n\n    this.setState({\n      selectedToken,\n      unevenAmounts,\n      curveTokenPrice,\n      availableTokens,\n      curvePoolContract,\n      curveSwapContract,\n      curveTokenBalance,\n      redeemableBalance,\n      curveRedeemableIdleTokens\n    });\n  }\n\n  async redeem(){\n\n    if (!this.state.curveTokenBalance){\n      return false;\n    }\n\n    const callbackRedeem = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveRedeem`,\n        eventAction: this.props.selectedToken,\n        eventValue: this.state.curveTokenBalance.toFixed()\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      }));\n\n      if (typeof this.props.callbackRedeem === 'function' && txSucceeded){\n        this.props.callbackRedeem(tx);\n      }\n    };\n\n    const callbackReceiptRedeem = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.state.curveSwapContract.name;\n    const withdrawSlippage = await this.calculateSlippage(this.state.maxSlippage);\n    const max_slippage = this.functionsUtil.BNify(this.state.maxSlippage).div(100);\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    // const curveTokenBalance = this.functionsUtil.normalizeTokenAmount(this.state.curveTokenBalance,this.state.curvePoolContract.decimals);\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n    if (this.state.redeemUnevenAmounts){\n      const min_amounts = this.state.redeemUnderlying ? await this.functionsUtil.getCurveTokensAmounts(this.props.account,_amount,false,true) : await this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,_amount,max_slippage);\n      console.log('remove_liquidity',_amount.toString(),min_amounts);\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts, this.state.redeemUnderlying], null, callbackRedeem, callbackReceiptRedeem);\n    } else {\n      const coin_index = this.state.curveTokenConfig.migrationParams.coinIndex;\n      const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n      const min_amount = this.functionsUtil.normalizeTokenAmount(inputValue.times(curveTokenPrice).minus(inputValue.times(withdrawSlippage.div(100))),this.state.tokenConfig.decimals);\n      // const min_amount = this.functionsUtil.normalizeTokenAmount(inputValue.minus(inputValue.times(withdrawSlippage.div(100))),this.state.curveTokenConfig.decimals);\n      // let _token_amount = await this.functionsUtil.getCurveTokenAmount(amounts,false);\n      // _token_amount = this.functionsUtil.BNify(_token_amount).isGreaterThan(curveTokenBalance) ? curveTokenBalance : this.functionsUtil.BNify(_token_amount);\n\n      console.log('remove_liquidity_one_coin',_amount, coin_index, min_amount);\n\n      // debugger;\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_one_coin', [_amount, coin_index, min_amount, this.state.redeemUnderlying], null, callbackRedeem, callbackReceiptRedeem);\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  changeInputValue = (e) => {\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(inputValue);\n\n    const fastBalanceSelector = null;\n\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector,\n    }));\n  }\n\n  getFastBalanceSelector(){\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n\n  render() {\n\n    const showSlippage = !this.state.buttonDisabled && this.state.withdrawSlippage;\n    const curveTokenName = this.functionsUtil.getGlobalConfig(['curve','poolContract','token']);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            !this.state.curveTokenBalance ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3,\n                  minHeight:'195px',\n                  style:{\n                    display:'flex',\n                    alignItems:'center',\n                    justifyContent:'center'\n                  }\n                }}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Checking Curve Pool...'}\n                />\n              </DashboardCard>\n            ) : this.state.processing.loading ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    endMessage={`Finalizing redeem request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                    waitText={ this.props.waitText ? this.props.waitText : 'Redeem estimated in'}\n                  />\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    mb:2\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'1.8em'}\n                      color={'cellText'}\n                      name={'FileUpload'}\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Withdraw from the Curve Pool in a specific token or in uneven amounts of tokens (with no slippage).\n                    </Text>\n                    <Flex\n                      mt={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Checkbox\n                        required={false}\n                        label={`Redeem with no slippage`}\n                        checked={this.state.redeemUnevenAmounts}\n                        onChange={ e => this.toggleUnevenAmounts(e.target.checked) }\n                      />\n                      <Tooltip\n                        placement={'top'}\n                        message={`You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.`}\n                      >\n                        <Icon\n                          size={'1em'}\n                          color={'cellTitle'}\n                          name={\"InfoOutline\"}\n                        />\n                      </Tooltip>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n                {\n                  !this.state.redeemUnevenAmounts/* && (!this.props.selectedToken || (this.state.showMaxSlippage && showSlippage))*/ && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      {\n                        this.state.tokenConfig && \n                          <Box\n                            width={1}\n                          >\n                            <Text\n                              mb={1}\n                            >\n                              Select destination token:\n                            </Text>\n                            <AssetSelector\n                              {...this.props}\n                              id={'token-from'}\n                              showBalance={false}\n                              tokenConfig={this.state.tokenConfig}\n                              selectedToken={this.state.selectedToken}\n                              availableTokens={this.state.availableTokens}\n                              onChange={this.selectDestinationToken.bind(this)}\n                            />\n                          </Box>\n                      }\n                    </Box>\n                  )\n                }\n                {\n                  this.state.curveTokensAmounts && !this.state.buttonDisabled && (\n                    <DashboardCard\n                      cardProps={{\n                        mt:1,\n                        mb:2,\n                        py:2,\n                        px:1\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You will receive:\n                        </Text>\n                        <Flex\n                          mt={2}\n                          width={1}\n                          boxShadow={0}\n                          style={{\n                            flexWrap:'wrap'\n                          }}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                          >\n                            {\n                              Object.keys(this.state.curveTokensAmounts).map( token => {\n                                const balance = this.state.curveTokensAmounts[token];\n                                return (\n                                  <Flex\n                                    mb={1}\n                                    mx={1}\n                                    width={'auto'}\n                                    flexDirection={'row'}\n                                    key={`tokenBalance_${token}`}\n                                    justifyContent={'flex-start'}\n                                  >\n                                    <AssetField\n                                      token={token}\n                                      tokenConfig={{\n                                        token:token\n                                      }}\n                                      fieldInfo={{\n                                        name:'icon',\n                                        props:{\n                                          mr:1,\n                                          width:['1.4em','1.6em'],\n                                          height:['1.4em','1.6em']\n                                        }\n                                      }}\n                                    />\n                                    <SmartNumber\n                                      ml={1}\n                                      fontSize={[0,1]}\n                                      fontWeight={500}\n                                      maxPrecision={4}\n                                      color={'cellText'}\n                                      number={balance.toString()}\n                                    />\n                                  </Flex>\n                                );\n                            })\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.showMaxSlippage && showSlippage && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Text>\n                          Choose max slippage:\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`Max additional slippage on top of the one shown below`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1em'}\n                            color={'cellTitle'}\n                            name={\"InfoOutline\"}\n                          />\n                        </Tooltip>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [0.2,0.5,1,5].map( slippage => (\n                            <FastBalanceSelector\n                              cardProps={{\n                                p:1\n                              }}\n                              textProps={{\n                                fontSize:1\n                              }}\n                              percentage={slippage}\n                              key={`selector_${slippage}`}\n                              onMouseDown={()=>this.setMaxSlippage(slippage)}\n                              isActive={this.state.maxSlippage === parseFloat(slippage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                    </Box>\n                  )\n                }\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    mb={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'flex-end'}\n                  >\n                    {\n                      showSlippage && (\n                        <Flex\n                          width={1}\n                          maxWidth={'40%'}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            textAlign={'right'}\n                            style={{\n                              whiteSpace:'nowrap'\n                            }}\n                            color={ parseFloat(this.state.withdrawSlippage.toFixed(3))>0 ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                          >\n                            {\n                              parseFloat(this.state.withdrawSlippage.toFixed(3)) === 0 ?\n                                'No Slippage'\n                              : `${ this.state.withdrawSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.withdrawSlippage.abs().toFixed(3)}%`\n                            }\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={ this.state.redeemUnevenAmounts ? `You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.` : this.state.withdrawSlippage.gt(0) ? 'Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for' : 'Bonus comes as an advantage from current coin prices which usually appears for coins which are high in balance'}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                          {\n                            !this.state.redeemUnevenAmounts &&\n                              <Link\n                                ml={1}\n                                color={'copyColor'}\n                                hoverColor={'primary'}\n                                onClick={this.showMaxSlippage.bind(this)}\n                              >\n                                change\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    <Flex\n                      width={1}\n                      maxWidth={'60%'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                    >\n                      <Link\n                        fontSize={1}\n                        fontWeight={3}\n                        color={'dark-gray'}\n                        textAlign={'right'}\n                        hoverColor={'copyColor'}\n                        onClick={ (e) => this.setFastBalanceSelector(100) }\n                        style={{\n                          maxWidth:'100%',\n                          overflow:'hidden',\n                          whiteSpace:'nowrap',\n                          textOverflow:'ellipsis'\n                        }}\n                      >\n                        {this.state.curveTokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {curveTokenName}\n                      </Link>\n                    </Flex>\n                  </Flex>\n                  <Input\n                    min={0}\n                    type={\"number\"}\n                    required={true}\n                    height={'3.4em'}\n                    borderRadius={2}\n                    fontWeight={500}\n                    boxShadow={'none !important'}\n                    placeholder={`Insert amount`}\n                    onChange={this.changeInputValue.bind(this)}\n                    border={`1px solid ${this.props.theme.colors.divider}`}\n                    value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                  />\n                  <Flex\n                    mt={2}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      [25,50,75,100].map( percentage => (\n                        <FastBalanceSelector\n                          percentage={percentage}\n                          key={`selector_${percentage}`}\n                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                          isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  justifyContent={'center'}\n                >\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2],\n                      disabled:this.state.buttonDisabled\n                    }}\n                    handleClick={this.redeem.bind(this)}\n                  >\n                    Redeem\n                  </RoundButton>\n                </Flex>\n              </Flex>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveRedeem;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import theme from '../theme';\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport ShareModal from '../utilities/components/ShareModal';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Input, Box, Icon, Link, Checkbox, Tooltip, Image } from \"rimble-ui\";\n\nclass DepositRedeem extends Component {\n\n  state = {\n    txError:{},\n    tokenAPY:'-',\n    inputValue:{},\n    processing:{},\n    curveAPY:null,\n    canRedeem:false,\n    maxSlippage:0.2,\n    canDeposit:false,\n    action:'deposit',\n    directMint:false,\n    activeModal:null,\n    showBuyFlow:false,\n    unlentBalance:null,\n    tokenApproved:false,\n    skipMigration:false,\n    showRedeemFlow:false,\n    contractPaused:false,\n    buttonDisabled:false,\n    canRedeemCurve:false,\n    showMaxSlippage:false,\n    redeemGovTokens:false,\n    canDepositCurve:false,\n    fastBalanceSelector:{},\n    actionProxyContract:{},\n    migrationEnabled:false,\n    componentMounted:false,\n    curveTokenBalance:null,\n    redeemCurveEnabled:false,\n    depositCurveBalance:null,\n    depositCurveEnabled:true,\n    showAdvancedOptions:false,\n    depositCurveSlippage:null,\n    metaTransactionsEnabled:true\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadProxyContracts();\n  }\n\n  async componentDidMount(){\n\n  }\n\n  setShowRedeemFlow = (showRedeemFlow) => {\n    this.setState({\n      showRedeemFlow\n    });\n  }\n\n  setShowBuyFlow = (showBuyFlow) => {\n    this.setState({\n      showBuyFlow\n    });\n  }\n\n  toggleShowAdvancedOptions = showAdvancedOptions => {\n    this.setState((prevState) => ({\n      showAdvancedOptions:!prevState.showAdvancedOptions\n    }));\n  }\n\n  toggleSkipMigration = skipMigration => {\n    this.setState({\n      skipMigration\n    });\n  }\n\n  toggleRedeemCurve = redeemCurveEnabled => {\n    this.setState({\n      redeemCurveEnabled\n    });\n  }\n\n  toggleDepositCurve = depositCurveEnabled => {\n    this.setState({\n      depositCurveEnabled\n    });\n  }\n\n  toggleSkipMint = (directMint) => {\n    this.setState({\n      directMint\n    });\n  }\n\n  toggleRedeemGovTokens = (redeemGovTokens) => {\n    this.setState({\n      redeemGovTokens\n    });\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  async loadProxyContracts(){\n    const actions = ['deposit','redeem'];\n    const newState = {\n      actionProxyContract:{}\n    };\n\n    await this.functionsUtil.asyncForEach(actions,async (action) => {\n      const mintProxyContractInfo = this.functionsUtil.getGlobalConfig(['contract','methods',action,'proxyContract']);\n      const hasProxyContract = mintProxyContractInfo && mintProxyContractInfo.enabled;\n      newState.actionProxyContract[action] = hasProxyContract ? mintProxyContractInfo : null;\n      if (hasProxyContract){\n        const proxyContract = await this.props.initContract(mintProxyContractInfo.name,mintProxyContractInfo.address,mintProxyContractInfo.abi);\n        newState.actionProxyContract[action].contract = proxyContract.contract;\n        newState.actionProxyContract[action].approved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,mintProxyContractInfo.address,this.props.account);\n      }\n    });\n\n    this.setState(newState);\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadAPY(){\n    const tokenAprs = await this.functionsUtil.getTokenAprs(this.props.tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy).toFixed(2);\n\n      let curveAPY = null;\n      if (this.state.canDepositCurve){\n        curveAPY = await this.functionsUtil.getCurveAPY();\n        // console.log('curveAPY',curveAPY);\n        if (curveAPY){\n          curveAPY = curveAPY.plus(tokenAPY);\n        }\n      }\n      this.setState({\n        tokenAPY,\n        curveAPY\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    if (this.props.tokenBalance === null){\n      return false;\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance && this.props.tokenBalance !== null;\n\n    if (tokenChanged || tokenBalanceChanged){\n      await this.loadProxyContracts();\n      this.loadTokenInfo();\n      return false;\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const redeemGovTokensChanged = prevState.redeemGovTokens !== this.state.redeemGovTokens;\n    if (redeemGovTokensChanged || actionChanged){\n      this.checkButtonDisabled();\n    }\n\n    const depositCurveChanged = prevState.depositCurveEnabled !== this.state.depositCurveEnabled;\n    const metaTransactionsChanged = prevState.metaTransactionsEnabled !== this.state.metaTransactionsEnabled;\n    if (metaTransactionsChanged || depositCurveChanged){\n      const tokenApproved = await this.checkTokenApproved();\n      this.setState({\n        tokenApproved\n      });\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateCurveSlippage();\n    }\n  }\n\n  async calculateCurveSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,curvePoolContractInfo.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositCurveBalance = amount;\n        newState.depositCurveSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        // newState.redeemBalance = amount;\n        // newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateCurveSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  approveContract = async (callbackApprove,callbackReceiptApprove) => {\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      this.functionsUtil.enableERC20(this.props.selectedToken,curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        this.functionsUtil.enableERC20(this.props.selectedToken,proxyContract.address,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.selectedToken,this.props.tokenConfig.idle.address,callbackApprove,callbackReceiptApprove);\n      }\n    }\n  }\n\n  checkTokenApproved = async () => {\n\n    let tokenApproved = false;\n\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,curveDepositContract.address,this.props.account);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,proxyContract.address,this.props.account);\n      } else {\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,this.props.tokenConfig.idle.address,this.props.account);\n      }\n    }\n\n    return tokenApproved;\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = await this.checkTokenApproved();\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.approveContract(callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  loadTokenInfo = async () => {\n\n    if (this.state.componentMounted){\n      this.setState({\n        componentMounted:false\n      });\n    }\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token]);\n    const curveTokenEnabled = curveConfig.enabled && curveTokenConfig && curveTokenConfig.enabled;\n\n    const [\n      tokenApproved,\n      contractPaused,\n      curveSwapContract,\n      curveDepositContract,\n      unlentBalance,\n      {migrationEnabled},\n      curveTokenBalance,\n    ] = await Promise.all([\n      this.checkTokenApproved(),\n      this.functionsUtil.checkContractPaused(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract(),\n      this.functionsUtil.getUnlentBalance(this.props.tokenConfig),\n      this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account),\n      curveTokenEnabled ? this.functionsUtil.getCurveTokenBalance(this.props.account) : null\n    ]);\n\n    const canDeposit = this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0);\n    const canRedeem = this.props.idleTokenBalance && this.functionsUtil.BNify(this.props.idleTokenBalance).gt(0);\n\n    const canDepositCurve = curveTokenEnabled && canDeposit;\n    const depositCurveEnabled = canDepositCurve;\n\n    const canRedeemCurve = curveTokenEnabled && curveTokenBalance && curveTokenBalance.gt(0);\n    const redeemCurveEnabled = canRedeemCurve;\n\n    const newState = {...this.state};\n\n    // Check curve deposit enabled\n    if (newState.depositCurveEnabled && !curveTokenEnabled){\n      newState.depositCurveEnabled = false;\n    }\n    \n    newState.canRedeem = canRedeem;\n    newState.canDeposit = canDeposit;\n    newState.unlentBalance = unlentBalance;\n    newState.tokenApproved = tokenApproved;\n    newState.contractPaused = contractPaused;\n    newState.canRedeemCurve = canRedeemCurve;\n    newState.canDepositCurve = canDepositCurve;\n    newState.migrationEnabled = migrationEnabled;\n    newState.curveTokenBalance = curveTokenBalance;\n    newState.curveSwapContract = curveSwapContract;\n    newState.redeemCurveEnabled = redeemCurveEnabled;\n    newState.depositCurveEnabled = depositCurveEnabled;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.txError = {\n      redeem:false,\n      deposit:false\n    };\n    newState.processing = {\n      redeem:{\n        txHash:null,\n        loading:false\n      },\n      deposit:{\n        txHash:null,\n        loading:false\n      },\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      boost:{\n        txHash:null,\n        loading:false\n      }\n    };\n    newState.inputValue = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n    newState.fastBalanceSelector = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n\n    newState.componentMounted = true;\n\n    this.setState(newState,() => {\n      this.checkAction();\n      this.loadAPY();\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const redeemGovTokens = this.state.redeemGovTokens;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        if (!this.state.tokenApproved){\n          return this.approveToken();\n        }\n\n        if (localStorage){\n          this.functionsUtil.setLocalStorage('redirectToFundsAfterLogged',0);\n        }\n\n        this.setState({\n          lendingProcessing: this.props.account,\n          lendAmount: '',\n          genericError: '',\n        });\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n        const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n        // Handle Curve Deposit\n        if (curveTokenEnabled && this.state.depositCurveEnabled){\n\n          const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,curvePoolContractInfo.decimals);\n\n          const amounts = await this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,tokensToDeposit);\n          let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n          if (this.state.maxSlippage){\n            minMintAmount = this.functionsUtil.BNify(minMintAmount);\n            minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n            minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n          }\n          \n          const depositParams = [amounts,minMintAmount];\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, callbackDeposit, callbackReceiptDeposit);\n        } else {\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n          const depositMetaTransactionsEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','metaTransactionsEnabled']);\n          // const gasLimitDeposit = this.functionsUtil.BNify(1000000);\n          let depositParams = [];\n\n          // Use Proxy Contract if enabled\n          const mintProxyContractInfo = this.state.actionProxyContract[this.state.action];\n          if (depositMetaTransactionsEnabled && mintProxyContractInfo && this.props.biconomy && this.state.metaTransactionsEnabled){\n            const mintProxyContract = this.state.actionProxyContract[this.state.action].contract;\n            depositParams = [tokensToDeposit, this.props.tokenConfig.idle.address];\n            // console.log('mintProxyContract',mintProxyContractInfo.function,depositParams);\n            if (this.state.metaTransactionsEnabled){\n              const functionSignature = mintProxyContract.methods[mintProxyContractInfo.function](...depositParams).encodeABI();\n              contractSendResult = await this.functionsUtil.sendBiconomyTxWithPersonalSign(mintProxyContractInfo.name, functionSignature, callbackDeposit, callbackReceiptDeposit);\n            } else {\n              contractSendResult = await this.functionsUtil.contractMethodSendWrapper(mintProxyContractInfo.name, mintProxyContractInfo.function, depositParams, callbackDeposit, callbackReceiptDeposit);\n            }\n          // Use main contract if no proxy contract exists\n          } else {\n            let _skipMint = !this.state.directMint && this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMint']);\n            _skipMint = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : _skipMint;\n\n            // Mint if someone mint over X amount\n            if (_skipMint){\n              let [\n                maxUnlentPerc,\n                totalAUM\n              ] = await Promise.all([\n                this.functionsUtil.genericContractCall('idleDAIYield', 'maxUnlentPerc'),\n                this.functionsUtil.loadAssetField('pool',this.props.selectedToken,this.props.tokenConfig,this.props.account)\n              ]);\n\n              if (maxUnlentPerc && totalAUM){\n                const depositPerc = inputValue.div(totalAUM).times(100);\n                maxUnlentPerc = this.functionsUtil.BNify(maxUnlentPerc).div(1e3);\n                if (depositPerc.gte(maxUnlentPerc.times(2))){\n                  _skipMint = false;\n                }\n                // console.log(maxUnlentPerc.toFixed(5),inputValue.toFixed(5),totalAUM.toFixed(5),depositPerc.toFixed(5),depositPerc.gte(maxUnlentPerc.times(2)),_skipMint);\n              }\n            }\n\n            depositParams = [tokensToDeposit, _skipMint, '0x0000000000000000000000000000000000000000'];\n            contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'mintIdleToken', depositParams, callbackDeposit, callbackReceiptDeposit);\n          }\n        }\n      break;\n      case 'redeem':\n\n        if (redeemGovTokens){\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_gov`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: 0\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', [0], callbackRedeem, callbackReceiptRedeem);\n          \n        } else {\n\n          if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n            return false;\n          }\n\n          const txData = {\n            value:this.functionsUtil.BNify(inputValue)\n          };\n\n          let idleTokenToRedeem = null;\n          if (selectedPercentage){\n            idleTokenToRedeem = this.functionsUtil.BNify(this.props.idleTokenBalance).times(selectedPercentage);\n          } else {\n            const idleTokenPrice = await this.functionsUtil.genericContractCall(this.props.tokenConfig.idle.token, 'tokenPrice');\n            idleTokenToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals)).div(idleTokenPrice);\n          }\n\n          // Normalize number\n          idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(idleTokenToRedeem,18);\n\n          if (!idleTokenToRedeem){\n            return false;\n          }\n\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_partial`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: parseInt(inputValue)\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          let redeemParams = [idleTokenToRedeem];\n          // console.log(redeemParams,idleTokenToRedeem);\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', redeemParams, callbackRedeem, callbackReceiptRedeem, txData);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  showMaxSlippage = () => {\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  checkAction = () => {\n    let action = this.state.action;\n\n    switch(action){\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = 'deposit';\n        }\n      break;\n      default:\n      break;\n    }\n\n    if (action !== this.state.action){\n      this.setState({\n        action\n      },() => {\n        this.checkButtonDisabled();\n      });\n    } else {\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.props.tokenBalance));\n      break;\n      case 'redeem':\n        buttonDisabled = !this.state.canRedeemCurve && !this.state.redeemGovTokens && ( buttonDisabled || (amount && amount.gt(this.props.redeemableBalance)) );\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        amount = this.props.redeemableBalance ? this.functionsUtil.BNify(this.props.redeemableBalance).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem && !this.state.canRedeemCurve){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const govTokensDisabled = this.props.tokenConfig.govTokensDisabled;\n    const govTokensEnabled = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'govTokensEnabled']);\n    const skipMintForDepositEnabled = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : true;\n    const skipMintCheckboxEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMintCheckboxEnabled']) && skipMintForDepositEnabled;\n\n    const redeemGovTokenEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','redeemGovTokens','enabled']) && !govTokensDisabled && govTokensEnabled;\n    const redeemGovTokens = redeemGovTokenEnabled && this.state.redeemGovTokens && this.state.action === 'redeem';\n\n    const metaTransactionsAvailable = this.props.biconomy && this.state.actionProxyContract[this.state.action];\n    const useMetaTx = metaTransactionsAvailable && this.state.metaTransactionsEnabled;\n    const totalBalance = this.state.action === 'deposit' ? this.props.tokenBalance : this.props.redeemableBalance;\n    const migrateText = this.state.migrationEnabled && this.props.tokenConfig.migration.message !== undefined ? this.props.tokenConfig.migration.message : null;\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n    const depositCurve = curveTokenEnabled && this.state.depositCurveEnabled && this.state.action === 'deposit';\n\n    const showDepositOptions = this.state.action === 'deposit' && !this.state.contractPaused && (curveTokenEnabled || this.state.tokenApproved);\n\n    const canPerformAction = /*!depositCurve && !this.state.redeemCurveEnabled && */((this.state.action === 'deposit' && this.state.canDeposit) || (this.state.action === 'redeem' && this.state.canRedeem) || redeemGovTokens);\n    const showDepositCurve = showDepositOptions && curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canDepositCurve && this.state.action === 'deposit';\n    const showRedeemCurve = curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canRedeemCurve && this.state.action === 'redeem';\n\n    const showActionFlow = !redeemGovTokens && canPerformAction;\n    const showBuyFlow = this.state.componentMounted && (!showDepositCurve || this.state.showBuyFlow) && !this.state.depositCurveEnabled && this.state.tokenApproved && !this.state.contractPaused && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.action === 'deposit' && !this.state.canDeposit;\n    const showRedeemFlow = this.state.canRedeem && (!this.state.redeemCurveEnabled || this.state.showRedeemFlow);\n\n    const showCurveSlippage = depositCurve && this.state.depositCurveSlippage && this.state.depositCurveBalance && !this.state.buttonDisabled;\n\n    const showRebalanceOption = showDepositOptions && this.state.canDeposit && skipMintCheckboxEnabled && this.state.action === 'deposit';\n    const showAdvancedDepositOptions = showDepositCurve || showRebalanceOption;\n\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.enabled && typeof batchDepositInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchDepositDepositEnabled = batchDepositInfo.depositEnabled;\n\n    const showBatchDeposit = batchDepositEnabled && batchDepositDepositEnabled && !this.props.isMigrationTool && this.state.action === 'deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select your asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n            />\n          </Box>\n          <Migrate\n            {...this.props}\n            migrateTextBefore={migrateText}\n            migrateText={migrateText !== null ? '' : null}\n            toggleSkipMigration={this.toggleSkipMigration.bind(this)}\n          >\n            {\n              !this.props.account ? (\n                <ConnectBox\n                  {...this.props}\n                />\n              ) :\n              this.state.componentMounted ? (\n                this.state.action ? (\n                  <Box width={1}>\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'redeem' }\n                          isDisabled={ !this.state.canRedeem && !this.state.canRedeemCurve }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    {\n                      showAdvancedDepositOptions ? (\n                        <DashboardCard\n                          cardProps={{\n                            pt:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                            pb:this.state.showAdvancedOptions ? 3 : 2,\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Link\n                              ml={1}\n                              mainColor={'primary'}\n                              hoverColor={'primary'}\n                              onClick={this.toggleShowAdvancedOptions}\n                            >\n                              { this.state.showAdvancedOptions ? 'Hide' : 'Show' } advanced options\n                            </Link>\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={this.state.showAdvancedOptions ? 'ArrowDropUp' : 'ArrowDropDown'}\n                            />\n                          </Flex>\n                          {\n                            this.state.showAdvancedOptions &&\n                              <Flex\n                                mt={1}\n                                flexDirection={'column'}\n                              >\n                                {\n                                  showDepositCurve && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        disabled={this.state.directMint}\n                                        label={`Deposit in the Curve Pool`}\n                                        checked={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                      />\n                                      <Link\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        (read more)\n                                      </Link>\n                                    </Flex>\n                                }\n                                {\n                                  showRebalanceOption && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        label={`Rebalance the pool`}\n                                        checked={this.state.directMint}\n                                        disabled={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                      />\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={this.functionsUtil.getGlobalConfig(['messages','directMint'])}\n                                      >\n                                        <Icon\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                          name={\"InfoOutline\"}\n                                        />\n                                      </Tooltip>\n                                    </Flex>\n                                }\n                              </Flex>\n                          }\n                        </DashboardCard>\n                      ) : (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          {\n                            showDepositCurve && (\n                              <Flex\n                                width={1}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <DashboardCard\n                                  isRainbow={true}\n                                  cardProps={{\n                                    py:3,\n                                    px:2,\n                                    mt:3,\n                                    display:'flex',\n                                    alignItems:'center',\n                                    flexDirection:'column',\n                                    justifyContent:'center',\n                                  }}\n                                >\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Image\n                                      height={'1.8em'}\n                                      src={curveConfig.params.image}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      px={2}\n                                      fontSize={1}\n                                      color={'dark-gray'}\n                                      textAlign={'center'}\n                                    >\n                                      Deposit your tokens in the Curve Pool and boost your APY up to {this.state.curveAPY ? this.state.curveAPY.toFixed(2) : '-'}%.\n                                      <Link\n                                        ml={1}\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        Read More\n                                      </Link>\n                                    </Text>\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={`Deposit in Curve`}\n                                      checked={this.state.depositCurveEnabled}\n                                      onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                    />\n                                  </Flex>\n                                </DashboardCard>\n                                {\n                                  (!this.state.showBuyFlow && !this.state.depositCurveEnabled && !this.state.canDeposit) &&\n                                    <Link\n                                      textAlign={'center'}\n                                      hoverColor={'primary'}\n                                      onClick={ e => this.setShowBuyFlow(true) }\n                                    >\n                                      I just want to deposit more {this.props.selectedToken}\n                                    </Link>\n                                }\n                              </Flex>\n                            )\n                          }\n                          {\n                            showRebalanceOption && (\n                              <DashboardCard\n                                cardProps={{\n                                  py:3,\n                                  px:2,\n                                  mt:3,\n                                  display:'flex',\n                                  alignItems:'center',\n                                  flexDirection:'column',\n                                  justifyContent:'center',\n                                }}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    color={'cellText'}\n                                    name={'InfoOutline'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    px={2}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    By checking this flag you can rebalance the pool and help all users gain an additional APR\n                                  </Text>\n                                </Flex>\n                                <Checkbox\n                                  mt={2}\n                                  required={false}\n                                  label={`Rebalance the pool`}\n                                  checked={this.state.directMint}\n                                  onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                />\n                              </DashboardCard>\n                            )\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (metaTransactionsAvailable && !showBuyFlow && !this.state.contractPaused) && \n                      <DashboardCard\n                        cardProps={{\n                          py:3,\n                          px:2,\n                          my:3,\n                          display:'flex',\n                          alignItems:'center',\n                          flexDirection:'column',\n                          justifyContent:'center',\n                        }}\n                      >\n                        {\n                          this.state.metaTransactionsEnabled && this.state.txError[this.state.action] && this.state.actionProxyContract[this.state.action].approved ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Seems like you are having some trouble with Meta-Transactions... Disable them by unchecking the box below and try again!\n                              </Text>\n                            </Flex>\n                          ) : this.functionsUtil.getWalletProvider() === 'WalletConnect' && this.state.metaTransactionsEnabled ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Please disable Meta-Transactions if you are using Argent Wallet to avoid failed transactions!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Text\n                              mt={1}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Meta-Transactions are {this.state.metaTransactionsEnabled ? 'available' : 'disabled'} for {this.state.action}s!<br />\n                              {\n                                this.state.metaTransactionsEnabled && !this.state.actionProxyContract[this.state.action].approved && `Please either enable the Smart-Contract to enjoy gas-less ${this.state.action} or just disable meta-tx.`\n                              }\n                            </Text>\n                          )\n                        }\n                        <Checkbox\n                          mt={2}\n                          required={false}\n                          checked={this.state.metaTransactionsEnabled}\n                          onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                          label={`${this.functionsUtil.capitalize(this.state.action)} with Meta-Transaction`}\n                        />\n                      </DashboardCard>\n                    }\n                    {\n                      showBatchDeposit &&\n                        <Flex\n                          p={2}\n                          mt={3}\n                          width={1}\n                          borderRadius={2}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'center'}\n                          backgroundColor={'white'}\n                          border={`1px solid ${this.props.theme.colors.primary}`}\n                        >\n                          <Link\n                            textAlign={'center'}\n                            hoverColor={'primary'}\n                            href={`/#/dashboard/tools/${batchDepositInfo.route}/${this.props.tokenConfig.idle.token}`}\n                          >\n                            Gas fees too high? Save gas with our Batch Deposit!\n                          </Link>\n                          <Icon\n                            ml={1}\n                            size={'1em'}\n                            color={'primary'}\n                            name={'LocalGasStation'}\n                          />\n                        </Flex>\n                    }\n                    {\n                      showRedeemCurve && this.state.canRedeem && (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            isRainbow={true}\n                            cardProps={{\n                              py:3,\n                              px:2,\n                              mt:3,\n                              display:'flex',\n                              alignItems:'center',\n                              flexDirection:'column',\n                              justifyContent:'center',\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Image\n                                height={'1.8em'}\n                                src={curveConfig.params.image}\n                              />\n                              <Text\n                                mt={2}\n                                px={2}\n                                fontSize={1}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                              >\n                                Redeem your tokens from the Curve Pool.\n                                <Link\n                                  ml={1}\n                                  mainColor={'primary'}\n                                  hoverColor={'primary'}\n                                  onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                >\n                                  Read More\n                                </Link>\n                              </Text>\n                              {\n                                this.state.canRedeem &&\n                                  <Checkbox\n                                    mt={2}\n                                    required={false}\n                                    label={`Redeem from Curve`}\n                                    checked={this.state.redeemCurveEnabled}\n                                    onChange={ e => this.toggleRedeemCurve(e.target.checked) }\n                                  />\n                              }\n                            </Flex>\n                          </DashboardCard>\n                          {\n                            this.canRedeem &&\n                              <Link\n                                textAlign={'center'}\n                                hoverColor={'primary'}\n                                onClick={ e => this.setShowRedeemFlow(true) }\n                              >\n                                I just want to redeem my {this.props.selectedToken}\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (this.state.action === 'redeem' && this.state.unlentBalance && showRedeemFlow) &&\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'LocalGasStation'}\n                            />\n                            <Text\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Available balance for Cheap Redeem\n                            </Text>\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                                hoverColor={'copyColor'}\n                              >\n                                {this.state.unlentBalance.toFixed(4)} {this.props.selectedToken}\n                              </Text>\n                              <Tooltip\n                                placement={'top'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','cheapRedeem'])}\n                              >\n                                <Icon\n                                  ml={1}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                  name={\"InfoOutline\"}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                    }\n                    {\n                      (this.state.action === 'redeem' && redeemGovTokenEnabled && showRedeemFlow) && (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'InfoOutline'}\n                            />\n                            <Text\n                              mt={1}\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              By redeeming your {this.props.selectedToken} you will automatically get also the proportional amount of governance tokens accrued{ this.props.govTokensBalance && this.props.govTokensBalance.gt(0) ? ` (~ $${this.props.govTokensBalance.toFixed(2)})` : null }.\n                            </Text>\n                          </Flex>\n                          <Checkbox\n                            mt={2}\n                            required={false}\n                            checked={this.state.redeemGovTokens}\n                            label={`Redeem governance tokens only`}\n                            onChange={ e => this.toggleRedeemGovTokens(e.target.checked) }\n                          />\n                        </DashboardCard>\n                      )\n                    }\n                    {\n                      (this.state.contractPaused && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              name={'Warning'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Deposits for {this.props.selectedToken} are temporarily unavailable due to Smart-Contract maintenance. Redeems are always available.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : (!this.state.tokenApproved && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          {\n                            this.state.processing['approve'] && this.state.processing['approve'].loading ? (\n                              <Flex\n                                flexDirection={'column'}\n                              >\n                                <TxProgressBar\n                                  web3={this.props.web3}\n                                  waitText={`Approve estimated in`}\n                                  endMessage={`Finalizing approve request...`}\n                                  hash={this.state.processing['approve'].txHash}\n                                  cancelTransaction={this.cancelTransaction.bind(this)}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'1.8em'}\n                                  name={'LockOpen'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={3}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  {\n                                    this.state.depositCurveEnabled ? \n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} in the Curve Pool you need to approve the Smart-Contract first.`\n                                    : useMetaTx ?\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle using Meta-Transaction you need to approve our Smart-Contract first.`\n                                    :\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle you need to approve our Smart-Contract first.`\n                                  }\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:3,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.approveToken.bind(this)}\n                                >\n                                  Approve\n                                </RoundButton>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      ) : (!showBuyFlow && canPerformAction) && (\n                        !this.state.processing[this.state.action].loading ? (\n                          <Flex\n                            mt={2}\n                            flexDirection={'column'}\n                          >\n                            {\n                              showActionFlow && (\n                                <Flex\n                                  mb={3}\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  {\n                                    /*\n                                    showCurveSlippage &&\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:3,\n                                          mb:2\n                                        }}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'column'}\n                                        >\n                                          <Icon\n                                            size={'1.8em'}\n                                            color={'cellText'}\n                                            name={'FileUpload'}\n                                          />\n                                          <Text\n                                            mt={2}\n                                            fontSize={2}\n                                            color={'cellText'}\n                                            textAlign={'center'}\n                                          >\n                                            You can deposit {this.state.depositCurveBalance.toFixed(4)} {this.props.selectedToken} in the Curve Pool{ this.state.depositCurveSlippage ? (this.state.depositCurveSlippage.gt(0) ? ` with ${this.state.depositCurveSlippage.times(100).toFixed(2)}% of slippage` : ` with ${Math.abs(parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)))}% of bonus`) : '' }.\n                                          </Text>\n                                        </Flex>\n                                      </DashboardCard>\n                                    */\n                                  }\n                                  {\n                                    (totalBalance || this.props.tokenFeesPercentage) && (\n                                      <Box\n                                        mb={1}\n                                        width={1}\n                                      >\n                                        {\n                                          this.state.showMaxSlippage && showCurveSlippage && (\n                                            <Box\n                                              mb={2}\n                                              width={1}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text>\n                                                  Choose max slippage:\n                                                </Text>\n                                                <Tooltip\n                                                  placement={'top'}\n                                                  message={`Max additional slippage on top of the one shown below`}\n                                                >\n                                                  <Icon\n                                                    ml={1}\n                                                    size={'1em'}\n                                                    color={'cellTitle'}\n                                                    name={\"InfoOutline\"}\n                                                  />\n                                                </Tooltip>\n                                              </Flex>\n                                              <Flex\n                                                mt={2}\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                                justifyContent={'space-between'}\n                                              >\n                                                {\n                                                  [0.2,0.5,1,5].map( slippage => (\n                                                    <FastBalanceSelector\n                                                      cardProps={{\n                                                        p:1\n                                                      }}\n                                                      textProps={{\n                                                        fontSize:1\n                                                      }}\n                                                      percentage={slippage}\n                                                      key={`selector_${slippage}`}\n                                                      onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                                      isActive={this.state.maxSlippage === parseFloat(slippage)}\n                                                    />\n                                                  ))\n                                                }\n                                              </Flex>\n                                            </Box>\n                                          )\n                                        }\n                                        <Flex\n                                          width={1}\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                          justifyContent={'space-between'}\n                                        >\n                                        {\n                                          showCurveSlippage ? (\n                                            <Flex\n                                              width={1}\n                                              maxWidth={'50%'}\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                textAlign={'right'}\n                                                style={{\n                                                  whiteSpace:'nowrap'\n                                                }}\n                                                color={ this.state.depositCurveSlippage.gt(0) ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                                              >\n                                                {\n                                                  parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)) === 0 ?\n                                                    'No Slippage'\n                                                  : `${ this.state.depositCurveSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.depositCurveSlippage.times(100).abs().toFixed(2)}%`\n                                                }\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={this.functionsUtil.getGlobalConfig(['messages','curveBonusSlippage'])}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                              <Link\n                                                ml={1}\n                                                color={'copyColor'}\n                                                hoverColor={'primary'}\n                                                onClick={this.showMaxSlippage}\n                                              >\n                                                change\n                                              </Link>\n                                            </Flex>\n                                          ) : this.props.tokenFeesPercentage && (\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                color={'dark-gray'}\n                                                textAlign={'right'}\n                                                hoverColor={'copyColor'}\n                                              >\n                                                Performance fee: {this.props.tokenFeesPercentage.times(100).toFixed(2)}%\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={this.functionsUtil.getGlobalConfig(['messages','performanceFee'])}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                            </Flex>\n                                          )\n                                        }\n                                        {\n                                          totalBalance && (\n                                            <Link\n                                              fontSize={1}\n                                              fontWeight={3}\n                                              color={'dark-gray'}\n                                              textAlign={'right'}\n                                              hoverColor={'copyColor'}\n                                              onClick={ (e) => this.setFastBalanceSelector(100) }\n                                            >\n                                              {totalBalance.toFixed(6)} {this.props.selectedToken}\n                                            </Link>\n                                          )\n                                        }\n                                        </Flex>\n                                      </Box>\n                                    )\n                                  }\n                                  <Input\n                                    min={0}\n                                    type={\"number\"}\n                                    required={true}\n                                    height={'3.4em'}\n                                    borderRadius={2}\n                                    fontWeight={500}\n                                    boxShadow={'none !important'}\n                                    placeholder={`Insert amount`}\n                                    onChange={this.changeInputValue.bind(this)}\n                                    border={`1px solid ${theme.colors.divider}`}\n                                    value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                                  />\n                                  <Flex\n                                    mt={2}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'space-between'}\n                                  >\n                                    {\n                                      [25,50,75,100].map( percentage => (\n                                        <FastBalanceSelector\n                                          percentage={percentage}\n                                          key={`selector_${percentage}`}\n                                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                          isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                        />\n                                      ))\n                                    }\n                                  </Flex>\n                                </Flex>\n                              )\n                            }\n                            {\n                              canPerformAction && \n                                <Flex\n                                  justifyContent={'center'}\n                                  mt={ redeemGovTokens ? 2 : 0 }\n                                >\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:'auto',\n                                      minWidth:[1,1/2],\n                                      style:{\n                                        textTransform:'capitalize'\n                                      },\n                                      disabled:this.state.buttonDisabled\n                                    }}\n                                    handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                                  >\n                                    {this.state.action}{ redeemGovTokens ? ' Gov Tokens' : '' /*(depositCurve ? ' in Curve' : '')*/ }\n                                  </RoundButton>\n                                </Flex>\n                            }\n                          </Flex>\n                        ) : (\n                          <Flex\n                            mt={4}\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                              hash={this.state.processing[this.state.action].txHash}\n                              endMessage={`Finalizing ${this.state.action} request...`}\n                              waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                            />\n                          </Flex>\n                        )\n                      )\n                    }\n                  </Box>\n                ) : null\n              ) : (\n                <Flex\n                  mt={4}\n                  flexDirection={'column'}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading asset info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Migrate>\n        </Flex>\n        {\n          /*\n          showDepositCurve && this.state.depositCurveEnabled ? (\n            <CurveDeposit\n              {...this.props}\n            />\n          ) :\n          */\n          showRedeemCurve && this.state.redeemCurveEnabled && (\n            <Box\n              mt={3}\n              width={1}\n            >\n              <CurveRedeem\n                {...this.props}\n              />\n            </Box>\n          )\n        }\n        {\n          showBuyFlow &&\n            <Flex\n              mt={3}\n              width={[1,0.5]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <BuyModal\n                {...this.props}\n                showInline={true}\n                availableMethods={[]}\n                buyToken={this.props.selectedToken}\n              />\n            </Flex>\n        }\n\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.tokenAPY}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.tokenAPY}% APY on my ${this.props.selectedToken} with @idlefinance! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])} and start earning now from your idle tokens!`}\n        />\n\n      </Flex>\n    );\n  }\n}\n\nexport default DepositRedeem;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Input, Icon, Tooltip } from \"rimble-ui\";\n\nclass EstimatedEarnings extends Component {\n\n  state = {\n    tokenApy:null,\n    chartData:null,\n    chartProps:null,\n    inputValue:1000,\n    maxInputValue:999999999999999\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadChart();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.loadChart();\n    }\n  }\n\n  async getTokenApy(){\n    const tokenApy = this.state.tokenApy || await this.functionsUtil.getTokenApy(this.props.tokenConfig);\n    if (this.state.tokenApy !== tokenApy){\n      this.setState({\n        tokenApy\n      });\n    }\n    return tokenApy;\n  }\n\n  async loadChart(){\n\n    const tokenApy = await this.getTokenApy();\n\n    const amount = this.functionsUtil.BNify(this.state.inputValue);\n    const earningsYear = amount.times(tokenApy.div(100));\n\n    const amountMonth = parseFloat(earningsYear.div(12));\n    const amount3Months = parseFloat(earningsYear.div(4));\n    const amount6Months = parseFloat(earningsYear.div(2));\n    const amountYear = parseFloat(earningsYear.div(1));\n\n    const chartData = [\n      {\n        perc:1/12,\n        label:'MONTH',\n        value:amountMonth,\n        month:amountMonth,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        monthColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:3/12,\n        label:'3 MONTHS',\n        value:amount3Months,\n        month3:amount3Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month3Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:6/12,\n        label:'6 MONTHS',\n        value:amount6Months,\n        month6:amount6Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month6Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:1,\n        label:'YEAR',\n        year:amountYear,\n        value:amountYear,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        yearColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      }\n    ];\n\n    let labelTextColorModifiers = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'chart','labelTextColorModifiers']);\n\n    const maxGridLines = 4;\n    const gridYStep = amountYear/maxGridLines;\n    const gridYValues = [0];\n    for (let i=1;i<=maxGridLines;i++){\n      const gridYValue = i*gridYStep;\n      gridYValues.push(gridYValue);\n    }\n\n    const chartProps = {\n      padding: 0.2,\n      animate: false,\n      indexBy: 'label',\n      // enableLabel: false,\n      labelSkipWidth: 16,\n      labelSkipHeight: 16,\n      keys: ['month','month3','month6','year'],\n      colors: ({ id, data }) => data[`${id}Color`],\n      label: d => this.functionsUtil.abbreviateNumber(d.value,2,4)+' '+this.props.selectedToken,\n      labelTextColor: labelTextColorModifiers ? { from: 'color', modifiers: [ labelTextColorModifiers ] } : null,\n      isInteractive:false,\n      minValue:0,\n      gridYValues,\n      // maxValue:amountYear,\n      axisLeft:{\n        format: v => this.functionsUtil.abbreviateNumber(v,1,3),\n        tickValues:gridYValues,\n        orient: 'left',\n        tickSize: 0,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle'\n      },\n      axisBottom:{\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n      },\n      theme:{\n        labels:{\n          text:{\n            fontSize:15,\n            fontWeight:600,\n            fill:theme.colors.counter,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        axis: {\n          ticks: {\n            text: {\n              fontSize:14,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '9 5'\n          }\n        },\n      },\n      margin: this.props.isMobile ? { top: 0, right: 0, bottom: 30, left: 0 } : { top: 10, right: 0, bottom: 50, left: 65 }\n    }\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  changeInputValue(e){\n    let inputValue = e.target.value.length && !isNaN(e.target.value) ? Math.min(this.state.maxInputValue,parseFloat(e.target.value)) : 0;\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    });\n  }\n\n  render() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const showAPYDisclaimer = idleTokenEnabled && this.functionsUtil.getGlobalConfig(['govTokens','IDLE','showAPR']);\n\n    return (\n      <DashboardCard\n        cardProps={{\n          p:[3,4]\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            width={[1,0.3]}\n            flexDirection={'column'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetField\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'icon',\n                  props:{\n                    mb:2,\n                    height:'2.5em'\n                  }\n                }}\n              />\n              <Text\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n              >\n                Set the amount and see your estimated earnings on time based on the current APY: { this.state.tokenApy ? `${this.state.tokenApy.toFixed(2)}%` : null}\n                {\n                  showAPYDisclaimer && \n                    <Flex\n                      style={{\n                        display:'inline-flex',\n                        verticalAlign:'middle'\n                      }}\n                    >\n                      <Tooltip\n                        placement={'top'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                      >\n                        <Icon\n                          ml={1}\n                          name={\"Info\"}\n                          size={'1em'}\n                          color={'cellTitle'}\n                        />\n                      </Tooltip>\n                    </Flex>\n                }\n              </Text>\n            </Flex>\n            <Flex\n              mt={3}\n              flexDirection={'column'}\n            >\n              <Input\n                min={0}\n                max={this.state.maxInputValue}\n                type={\"number\"}\n                required={true}\n                height={['3em','3.4em']}\n                borderRadius={2}\n                fontWeight={500}\n                textAlign={'center'}\n                boxShadow={'none !important'}\n                onChange={this.changeInputValue.bind(this)}\n                border={`1px solid ${theme.colors.divider}`}\n                placeholder={`Insert ${this.props.selectedToken.toUpperCase()} amount`}\n                value={this.state.inputValue && !isNaN(this.state.inputValue) ? this.state.inputValue : ''}\n              />\n            </Flex>\n            <Flex\n              mt={3}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                buttonProps={{\n                  width:[1,1/2],\n                }}\n                handleClick={this.loadChart.bind(this)}\n              >\n                CALCULATE\n              </RoundButton>\n            </Flex>\n          </Flex>\n          <Flex\n            mt={[3,0]}\n            width={[1,0.7]}\n            id={'estimated-earnings-chart'}\n          >\n            {\n              this.props.isMobile ? (\n                <Flex\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  {\n                    this.state.chartData !== null && this.state.chartData.map((v,index) => (\n                      <Flex\n                        py={2}\n                        my={2}\n                        width={1}\n                        flexDirection={'row'}\n                        key={`earnings_${index}`}\n                      >\n                        <Flex\n                          width={0.35}\n                          alignItems={'center'}\n                          justifyContent={'flex-start'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'legend'}\n                          >\n                            {v.label}\n                          </Text>\n                        </Flex>\n                        <Flex\n                          width={0.65}\n                          position={'relative'}\n                          alignItems={'center'}\n                          minHeight={['20px','35px']}\n                          justifyContent={'center'}\n                        >\n                          <Flex\n                            zIndex={1}\n                            position={'relative'}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontSize={1}\n                              fontWeight={3}\n                              color={'counter'}\n                            >\n                              {this.functionsUtil.abbreviateNumber(v.value,2,4)} {this.props.selectedToken}\n                            </Text>\n                          </Flex>\n                          <Flex\n                            right={0}\n                            width={v.perc}\n                            position={'absolute'}\n                            height={['20px','35px']}\n                            borderRadius={['20px 0 0 20px','35px 0 0 35px']}\n                            style={{background:`linear-gradient(-90deg, rgba(${v.color},0) 0%, rgba(${v.color},1) 100%)`}}\n                          ></Flex>\n                        </Flex>\n                      </Flex>\n                    ))\n                  }\n                </Flex>\n              ) : (\n                <GenericChart\n                  type={Bar}\n                  height={250}\n                  showLoader={true}\n                  {...this.state.chartProps}\n                  data={this.state.chartData}\n                  parentId={'estimated-earnings-chart'}\n                />\n              )\n            }\n          </Flex>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default EstimatedEarnings;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport FundsOverview from '../FundsOverview/FundsOverview';\nimport DepositRedeem from '../DepositRedeem/DepositRedeem';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EstimatedEarnings from '../EstimatedEarnings/EstimatedEarnings';\n\nclass AssetPage extends Component {\n\n  state = {\n    tokenFees:{},\n    tokenBalance:{},\n    tokenApproved:{},\n    activeModal:null,\n    govTokensBalance:{},\n    idleTokenBalance:{},\n    redeemableBalance:{},\n    govTokensDisabled:{},\n    availableGovTokens:{},\n    tokenFeesPercentage:{},\n    componentMounted:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadTokensInfo(){\n    if (this.props.account){\n      const newState = {...this.state};\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n        const tokenConfig = this.props.availableTokens[token];\n        const govTokenAvailableTokens = {};\n        govTokenAvailableTokens[token] = tokenConfig;\n\n        const [\n          tokenFeesPercentage,\n          tokenBalance,\n          tokenFees,\n          idleTokenPrice,\n          idleTokenBalance,\n          tokenApproved,\n          govTokensBalance\n        ] = await Promise.all([\n          this.functionsUtil.getTokenFees(tokenConfig),\n          this.functionsUtil.getTokenBalance(token,this.props.account),\n          this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n          this.functionsUtil.genericContractCall(tokenConfig.idle.token, 'tokenPrice'),\n          this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n          this.functionsUtil.checkTokenApproved(token,tokenConfig.idle.address,this.props.account),\n          this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,govTokenAvailableTokens,'DAI')\n        ]);\n\n        newState.tokenFees[token] = tokenFees;\n        newState.tokenBalance[token] = tokenBalance;\n        newState.tokenApproved[token] = tokenApproved;\n        newState.idleTokenBalance[token] = idleTokenBalance;\n        newState.govTokensBalance[token] = govTokensBalance;\n        newState.tokenFeesPercentage[token] = tokenFeesPercentage;\n        newState.govTokensDisabled[token] = tokenConfig.govTokensDisabled;\n        newState.redeemableBalance[token] = idleTokenBalance ? this.functionsUtil.fixTokenDecimals(idleTokenBalance.times(idleTokenPrice),tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      });\n\n      newState.availableGovTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n\n      newState.componentMounted = true;\n      this.setState(newState);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged || transactionsChanged){\n      this.loadTokensInfo();\n    }\n  }\n\n  render() {\n\n    const userHasFunds = this.props.account && this.state.idleTokenBalance[this.props.selectedToken] && this.functionsUtil.BNify(this.state.idleTokenBalance[this.props.selectedToken]).gt(0);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            <Breadcrumb\n              isMobile={this.props.isMobile}\n              path={[this.props.selectedToken]}\n              handleClick={ e => this.props.goToSection(this.props.selectedStrategy) }\n              text={this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])}\n            />\n          </Flex>\n          <Flex\n            width={0.5}\n            justifyContent={'flex-end'}\n          >\n            <CardIconButton\n              icon={'Add'}\n              {...this.props}\n              text={'Add funds'}\n              handleClick={ e => this.setActiveModal('buy') }\n            />\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Deposit / Redeem\n        </Title>\n        <Flex\n          width={1}\n        >\n          <DepositRedeem\n            {...this.props}\n            tokenFees={this.state.tokenFees[this.props.selectedToken]}\n            tokenBalance={this.state.tokenBalance[this.props.selectedToken]}\n            tokenApproved={this.state.tokenApproved[this.props.selectedToken]}\n            govTokensBalance={this.state.govTokensBalance[this.props.selectedToken]}\n            idleTokenBalance={this.state.idleTokenBalance[this.props.selectedToken]}\n            redeemableBalance={this.state.redeemableBalance[this.props.selectedToken]}\n            tokenFeesPercentage={this.state.tokenFeesPercentage[this.props.selectedToken]}\n          />\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverview\n                {...this.props}\n                tokenFees={this.state.tokenFees[this.props.selectedToken]}\n              />\n            </Flex>\n        }\n        {\n          userHasFunds && this.props.account && !this.state.govTokensDisabled[this.props.selectedToken] && Object.keys(this.state.availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id={\"yield-farming\"}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(this.state.availableGovTokens)}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.30,0.15]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.25],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                    props:{\n                      width:[0.35,0.30],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                    ]\n                  },\n                  {\n                    title:'DISTRIBUTION',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                    props:{\n                      width:[0.35,0.30],\n                    },\n                    fields:[\n                      {\n                        name:'userDistributionSpeed',\n                        props:{\n                          decimals:6\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'APR',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                    props:{\n                      width:[0.2,0.17],\n                    },\n                    fields:[\n                      {\n                        name:'apr',\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                    mobile:false,\n                    props:{\n                      width: 0.17,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                  */\n                ]}\n                {...this.props}\n                availableTokens={this.state.availableGovTokens}\n              />\n            </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'estimated-earnings-container'}\n          >\n            <Title my={[3,4]}>Estimated earnings</Title>\n            <EstimatedEarnings\n              {...this.props}\n            />\n          </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              enabledTokens={[this.props.selectedToken]}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Tooltip, Link, Input } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass CurveDeposit extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    maxSlippage:0.2,\n    depositSlippage:null,\n    redeemableBalance:null,\n    migrationContract:null,\n    curveTokensBalance:null,\n    migrationSucceeded:false,\n    fastBalanceSelector:null,\n    migrationContractApproved:false,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.initToken();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const idleTokenBalanceChanged = prevProps.idleTokenBalance !== this.props.idleTokenBalance;\n    if (accountChanged || idleTokenBalanceChanged){\n      await this.initToken();\n    }\n    \n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = this.state.inputValue !== prevState.inputValue;\n    if (inputValueChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  changeInputValue = (e) => {\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(inputValue);\n\n    const fastBalanceSelector = null;\n\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector,\n    }));\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.idleTokenBalance ? this.functionsUtil.BNify(this.props.idleTokenBalance).times(selectedPercentage) : null;\n\n    this.checkButtonDisabled(inputValue);\n\n    this.setState({\n      inputValue\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n\n    const buttonDisabled = !amount || amount.gt(this.state.idleTokenBalance);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    const migrationContract = this.state.migrationContract;\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventAction: 'approve',\n            eventCategory: 'CurveDeposit',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              txHash:null,\n              loading:false\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              txHash\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.selectedToken,migrationContract.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:true\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  deposit = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const callbackDeposit = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventAction: this.props.selectedToken,\n        eventValue: inputValue.toFixed()\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      }));\n\n      if (typeof this.props.callbackDeposit === 'function' && txSucceeded){\n        this.props.callbackDeposit(tx);\n      }\n    };\n\n    const callbackReceiptDeposit = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.state.migrationContract.name;\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n    const depositParams = await this.getMigrationParams(_amount);\n\n    this.props.contractMethodSendWrapper(contractName, 'add_liquidity', depositParams, null, callbackDeposit, callbackReceiptDeposit);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  async getMigrationParams(toMigrate){\n    const migrationParams = [];\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.selectedToken]);\n\n    if (!curveTokenConfig){\n      return false;\n    }\n    \n    const migrationContractParams = curveTokenConfig.migrationParams;\n    if (migrationContractParams.n_coins){\n      const amounts = await this.functionsUtil.getCurveAmounts(this.props.selectedToken,toMigrate,true);\n      let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n\n      if (this.state.maxSlippage){\n        minMintAmount = this.functionsUtil.BNify(minMintAmount);\n        minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n        minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n      }\n\n      migrationParams.push(amounts);\n      migrationParams.push(minMintAmount);\n    }\n\n    return migrationParams;\n  }\n\n  async calculateSlippage(){\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n\n    if (inputValue){\n      let underlyingBalanceToDeposit = inputValue;\n      if (underlyingBalanceToDeposit){\n        const idleTokenPrice = await this.functionsUtil.getIdleTokenPrice(this.props.tokenConfig);\n        if (idleTokenPrice){\n          underlyingBalanceToDeposit = underlyingBalanceToDeposit.times(idleTokenPrice);\n        }\n      } else {\n        underlyingBalanceToDeposit = this.functionsUtil.BNify(0);\n      }\n\n      const normalizeIdleTokenBalance = this.functionsUtil.normalizeTokenAmount(underlyingBalanceToDeposit,this.props.tokenConfig.decimals);\n      let depositSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizeIdleTokenBalance);\n      if (depositSlippage){\n        depositSlippage = depositSlippage.times(100);\n      }\n\n      this.setState({\n        depositSlippage\n      });\n    }\n  }\n\n  async checkMigrationContractApproved(){\n    const migrationContract = this.state.migrationContract || await this.functionsUtil.getCurveSwapContract();\n    if (migrationContract){\n      return await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.idle.token,migrationContract.address,this.props.account);\n    }\n    return false;\n  }\n\n  async initToken(){\n\n    // Init and check migration contract\n    const migrationContract = await this.functionsUtil.getCurveSwapContract();\n    const migrationContractApproved = await this.checkMigrationContractApproved();\n\n    this.setState({\n      migrationContract,\n      migrationContractApproved\n    });\n  }\n\n  approveCallback = () => {\n    this.initToken();\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.props.selectedToken){\n      return null;\n    }\n\n    // const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const hasCurveTokens = this.state.curveTokensBalance && this.state.curveTokensBalance.gt(0);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n            {\n              this.props.idleTokenBalance && this.props.idleTokenBalance.gt(0) && (\n                <Box\n                  width={1}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Approve the Curve contract\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ hasCurveTokens ? 'CheckBox' : 'LooksTwo'}\n                          color={ hasCurveTokens ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Deposit your {this.props.tokenConfig.idle.token}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                  {\n                    !this.state.migrationContractApproved ?\n                      this.state.processing.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            waitText={`Approve estimated in`}\n                            hash={this.state.processing.txHash}\n                            endMessage={`Finalizing approve request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                          />\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'LockOpen'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              To deposit your {this.props.selectedToken} in the Curve Pool you need to approve the Smart-Contract first.\n                            </Text>\n                            <RoundButton\n                              buttonProps={{\n                                mt:3,\n                                width:[1,1/2]\n                              }}\n                              handleClick={this.approve.bind(this)}\n                            >\n                              Approve\n                            </RoundButton>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    : this.state.processing.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Deposit estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing deposit request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Choose max slippage:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`Max additional slippage on top of the one shown below`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <Flex\n                          mt={2}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          {\n                            [0.2,0.5,1,5].map( slippage => (\n                              <FastBalanceSelector\n                                cardProps={{\n                                  p:1\n                                }}\n                                textProps={{\n                                  fontSize:1\n                                }}\n                                percentage={slippage}\n                                key={`selector_${slippage}`}\n                                onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                isActive={this.state.maxSlippage === parseFloat(slippage)}\n                              />\n                            ))\n                          }\n                        </Flex>\n                        <Flex\n                          mt={2}\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={this.state.depositSlippage ? 'space-between' : 'flex-end'}\n                          >\n                            {\n                              this.state.depositSlippage && (\n                                <Flex\n                                  width={1}\n                                  maxWidth={'50%'}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                >\n                                  <Text\n                                    fontSize={1}\n                                    fontWeight={3}\n                                    textAlign={'right'}\n                                    style={{\n                                      whiteSpace:'nowrap'\n                                    }}\n                                    color={ parseFloat(this.state.depositSlippage.toFixed(3))>0 ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                                  >\n                                    {\n                                      parseFloat(this.state.depositSlippage.toFixed(3)) === 0 ?\n                                        'No Slippage'\n                                      : `${ this.state.depositSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.depositSlippage.abs().toFixed(3)}%`\n                                    }\n                                  </Text>\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.state.depositSlippage.gt(0) ? 'Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for' : 'Bonus comes as an advantage from current coin prices which usually appears for coins which are high in balance'}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                </Flex>\n                              )\n                            }\n                            {\n                              this.props.idleTokenBalance && (\n                                <Flex\n                                  width={1}\n                                  maxWidth={'50%'}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'flex-end'}\n                                >\n                                  <Link\n                                    fontSize={1}\n                                    fontWeight={3}\n                                    color={'dark-gray'}\n                                    textAlign={'right'}\n                                    hoverColor={'copyColor'}\n                                    onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    style={{\n                                      maxWidth:'100%',\n                                      overflow:'hidden',\n                                      whiteSpace:'nowrap',\n                                      textOverflow:'ellipsis'\n                                    }}\n                                  >\n                                    {this.props.idleTokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {this.props.selectedToken}\n                                  </Link>\n                                </Flex>\n                              )\n                            }\n                          </Flex>\n                          <Input\n                            min={0}\n                            type={\"number\"}\n                            required={true}\n                            height={'3.4em'}\n                            borderRadius={2}\n                            fontWeight={500}\n                            boxShadow={'none !important'}\n                            placeholder={`Insert amount`}\n                            onChange={this.changeInputValue.bind(this)}\n                            border={`1px solid ${this.props.theme.colors.divider}`}\n                            value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                          />\n                          <Flex\n                            mt={2}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'space-between'}\n                          >\n                            {\n                              [25,50,75,100].map( percentage => (\n                                <FastBalanceSelector\n                                  percentage={percentage}\n                                  key={`selector_${percentage}`}\n                                  onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                  isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                                />\n                              ))\n                            }\n                          </Flex>\n                          <Flex\n                            mt={2}\n                            justifyContent={'center'}\n                          >\n                            <RoundButton\n                              buttonProps={{\n                                mt:2,\n                                width:[1,1/2],\n                                disabled:this.state.buttonDisabled\n                              }}\n                              handleClick={this.deposit.bind(this)}\n                            >\n                              Deposit\n                            </RoundButton>\n                          </Flex>\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                </Box>\n              )\n            }\n          {\n            /*\n            this.state.tokenConfig && this.state.redeemableBalance ? (\n              <Box width={1}>\n                <Migrate\n                  {...this.props}\n                  showActions={false}\n                  getTokenPrice={false}\n                  migrationTextProps={{\n                    fontWeight:500\n                  }}\n                  isMigrationTool={true}\n                  migrationImage={{\n                    mb:1,\n                    height:'1.8em',\n                    src:curveConfig.params.image\n                  }}\n                  showBalanceSelector={true}\n                  waitText={'Deposit estimated in'}\n                  tokenConfig={this.state.tokenConfig}\n                  callbackApprove={this.approveCallback.bind(this)}\n                  migrationParams={this.getMigrationParams.bind(this)}\n                  migrationCallback={this.migrationCallback.bind(this)}\n                  approveText={`To deposit your ${this.props.tokenConfig.idle.token} you need to approve Curve smart-contract first.`}\n                  migrationText={`You can deposit ${this.state.redeemableBalance.toFixed(4)} ${this.props.tokenConfig.idle.token} in the Curve Pool${ this.state.depositSlippage ? (this.state.depositSlippage.gte(0) ? ` with <span style=\"color:${this.props.theme.colors.transactions.status.failed}\">${this.state.depositSlippage.times(100).toFixed(2)}% of slippage</span>` : ` with <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${Math.abs(parseFloat(this.state.depositSlippage.times(100).toFixed(2)))}% of bonus</span>`) : '' }.`}\n                >\n                  {\n                    !this.props.account ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'Input'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={2}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Please connect with your wallet interact with Idle.\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:2,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.props.connectAndValidateAccount}\n                          >\n                            Connect\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.migrationSucceeded ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'DoneAll'}\n                                color={this.props.theme.colors.transactions.status.completed}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You have successfully deposited your {this.props.tokenConfig.idle.token} in the Curve Pool!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.tokenConfig.idle.token} in your wallet.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                </Migrate>\n              </Box>\n            ) : null\n            */\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveDeposit;","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityCurve extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const curveTxs = await this.functionsUtil.getCurveTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = [];\n    const processedTxs = {};\n    let firstTxTimestamp = null;\n    let totalBalance = this.functionsUtil.BNify(0);\n    const curvePoolContract = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n        \n        firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n        const curveTokens = this.functionsUtil.BNify(tx.curveTokens);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            totalBalance = totalBalance.plus(curveTokens);\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          case 'CurveTransferOut':\n            totalBalance = totalBalance.minus(curveTokens);\n          break;\n          default:\n          break;\n        }\n\n        // Reset totalBalance if below zero\n        if (totalBalance.lt(0)){\n          totalBalance = this.functionsUtil.BNify(0);\n        }\n\n        const action = tx.action;\n        const balance = totalBalance;\n        const timeStamp = parseInt(tx.timeStamp);\n        const curveTokenPrice = this.functionsUtil.fixTokenDecimals(tx.curveTokenPrice,curvePoolContract.decimals);\n\n        // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY/MM/DD HH:mm'),tx.hash,tx.action,curveTokens.toString(),totalBalance.toString());\n\n        if (!curveTokenPrice.isNaN() && !curveTokenPrice.isNaN()){\n          tokensBalance.push({\n            action,\n            balance,\n            timeStamp,\n            curveTokens,\n            curveTokenPrice\n          });\n\n          processedTxs[tx.hash].push(action);\n        }\n      });\n    }\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    let aggregatedBalance = this.functionsUtil.BNify(0);\n    // let curveTokenBalance = this.functionsUtil.BNify(0);\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = await this.functionsUtil.getTokenApiData(Object.values(this.props.availableTokens)[0].address,false,firstTxTimestamp,null,false,3600);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      let foundBalances = {};\n      let tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      // eslint-disable-next-line\n      const filteredTokenData = tokensData.filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n\n      // eslint-disable-next-line\n      let filteredBalances = tokensBalance.filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n      \n      if (!filteredBalances.length){\n        if (prevBalances){\n          filteredBalances = prevBalances;\n          const lastFilteredTx = Object.values(filteredBalances).pop();\n          const currentBalance = parseFloat(lastFilteredTx.balance);\n\n          const lastTokenData = Object.values(filteredTokenData).pop();\n          let curveTokenPrice = null;\n          if (lastTokenData){\n            curveTokenPrice = await this.functionsUtil.getCurveTokenPrice(lastTokenData.blocknumber);\n          }\n\n          // Take idleToken price from API and calculate new balance\n          if (currentBalance>0 && timeStamp>firstTxTimestamp && curveTokenPrice){\n            // Set new curveTokenPrice\n            lastFilteredTx.curveTokenPrice = curveTokenPrice;\n            filteredBalances = [lastFilteredTx];\n          }\n        } else {\n          filteredBalances = [{\n            balance:this.functionsUtil.BNify(0),\n            curveTokenPrice:this.functionsUtil.BNify(0)\n          }];\n        }\n      }\n\n      const lastTx = Object.assign([],filteredBalances).pop();\n      let lastTxBalance = this.functionsUtil.BNify(lastTx.balance).times(lastTx.curveTokenPrice);\n\n      tokensBalances[curvePoolContract.token] = this.functionsUtil.BNify(lastTx.balance);\n      aggregatedBalance = lastTxBalance;\n\n      foundBalances = filteredBalances;\n\n      // console.log(momentDate.format('YYYY/MM/DD 00:00'),lastTx.balance.toString(),lastTx.curveTokenPrice.toString(),lastTxBalance.toString());\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        const aggregatedBalanceParsed = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalanceParsed;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalanceParsed : Math.min(minChartValue,aggregatedBalanceParsed);\n        maxChartValue = maxChartValue === null ? aggregatedBalanceParsed : Math.max(maxChartValue,aggregatedBalanceParsed);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    // Add token Data\n    chartData.push({\n      id:'USD',\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens','USD','color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 50 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0 &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const tokenInfo = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n                if (tokenInfo){\n                  const tokenName = tokenInfo.name ? tokenInfo.name : token;\n                  const color = tokenInfo.color.hex;\n                  const balance = point.data.balances[token];\n                  let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                  if (parseFloat(balance)>=0.01){\n                    return (\n                      <ChartCustomTooltipRow\n                        label={tokenName}\n                        color={color}\n                        key={`row_${token}`}\n                        value={`${formattedBalance}`}\n                      />\n                    );\n                  }\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityCurve;","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquityCurve from '../PortfolioEquityCurve/PortfolioEquityCurve';\n\nclass FundsOverviewCurve extends Component {\n\n  state = {\n    compAPR:null,\n    aggregatedValues:[],\n    govTokensUserBalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    await this.functionsUtil.getCurveAvgBuyPrice();\n\n    // debugger;\n\n    await this.functionsUtil.getCurveAvgSlippage();\n\n    // debugger;\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [govTokensUserBalance,avgAPY,days] = await Promise.all([\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,'DAI'),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    let [tokenAllocation,compAPR] = await Promise.all([\n      this.functionsUtil.getTokenAllocation(this.props.tokenConfig,false,false),\n      this.functionsUtil.getCompAPR(this.props.selectedToken,this.props.tokenConfig)\n    ]);\n\n    if (tokenAllocation){\n      const compoundInfo = this.props.tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (compoundInfo){\n        if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n          const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n          compAPR = compAPR.times(compoundAllocationPerc);\n        }\n      }\n    }\n\n    this.setState({\n      compAPR,\n      aggregatedValues,\n      govTokensUserBalance\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquityCurve\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLentCurve',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPercCurve',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              /*\n              <Flex\n                mb={[2,0]}\n                width={[1,1/5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'flex-start'}\n              >\n                <Title\n                  mb={2}\n                  fontSize={[3,4]}\n                  component={Heading.h3}\n                >\n                  Fees\n                </Title>\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'feesCounter',\n                    props:{\n                      decimals:7,\n                      maxPrecision:8,\n                      style:{\n                        fontWeight:300,\n                        fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                        color:theme.colors.counter\n                      },\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n              */\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Avg Slippage\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveAvgSlippage',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewCurve;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport CurveDeposit from '../CurveDeposit/CurveDeposit';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewCurve from '../FundsOverviewCurve/FundsOverviewCurve';\n\nclass AssetPage extends Component {\n\n  state = {\n    inputValue:{},\n    processing:{},\n    tokenFees:null,\n    canRedeem:null,\n    canDeposit:null,\n    action:'deposit',\n    activeModal:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    tokenApproved:null,\n    selectedToken:null,\n    availableTokens:{},\n    redeemBalance:null,\n    depositBalance:null,\n    buttonDisabled:false,\n    curveTokenPrice:null,\n    depositSlippage:null,\n    idleTokenBalance:null,\n    withdrawSlippage:null,\n    govTokensBalance:null,\n    curveZapContract:null,\n    curveTokenConfig:null,\n    curveTokensAmounts:{},\n    govTokensDisabled:null,\n    componentMounted:false,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    redeemableBalance:null,\n    fastBalanceSelector:{},\n    curveAvailableTokens:{},\n    tokenFeesPercentage:null,\n    redeemUnevenAmounts:false,\n    curveDepositContract:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  changeFromToken = (selectedToken) => {\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    this.props.goToSection(`${curveConfig.params.route}/${selectedToken}`);\n  }\n\n  getSelectedToken(){\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    return this.props.urlParams.param1 && curveAvailableTokens[this.props.urlParams.param1] ? this.props.urlParams.param1 : Object.keys(curveAvailableTokens)[0];\n  }\n\n  setSelectedToken = async (selectedToken) => {\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      availableTokens,\n      curveTokenConfig\n    });\n  }\n\n  loadTokensInfo = async () => {\n\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    this.setState({\n      curveAvailableTokens\n    });\n\n    const selectedToken = this.getSelectedToken();\n    // Check if token is set the query params\n    if (selectedToken && selectedToken !== this.props.urlParams.param1){\n      this.changeFromToken(selectedToken);\n      return await this.setSelectedToken(selectedToken);\n    } else if (selectedToken !== this.state.selectedToken){\n      await this.setSelectedToken(selectedToken);\n    }\n\n    const newState = {...this.state};\n\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n\n    if (newState.selectedToken !== selectedToken){\n      newState.selectedToken = selectedToken;\n    }\n\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n\n    const [\n      curveZapContract,\n      curvePoolContract,\n      curveSwapContract,\n      curveDepositContract\n    ] = await Promise.all([\n      this.functionsUtil.getCurveZapContract(),\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract()\n    ]);\n\n    newState.curveZapContract = curveZapContract;\n    newState.curvePoolContract = curvePoolContract;\n    newState.curveSwapContract = curveSwapContract;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.availableTokens = availableTokens;\n\n\n    // console.log('curveTokenPrice',newState.curveTokenPrice.toFixed(6),'curveTokenBalance',newState.curveTokenBalance.toFixed(6),'redeemableBalance',newState.redeemableBalance.toFixed(20),'tokenBalance',newState.tokenBalance.toFixed(20));\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[selectedToken] = tokenConfig;\n\n    newState.tokenConfig = tokenConfig;\n    newState.curveTokenConfig = curveTokenConfig;\n\n    if (this.props.account){\n      [\n        newState.curveTokenPrice,\n        newState.curveTokenBalance,\n        newState.tokenFeesPercentage,\n        newState.tokenFees,\n        newState.tokenBalance,\n        newState.idleTokenBalance,\n        newState.tokenApproved,\n      ] = await Promise.all([\n        this.functionsUtil.getCurveTokenPrice(),\n        this.functionsUtil.getCurveTokenBalance(),\n        this.functionsUtil.getTokenFees(tokenConfig),\n        this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n        this.functionsUtil.getTokenBalance(selectedToken,this.props.account),\n        this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n        this.functionsUtil.checkTokenApproved(selectedToken,curveDepositContract.address,this.props.account),\n      ]);\n\n\n      newState.processing = {\n        redeem:{\n          txHash:null,\n          loading:false\n        },\n        deposit:{\n          txHash:null,\n          loading:false\n        },\n        approve:{\n          txHash:null,\n          loading:false\n        },\n      };\n      newState.inputValue = {\n        redeem:null,\n        deposit:null\n      };\n      newState.fastBalanceSelector = {\n        redeem:null,\n        deposit:null\n      };\n\n      newState.componentMounted = true;\n      newState.depositBalance = newState.tokenBalance;\n      newState.redeemBalance = newState.redeemableBalance;\n      newState.govTokensDisabled = tokenConfig.govTokensDisabled;\n      newState.canRedeem = newState.curveTokenBalance && newState.curveTokenBalance.gt(0);\n      newState.canDeposit = newState.idleTokenBalance && newState.idleTokenBalance.gt(0);\n      newState.redeemableBalance = newState.curveTokenBalance ? newState.curveTokenBalance.times(newState.curveTokenPrice) : this.functionsUtil.BNify(0);\n    }\n\n    this.setState(newState);\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async calculateSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.curvePoolContract.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositBalance = amount;\n        newState.depositSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        newState.redeemBalance = amount;\n        newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.urlParams.param1 !== this.props.urlParams.param1;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || transactionsChanged || tokenChanged){\n      await this.loadTokensInfo();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const redeemUnevenAmountsChanged = this.state.redeemUnevenAmounts !== prevState.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    if (actionChanged){\n      this.updateAssetSelector();\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  updateAssetSelector = async () => {\n    const newState = {};\n    switch (this.state.action){\n      case 'deposit':\n        this.loadTokensInfo();\n      break;\n      case 'redeem':\n        // this.loadTokensInfo();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n        newState.curveAvailableTokens = {};\n        newState.curveTokenConfig = tokenConfig;\n        newState.selectedToken = tokenConfig.token;\n        newState.curveAvailableTokens[tokenConfig.token] = tokenConfig;\n      break;\n      default:\n      break;\n    }\n\n    this.setState(newState);\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.state.tokenBalance ? this.functionsUtil.BNify(this.state.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          amount = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n        } else {\n          amount = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.state.tokenBalance));\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.curveTokenBalance)) );\n        } else {\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.redeemableBalance)) );\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = this.state.tokenApproved;\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.state.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.functionsUtil.enableERC20(this.state.selectedToken,this.state.curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      // Handle deposit in curve\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.state.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,tokensToDeposit);\n        const minMintAmount = await this.functionsUtil.genericContractCall(this.state.curveSwapContract.name,'calc_token_amount',[amounts,true]);\n        const depositParams = [amounts,minMintAmount];\n\n        // No need for callback atm\n        contractSendResult = await this.props.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, null, callbackDeposit, callbackReceiptDeposit);\n      break;\n      case 'redeem':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        let curveTokensToRedeem = null;\n        if (selectedPercentage){\n          curveTokensToRedeem = this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage);\n        } else {\n          curveTokensToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals));\n          if (!this.state.redeemUnevenAmounts){\n            const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n            curveTokensToRedeem = curveTokensToRedeem.div(curveTokenPrice);\n          }\n        }\n\n        if (!curveTokensToRedeem){\n          return false;\n        }\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventLabel: tx.status,\n            eventCategory: `CurveRedeem`,\n            eventAction: this.state.selectedToken,\n            eventValue: curveTokensToRedeem.toFixed()\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const _amount = this.functionsUtil.normalizeTokenAmount(curveTokensToRedeem,this.state.curvePoolContract.decimals).toString();\n        let min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,0);\n\n        const contractName = this.state.curveDepositContract.name;\n        if (this.state.redeemUnevenAmounts){\n          console.log('remove_liquidity_imbalance',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_imbalance', [min_amounts, _amount], null, callbackRedeem, callbackReceiptRedeem);\n        } else {\n          min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,_amount);\n          console.log('remove_liquidity',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts], null, callbackRedeem, callbackReceiptRedeem);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    // console.log('contractSendResult',contractSendResult);\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    const userHasFunds = this.props.account && this.state.curveTokenBalance && this.functionsUtil.BNify(this.state.curveTokenBalance).gt(0);\n    const canPerformAction = true;\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            {\n              <Breadcrumb\n                isMobile={this.props.isMobile}\n                path={['Boost',this.state.selectedToken]}\n                handleClick={ e => this.props.goToSection('best') }\n                text={this.functionsUtil.getGlobalConfig(['strategies','best','title'])}\n              />\n            }\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Curve Pool\n        </Title>\n        <Flex\n          width={1}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Flex\n              width={[1,0.36]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select your asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  onChange={this.changeFromToken}\n                  selectedToken={this.state.selectedToken}\n                  tokenConfig={this.state.curveTokenConfig}\n                  showBalance={this.state.action === 'deposit'}\n                  availableTokens={this.state.curveAvailableTokens}\n                />\n              </Box>\n              <Box\n                width={1}\n              >\n                {\n                  canPerformAction ? (\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canRedeem }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  ) : (\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        size={'2.3em'}\n                        name={'MoneyOff'}\n                        color={'cellText'}\n                      />\n                      <Text\n                        mt={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You don't have any {this.state.tokenConfig.idle.token} in your wallet.\n                      </Text>\n                    </Flex>\n                  )\n                }\n              </Box>\n            </Flex>\n            <Flex\n              width={1}\n              mt={ this.props.account ? 3 : 0 }\n            >\n            {\n              this.state.action === 'deposit' ? (\n                <CurveDeposit\n                  {...this.props}\n                  {...this.state}\n                />\n              ) : this.state.action === 'redeem' && (\n                <CurveRedeem\n                  {...this.props}\n                  {...this.state}\n                />\n              )\n            }\n            </Flex>\n          </Flex>\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewCurve\n                {...this.props}\n                tokenFees={this.state.tokenFees}\n                tokenConfig={this.state.tokenConfig}\n                selectedToken={this.state.selectedToken}\n                availableTokens={this.state.availableTokens}\n                enabledTokens={Object.keys(this.state.availableTokens)}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.props.account && !this.state.govTokensDisabled[this.state.selectedToken] && Object.keys(availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id=\"earnings-estimation\"\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(availableGovTokens)}\n                handleClick={(props) => {}}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.33,0.22]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.26],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    props:{\n                      width:[0.33,0.26],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                      {\n                        name:'tooltip',\n                        props:{\n                          placement:'bottom',\n                          message:'The shown balance may be lower than the real one.',\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    mobile:false,\n                    props:{\n                      width: 0.26,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTokens={availableGovTokens}\n              />\n            </Flex>\n          */\n        }\n        {\n          /*\n          this.props.account && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'estimated-earnings-container'}\n            >\n              <Title my={[3,4]}>Estimated earnings</Title>\n              <EstimatedEarnings\n                {...this.props}\n              />\n            </Flex>\n          */\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              availableTokens={this.state.availableTokens}\n              enabledTokens={Object.keys(this.state.availableTokens)}\n              enabledActions={['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut']}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.state.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Button,\n  Form,\n  Icon,\n  Flex,\n  Link\n} from \"rimble-ui\";\nimport axios from 'axios';\nimport colors from '../../colors';\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass WelcomeModal extends React.Component {\n\n  state = {\n    email:null,\n    error:false,\n    subscribed:false,\n    sendingForm:false\n  };\n\n  functionsUtil = null;\n\n  constructor(props) {\n    super(props);\n    this.functionsUtil = new FunctionsUtil(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  componentDidUpdate = async () => {\n    this.functionsUtil.setProps(this.props);\n  }\n\n  sendUserInfo = (sendEmail=true) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const userInfo = {\n      address: this.props.account,\n      provider: walletProvider\n    };\n\n    if (sendEmail && this.state.email !== null){\n      userInfo.email = this.state.email;\n    }\n\n    this.functionsUtil.simpleIDPassUserInfo(userInfo);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.email){\n      return false;\n    }\n\n    const callback = () => {\n      this.setState({\n        sendingForm:false,\n        subscribed:true\n      });\n      window.setTimeout(this.props.closeModal,2500);\n    };\n\n    this.sendUserInfo();\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'send_email',\n      eventLabel: 'WelcomeModal'\n    });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      callback();\n    })\n    .catch(err => {\n      callback();\n    });\n\n    // Set signedUp in the localStorage\n    if (localStorage){\n      const walletAddress = this.props.account.toLowerCase();\n      let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : null;\n      if (lastLogin && lastLogin[walletAddress] && !lastLogin[walletAddress].signedUp){\n        lastLogin[walletAddress].signedUp = true;\n        this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n      }\n    }\n\n    this.setState({\n      sendingForm:true\n    })\n  };\n\n  closeModal = async () => {\n\n    const closeModal = () => {\n      this.props.closeModal();\n    };\n\n    try{\n      // Prevent sending email\n      this.sendUserInfo(false);\n\n      // Send Google Analytics event\n      if (globalConfigs.analytics.google.events.enabled){\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'UI',\n          eventAction: 'continue_without_email',\n          eventLabel: 'WelcomeModal'\n        },closeModal);\n\n        // Call callback after 1 second if stuck\n        setTimeout(closeModal,1000);\n      } else {\n        closeModal();\n      }\n    } catch (err) {\n      closeModal();\n    }\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        {\n          this.state.subscribed ? (\n            <ModalCard\n              closeFunc={this.closeModal}\n            >\n              <ModalCard.Header title={'All done'} icon={`images/done.svg`}></ModalCard.Header>\n              <ModalCard.Body>\n                <Flex width={1} flexDirection={'column'} mb={3}>\n                  <Text color={'dark-gray'} textAlign={'center'} fontSize={3} my={0}>\n                    Thanks for subscribing!\n                  </Text>\n                  <Button\n                    my={3}\n                    width={'100%'}\n                    borderRadius={4}\n                    onClick={this.closeModal}\n                  >\n                    CLOSE\n                  </Button>\n                </Flex>\n              </ModalCard.Body>\n            </ModalCard>\n          ) : (\n            <ModalCard closeFunc={this.closeModal}>\n              <ModalCard.Header title={'Stay up-to-date!'} icon={`images/notification.svg`}>\n              </ModalCard.Header>\n              <ModalCard.Body>\n                <Form onSubmit={this.handleSubmit}>\n                  <Flex width={1} flexDirection={'column'} mb={3}>\n                    <Text color={'mid-gray'} textAlign={'left'} fontSize={3} my={0}>\n                      Add your e-mail to receive updates about:\n                    </Text>\n                  </Flex>\n                  <Flex width={1} flexDirection={'column'} mt={2}>\n                    <Flex my={2} flexDirection={'row'} alignItems={'center'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Performance reports\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        New Protocols & Tokens\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Latest updates\n                      </Text>\n                    </Flex>\n                    <Form.Field width={1} label={''}>\n                      <Form.Input\n                        type=\"email\"\n                        name=\"EMAIL\"\n                        width={1}\n                        outline={'none'}\n                        border={0}\n                        px={3}\n                        py={4}\n                        fontSize={3}\n                        textAlign={['center','left']}\n                        placeholder={'Enter your e-mail'}\n                        onChange={this.handleValidation}\n                        required\n                      />\n                    </Form.Field>\n                    <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n                      <ButtonLoader\n                        buttonText={'SUBMIT'}\n                        isLoading={this.state.sendingForm}\n                        buttonProps={{className:header_styles.gradientButton,width:'100%',type:'submit'}}\n                      >\n                      </ButtonLoader>\n                      <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without e-mail</Link>\n                    </Flex>\n                  </Flex>\n                </Form>\n              </ModalCard.Body>\n            </ModalCard>\n          )\n        }\n      </Modal>\n    );\n  }\n}\n\nexport default WelcomeModal;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\n\nclass MigrateModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'continue_without_migrate',\n        eventLabel: 'MigrateModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowMigrateModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowMigrateModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = () => {\n    const tokenMigrationRoute = this.functionsUtil.getGlobalConfig(['tools','tokenMigration','route']);\n    this.props.goToSection('tools/'+tokenMigrationRoute);\n    this.props.closeModal();\n  }\n\n  render() {\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            iconHeight={'40px'}\n            title={'Migrate to Idle'}\n            icon={`images/migrate.svg`}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={3}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                You can migrate your funds from Compound, Aave, Fulcrum, Yearn and Idle V2 with just one transaction.\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                my={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.protocolsTokensBalances && Object.keys(this.props.protocolsTokensBalances).map( token => (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      key={`token_${token}`}\n                      justifyContent={'space-between'}\n                    >\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'icon',\n                          props:{\n                            mr:2,\n                            height:'2.3em'\n                          }\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                      <SmartNumber\n                        mr={2}\n                        {...fieldProps}\n                        minPrecision={5}\n                        number={this.props.protocolsTokensBalances[token].balance} \n                      />\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'tokenName',\n                          props:fieldProps\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                    </Flex>\n                  ) )\n                }\n                <Text\n                  mb={0}\n                  fontSize={1}\n                  color={'red'}\n                  fontWeight={500}\n                  textAlign={'center'}\n                >\n                  Please be aware that by migrating your tokens from other protocols, your open positions might be liquidated if collateralized with migrated tokens.\n                </Text>\n              </Flex>\n              <Flex\n                mb={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <ButtonLoader\n                  buttonText={'MIGRATE'}\n                  handleClick={this.migrate}\n                  isLoading={this.state.sendingForm}\n                  buttonProps={{\n                    width:['100%','50%'],\n                    className:header_styles.gradientButton\n                  }}\n                >\n                </ButtonLoader>\n                {\n                /*\n                <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without migrate</Link>\n                */\n                }\n                <Checkbox\n                  mt={2}\n                  required={false}\n                  color={'mid-gray'}\n                  checked={this.state.dontShowAgain}\n                  label={`Don't show this popup again`}\n                  onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                />\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default MigrateModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass UpgradeModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'close_upgrade_modal',\n        eventLabel: 'UpgradeModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowUpgradeModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowUpgradeModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = async (token,strategy=null) => {\n\n    if (!strategy){\n      strategy = this.props.selectedStrategy;\n    }\n\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  convert = async (token) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n\n    if (!this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            icon={`images/migrate.svg`}\n            title={'Upgrade Available'}\n            iconHeight={['35px','40px']}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={[2,3]}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                Idle now supports yield farming and governance tokens distribution, migrate now your portfolio with just one click!\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                mt={[2,3]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Flex\n                  fontSize={[2,3]}\n                  width={[0.5,0.28]}\n                  fontWeight={[4,5]}\n                  color={'copyColor'}\n                >\n                  {\n                    this.props.isMobile ? 'ASSET' : 'ASSET TO MIGRATE'\n                  }\n                </Flex>\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      BALANCE\n                    </Flex>\n                  )\n                }\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      OLD APY\n                    </Flex>\n                  )\n                }\n                <Flex\n                  fontSize={[2,3]}\n                  fontWeight={[4,5]}\n                  width={[0.25,0.19]}\n                  color={'copyColor'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.props.isMobile ? 'APY' : 'NEW APY'\n                  }\n                </Flex>\n                <Flex\n                  width={[0.25,0.15]}\n                >\n                  \n                </Flex>\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.tokensToMigrate && Object.keys(this.props.tokensToMigrate).map( tokenKey => {\n                    const token = this.props.tokensToMigrate[tokenKey].token;\n                    const strategy = this.props.tokensToMigrate[tokenKey].strategy;\n                    const tokenConfig = this.props.tokensToMigrate[tokenKey].tokenConfig;\n                    const balance = this.props.tokensToMigrate[tokenKey].oldContractBalanceFormatted;\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${tokenKey}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={[0.5,0.28]}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.8em','2.3em']\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                        </Flex>\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <SmartNumber\n                                {...fieldProps}\n                                minPrecision={5}\n                                number={balance}\n                                flexProps={{\n                                  justifyContent:'center'\n                                }}\n                              />\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <AssetField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'oldApy',\n                                  props:fieldProps\n                                }}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                        <Flex\n                          width={[0.25,0.19]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={token}\n                            tokenConfig={tokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={[0.25,0.15]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.migrate(token,strategy) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.oldIdleTokensToMigrate && Object.keys(this.props.oldIdleTokensToMigrate).map( token => {\n                    const tokenConfig = this.props.oldIdleTokensToMigrate[token].tokenConfig;\n\n                    if (!tokenConfig){\n                      return null;\n                    }\n\n                    const balance = this.props.oldIdleTokensToMigrate[token].balance;\n                    let newTokenConfig = null;\n\n                    if (tokenConfig.availableStrategies && !this.props.availableTokens[tokenConfig.baseToken]){\n                      newTokenConfig = this.props.availableStrategies[tokenConfig.availableStrategies[0]][tokenConfig.baseToken];\n                    } else {\n                      newTokenConfig = this.props.availableTokens[tokenConfig.baseToken];\n                    }\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${token}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={0.28}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:'2.3em'\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <SmartNumber\n                            {...fieldProps}\n                            minPrecision={5}\n                            number={balance}\n                            flexProps={{\n                              justifyContent:'center'\n                            }}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'oldApy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.15}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.convert(token) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                my={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <RoundButton\n                  handleClick={this.closeModal}\n                  buttonProps={{\n                    fontSize:[2,3],\n                    width:['100%','40%'],\n                  }}\n                >\n                  MIGRATE LATER\n                </RoundButton>\n                {\n                  <Checkbox\n                    mt={2}\n                    required={false}\n                    color={'mid-gray'}\n                    checked={this.state.dontShowAgain}\n                    label={`Don't show this popup again`}\n                    onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                  />\n                }\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UpgradeModal;","import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = 'getTotalSupply';\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n    }\n\n    return null;\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance && !this.functionsUtil.BNify(balance).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getVestingContract = async (account=null) => {\n    account = account ? account : this.props.account;\n    const vestingContract = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n\n    if (parseInt(vestingContract) === 0){\n      return null;\n    }\n    // Init vesting contract\n    await this.props.initContract('VestingContract',vestingContract,VesterABI);\n    return vestingContract;\n  }\n\n  delegateVesting = async (account=null,delegate=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','setDelegate',[delegate],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  getVestingAmount = async (account=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      let vestingAmount = await this.functionsUtil.genericContractCall('VestingContract','vestingAmount');\n      if (vestingAmount){\n        return this.functionsUtil.BNify(vestingAmount);\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes && !this.functionsUtil.BNify(votes).isNaN() ){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  getTimelockDelay = async () => {\n    // Check for cached data\n    const cachedDataKey = `getTimelockDelay`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    let delay = await this.functionsUtil.genericContractCall('Timelock','delay');\n    if (delay){\n      delay = this.functionsUtil.BNify(delay);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delay,null);\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.toBN(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegatesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegatesVotesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const [\n      all_votes,\n      totalSupply,\n      delegations,\n    ] = await Promise.all([\n      this.getVotes(),\n      this.getTotalSupply(),\n      this.getDelegatesVotesChanges()\n    ]);\n\n    const delegateAccounts = {};\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    let delegates = [];\n    Object.keys(delegateAccounts).forEach((account) => {\n      const votes = +delegateAccounts[account];\n      if (votes === 0) return;\n      delegates.push({\n        votes: votes/1e18,\n        delegate: account\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / parseFloat(totalSupply))).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegates);\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n\n    let votes = await this.functionsUtil.getContractPastEvents(governanceContractName,'VoteCast', {fromBlock: 0, toBlock: 'latest'});\n\n    if (votes){\n      votes = votes.map( e => {\n        const {\n            voter,\n            votes,\n            support,\n            proposalId\n        } = e.returnValues;\n        return {\n          votes,\n          voter,\n          support,\n          proposalId\n        }\n      });\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null,filter_by_state=null) => {\n\n    // Check for cached data\n    const cachedDataKey = 'getProposals';\n    let cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      if (filter_by_state !== null){\n        cachedData = cachedData.filter( p => (p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n      }\n      if (voted_by !== null){\n        cachedData = cachedData.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      // console.log('getProposals (CACHED)',filter_by_state,cachedData);\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const proposalCount = await this.functionsUtil.genericContractCall(governanceContractName,'proposalCount');\n\n    if (!proposalCount){\n      return [];\n    }\n\n    const proposalGets = [];\n    const proposalStateGets = [];\n    for (const i of Array.from(Array(parseInt(proposalCount)),(n,i) => i+1)) {\n      proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n      proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n    }\n\n    let [\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents,\n    ] = await Promise.all([\n      this.getVotes(),\n      Promise.all(proposalGets),\n      Promise.all(proposalStateGets),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock: 0, toBlock: 'latest'}),\n    ]);\n\n    proposals.reverse();\n    proposalStates.reverse();\n    proposalQueuedEvents.reverse();\n    proposalCreatedEvents.reverse();\n    proposalCanceledEvents.reverse();\n    proposalExecutedEvents.reverse();\n\n    await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n      const proposalId = parseInt(p.id);\n\n      const createdEvent = proposalCreatedEvents[i];\n      const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n      // Init states array\n      p.states = [];\n\n      // Create created state\n      const createdBlockInfo = await this.props.web3.eth.getBlock(createdEvent.blockNumber);\n      const createdState = {\n        state: \"Pending\",\n        blockNumber: createdEvent.blockNumber,\n        end_time: createdBlockInfo.timestamp,\n        start_time: createdBlockInfo.timestamp,\n        trx_hash: createdEvent.transactionHash\n      };\n      p.states.push(createdState);\n\n      // Push active state\n      const activeState = {\n        end_time: null,\n        trx_hash: null,\n        state: \"Active\",\n        blockNumber: createdEvent.blockNumber,\n        start_time: createdState.start_time\n      };\n      p.states.push(activeState);\n\n      // Push canceled state\n      if (canceledEvent){\n        const canceledBlockInfo = await this.props.web3.eth.getBlock(canceledEvent.blockNumber);\n        const canceledState = {\n          end_time: null,\n          state: \"Canceled\",\n          blockNumber: canceledEvent.blockNumber,\n          start_time: canceledBlockInfo.timestamp,\n          trx_hash: canceledEvent.transactionHash\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n        p.states.push(canceledState);\n      } else {\n        // Push queued state\n        if (queuedEvent){\n          const queuedBlockInfo = await this.props.web3.eth.getBlock(queuedEvent.blockNumber);\n          const succeededState = {\n            end_time: null,\n            trx_hash: null,\n            state: \"Succeeded\",\n            blockNumber: queuedEvent.blockNumber,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          const queuedState = {\n            end_time: null,\n            state: \"Queued\",\n            blockNumber: queuedEvent.blockNumber,\n            trx_hash: queuedEvent.transactionHash,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n          // Push Succeeded state\n          p.states.push(succeededState);\n          // Push queued state\n          p.states.push(queuedState);\n        }\n\n        // Push executed state\n        if (executedEvent){\n          const executedBlockInfo = await this.props.web3.eth.getBlock(executedEvent.blockNumber);\n          const executedState = {\n            end_time: null,\n            state: \"Executed\",\n            blockNumber: executedEvent.blockNumber,\n            start_time: executedBlockInfo.timestamp,\n            trx_hash: executedEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n          p.states.push(executedState);\n        }\n      }\n\n      // Check for defeated or expired\n      p.state = enumerateProposalState(proposalStates[i]);\n      const foundState = p.states.find( s => (s.state === p.state) );\n      if (!foundState){\n        const endBlockInfo = await this.props.web3.eth.getBlock(p.endBlock);\n        const endState = {\n          state: p.state,\n          end_time: null,\n          trx_hash: null,\n          blockNumber: p.endBlock,\n          start_time: endBlockInfo.timestamp,\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n        p.states.push(endState);\n      }\n\n      p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n      const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n      p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n      \n      // Idle\n      p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n      p.description = description.split(/\\n|↵/g);\n      p.description.shift();\n      p.description = p.description.join(\"\\n\");\n\n      // Compound\n      // p.title = description.split(/# |\\n/g)[1] || 'Untitled';\n      // p.description = description.split(/# |\\n/g)[2] || 'No description.';\n\n      // console.log('getProposals',filter_by_state,cachedData);\n\n      // Save proposal\n      proposals[i] = {\n        eta:p.eta,\n        actions:{\n          values,\n          targets,\n          calldatas,\n          signatures\n        },\n        id:proposalId,\n        title:p.title,\n        state:p.state,\n        votes:p.votes,\n        states:p.states,\n        executed:p.executed,\n        endBlock:p.endBlock,\n        canceled:p.canceled,\n        forVotes:p.forVotes,\n        proposer:p.proposer,\n        timestamp:p.timestamp,\n        startBlock:p.startBlock,\n        description:p.description,\n        againstVotes:p.againstVotes\n      };\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,proposals);\n\n    // console.log('getProposals',filter_by_state,cachedData);\n\n    if (filter_by_state !== null){\n      proposals = proposals.filter( p => (p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n    }\n\n    if (voted_by !== null){\n      proposals = proposals.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n    }\n    \n    return proposals;\n  }\n}\n\nexport default GovernanceUtil;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Notifications.module.scss';\nimport { Flex, Icon, Box, Text, Image } from \"rimble-ui\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Notifications extends Component {\n\n  state = {\n    tabOpened:false,\n    notifications:[],\n    mouseOverBell:false,\n    unreadNotifications:0,\n    lastOpenTimestamp:null,\n    mouseOverNotifications:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadNotifications();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const clickEventChanged = prevProps.clickEvent !== this.props.clickEvent;\n    if (clickEventChanged && this.props.clickEvent && !this.state.mouseOverNotifications && !this.state.mouseOverBell && this.state.tabOpened){\n      this.setState({\n        tabOpened:false\n      });\n    }\n\n    const tabOpenedChanged = prevState.tabOpened !== this.state.tabOpened;\n    if (tabOpenedChanged && this.state.tabOpened){\n      this.updateLastOpenTimestamp();\n    }\n\n    const notificationsChanged = JSON.stringify(prevState.notifications) !== JSON.stringify(this.state.notifications);\n    const lastOpenTimestampChanged = prevState.lastOpenTimestamp !== this.state.lastOpenTimestamp;\n    if (lastOpenTimestampChanged || notificationsChanged){\n      const unreadNotifications = this.state.lastOpenTimestamp ? this.state.notifications.filter( n => n.timestamp>this.state.lastOpenTimestamp ).length  : this.state.notifications.length;\n      this.setState({\n        unreadNotifications\n      });\n    }\n  }\n\n  updateLastOpenTimestamp(){\n    const lastOpenTimestamp = Date.now();\n    \n    // Set Notification params in localStorage\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams',true,{});\n    notificationsParams.lastOpenTimestamp = lastOpenTimestamp;\n    this.functionsUtil.setLocalStorage('notificationsParams',notificationsParams,true);\n\n    this.setState({\n      lastOpenTimestamp\n    });\n  }\n\n  async loadNotifications(){\n\n    // Get stored lastOpenTimestamp for notifications\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams',true,{});\n    const lastOpenTimestamp = notificationsParams.lastOpenTimestamp || null;\n\n    // Get active snapshot proposals\n    const [\n      activeSnapshotProposals,\n      governanceProposals,\n      batchedDeposits\n    ] = await Promise.all([\n      this.functionsUtil.getSnapshotProposals(true),\n      this.governanceUtil.getProposals(null,'Active'),\n      this.functionsUtil.getBatchedDeposits(this.props.account,'executed')\n    ]);\n\n    const currTime = Date.now();\n\n    // Add snapshot proposals\n    const snapshotProposalBaseUrl = this.functionsUtil.getGlobalConfig(['network','providers','snapshot','urls','proposals']);\n    let notifications = this.functionsUtil.getGlobalConfig(['notifications']).filter( n => (n.enabled && n.start<=currTime && n.end>currTime) );\n\n    activeSnapshotProposals.forEach( p => {\n        notifications.push({\n          text:p.msg.payload.body.replace(/^[#]*/,''),\n          image:'/images/snapshot.png',\n          title:'Snapshot Proposal',\n          timestamp:p.msg.payload.start*1000,\n          link:snapshotProposalBaseUrl+p.authorIpfsHash,\n          date:this.functionsUtil.strToMoment(p.msg.payload.start*1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n        });\n    });\n\n    // Add governance proposals\n    const governanceProposalUrl = this.functionsUtil.getGlobalConfig(['baseURL'])+'/#'+this.functionsUtil.getGlobalConfig(['governance','baseRoute'])+'/proposals/';\n    governanceProposals.forEach( p => {\n      notifications.push(\n        {\n          text:p.title,\n          iconProps:{\n            color:'#00acff'\n          },\n          icon:'LightbulbOutline',\n          timestamp:p.timestamp*1000,\n          link:governanceProposalUrl+p.id,\n          title:'Governance Proposal',\n          date:this.functionsUtil.strToMoment(p.timestamp*1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n        }\n      );\n    });\n\n    // Add Executed Batch Deposits\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositBaseUrl = this.functionsUtil.getGlobalConfig(['baseURL'])+'/#'+this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+`/tools/${batchDepositConfig.route}/`;\n    Object.keys(batchedDeposits).forEach( batchToken => {\n      const batchInfo = batchedDeposits[batchToken];\n      const timestamp = batchInfo.lastExecution.timeStamp*1000;\n      const text = `You can claim ${batchInfo.batchRedeems.toFixed(4)} ${batchToken}`;\n      notifications.push({\n        text,\n        timestamp,\n        icon:'DoneAll',\n        title:'Batch Deposit Executed',\n        link:batchDepositBaseUrl+batchToken,\n        iconProps:{\n          color:this.props.theme.colors.transactions.status.completed\n        },\n        date:this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n      });\n    });\n\n    notifications = notifications.sort((a,b) => (a.timestamp < b.timestamp ? 1 : -1));\n\n    this.setState({\n      notifications,\n      lastOpenTimestamp\n    });\n  }\n\n  setMouseOverBell(mouseOverBell){\n    this.setState({\n      mouseOverBell\n    });\n  }\n\n  setMouseOverNotifications(mouseOverNotifications){\n    this.setState({\n      mouseOverNotifications\n    });\n  }\n\n  toggleTab(){\n    this.setState((prevState) => ({\n      tabOpened:!prevState.tabOpened\n    }));\n  }\n\n  render() {\n    const hasUnreadNotifications = this.state.unreadNotifications>0;\n    const iconColor = hasUnreadNotifications ? '#ffdc00' : 'cellText';\n    return (\n      <Flex\n        zIndex={999}\n        position={'relative'}\n        {...this.props.flexProps}\n      >\n        <Box\n          width={1}\n          position={'relative'}\n          onMouseOut={(e) => this.setMouseOverBell(false)}\n          onMouseOver={(e) => this.setMouseOverBell(true)}\n        >\n          <Icon\n            size={'2.4em'}\n            color={iconColor}\n            name={'Notifications'}\n            onClick={this.toggleTab.bind(this)}\n            className={[styles.bell,(hasUnreadNotifications ? styles.ring : null),(this.state.tabOpened || this.state.notifications.length>0 ? styles.active : null)]}\n          />\n          {\n            hasUnreadNotifications && \n              <Box\n                className={styles.counter}\n              >\n                {this.state.notifications.length}\n              </Box>\n          }\n        </Box>\n        {\n          this.state.tabOpened &&\n            <DashboardCard\n              cardProps={{\n                style:{\n                  right:0,\n                  maxHeight:'21em',\n                  overflow:'scroll',\n                  position:'absolute',\n                  top:this.props.isMobile ? '2.8em' : '3em',\n                },\n                minWidth:['91vw','20em'],\n                onMouseOut:(e) => this.setMouseOverNotifications(false),\n                onMouseOver:(e) => this.setMouseOverNotifications(true),\n              }}\n            >\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n              {\n                this.state.notifications.length>0 ?\n                  this.state.notifications.map( (n,index) => (\n                    <ExtLink\n                      href={n.link}\n                      style={{\n                        textDecoration:'none'\n                      }}\n                      key={`notification_${index}`}\n                      onClick={ n.hash ? e => window.location.hash = n.hash : null }\n                    >\n                      <Flex\n                        py={2}\n                        px={1}\n                        flexDirection={'row'}\n                        className={styles.notification}\n                        borderBottom={index<this.state.notifications.length-1 ? `1px solid ${this.props.theme.colors.divider}` : null}\n                      >\n                        <Flex\n                          minWidth={'2em'}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          {\n                            n.icon ? (\n                              <Icon\n                                name={n.icon}\n                                size={'1.6em'}\n                                color={'copyColor'}\n                                {...n.iconProps}\n                              />\n                            ) : n.image && (\n                              <Image\n                                src={n.image}\n                                width={'1.6em'}\n                                height={'1.6em'}\n                              />\n                            )\n                          }\n                        </Flex>\n                        <Flex\n                          ml={1}\n                          overflow={'hidden'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={1}\n                            color={'blue'}\n                            lineHeight={1.3}\n                          >\n                            {n.title}\n                          </Text>\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'copyColor'}\n                            style={{\n                              overflow:'hidden',\n                              whiteSpace:'nowrap',\n                              textOverflow:'ellipsis'\n                            }}\n                          >\n                            {n.text}\n                          </Text>\n                          <Text\n                            fontSize={0}\n                            lineHeight={1.3}\n                            color={'cellText'}\n                          >\n                            {n.date}\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </ExtLink>\n                  ))\n                : (\n                  <Text\n                    py={2}\n                    textAlign={'center'}\n                  >\n                    There are no notifications.\n                  </Text>\n                )\n              }\n              </Flex>\n            </DashboardCard>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Notifications;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport { Heading, Modal, Flex, EthAddress } from \"rimble-ui\";\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\nimport CardIconButton from '../../CardIconButton/CardIconButton';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n    // this.props.closeModal();\n  }\n\n  goToSection(section){\n    this.props.goToSection(section);\n    this.props.closeModal();\n  }\n\n  render(){\n    if (this.props.account){\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      const showTools = ['addFunds','tokenSwap'];\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                alignItems={'center'}\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                  justifyContent={'stretch'}\n                >\n                  <EthAddress\n                    width={1}\n                    address={this.props.account}\n                  />\n                </Flex>\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                >\n                  <Heading.h4\n                    textAlign={'center'}\n                  >\n                    Balances:\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <Heading.h4\n                    mb={2}\n                    textAlign={'center'}\n                  >\n                    Tools:\n                  </Heading.h4>\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                    flexDirection={['column','row']}\n                  >\n                    {\n                      showTools.map( toolName => {\n                        const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                        return (\n                          <CardIconButton\n                            {...this.props}\n                            key={`tool_${toolName}`}\n                            cardProps={{\n                              mx:[0,2],\n                              my:[2,0],\n                              width:'auto',\n                              minWidth:['50%','auto']\n                            }}\n                            icon={toolConfig.icon}\n                            text={toolConfig.label}\n                            handleClick={ e => this.goToSection(`tools/${toolConfig.route}`) }\n                          />\n                        )\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              </Flex>\n            </ModalCard.Body>\n\n            <ModalCard.Footer>\n              {(this.props.context.active || (this.props.context.error && this.props.context.connectorName)) && (\n                <ButtonLoader\n                  buttonText={'Logout wallet'}\n                  isLoading={this.state.logout}\n                  handleClick={ async () => { await this.logout() } }\n                  buttonProps={{className:styles.gradientButton,borderRadius:'2rem',mt:[4,8],minWidth:['95px','145px'],size:['auto','medium']}}\n                >\n                </ButtonLoader>\n              )}\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from 'react';\nimport styles from './MenuAccount.module.scss';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Icon, Image, Link, Text } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport Notifications from '../Notifications/Notifications';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport AccountModal from \"../utilities/components/AccountModal\";\n\nclass MenuAccount extends Component {\n\n  state = {\n    isModalOpen: null,\n    idleTokenBalance: null\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadIdleTokenBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadIdleTokenBalance();\n    }\n  }\n\n  async loadIdleTokenBalance(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled){\n      let idleTokenBalance = this.functionsUtil.BNify(0);\n      const [\n        balance,\n        unclaimed\n      ] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed){\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n\n      return this.setState({\n        idleTokenBalance\n      });\n    }\n    return null;\n  }\n\n  toggleModal = (modalName) => {\n    this.setState(state => ({...state, isModalOpen: (state.isModalOpen===modalName ? null : modalName) }));\n  }\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem('walletProvider',false,null);\n    const connectorInfo = walletProvider ? this.functionsUtil.getGlobalConfig(['connectors',walletProvider.toLowerCase()]) : null;\n    const walletIcon = connectorInfo && connectorInfo.icon ? connectorInfo.icon : walletProvider ? `${walletProvider.toLowerCase()}.svg` : null;\n\n    const governanceRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const dashboardRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.props.availableStrategies)[0];\n\n    return (\n      this.props.account ? (\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          alignItems={['flex-start','center']}\n        >\n          <Flex\n            mb={[2,0]}\n            flexDirection={'row'}\n            alignItems={'center'}\n            width={[1,'fit-content']}\n            justifyContent={'space-between'}\n          >\n            <DashboardCard\n              {...this.props}\n              cardProps={{\n                py:1,\n                px:[1,2],\n                mr:[2,0],\n                display:'flex',\n                width:[1,'auto']\n              }}\n              isActive={true}\n              isInteractive={true}\n              handleClick={e => this.toggleModal('account')}\n            >\n              <Flex\n                p={0}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={['center','flex-start']}\n              >\n                {\n                  connectorInfo ? (\n                    <Image\n                      mr={[1,2]}\n                      width={'2em'}\n                      height={'2em'}\n                      display={'inline-flex'}\n                      src={`images/${walletIcon}`}\n                      alt={walletProvider.toLowerCase()}\n                    />\n                  ) : (\n                    <Icon\n                      mr={[1,2]}\n                      size={'2em'}\n                      color={'copyColor'}\n                      name={'AccountCircle'}\n                    />\n                  )\n                }\n                <ShortHash\n                  fontSize={2}\n                  fontWeight={3}\n                  color={'copyColor'}\n                  hash={this.props.account}\n                />\n              </Flex>\n            </DashboardCard>\n            {\n              this.props.isMobile &&\n                <Notifications\n                  {...this.props}\n                />\n            }\n          </Flex>\n          <Flex\n            ml={[0,3]}\n            style={{\n              flex:'1 1 auto'\n            }}\n            width={[1,'auto']}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={this.state.idleTokenBalance ? 'space-between' : 'flex-end'}\n          >\n            {\n              this.state.idleTokenBalance && \n                <Link\n                  style={{\n                    textDecoration:'none'\n                  }}\n                  px={2}\n                  className={styles.balanceButton}\n                  onClick={ e => this.props.setGovModal(true) }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    height={['38px','42px']}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={1}\n                      width={'1.7em'}\n                      height={'1.7em'}\n                      display={'inline-flex'}\n                      src={`images/tokens/IDLE.png`}\n                    />\n                    <Text\n                      color={'white'}\n                      fontSize={[1,2]}\n                      fontWeight={500}\n                    >\n                      {this.state.idleTokenBalance.toFixed(2)} IDLE\n                    </Text>\n                  </Flex>\n                </Link>\n            }\n            <Flex\n              width={'auto'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n            >\n              {\n                governanceEnabled && this.props.isDashboard ? (\n                  <RoundButton\n                    buttonProps={{\n                      mainColor:'redeem',\n                      style:{\n                        width:'auto',\n                        height:this.props.isMobile ? '38px' : '45px'\n                      },\n                      size:this.props.isMobile ? 'small' : 'medium'\n                    }}\n                    handleClick={ (e) => { this.props.goToSection(governanceRoute,false) } }\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        mr={[1,2]}\n                        size={'1.6em'}\n                        color={'white'}\n                        name={'ExitToApp'}\n                      />\n                      <Text\n                        fontWeight={3}\n                        color={'white'}\n                        fontSize={[2,3]}\n                      >\n                        Governance\n                      </Text>\n                    </Flex>\n                  </RoundButton>\n                ) : this.props.isGovernance && (\n                  <RoundButton\n                    buttonProps={{\n                      mainColor:'redeem',\n                      style:{\n                        width:'auto',\n                        height:this.props.isMobile ? '38px' : '45px'\n                      },\n                      size:this.props.isMobile ? 'small' : 'medium'\n                    }}\n                    handleClick={ (e) => { this.props.goToSection(dashboardRoute,false) } }\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        mr={[1,2]}\n                        size={'1.6em'}\n                        color={'white'}\n                        name={'ExitToApp'}\n                      />\n                      <Text\n                        fontWeight={3}\n                        color={'white'}\n                        fontSize={[2,3]}\n                      >\n                        Dashboard\n                      </Text>\n                    </Flex>\n                  </RoundButton>\n                )\n              }\n              {\n                !this.props.isMobile &&\n                  <Notifications\n                    {...this.props}\n                    flexProps={{\n                      ml:2\n                    }}\n                  />\n              }\n            </Flex>\n          </Flex>\n          <AccountModal\n            {...this.props}\n            isOpen={this.state.isModalOpen==='account'}\n            closeModal={e => this.toggleModal('account') }\n          />\n        </Flex>\n      ) : (\n        <Flex\n          width={1}\n          justifyContent={'flex-start'}\n        >\n          <CardIconButton\n            icon={'Power'}\n            {...this.props}\n            text={'Connect'}\n            handleClick={this.props.connectAndValidateAccount}\n          />\n        </Flex>\n      )\n    );\n  }\n}\n\nexport default MenuAccount;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    // const txStatusChanged = prevState.txStatus !== this.state.txStatus;\n    // if (txStatusChanged && this.state.txStatus === 'success'){\n    //   this.loadTokenInfo();\n    // }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          bgLayer={true}\n          mainColor={'white'}\n          maxWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.png'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n                textAlign={'center'}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens from the Early LPs Program!' : 'You don\\'t have any IDLE to claim from the Early LPs Program'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Link\n                  href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                >\n                  <Flex\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={400}\n                    >\n                      Go to governance\n                    </Text>\n                    <Icon\n                      ml={1}\n                      size={'1em'}\n                      color={'white'}\n                      name={\"OpenInNew\"}\n                    />\n                  </Flex>\n                </Link>\n              </Flex>\n              {\n                <Flex\n                  mb={3}\n                  width={1}\n                  zIndex={10}\n                  position={'relative'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.state.unclaimed && this.state.unclaimed.gt(0) ? \n                      // Sending transaction\n                      this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          textColor={'white'}\n                          web3={this.props.web3}\n                          cancelTextColor={'moon-gray'}\n                          cancelTextHoverColor={'white'}\n                          waitText={`Claim estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing Claim request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            color:'blue',\n                            width:[1,'45%'],\n                            mainColor:'white',\n                            contrastColor:'blue',\n                            disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                          }}\n                          handleClick={this.claim.bind(this)}\n                        >\n                          Claim\n                        </RoundButton>\n                      )\n                    : (\n                      <RoundButton\n                        buttonProps={{\n                          color:'blue',\n                          width:[1,'45%'],\n                          mainColor:'white',\n                          contrastColor:'blue',\n                        }}\n                        handleClick={this.closeModal.bind(this)}\n                      >\n                        Close\n                      </RoundButton>\n                    )\n                  }\n                </Flex>\n              }\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import React, { Component } from 'react';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Button, Icon, Checkbox, Input } from \"rimble-ui\";\n\nclass DelegateVesting extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    newDelegate:'',\n    delegatee:null,\n    vestingAmount:null,\n    currentDelegate:null,\n    delegateAddressValid:false,\n    delegateDifferentWallet:false,\n    vestingContractDelegated:false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const [\n        delegatesChanges,\n        currentDelegate,\n        vestingContract,\n      ] = await Promise.all([\n        this.governanceUtil.getDelegatesChanges(),\n        this.governanceUtil.getCurrentDelegate(this.props.account),\n        this.governanceUtil.getVestingContract(this.props.account)\n      ]);\n\n      // Init flags\n      let delegatee = null;\n      let vestingAmount = null;\n      let vestingContractDelegated = false;\n\n      if (vestingContract){\n        // Take vesting amount\n        vestingAmount = await this.governanceUtil.getVestingAmount(this.props.account);\n\n        // Check Vesting Contract Delegated\n        const lastDelegateTx = delegatesChanges.filter( d => (d.returnValues.delegator.toLowerCase() === vestingContract.toLowerCase() ) ).pop();\n        delegatee = lastDelegateTx ? lastDelegateTx.returnValues.toDelegate : false;\n        vestingContractDelegated = delegatee && delegatee !== '0x0000000000000000000000000000000000000000';\n      }\n\n      return this.setState({\n        delegatee,\n        vestingAmount,\n        currentDelegate,\n        vestingContractDelegated\n      });\n    }\n    return null;\n  }\n\n  /*\n  async delegateTokens(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateTokens',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.idleTokenDelegated = true;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.setDelegate(this.props.account,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n  */\n\n  async delegateVesting(revoke=false){\n\n    let delegate = this.state.delegateDifferentWallet ? this.state.newDelegate : this.props.account;\n    if (revoke){\n      delegate = '0x'+'0'.repeat(40);\n    }\n\n    const delegateValid = this.functionsUtil.checkAddress(delegate);\n    if (!delegateValid){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateVesting',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.delegatee=delegate;\n        newState.delegateDifferentWallet=false;\n        newState.vestingContractDelegated=!revoke;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.delegateVesting(this.props.account,delegate,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  changeDelegate(e){\n    const newDelegate = e.target.value;\n    const delegateAddressValid = this.functionsUtil.checkAddress(newDelegate);\n    this.setState({\n      newDelegate,\n      delegateAddressValid\n    });\n  }\n\n  setDelegateDifferentWallet(delegateDifferentWallet){\n    this.setState({\n      delegateDifferentWallet\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  render() {\n    return this.state.vestingAmount ? (\n      <Flex\n        p={2}\n        mt={3}\n        width={1}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'#f3f6ff'}\n        boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={1}\n            fontSize={3}\n            fontWeight={500}\n            color={'#3f4e9a'}\n            textAlign={'center'}\n          >\n            You have {this.state.vestingAmount.div(1e18).toFixed(5)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} in the Vesting Contract\n          </Text>\n          {\n            (this.state.vestingContractDelegated && this.state.delegatee && !this.state.delegateDifferentWallet) ? (\n              <Text\n                mb={1}\n                fontWeight={500}\n                color={'#3f4e9a'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                Currently your votes are delegated to {this.state.delegatee}\n              </Text>\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={1}\n                  fontWeight={500}\n                  color={'#3f4e9a'}\n                  fontSize={'15px'}\n                  textAlign={'center'}\n                >\n                  {\n                    this.state.delegateDifferentWallet ? 'Follow the next steps to delegate your tokens:' : 'Press the button below to delegate the votes in the vesting contract to yourself:'\n                  }\n                </Text>\n                {\n                  this.state.delegateDifferentWallet && (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.delegateAddressValid ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.delegateAddressValid ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'#3f4e9a'}\n                          textAlign={'left'}\n                        >\n                          Insert delegate address\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={'LooksTwo'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'#3f4e9a'}\n                          textAlign={'left'}\n                        >\n                          Delegate Vesting\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        {\n          this.state.delegateDifferentWallet && (\n            <Input\n              mb={2}\n              min={0}\n              type={'text'}\n              required={true}\n              borderRadius={2}\n              fontWeight={500}\n              textAlign={'center'}\n              width={['100%','30em']}\n              boxShadow={'none !important'}\n              value={this.state.newDelegate}\n              placeholder={`Insert delegate address`}\n              onChange={this.changeDelegate.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          )\n        }\n        {\n          this.state.processing && this.state.processing.loading ? (\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <TxProgressBar\n                web3={this.props.web3}\n                waitText={`Delegate estimated in`}\n                hash={this.state.processing.txHash}\n                endMessage={`Finalizing delegate request...`}\n                cancelTransaction={this.cancelTransaction.bind(this)}\n              />\n            </Flex>\n          ) : (this.state.vestingContractDelegated && !this.state.delegateDifferentWallet) ? (\n            <Button\n              size={'small'}\n              mainColor={'red'}\n              onClick={ e => this.delegateVesting(true) }\n            >\n              REVOKE DELEGATE\n            </Button>\n          )\n          /*\n          : !this.state.idleTokenDelegated && !this.state.delegateDifferentWallet ? (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateTokens() }\n            >\n              DELEGATE TOKENS\n            </Button>\n          )*/\n          : (!this.state.vestingContractDelegated || this.state.delegateDifferentWallet) && (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateVesting(false) }\n              disabled={ this.state.delegateDifferentWallet && !this.state.delegateAddressValid }\n            >\n              DELEGATE VESTING\n            </Button>\n          )\n        }\n        <Checkbox\n          mt={1}\n          required={false}\n          color={'#f3f6ff'}\n          label={`Delegate to different wallet`}\n          checked={this.state.delegateDifferentWallet}\n          onChange={ e => this.setDelegateDifferentWallet(e.target.checked) }\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default DelegateVesting;\n","import theme from '../theme';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport MenuAccount from '../MenuAccount/MenuAccount';\nimport GovModal from \"../utilities/components/GovModal\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport { Box, Flex, Text, Icon, Button } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport DelegateVesting from '../DelegateVesting/DelegateVesting';\n\nclass DashboardHeader extends Component {\n\n  state = {\n    unclaimed:null,\n    vestingAmount:null,\n    govModalOpened:false\n  }\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(this.props.account);\n      return this.setState({\n        unclaimed\n      });\n    }\n    return null;\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: 'logout',\n      eventCategory: 'Connect'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async exit(){\n    this.props.goToSection('/',false);\n  }\n\n  setGovModal(govModalOpened){\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        mb={3}\n      >\n        <Flex\n          pb={2}\n          width={1}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n          alignItems={['flex-end','center']}\n          borderBottom={`1px solid ${theme.colors.divider}`}\n        >\n          <MenuAccount\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n          />\n        </Flex>\n        {\n          this.state.unclaimed && this.state.unclaimed.gt(0) ? (\n            <DashboardCard\n              cardProps={{\n                p:2,\n                mt:3,\n                width:1,\n              }}\n              isActive={true}\n              isInteractive={false}\n            >\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Text\n                  fontWeight={500}\n                  color={'#3f4e9a'}\n                  fontSize={'15px'}\n                  textAlign={'center'}\n                >\n                  IDLE Governance Token is now available, \n                  <ExtLink\n                    ml={1}\n                    fontWeight={500}\n                    color={'primary'}\n                    fontSize={'15px'}\n                    hoverColor={'primary'}\n                    href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n                  >\n                    discover more\n                  </ExtLink>! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to claim.\n                </Text>\n                <Button\n                  ml={[0,2]}\n                  mt={[2,0]}\n                  size={'small'}\n                  onClick={ e => this.setGovModal(true) }\n                >\n                  CLAIM NOW\n                </Button>\n              </Flex>\n            </DashboardCard>\n          ) : this.props.isDashboard && (\n            <DashboardCard\n              cardProps={{\n                p:2,\n                mt:3,\n                width:1,\n              }}\n              isActive={true}\n              isInteractive={false}\n            >\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Icon\n                  mr={1}\n                  size={'1.2em'}\n                  color={'#3f4e9a'}\n                  name={'LightbulbOutline'}\n                />\n                <Text\n                  fontWeight={500}\n                  color={'#3f4e9a'}\n                  fontSize={'15px'}\n                  textAlign={'center'}\n                >\n                  Do you have any idea to improve the Idle Protocol? Let's discuss it in our\n                </Text>\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={this.functionsUtil.getGlobalConfig(['forumURL'])}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Governance Forum\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </Flex>\n            </DashboardCard>\n          )\n        }\n        {\n          this.props.isGovernance && \n            <DelegateVesting\n              {...this.props}\n            />\n        }\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false) }\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Stats from '../Stats/Stats';\nimport Utils from '../Utils/Utils';\nimport AssetPage from '../AssetPage/AssetPage';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CurveStrategy from '../CurveStrategy/CurveStrategy';\nimport WelcomeModal from \"../utilities/components/WelcomeModal\";\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport MigrateModal from \"../utilities/components/MigrateModal\";\nimport UpgradeModal from \"../utilities/components/UpgradeModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    baseRoute:null,\n    clickEvent:null,\n    activeModal:null,\n    currentRoute:null,\n    pageComponent:null,\n    currentSection:null,\n    selectedSection:null,\n    tokensToMigrate:null,\n    showResetButton:false,\n    selectedSubsection:null,\n    oldIdleTokensToMigrate:null,\n    protocolsTokensBalances:null,\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    window.functionsUtil = this.functionsUtil;\n  }\n\n  async loadMenu() {\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n    const menu = Object.keys(strategies).filter( s => ( !strategies[s].comingSoon ) ).map(strategy => ({\n        submenu:[],\n        color:'#fff',\n        selected:false,\n        route:baseRoute+'/'+strategy,\n        label:strategies[strategy].title,\n        image:strategies[strategy].icon,\n        imageInactive:strategies[strategy].iconInactive,\n        bgColor:strategies[strategy].color,\n        component:strategies[strategy].component\n      })\n    );\n\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n\n    // Add Curve\n    if (curveConfig.enabled){\n      const curveParams = Object.assign({\n        submenu:[],\n        selected:false,\n        component:CurveStrategy,\n      },curveConfig.params);\n\n      menu.push(curveParams);\n    }\n\n    // Add Stats\n    menu.push(\n      {\n        icon:'Equalizer',\n        label:'Stats',\n        bgColor:'#21f36b',\n        color:'dark-gray',\n        component:Stats,\n        selected:false,\n        route:'/dashboard/stats',\n        submenu:[]\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        icon:'Build',\n        label:'Tools',\n        color:'dark-gray',\n        component:Utils,\n        selected:false,\n        route:'/dashboard/tools',\n        bgColor:this.props.theme.colors.primary,\n        submenu:Object.values(this.functionsUtil.getGlobalConfig(['tools'])).filter( u => (u.enabled) )\n      }\n    );\n\n    // Add Forum\n    menu.push(\n      {\n        submenu:[],\n        icon:'Forum',\n        mobile:false,\n        label:'Forum',\n        selected:false,\n        component:null,\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        isExternalLink:true,\n        route:this.functionsUtil.getGlobalConfig(['forumURL'])\n      }\n    );\n\n    await this.setState({\n      menu\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    let currentRoute = baseRoute;\n\n    let pageComponent = null;\n    let selectedToken = null;\n    let currentSection = null;\n    let selectedStrategy = null;\n\n    // Set strategy\n    if (params.section){\n      currentSection = params.section;\n      const param1 = params.param1;\n      const param2 = params.param2;\n\n      const section_is_strategy = Object.keys(this.props.availableStrategies).includes(currentSection.toLowerCase());\n      const param1_is_strategy = param1 && Object.keys(this.props.availableStrategies).includes(param1.toLowerCase());\n\n      if (section_is_strategy || param1_is_strategy){\n        selectedStrategy = section_is_strategy ? currentSection : param1;\n        currentRoute += '/'+selectedStrategy;\n\n        // Set token\n        const param1_is_token = param1 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param1.toUpperCase());\n        const param2_is_token = param2 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param2.toUpperCase());\n        if (param1_is_token || param2_is_token){\n          selectedToken = param1_is_token ? param1.toUpperCase() : param2.toUpperCase();\n          currentRoute += '/'+selectedToken;\n\n          if (section_is_strategy){\n            pageComponent = AssetPage;\n          }\n        }\n      } else {\n        currentRoute += '/'+params.section;\n\n        if (params.param1 && params.param1.length){\n          currentRoute += '/'+params.param1;\n        }\n\n        // if (params.param2 && params.param2.length){\n        //   currentRoute += '/'+params.param2;\n        // }\n      }\n    }\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach(m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // console.log('pageComponent',params,pageComponent);\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    // console.log('loadParams',selectedStrategy,selectedToken);\n    await this.props.setStrategyToken(selectedStrategy,selectedToken);\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.checkModals();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const strategyChanged = this.props.selectedStrategy && prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized || strategyChanged){\n      this.checkModals();\n    }\n  }\n\n  async checkModals(){\n\n    if (this.props.selectedToken || !this.props.accountInizialized || !this.props.contractsInitialized || !this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    await this.checkTokensToMigrate();\n    await this.checkWelcomeModal();\n    await this.checkProtocolsTokensBalances();\n  }\n\n  async checkTokensToMigrate(){\n\n    const showUpgradeModal = this.functionsUtil.getStoredItem('dontShowUpgradeModal',false,null) !== null ? false : true;\n    if (this.props.selectedToken || !showUpgradeModal || !this.props.availableTokens){\n      return null;\n    }\n\n    const tokensToMigrate = await this.functionsUtil.getTokensToMigrate();\n    const oldIdleTokensToMigrate = await this.functionsUtil.getProtocolsTokensBalances('idle');\n\n    // console.log('tokensToMigrate',tokensToMigrate);\n    \n    if ((tokensToMigrate && Object.keys(tokensToMigrate).length>0) || (oldIdleTokensToMigrate && Object.keys(oldIdleTokensToMigrate).length>0)){\n      const activeModal = 'upgrade';\n      if (activeModal !== this.state.activeModal){\n        this.setState({\n          activeModal,\n          tokensToMigrate,\n          oldIdleTokensToMigrate\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkWelcomeModal(){\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show welcome modal\n    if (this.props.account && this.state.activeModal === null){\n      let welcomeIsOpen = false;\n\n      const welcomeModalProps = this.functionsUtil.getGlobalConfig(['modals','welcome']);\n\n      if (welcomeModalProps.enabled && localStorage){\n\n        // Check the last login of the wallet\n        const currTime = new Date().getTime();\n        const walletAddress = this.props.account.toLowerCase();\n        let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : {};\n\n        // First login\n        if (!lastLogin[walletAddress]){\n          lastLogin[walletAddress] = {\n            'signedUp':false,\n            'lastTime':currTime\n          };\n          welcomeIsOpen = true;\n        // User didn't sign up\n        } else if (!lastLogin[walletAddress].signedUp) {\n          const lastTime = parseInt(lastLogin[walletAddress].lastTime);\n          const timeFromLastLogin = (currTime-lastTime)/1000;\n          welcomeIsOpen = timeFromLastLogin>=welcomeModalProps.frequency; // 1 day since last login\n        }\n\n        if (welcomeIsOpen){\n          lastLogin[walletAddress].lastTime = currTime;\n          this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n        }\n      }\n\n      const activeModal = welcomeIsOpen ? 'welcome' : this.state.activeModal;\n      if (this.state.activeModal !== activeModal){\n        this.setState({\n          activeModal\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkProtocolsTokensBalances() {\n\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show migration modal if no other modals are opened\n    const migrateModalEnabled = this.functionsUtil.getGlobalConfig(['modals','migrate','enabled']);\n    const showMigrateModal = this.functionsUtil.getStoredItem('dontShowMigrateModal',false,null) !== null ? false : true;\n\n    if (this.state.activeModal === null && migrateModalEnabled && showMigrateModal && !this.state.protocolsTokensBalances){\n      const protocolsTokensBalances = await this.functionsUtil.getProtocolsTokensBalances();\n      const activeModal = protocolsTokensBalances && Object.keys(protocolsTokensBalances).length>0 ? 'migrate' : null;\n      const newState = {\n        activeModal,\n        protocolsTokensBalances\n      };\n      this.setState(newState);\n      return activeModal;\n    }\n\n    return null;\n  }\n\n  goToSection(section,isDashboard=true){\n\n    // Remove dashboard route\n    if (isDashboard){\n      section = section.replace(this.state.baseRoute +'/','');\n    }\n\n    const newRoute = isDashboard ? this.state.baseRoute +'/' + section : section;\n    window.location.hash=newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'goToSection',\n      eventLabel: newRoute\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  changeToken(selectedToken){\n    selectedToken = selectedToken.toUpperCase();\n    if (Object.keys(this.props.availableTokens).includes(selectedToken)){\n      const routeParts = [];\n\n      // Add section\n      if (this.state.currentSection.toLowerCase() !== this.props.selectedStrategy.toLowerCase()){\n        routeParts.push(this.state.currentSection);\n      }\n\n      // Add strategy\n      routeParts.push(this.props.selectedStrategy); \n\n      // Add token\n      routeParts.push(selectedToken);\n\n      this.goToSection(routeParts.join('/'));\n    }\n  }\n\n  propagateClickEvent(clickEvent){\n    this.setState({\n      clickEvent:clickEvent.target\n    });\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        backgroundColor={['dashboardBg','white']}\n        /*onClick={ e => this.propagateClickEvent(e) }*/\n        height={[(window.innerHeight-61)+'px','100vh']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  clickEvent={this.state.clickEvent}\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      match={{ params:{} }}\n                      urlParams={this.state.params}\n                      changeToken={this.changeToken.bind(this)}\n                      goToSection={this.goToSection.bind(this)}\n                      selectedSection={this.state.selectedSection}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <UpgradeModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          tokensToMigrate={this.state.tokensToMigrate}\n          isOpen={this.state.activeModal === 'upgrade'}\n          oldIdleTokensToMigrate={this.state.oldIdleTokensToMigrate}\n        />\n        <MigrateModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          isOpen={this.state.activeModal === 'migrate'}\n          protocolsTokensBalances={this.state.protocolsTokensBalances}\n        />\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n        <WelcomeModal\n          closeModal={this.resetModal}\n          account={this.props.account}\n          simpleID={this.props.simpleID}\n          network={this.props.network.current}\n          tokenName={this.props.selectedToken}\n          initSimpleID={this.props.initSimpleID}\n          baseTokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'welcome'}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      backgroundColor: \"white\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                style={{\n                  flex:'0 100%',\n                  justifyContent:'flex-start'\n                }}\n              >\n                <ImageButton\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex flexDirection={'row'} flexWrap={'wrap'} justifyContent={'space-between'}>\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Modal,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    currentSection:null,\n    showTxFees: false,\n    closeRemainingTime:null,\n    newToEthereumChoice: null,\n    showInstructions: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      newToEthereumChoice:null,\n      showInstructions: false,\n      currentSection:null\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'select_wallet',\n      eventLabel: walletProvider\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'blue'} style={{textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const newToEthereum = this.state.currentSection === 'new';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons isMobile={this.props.isMobile} connectionCallback={ this.closeModal } setConnector={ this.setConnector } width={1/2} size={ this.props.isMobile ? 'medium' : 'large' } />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/email.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use e-mail'} subcaption={'Powered by Portis'} handleClick={ e => this.setConnector('Portis','Portis') } />\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/mobile.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use phone number'} subcaption={'Powered by Fortmatic'} handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }/>\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n              <Box mb={3}>\n                <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex mb={[2,3]} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/ethereum-wallet.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`Ethereum wallet`} subcaption={'Choose your favourite'} handleClick={ e => this.setCurrentSection(e,'wallet') } />\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/new-wallet.png'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`New wallet`} subcaption={'Use email / phone'} handleClick={ e => this.setCurrentSection(e,'new') } />\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { (!this.state.currentSection) ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport Biconomy from \"@biconomy/mexa\";\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.type = \"contract\";\n      transaction.status = status;\n      transaction.params = params;\n      transaction.transactionHash = hash;\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura\n            };\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // this.functionsUtil.customLog('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n\n    this.functionsUtil.customLog('initAccount',account);\n\n    if (this.props.customAddress){\n\n      // Set custom account\n      this.setState({\n        accountInizialized: true,\n        account: this.props.customAddress\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account){\n\n        const walletProvider = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1, networkId } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas } : { from: account, gas })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // this.functionsUtil.customLog('updateTransaction',transactions);\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction.transactionHash,transaction.status.toLowerCase());\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n        <ConnectionModalUtil\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ProposalField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const proposal = Object.assign({},this.props.proposal);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n\n    switch (fieldInfo.name){\n      case 'date':\n        const formattedDate = this.functionsUtil.strToMoment(proposal.timestamp*1000).format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        const state = fieldInfo.state ? fieldInfo.state : proposal.state;\n        switch (state) {\n          case 'Pending':\n            icon = \"HourglassEmpty\";\n            color = '#a5a5a5';\n          break;\n          case 'Active':\n            icon = \"Adjust\";\n            color = '#a5a5a5';\n          break;\n          case 'Canceled':\n            icon = \"Cancel\";\n            color = '#fa0000';\n          break;\n          case 'Defeated':\n            icon = \"Block\";\n            color = '#fa0000';\n          break;\n          case 'Succeeded':\n            icon = \"Done\";\n            color = '#00b84a';\n          break;\n          case 'Queued':\n            icon = \"Timelapse\";\n            color = '#ff9900';\n          break;\n          case 'Expired':\n            icon = \"ErrorOutline\";\n            color = '#a5a5a5';\n          break;\n          case 'Executed':\n            icon = \"CheckCircle\";\n            color = '#00b84a';\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ fieldProps.size ? fieldProps.size : (this.props.isMobile ? '1em' : '1.8em') }\n            />\n          </Flex>\n        );\n      break;\n      case 'id':\n        output = (\n          <Text {...fieldProps}>{proposal.id}</Text>\n        );\n      break;\n      case 'title':\n        output = (\n          <Text {...fieldProps}>{proposal.title}</Text>\n        );\n      break;\n      case 'votes':\n        const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n        const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n        const totalVotes = forVotes.plus(againstVotes);\n        output = (\n          <Text {...fieldProps}>{this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}</Text>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{proposal.state}</Text>\n        );\n      break;\n      case 'support':\n        let support = null;\n        if (this.props.delegate){\n          const delegate = this.props.delegate.delegate.toLowerCase();\n          const vote = proposal.votes.find( v => (v.voter.toLowerCase() === delegate) );\n          if (vote){\n            support = vote.support;\n          }\n        }\n        output = (\n          <Text {...fieldProps}>{ support === null ? 'NONE' : (support ? 'FOR' : 'AGAINST') }</Text>\n        );\n      break;\n      case 'forVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.forVotes} />\n        );\n      break;\n      case 'againstVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.againstVotes} />\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default ProposalField;\n","import React, { Component } from 'react';\nimport styles from './ProposalListFilters.module.scss';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\nimport TableCellHeader from '../../TableCellHeader/TableCellHeader';\n\nclass ProposalListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalListFilters;","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ProposalField from '../ProposalField/ProposalField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport ProposalListFilters from '../ProposalListFilters/ProposalListFilters';\n\nclass ProposalsList extends Component {\n\n  state = {\n    page:1,\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n    },\n    filters:{\n      status:{\n        pending:'Pending',\n        active:'Active',\n        canceled:'Canceled',\n        defeated:'Defeated',\n        succeeded:'Succeeded',\n        queued:'Queued',\n        expired:'Expired',\n        executed:'Executed'\n      },\n    },\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const proposalsChanged = JSON.stringify(prevProps.proposals) !== JSON.stringify(this.props.proposals);\n    if (pageChanged || proposalsChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.proposals){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    const proposals = Object.values(this.props.proposals)\n                        .filter(p => (\n                          (this.state.activeFilters.status === null || p.state.toLowerCase() === this.state.activeFilters.status.toLowerCase())\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalRows = proposals.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    proposals.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const filtersEnabled = typeof this.props.filtersEnabled === 'undefined' || this.props.filtersEnabled;\n    const hasActiveFilters = filtersEnabled && Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n    const hasRows = processedRows && processedRows.length>0;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Proposals...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'proposals-list-container'}\n              pt={[0, (!filtersEnabled || !hasRows ? 0 : hasActiveFilters ? '116px' : 5) ] }\n            >\n              {\n                hasRows ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    {\n                      filtersEnabled &&\n                        <ProposalListFilters\n                          {...this.props}\n                          filters={this.state.filters}\n                          activeFilters={this.state.activeFilters}\n                          resetFilters={this.resetFilters.bind(this)}\n                          applyFilters={this.applyFilters.bind(this)}\n                        />\n                    }\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'proposals-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (proposal,index) => {\n                          const proposalId = proposal.id;\n                          const handleClick = (e) => {\n                            return (proposalId ? this.props.goToSection(`proposals/${proposalId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={proposalId}\n                              proposal={proposal}\n                              handleClick={handleClick}\n                              key={`proposal-${proposalId}`}\n                              fieldComponent={ProposalField}\n                              rowId={`proposal-col-${proposalId}`}\n                              cardId={`proposal-card-${proposalId}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'proposals-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no proposals\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalsList;\n","import React, { Component } from 'react';\nimport { Flex, Text, Blockie } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass DelegateField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const delegate = Object.assign({},this.props.delegate);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'avatar':\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Blockie\n              opts={{\n                size: 7,\n                color: \"#dfe\",\n                bgcolor: \"#a71\",\n                spotcolor: \"#000\",\n                seed: delegate.delegate,\n              }}\n            />\n          </Flex>\n        );\n      break;\n      case 'rank':\n      case 'votes':\n      case 'delegate':\n      case 'proposals':\n      case 'vote_weight':\n        let value = delegate[fieldInfo.name];\n        if (fieldInfo.name === 'votes'){\n          value = this.functionsUtil.formatMoney(this.functionsUtil.BNify(value).toFixed(2,1),2);\n        }\n        output = (\n          <Text\n            {...fieldProps}\n          >\n            {value}\n          </Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default DelegateField;\n","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport DelegateField from '../DelegateField/DelegateField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\n\nclass DelegatesList extends Component {\n\n  state = {\n    page:1,\n    filters:{},\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{},\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const delegatesChanged = JSON.stringify(prevProps.delegates) !== JSON.stringify(this.props.delegates);\n    if (pageChanged || delegatesChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.delegates){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    let delegates = Object.values(this.props.delegates)\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    if (this.props.maxRows !== null && this.props.maxRows>0){\n      delegates = delegates.splice(0,this.props.maxRows);\n    }\n\n    // Calculate max number of pages\n    const totalRows = delegates.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    delegates.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Leaderboard...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'delegates-list-container'}\n            >\n              {\n                processedRows && processedRows.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'delegates-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (delegate,index) => {\n                          const delegateId = delegate.delegate;\n                          const handleClick = (e) => {\n                            return (delegateId ? this.props.goToSection(`leaderboard/${delegateId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={delegateId}\n                              delegate={delegate}\n                              key={`delegate-${index}`}\n                              handleClick={handleClick}\n                              fieldComponent={DelegateField}\n                              rowId={`delegate-col-${index}`}\n                              cardId={`delegate-card-${index}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'delegates-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no delegates\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default DelegatesList;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport StatsCard from '../StatsCard/StatsCard';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport DelegatesList from './DelegatesList/DelegatesList';\n\nclass Overview extends Component {\n\n  state = {\n    delegates:[],\n    proposals:[],\n    totalSupply:0,\n    dataLoaded:false,\n    votesDelegated:0,\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const [\n      delegates,\n      proposals,\n      totalSupply\n    ] = await Promise.all([\n      this.governanceUtil.getDelegates(),\n      this.governanceUtil.getProposals(),\n      this.governanceUtil.getTotalSupply()\n    ]);\n\n    const votesDelegated = delegates.reduce( (votesDelegated,d) => {\n      votesDelegated = votesDelegated+parseFloat(d.votes);\n      return votesDelegated;\n    },0);\n\n    const dataLoaded = true;\n\n    this.setState({\n      delegates,\n      proposals,\n      dataLoaded,\n      totalSupply,\n      votesDelegated\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Governance Overview\n        </Title>\n        {\n          !this.state.dataLoaded ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Data...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n                mb={[3,4]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Flex\n                  mb={[2,0]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Votes Delegated'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.votesDelegated.toFixed(2,1),2)}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Voting Addresses'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.delegates.length}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Proposals'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.proposals.length}\n                  />\n                </Flex>\n                <Flex\n                  pl={[0,1]}\n                  mb={[2,0]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'IDLE Circulating'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.totalSupply,0)}\n                  />\n                </Flex>\n              </Flex>\n              <Box\n                width={1}\n                mt={[4,5]}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Recent Proposals\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <ProposalsList\n                    {...this.props}\n                    rowsPerPage={5}\n                    filtersEnabled={false}\n                    proposals={this.state.proposals}\n                    cols={[\n                      {\n                        title: '#',\n                        props:{\n                          width:[0.1,0.05]\n                        },\n                        fields:[\n                          {\n                            name:'id',\n                            props:{\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'DATE',\n                        mobile:false,\n                        props:{\n                          width:[0.15,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'date'\n                          }\n                        ]\n                      },\n                      {\n                        title:'TITLE',\n                        props:{\n                          width:[0.75,0.60],\n                        },\n                        fields:[\n                          {\n                            name:'title'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTES',\n                        props:{\n                          width:[0.11,0.11],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        title:'STATUS',\n                        props:{\n                          width:[0.15,0.12],\n                          alignItems:['center','flex-start'],\n                          justifyContent:['center','flex-start']\n                        },\n                        parentProps:{\n                          justifyContent:['center','flex-start']\n                        },\n                        fields:[\n                          {\n                            name:'statusIcon',\n                            props:{\n                              mr:[0,2],\n                            },\n                          },\n                          {\n                            mobile:false,\n                            name:'status'\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Leaderboard\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <DelegatesList\n                    maxRows={100}\n                    {...this.props}\n                    rowsPerPage={5}\n                    delegates={this.state.delegates}\n                    cols={[\n                      {\n                        title: 'RANK',\n                        props:{\n                          width:[0.13,0.08]\n                        },\n                        fields:[\n                          {\n                            name:'rank'\n                          },\n                        ]\n                      },\n                      {\n                        title:'ADDRESS',\n                        props:{\n                          width:[0.60,0.50],\n                        },\n                        fields:[\n                          {\n                            mobile:false,\n                            name:'avatar',\n                            props:{\n                              mr:2\n                            }\n                          },\n                          {\n                            name:'delegate'\n                          }\n                        ]\n                      },\n                      {\n                        title:'VOTES',\n                        props:{\n                          width:[0.27,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTE WEIGHT',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'vote_weight',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'PROPOSALS VOTED',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'proposals',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Overview;\n","import React, { Component } from 'react';\nimport ConnectBox from '../../ConnectBox/ConnectBox';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Input, Button, Box, EthAddress } from \"rimble-ui\";\n\nclass DelegateVote extends Component {\n\n  state = {\n    newDelegate:'',\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  checkNewDelegate = () => {\n    return this.functionsUtil.checkAddress(this.state.newDelegate) && this.state.newDelegate.toLowerCase() !== this.props.currentDelegate.toLowerCase();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  setDelegate(address){\n    const addressOk = this.functionsUtil.checkAddress(address);\n\n    if (addressOk){\n\n      const callback = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventCategory: 'Delegate',\n          eventAction: address,\n          eventLabel: tx.status\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        if (typeof this.props.loadUserData === 'function' && tx.status === 'success'){\n          this.props.loadUserData();\n        }\n\n        this.setState({\n          processing: {\n            txHash:null,\n            loading:false\n          }\n        });\n      };\n\n      const callbackReceipt = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.governanceUtil.setDelegate(address,callback,callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n    return null;\n  }\n\n  changeDelegate = (e) => {\n    const newDelegate = e.target.value;\n    this.setState({\n      newDelegate\n    });\n  }\n\n  render() {\n    const isUndelegated = parseInt(this.props.currentDelegate) === 0;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n        !this.props.account ? (\n          <Flex\n            width={[1,0.36]}\n            alignItems={'stretch'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <ConnectBox\n              {...this.props}\n            />\n          </Flex>\n        ) : this.props.currentDelegate ? (\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:[1,0.5],\n              position:'relative',\n            }}\n            isInteractive={false}\n          >\n            {\n              this.props.canClose &&\n                <Box\n                  top={'0'}\n                  zIndex={1}\n                  right={'0'}\n                  position={'absolute'}\n                >\n                  <Button.Text\n                    icononly\n                    icon={'Close'}\n                    size={'2.5em'}\n                    mainColor={'statValue'}\n                    onClick={this.props.closeFunc}\n                  />\n                </Box>\n            }\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                /*\n                <Text\n                  mb={2}\n                  fontWeight={3}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  You have {this.functionsUtil.fixTokenDecimals(this.props.balance,18).toFixed(4)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} available.\n                </Text>\n                */\n              }\n              <Text\n                mb={1}\n                fontWeight={3}\n                color={'statValue'}\n                textAlign={'center'}\n              >\n                Current Delegate:\n              </Text>\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                justifyContent={isUndelegated ? 'center' : 'stretch'}\n              >\n                {\n                  isUndelegated ? (\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'dark-gray'}\n                      textAlign={'center'}\n                    >\n                      Undelegated\n                    </Text>\n                  ) : (\n                    <EthAddress\n                      width={1}\n                      address={this.props.currentDelegate}\n                    />\n                  )\n                }\n              </Flex>\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Delegate estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing delegate request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mb={1}\n                      fontWeight={3}\n                      color={'statValue'}\n                      textAlign={'center'}\n                    >\n                      Set New Delegate:\n                    </Text>\n                    <Input\n                      min={0}\n                      type={'text'}\n                      width={'100%'}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      textAlign={'center'}\n                      boxShadow={'none !important'}\n                      value={this.state.newDelegate}\n                      placeholder={`Insert delegate address`}\n                      onChange={this.changeDelegate.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                    />\n                    <Flex\n                      mt={3}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          disabled:!this.checkNewDelegate()\n                        }}\n                        handleClick={ e => this.setDelegate(this.state.newDelegate) }\n                      >\n                        Delegate\n                      </RoundButton>\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          mainColor:this.props.theme.colors.redeem,\n                          disabled:this.props.currentDelegate.toLowerCase() === this.props.account.toLowerCase()\n                        }}\n                        handleClick={ e => this.setDelegate(this.props.account) }\n                      >\n                        Self-delegate\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        ) : (\n          <FlexLoader\n            flexProps={{\n              minHeight:'50vh',\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Loading Delegate...'}\n          />\n        )\n       } \n      </Flex>\n    );\n  }\n}\n\nexport default DelegateVote;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport DelegateVote from './DelegateVote/DelegateVote';\n\nclass Delegate extends Component {\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Breadcrumb\n            {...this.props}\n            text={'Governance'}\n            path={['Delegate votes']}\n            isMobile={this.props.isMobile}\n            handleClick={ e => this.props.goToSection('') }\n          />\n        </Flex>\n        <Box\n          width={1}\n        >\n          <Title\n            mb={[3,4]}\n          >\n            Delegate Votes\n          </Title>\n          <Flex\n            px={[0,3]}\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'delegate-container'}\n          >\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Delegate;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './NewProposal.module.scss';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Heading, Input, Form, Field, Textarea, Icon, Select, Link } from \"rimble-ui\";\n\nclass NewProposal extends Component {\n\n  state = {\n    title:'',\n    actions:[],\n    txError:false,\n    actionValue:0,\n    customABI:null,\n    description:'',\n    processing: {\n      txHash:null,\n      loading:false\n    },\n    validated:false,\n    newAction:false,\n    editAction:null,\n    actionInputs:null,\n    actionValid:false,\n    customAddress:null,\n    contractOptions:[],\n    proposalCreated:false,\n    functionsOptions:null,\n    selectedContract:null,\n    selectedFunction:null,\n    selectedSignature:null,\n    availableFunctions:null,\n    availableContracts:null\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const customABIChanged = prevState.customABI !== this.state.customABI;\n    // console.log('customABIChanged',customABIChanged,this.state.selectedContract);\n    if (customABIChanged && this.state.selectedContract === 'custom'){\n      this.loadFunctionsOptions();\n    }\n  }\n\n  loadData(){\n    const availableContracts = this.functionsUtil.getGlobalConfig(['governance','props','availableContracts']);\n    const contractOptions = [\n      {label:'Select a Contract',value:null}\n    ];\n\n    Object.keys(availableContracts).forEach( contractName => {\n      contractOptions.push({label:contractName,value:contractName});\n    });\n\n    contractOptions.push({label:'Custom',value:'custom'});\n\n    this.setState({\n      contractOptions,\n      availableContracts\n    });\n  }\n\n  handleInput(field,e,type=null){\n    let value = e.target.value;\n    this.setState({\n      [field]:value\n    });\n  }\n\n  validateForm(){\n    const validated = this.state.title.length>0 && this.state.description.length>0 && Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getContractABI(selectedContract=null){\n    selectedContract = selectedContract ? selectedContract : this.state.selectedContract;\n\n    let contractABI = null;\n    try {\n      contractABI = selectedContract === 'custom' ? JSON.parse(this.state.customABI) : this.state.availableContracts[selectedContract];\n    } catch (err) {\n      \n    }\n    return contractABI;\n  }\n\n  loadFunctionsOptions(selectedContract=null){\n    let actionInputs = null;\n    let functionsOptions = null;\n    let selectedFunction = null;\n    let selectedSignature = null;\n    let availableFunctions = null;\n\n    const contractABI = this.getContractABI(selectedContract);\n    if (contractABI){\n      availableFunctions = contractABI.filter( f => (!f.constant && f.type === 'function' && f.inputs.length>0 && ['nonpayable','payable'].includes(f.stateMutability)) )\n      functionsOptions = availableFunctions.map( (f,index) => ({\n                          label:f.name,\n                          value:index\n                        }));\n\n      // Add default option\n      functionsOptions.unshift({label:'Select a Function',value:null});\n    }\n\n    // console.log('loadFunctionsOptions',contractABI,functionsOptions);\n\n    this.setState({\n      actionInputs,\n      functionsOptions,\n      selectedFunction,\n      selectedSignature,\n      availableFunctions\n    });\n  }\n\n  changeContract(e){\n    const selectedContract = e.target.value;\n    const selectedContractChanged = selectedContract !== this.state.selectedContract;\n\n    if (selectedContractChanged){\n\n      // Reset function\n      let selectedFunction = null;\n      let selectedSignature = null;\n\n      const newState = {\n        selectedContract,\n        selectedFunction,\n        selectedSignature\n      };\n\n      // Load contract functions\n      if (selectedContract !== null){\n        const contractABI = this.getContractABI(selectedContract);\n        if (contractABI){\n          this.loadFunctionsOptions(selectedContract);\n        } else {\n          newState.functionsOptions = null;\n        }\n      }\n\n      // console.log('changeContract',newState);\n\n      this.setState(newState);\n    }\n  }\n\n  changeFunction(e){\n    const actionValue = 0;\n    let actionInputs = null;\n    const selectedSignature = e.target.value;\n    let selectedFunction = this.state.availableFunctions.find( (f,index) => (index === parseInt(selectedSignature)) );\n\n    if (selectedFunction){\n      actionInputs = new Array(selectedFunction.inputs.length);\n    } else {\n      selectedFunction  = null;\n    }\n\n    this.setState({\n      actionValue,\n      actionInputs,\n      selectedFunction,\n      selectedSignature\n    })\n  }\n  validateField(value,type){\n    if (value===null){\n      return false;\n    }\n    let valid = true;\n    if (type === 'json'){\n      valid = this.functionsUtil.isValidJSON(value);\n    } else {\n      const fieldPattern = this.getPatternByFieldType(type);\n      if (fieldPattern){\n        valid = value.toString().match(fieldPattern) !== null;\n      }\n    }\n    return valid;\n  }\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs || !this.state.selectedFunction){\n      return false;\n    }\n\n    const inputs = this.state.selectedFunction.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    // Check custom token\n    if (actionValid && this.state.selectedContract === 'custom'){\n      actionValid = actionValid && this.validateField(this.state.customABI,'json') && this.validateField(this.state.customAddress,'address');\n    }\n\n    // console.log('actionValid',this.state.selectedContract,this.validateField(this.state.customABI,'json'),this.state.customAddress,this.validateField(this.state.customAddress,'address'),actionValid);\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n        const selectedContract = null;\n        const selectedFunction = null;\n        const selectedSignature = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs,\n          selectedContract,\n          selectedFunction,\n          selectedSignature\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.selectedFunction.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.selectedFunction.inputs.length){\n      return false;\n    }\n\n    // Check contract\n    let target = null;\n    if (this.state.selectedContract !== 'custom'){\n      const contract = this.functionsUtil.getContractByName(this.state.selectedContract);\n      if (!contract){\n        return false;\n      } else {\n        target = contract._address;\n      }\n    } else {\n      const contractABIValid = this.functionsUtil.isValidJSON(this.state.customABI);\n      if (!contractABIValid){\n        return false;\n      } else {\n        target = this.state.customAddress;\n      }\n    }\n    \n    const customABI = this.state.customABI;\n    const customAddress = this.state.customAddress;\n    const inputTypes = this.state.selectedFunction.inputs.map( i => (i.type) );\n    const calldata = this.props.web3.eth.abi.encodeParameters(inputTypes,inputs);\n    const signature = this.state.selectedFunction.name+'('+inputTypes.join(',')+')';\n    const value = this.state.actionValue ? this.functionsUtil.BNify(this.state.actionValue).toFixed(0) : this.functionsUtil.BNify(0).toFixed(0);\n\n    const action = {\n      params:{\n        value,\n        target,\n        calldata,\n        signature\n      },\n      customABI,\n      customAddress,\n      inputs:this.state.actionInputs,\n      function:this.state.selectedFunction,\n      contract:this.state.selectedContract,\n      signature:this.state.selectedSignature\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n    const customABI = action.customABI;\n    const actionValue = action.params.value;\n    const selectedContract = action.contract;\n    const selectedFunction = action.function;\n    const customAddress = action.customAddress;\n    const selectedSignature = action.signature;\n\n    this.setState({\n      customABI,\n      newAction,\n      editAction,\n      actionValue,\n      actionInputs,\n      customAddress,\n      selectedContract,\n      selectedFunction,\n      selectedSignature\n    });\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n    const selectedContract = null;\n    const selectedFunction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n      selectedContract,\n      selectedFunction\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventAction: 'propose',\n        eventCategory: 'Proposal',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n      \n      if (txSucceeded){\n        newState.actionValue = 0;\n        newState.customABI = null;\n        newState.newAction = null;\n        newState.editAction = null;\n        newState.actionInputs = null;\n        newState.customAddress = null;\n        newState.proposalCreated = true;\n        newState.selectedContract = null;\n        newState.functionsOptions = null;\n        newState.selectedFunction = null;\n        newState.selectedSignature = null;\n      } else {\n        newState.txError = true;\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const targets = [];\n    const values = [];\n    const signatures = [];\n    const calldatas = [];\n    const description = '#'+this.state.title+\"\\n\"+this.state.description;\n\n    Object.values(this.state.actions).forEach( action => {\n      values.push(action.params.value);\n      targets.push(action.params.target);\n      calldatas.push(action.params.calldata);\n      signatures.push(action.params.signature);\n    });\n\n    this.governanceUtil.propose(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n    // this.governanceUtil.proposeAndVoteFor(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  formValidated(){\n\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Create Proposal\n        </Title>\n        {\n        this.state.proposalCreated ? (\n          <DashboardCard\n            cardProps={{\n              py:3,\n              px:4,\n              width:[1,'auto']\n            }}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Icon\n                name={'Done'}\n                align={'center'}\n                size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n              <Text\n                mt={1}\n                fontWeight={3}\n                fontSize={[2,3]}\n                color={'dark-gray'}\n                textAlign={'center'}\n              >\n                The proposal has been successfully created\n              </Text>\n            </Flex>\n          </DashboardCard>\n        ) : \n        // Has balance\n        this.props.votes && this.props.votes.gte(this.props.proposalThreshold) ? (\n          <Form\n            width={1}\n            validated={this.state.validated}\n            onSubmit={this.handleSubmit.bind(this)}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={['center','space-between']}\n            >\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Proposal Description\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={\"Title\"}\n                    validated={this.state.validated}\n                  >\n                    <Input\n                      required\n                      width={1}\n                      type={'text'}\n                      className={styles.input}\n                      value={this.state.title}\n                      placeholder={'Title of your proposal'}\n                      onChange={ e => this.handleInput('title',e) }\n                    />\n                  </Field>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={'Description'}\n                    validated={this.state.validated}\n                  >\n                    <Textarea\n                      required\n                      rows={8}\n                      width={1}\n                      className={styles.input}\n                      value={this.state.description}\n                      placeholder={'Description of your proposal'}\n                      onChange={ e => this.handleInput('description',e) }\n                    />\n                  </Field>\n                </Flex>\n              </Flex>\n\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Actions\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          handleClick={ e => this.setEditAction(actionIndex) }\n                          title={ this.state.editAction === actionIndex ? 'Edit Action' : null }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Field\n                                  style={{\n                                    width:'100%',\n                                    display:'flex',\n                                    alignItems:'stretch',\n                                    flexDirection:'column'\n                                  }}\n                                  label={\"Select Contract\"}\n                                >\n                                  <Select\n                                    style={{\n                                      width:'100%'\n                                    }}\n                                    required={true}\n                                    value={this.state.selectedContract}\n                                    options={this.state.contractOptions}\n                                    onChange={this.changeContract.bind(this)}\n                                  />\n                                </Field>\n                                {\n                                  this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                  (\n                                    <Flex\n                                      width={1}\n                                      flexDirection={'column'}\n                                    >\n                                      <Field\n                                        width={1}\n                                        label={\"Contract Address\"}\n                                        validated={this.state.validated}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={'text'}\n                                          className={styles.input}\n                                          placeholder={'Custom contract address'}\n                                          pattern={this.getPatternByFieldType('address',true)}\n                                          onChange={ e => this.handleInput('customAddress',e,'address') }\n                                          value={this.state.customAddress ? this.state.customAddress : ''}\n                                        />\n                                      </Field>\n                                      <Field\n                                        width={1}\n                                        label={'Custom ABI'}\n                                        validated={this.state.validated}\n                                      >\n                                        <Textarea\n                                          required\n                                          rows={8}\n                                          width={1}\n                                          className={styles.input}\n                                          placeholder={'Insert the ABI of your contract'}\n                                          onChange={ e => this.handleInput('customABI',e,'json') }\n                                          value={this.state.customABI ? this.state.customABI : ''}\n                                        />\n                                      </Field>\n                                    </Flex>\n                                  )\n                                }\n                                {\n                                  this.state.selectedContract && this.state.functionsOptions &&\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      label={\"Select Function\"}\n                                    >\n                                      <Select\n                                        style={{\n                                          width:'100%'\n                                        }}\n                                        required={true}\n                                        options={this.state.functionsOptions}\n                                        onChange={this.changeFunction.bind(this)}\n                                        value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                      />\n                                    </Field>\n                                }\n                                {\n                                  this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                    <Field\n                                      label={`Value`}\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'number'}\n                                        className={styles.input}\n                                        placeholder={`Enter ETH value`}\n                                        onChange={ e => this.valueChange(e) }\n                                        value={this.state.actionValue ? this.state.actionValue : 0}\n                                      />\n                                    </Field>\n                                  )\n                                }\n                                {\n                                  this.state.selectedFunction &&\n                                    this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                      const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                      const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                      return (\n                                        <Field\n                                          style={{\n                                            width:'100%',\n                                            display:'flex',\n                                            alignItems:'stretch',\n                                            flexDirection:'column'\n                                          }}\n                                          key={`input_${inputIndex}`}\n                                          label={`${input.name} (${input.type})`}\n                                        >\n                                          <Input\n                                            required\n                                            width={1}\n                                            type={fieldType}\n                                            pattern={fieldPattern}\n                                            className={styles.input}\n                                            placeholder={`${input.name} (${input.type})`}\n                                            onChange={ e => this.inputChange(e,inputIndex) }\n                                            value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                          />\n                                        </Field>\n                                      )\n                                    })\n                                }\n                                {\n                                  this.state.selectedContract && this.state.selectedFunction &&\n                                    <Flex\n                                      mb={2}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <RoundButton\n                                        buttonProps={{\n                                          px:[0,4],\n                                          width:[1,'auto'],\n                                          type:'button',\n                                          disabled:!this.state.actionValid\n                                        }}\n                                        handleClick={this.addAction.bind(this)}\n                                      >\n                                        Save Action\n                                      </RoundButton>\n                                      <Link\n                                        mt={2}\n                                        color={'red'}\n                                        hoverColor={'red'}\n                                        onClick={this.deleteAction.bind(this)}\n                                      >\n                                        Delete Action\n                                      </Link>\n                                    </Flex>\n                                }\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {action.contract} - {action.params.signature}\n                                </Text>\n                                <Flex\n                                  p={['4px','7px']}\n                                  borderRadius={'50%'}\n                                  alignItems={'center'}\n                                  justifyContent={'center'}\n                                  backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                >\n                                  <Icon\n                                    name={'Edit'}\n                                    align={'center'}\n                                    color={'redeem'}\n                                    size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                  />\n                                </Flex>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.actions || Object.values(this.state.actions).length<this.props.proposalMaxOperations) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Action' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={\"Select Contract\"}\n                              >\n                                <Select\n                                  style={{\n                                    width:'100%'\n                                  }}\n                                  required={true}\n                                  options={this.state.contractOptions}\n                                  onChange={this.changeContract.bind(this)}\n                                />\n                              </Field>\n                              {\n                                this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                (\n                                  <Flex\n                                    width={1}\n                                    flexDirection={'column'}\n                                  >\n                                    <Field\n                                      width={1}\n                                      label={\"Contract Address\"}\n                                      validated={this.state.validated}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'text'}\n                                        className={styles.input}\n                                        placeholder={'Custom contract address'}\n                                        pattern={this.getPatternByFieldType('address',true)}\n                                        onChange={ e => this.handleInput('customAddress',e,'address') }\n                                        value={this.state.customAddress ? this.state.customAddress : ''}\n                                      />\n                                    </Field>\n                                    <Field\n                                      width={1}\n                                      label={'Custom ABI'}\n                                      validated={this.state.validated}\n                                    >\n                                      <Textarea\n                                        required\n                                        rows={8}\n                                        width={1}\n                                        className={styles.input}\n                                        placeholder={'Insert the ABI of your contract'}\n                                        onChange={ e => this.handleInput('customABI',e,'json') }\n                                        value={this.state.customABI ? this.state.customABI : ''}\n                                      />\n                                    </Field>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.selectedContract && this.state.functionsOptions && \n                                  <Field\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                    label={\"Select Function\"}\n                                  >\n                                    <Select\n                                      style={{\n                                        width:'100%'\n                                      }}\n                                      required={true}\n                                      options={this.state.functionsOptions}\n                                      onChange={this.changeFunction.bind(this)}\n                                      value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                    />\n                                  </Field>\n                              }\n                              {\n                                this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                  <Field\n                                    label={`Value`}\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                  >\n                                    <Input\n                                      required\n                                      width={1}\n                                      type={'number'}\n                                      className={styles.input}\n                                      placeholder={`Enter ETH value`}\n                                      onChange={ e => this.valueChange(e) }\n                                      value={this.state.actionValue ? this.state.actionValue : 0}\n                                    />\n                                  </Field>\n                                )\n                              }\n                              {\n                                this.state.selectedFunction &&\n                                  this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          className={styles.input}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                              }\n                              {\n                                this.state.selectedContract && this.state.selectedFunction &&\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                  >\n                                    <RoundButton\n                                      buttonProps={{\n                                        px:[0,4],\n                                        type:'button',\n                                        width:[1,'auto'],\n                                        disabled:!this.state.actionValid\n                                      }}\n                                      handleClick={this.addAction.bind(this)}\n                                    >\n                                      Add Action\n                                    </RoundButton>\n                                  </Flex>\n                              }\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Action\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n\n                </Flex>\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                // Sending transaction\n                this.state.processing && this.state.processing.loading ? (\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    waitText={`Proposal creation estimated in`}\n                    endMessage={`Finalizing proposal creation request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                  />\n                ) : (\n                  <RoundButton\n                    buttonProps={{\n                      type:'submit',\n                      width:[1,'15em'],\n                      disabled:!this.state.validated\n                    }}\n                  >\n                    Submit Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </Form>\n        ) : this.props.balance && this.props.balance.gte(this.props.proposalThreshold) ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Text\n              mb={3}\n              fontWeight={2}\n              fontSize={[2,3]}\n              color={'dark-gray'}\n              textAlign={'center'}\n            >\n              Please delegate your votes to yourself to create a new proposal.\n            </Text>\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        ) : (\n          <Text\n            fontWeight={2}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You need at least {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.proposalThreshold,18),0)} delegated votes to send a new proposal.\n          </Text>\n        )\n       }\n      </Flex>\n    );\n  }\n}\n\nexport default NewProposal;","import React, { Component } from 'react';\nimport { Flex, Text, Box, Link } from \"rimble-ui\";\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\n\nclass CastVote extends Component {\n\n  state = {\n    vote:null,\n    loaded:false,\n    userVote:null,\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    voteSucceed:false,\n    showDelegateBox:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const userVote = this.props.proposal.votes.find( v => (v.voter.toLowerCase() === this.props.account.toLowerCase()) );\n      this.setState({\n        userVote,\n        loaded:true\n      });\n    }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  toggleDelegateBox(showDelegateBox){\n    this.setState({\n      showDelegateBox\n    });\n  }\n\n  castVote(){\n\n    if (this.state.vote === null){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Proposal',\n        eventAction: 'CastVote',\n        eventLabel: this.state.vote\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      let userVote = null;\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        userVote = {\n          voter:this.props.account,\n          votes:this.props.votes.toString(),\n          support:this.state.vote === 'for',\n          proposalId:this.props.proposal.id,\n        };\n\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n\n      this.setState({\n        userVote,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const vote = this.state.vote === 'for';\n    const proposalId = parseInt(this.props.proposal.id);\n\n    this.governanceUtil.castVote(proposalId,vote,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  setVote = (vote) => {\n    this.setState({\n      vote\n    });\n  }\n\n  render() {\n    return this.state.userVote ? (\n        <Flex\n          p={3}\n          width={1}\n          mb={[2,3]}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={2}\n            fontWeight={4}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You have voted for the proposal #{this.props.proposal.id}:\n          </Text>\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:'auto'\n            }}\n            isInteractive={false}\n          >\n            <Flex\n              my={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <ProposalField\n                fieldInfo={{\n                  name:'statusIcon',\n                  state: this.state.userVote.support ? 'Executed' : 'Canceled',\n                  props:{\n                    mr:2\n                  }\n                }}\n              />\n              <Text\n                fontWeight={3}\n                fontSize={[2,3]}\n              >\n                {this.state.userVote.support ? 'For' : 'Against'}\n              </Text>\n            </Flex>\n          </DashboardCard>\n          <Text\n            fontSize={1}\n            fontWeight={500}\n            color={'statValue'}\n            textAlign={'center'}\n          >\n            voted with {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.state.userVote.votes,18).toFixed(0,1),0)} votes\n          </Text>\n        </Flex>\n      ) : this.props.proposal.state === 'Active' && (\n        <Box\n          p={3}\n          width={1}\n          mb={[2,3]}\n        >\n          {\n            // Data not loaded yet\n            !this.state.loaded ? (\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row',\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading data...'}\n              />\n            ) :\n            // No votes delegated\n            (!this.props.votes || this.functionsUtil.BNify(this.props.votes).lte(0) || this.state.showDelegateBox) ? (\n              <DelegateVote\n                {...this.props}\n                canClose={this.state.showDelegateBox}\n                closeFunc={ e => this.toggleDelegateBox(false) }\n              />\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={1}\n                  fontWeight={4}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  Cast your vote for the proposal #{this.props.proposal.id}:\n                </Text>\n                <Text\n                  mb={2}\n                  fontSize={1}\n                  color={'red'}\n                  fontWeight={500}\n                  textAlign={'center'}\n                >\n                  Make sure you have been delegated before this proposal has been submitted\n                </Text>\n                {\n                  this.state.processing && this.state.processing.loading ? (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Vote estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing vote request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Flex\n                        mb={2}\n                        width={[1,0.4]}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('for');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'for' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Executed',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              For\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('against');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'against' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Canceled',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              Against\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Text\n                        mb={0}\n                        fontSize={1}\n                        fontWeight={500}\n                        color={'statValue'}\n                        textAlign={'center'}\n                      >\n                        You have {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.votes,18).toFixed(0,1),0)} votes delegated\n                      </Text>\n                      {\n                        this.props.balance && this.functionsUtil.BNify(this.props.balance).gt(0) &&\n                          <Link\n                            mt={0}\n                            mainColor={'primary'}\n                            hoverColor={'primary'}\n                            onClick={ e => this.toggleDelegateBox(true) }\n                          >\n                            change delegate\n                          </Link>\n                      }\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,0.2],\n                          disabled:this.state.vote === null\n                        }}\n                        handleClick={this.castVote.bind(this)}\n                      >\n                        Vote\n                      </RoundButton>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Box>\n      );\n  }\n}\n\nexport default CastVote;","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport CastVote from '../CastVote/CastVote';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport { Box, Flex, Blockie, Text, Link } from \"rimble-ui\";\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\n\nclass ProposalDetails extends Component {\n\n  state = {\n    showActionParams:null,\n    processing:{\n      action:null,\n      txHash:null,\n      loading:false\n    },\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  toggleShowParams(showActionParams){\n    // Reset show action params\n    if (this.state.showActionParams === showActionParams){\n      showActionParams = null;\n    }\n    this.setState({\n      showActionParams\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        action:null,\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async queueProposal(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'queue',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.queueProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Queue'\n      }\n    }));\n  }\n\n  async executeProposal(){\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'execute',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.executeProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Execute'\n      }\n    }));\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    window.loadData = this.props.loadData;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    let proposal = this.props.proposal;\n    const lastState = Object.values(proposal.states).pop();\n    const hasVotes = proposal.votes && proposal.votes.length>0;\n    const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n    const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n    const totalVotes = forVotes.plus(againstVotes);\n    const forVotesPerc = forVotes.div(totalVotes).times(100).toFixed(2);\n    const againstVotesPerc = againstVotes.div(totalVotes).times(100).toFixed(2);\n    const forVotesAddrs = proposal.votes.filter( v => (v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n    const againstVotesAddrs = proposal.votes.filter( v => (!v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n\n    const canQueue = proposal.state.toLowerCase() === 'succeeded'; \n    const canExecute = proposal.state.toLowerCase() === 'queued' && parseInt(new Date().getTime()/1000)-parseInt(proposal.states[proposal.states.length-1].start_time)>=parseInt(this.props.timelockDelay);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          {proposal.title}\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              labelTooltip={null}\n              title={'Proposal ID'}\n              value={`#${proposal.id}`}\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Created on ${this.functionsUtil.strToMoment(proposal.states[0].start_time*1000).format('DD MMM, YYYY')}`}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['110px','143px']}\n              labelTooltip={ null }\n              title={'Proposer'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: proposal.address,\n                  }}\n                />\n                <ShortHash\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[3,4]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                  hash={proposal.proposer}\n                />\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              title={'Status'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Updated on ${this.functionsUtil.strToMoment(lastState.start_time*1000).format('DD MMM, YYYY')}`}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <ProposalField\n                  {...this.props}\n                  proposal={proposal}\n                  fieldInfo={{\n                    name:'statusIcon',\n                    props:{\n                      size: this.props.isMobile ? '1.7em' : '2em'\n                    }\n                  }}\n                />\n                <Text\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[4,5]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                >\n                  {proposal.state}\n                </Text>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Total Votes'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}\n            />\n          </Flex>\n        </Flex>\n        {\n          this.props.account && \n            <CastVote\n              {...this.props}\n              callback={this.props.loadData}\n            />\n        }\n        <Flex\n          width={1}\n          mb={[2,3]}\n          id={'details-container'}\n          justifyContent={'space-between'}\n          flexDirection={['column','row']}\n        >\n          <DashboardCard\n            cardProps={{\n              p:3,\n              mb:[2,0],\n              mr:[0,1],\n              width:[1,1/2]\n            }}\n            title={'Actions'}\n            titleParentProps={{\n              mt:0,\n              ml:0\n            }}\n          >\n            <Flex\n              pt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.actions.signatures.map( (action,actionIndex) => {\n                  const data = proposal.actions.calldatas[actionIndex];\n                  // const targetAddr = proposal.actions.targets[actionIndex];\n\n                  let decodedParams = null;\n                  let attrs = action.match(/\\(([a-z0-9,]+(\\[\\])?)\\)/i);\n                  attrs = attrs ? attrs[1].split(',') : null;\n\n                  if (attrs){\n                    decodedParams = this.props.web3.eth.abi.decodeParameters(attrs,data);\n                    if (decodedParams){\n                      decodedParams = Object.values(decodedParams).splice(0,attrs.length);\n                    }\n                  }\n\n                  return (\n                    <Flex\n                      py={1}\n                      width={1}\n                      flexDirection={'column'}\n                      alignItems={'flex-start'}\n                      key={`action_${actionIndex}`}\n                      justifyContent={'flex-start'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        mb={1}\n                        width={1}\n                        flexDirection={['column','row']}\n                        alignItems={['flex-start','center']}\n                      >\n                        <Flex\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'dark-gray'}\n                          >\n                            {parseInt(actionIndex)+1}\n                          </Text>\n                          <Text\n                            ml={2}\n                            fontSize={1}\n                            fontWeight={2}\n                            color={'dark-gray'}\n                          >\n                            {action}\n                          </Text>\n                        </Flex>\n                        {\n                          decodedParams &&\n                            <Link\n                              mt={[1,0]}\n                              ml={[0,1]}\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.toggleShowParams(actionIndex) }\n                            >\n                              {\n                                this.state.showActionParams === actionIndex ? '(hide params)' : '(show params)'\n                              }\n                            </Link>\n                        }\n                      </Flex>\n                      {\n                        decodedParams && this.state.showActionParams === actionIndex &&\n                          <Flex\n                            pl={[0,3]}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            {\n                              decodedParams.map( (param,paramIndex) => (\n                                <Text\n                                  fontSize={0}\n                                  color={'statValue'}\n                                  key={`param_${paramIndex}`}\n                                >\n                                  {param}\n                                </Text>\n                              ))\n                            }\n                          </Flex>\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n          </DashboardCard>\n          <DashboardCard\n            cardProps={{\n              p:3,\n              ml:[0,1],\n              width:[1,1/2]\n            }}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Proposal History\n              </Text>\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Date\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.states.map( (stateInfo,stateIndex) => {\n                  return (\n                    <Flex\n                      py={2}\n                      width={1}\n                      alignItems={'center'}\n                      key={`state_${stateIndex}`}\n                      justifyContent={'space-between'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <ProposalField\n                          {...this.props}\n                          proposal={proposal}\n                          fieldInfo={{\n                            name:'statusIcon',\n                            state:stateInfo.state,\n                            props:{\n                              size: this.props.isMobile ? '1.3em' : '1.5em'\n                            }\n                          }}\n                        />\n                        <Link\n                          ml={2}\n                          fontSize={1}\n                          fontWeight={2}\n                          target={'_blank'}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                          hoverColor={'primary'}\n                          rel={'nofollow noopener noreferrer'}\n                          href={this.functionsUtil.getEtherscanTransactionUrl(stateInfo.trx_hash)}\n                        >\n                          {stateInfo.state}\n                        </Link>\n                      </Flex>\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        textAlign={'left'}\n                        color={'dark-gray'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.strToMoment(stateInfo.start_time*1000).format('DD MMM, YYYY')}\n                      </Text>\n                    </Flex>\n                  );\n                })\n              }\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      hash={this.state.processing.txHash}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.state.processing.action} estimated in`}\n                      endMessage={`Finalizing ${this.state.processing.action.toLowerCase()} request...`}\n                    />\n                  </Flex>\n                ) : canQueue ? (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.queueProposal.bind(this)}\n                  >\n                    Queue Proposal\n                  </RoundButton>\n                ) : canExecute && (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.executeProposal.bind(this)}\n                  >\n                    Execute Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        </Flex>\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mb:[2,3]\n          }}\n          title={'Details'}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n        >\n          <Text\n            mt={2}\n            fontSize={[1,2]}\n            style={{\n              wordBreak:'break-word'\n            }}\n            dangerouslySetInnerHTML={{\n              __html:proposal.description.replace(/\\n/g,\"<br />\")\n            }}\n          >\n          </Text>\n        </DashboardCard>\n        {\n          hasVotes && \n            <DashboardCard\n              cardProps={{\n                p:3,\n                mb:[2,3]\n              }}\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    For ({forVotesPerc}%)\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against ({againstVotesPerc}%)\n                  </Text>\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-cursor-container'}\n                >\n                  <Flex\n                    height={'100%'}\n                    width={`${forVotesPerc}%`}\n                    style={{background:'rgba(0, 211, 149, 1)'}}\n                    borderRadius={ parseFloat(forVotesPerc)===100 ? '20px' : '20px 0 0 20px' }\n                  >\n                  </Flex>\n                  <Flex\n                    height={'100%'}\n                    width={`${againstVotesPerc}%`}\n                    style={{background:'rgba(211, 0, 0, 1)'}}\n                    borderRadius={ parseFloat(againstVotesPerc)===100 ? '20px' : '0 20px 20px 0' }\n                  >\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-number-container'}\n                >\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-end'}\n                  >\n                    <Flex\n                      width={1}\n                      height={'100%'}\n                      justifyContent={'flex-start'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'left'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(forVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-start'}\n                  >\n                    <Flex\n                      width={1}\n                      height={'100%'}\n                      minWidth={'10%'}\n                      justifyContent={'flex-end'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'right'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(againstVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </DashboardCard>\n        }\n        {\n          hasVotes && \n            <Flex\n              mb={4}\n              width={1}\n              id={'votes-addresses-container'}\n              justifyContent={'space-between'}\n              flexDirection={['column','row']}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mb:[2,0],\n                  mr:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'for-votes-addresses-container'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <Flex\n                    mb={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      For Addresses ({forVotesAddrs.length})\n                    </Text>\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      Votes\n                    </Text>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    style={{\n                      overflow:'scroll'\n                    }}\n                    maxHeight={'400px'}\n                    flexDirection={'column'}\n                  >\n                    {\n                      forVotesAddrs.map( (voteInfo,voteIndex) => {\n                        const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                        return (\n                          <Flex\n                            py={2}\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`vote_for_${voteIndex}`}\n                            justifyContent={'space-between'}\n                            borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Blockie\n                                opts={{\n                                  size: 7,\n                                  color: \"#dfe\",\n                                  bgcolor: \"#a71\",\n                                  spotcolor: \"#000\",\n                                  seed: voteInfo.voter,\n                                }}\n                              />\n                              <Link\n                                ml={2}\n                                fontSize={1}\n                                fontWeight={2}\n                                target={'_blank'}\n                                textAlign={'left'}\n                                color={'statValue'}\n                                lineHeight={'initial'}\n                                hoverColor={'primary'}\n                                rel={'nofollow noopener noreferrer'}\n                                href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                              >\n                                {\n                                  this.props.isMobile ? (\n                                    <ShortHash\n                                      fontSize={1}\n                                      fontWeight={2}\n                                      textAlign={'left'}\n                                      color={'statValue'}\n                                      hash={voteInfo.voter}\n                                      lineHeight={'initial'}\n                                    />\n                                  ) : voteInfo.voter\n                                }\n                              </Link>\n                            </Flex>\n                            <Text\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                            >\n                              {votes}\n                            </Text>\n                          </Flex>\n                        )\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  ml:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'against-votes-addresses-container'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against Addresses ({againstVotesAddrs.length})\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Votes\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  style={{\n                    overflow:'scroll'\n                  }}\n                  maxHeight={'400px'}\n                  flexDirection={'column'}\n                >\n                  {\n                    againstVotesAddrs.map( (voteInfo,voteIndex) => {\n                      const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                      return (\n                        <Flex\n                          py={2}\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          key={`vote_against_${voteIndex}`}\n                          borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'flex-start'}\n                          >\n                            <Blockie\n                              opts={{\n                                size: 7,\n                                color: \"#dfe\",\n                                bgcolor: \"#a71\",\n                                spotcolor: \"#000\",\n                                seed: voteInfo.voter,\n                              }}\n                            />\n                            <Link\n                              ml={2}\n                              fontSize={1}\n                              fontWeight={2}\n                              target={'_blank'}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              rel={'nofollow noopener noreferrer'}\n                              href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                            >\n                              {voteInfo.voter}\n                            </Link>\n                          </Flex>\n                          <Text\n                            fontSize={1}\n                            fontWeight={2}\n                            textAlign={'left'}\n                            color={'statValue'}\n                            lineHeight={'initial'}\n                          >\n                            {votes}\n                          </Text>\n                        </Flex>\n                      )\n                    })\n                  }\n                </Flex>\n              </DashboardCard>\n            </Flex>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default ProposalDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport NewProposal from './NewProposal/NewProposal';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport ProposalDetails from './ProposalDetails/ProposalDetails';\n\nclass Proposals extends Component {\n  state = {\n    proposals:null,\n    addProposal:false,\n    selectedProposal:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.contractsInitialized){\n      return false;\n    }\n\n    const proposals = await this.governanceUtil.getProposals();\n\n    const { match: { params } } = this.props;\n      \n    // Look if proposalId exists\n    let addProposal = false;\n    let selectedProposal = null;\n    if (params.item_id && parseInt(params.item_id)){\n      const proposalId = parseInt(params.item_id);\n      const foundProposal = proposals.find( p => parseInt(p.id) === proposalId );\n      // Set selected proposal\n      if (foundProposal){\n        selectedProposal = foundProposal;\n      }\n    } else if (params.item_id && params.item_id.toLowerCase() === 'new'){\n      addProposal = true;\n    }\n\n    this.setState({\n      proposals,\n      addProposal,\n      selectedProposal\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={(this.state.selectedProposal || this.state.addProposal) ? 'space-between' : 'flex-end'}\n        >\n          {\n            this.state.selectedProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                  path={['Proposals',this.state.selectedProposal.title]}\n                />\n              </Flex>\n            ) : this.state.addProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  path={['Proposals','Add proposal']}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            ) : (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.state.addProposal && \n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <CardIconButton\n                  icon={'Add'}\n                  {...this.props}\n                  text={'New Proposal'}\n                  handleClick={ e => this.props.goToSection(`proposals/new`) }\n                />\n              </Flex>\n          }\n        </Flex>\n        {\n          this.state.selectedProposal ? (\n            <Box\n              width={1}\n            >\n              <ProposalDetails\n                {...this.props}\n                loadData={this.loadData.bind(this)}\n                proposal={this.state.selectedProposal}\n              />\n            </Box>\n          ) : this.state.addProposal ? (\n            <Box\n              width={1}\n            >\n              <NewProposal\n                {...this.props}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Title\n                mb={[3,4]}\n              >\n                Governance Proposals\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'proposals'}\n                flexDirection={'column'}\n              >\n                <ProposalsList\n                  {...this.props}\n                  proposals={this.state.proposals}\n                  cols={[\n                    {\n                      title: '#',\n                      props:{\n                        width:[0.1,0.05]\n                      },\n                      fields:[\n                        {\n                          name:'id',\n                          props:{\n                          }\n                        },\n                      ]\n                    },\n                    {\n                      title:'DATE',\n                      mobile:false,\n                      props:{\n                        width:[0.15,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'date'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TITLE',\n                      props:{\n                        width:[0.75,0.60],\n                      },\n                      fields:[\n                        {\n                          name:'title'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTES',\n                      props:{\n                        width:[0.11,0.11],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      title:'STATUS',\n                      props:{\n                        width:[0.15,0.12],\n                        alignItems:['center','flex-start'],\n                        justifyContent:['center','flex-start']\n                      },\n                      parentProps:{\n                        justifyContent:['center','flex-start']\n                      },\n                      fields:[\n                        {\n                          name:'statusIcon',\n                          props:{\n                            mr:[0,2],\n                          },\n                        },\n                        {\n                          mobile:false,\n                          name:'status'\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Proposals;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport ExtLink from '../../ExtLink/ExtLink';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport { Box, Flex, Blockie, Icon } from \"rimble-ui\";\nimport ProposalsList from '../ProposalsList/ProposalsList';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\n\nclass DelegateDetails extends Component {\n\n  state = {\n    proposals:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadProposals();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const delegateChanged = JSON.stringify(prevProps.delegate) !== JSON.stringify(this.props.delegate);\n    if (delegateChanged){\n      this.loadProposals();\n    }\n  }\n\n  async loadProposals(){\n    const delegate = this.props.delegate;\n    const proposals = await this.governanceUtil.getProposals(delegate.delegate);\n\n    this.setState({\n      proposals\n    });\n  }\n\n  render() {\n\n    const delegate = this.props.delegate;\n\n    // rank\n    // votes\n    // delegate\n    // proposals\n    // vote_weight\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Delegate Details\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Rank'}\n              value={delegate.rank}\n              labelTooltip={ null }\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['100px','143px']}\n              labelTooltip={ null }\n              title={'Address'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: delegate.delegate,\n                  }}\n                />\n                <ExtLink\n                  href={this.functionsUtil.getEtherscanAddressUrl(delegate.delegate)}\n                >\n                  <Flex\n                    flexDirection={'row'}\n                    alignItems={'flex-end'}\n                    justifyContent={'flex-start'}\n                  >\n                    <ShortHash\n                      ml={2}\n                      lineHeight={1}\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                      color={'statValue'}\n                      hash={delegate.delegate}\n                    />\n                    <Icon\n                      ml={1}\n                      size={'1.2em'}\n                      name={'OpenInNew'}\n                      color={'statValue'}\n                    />\n                  </Flex>\n                </ExtLink>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Votes'}\n              labelTooltip={null}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(this.functionsUtil.BNify(delegate.votes).toFixed(2,1),2)}\n            />\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              labelTooltip={ null }\n              title={'Proposals Voted'}\n              value={delegate.proposals}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n        </Flex>\n        <Box\n          width={1}\n          mt={[4,5]}\n        >\n          <Title\n            mb={[2,3]}\n          >\n            Voting History\n          </Title>\n          <Flex\n            mb={[3,4]}\n            width={1}\n            id={'transactions'}\n            flexDirection={'column'}\n          >\n            <ProposalsList\n              {...this.props}\n              rowsPerPage={5}\n              delegate={delegate}\n              filtersEnabled={false}\n              proposals={this.state.proposals}\n              cols={[\n                {\n                  title: '#',\n                  props:{\n                    width:[0.08,0.05]\n                  },\n                  fields:[\n                    {\n                      name:'id',\n                      props:{\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  mobile:false,\n                  props:{\n                    width:0.12,\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'TITLE',\n                  props:{\n                    width:[0.66,0.57],\n                  },\n                  fields:[\n                    {\n                      name:'title'\n                    }\n                  ]\n                },\n                {\n                  title:'VOTE',\n                  props:{\n                    width:[0.14,0.14],\n                    textAlign:'center'\n                  },\n                  fields:[\n                    {\n                      name:'support',\n                      parentProps:{\n                        alignItems:'center'\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.12,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  parentProps:{\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default DelegateDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DelegatesList from './DelegatesList/DelegatesList';\nimport DelegateDetails from './DelegateDetails/DelegateDetails';\n\nclass Leaderboard extends Component {\n  state = {\n    maxRows:100,\n    delegates:null,\n    selectedDelegate:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const delegates = await this.governanceUtil.getDelegates();\n\n    const { match: { params } } = this.props;\n\n    // Select delegate\n    let selectedDelegate = null;\n    if (params.item_id){\n      const delegateId = params.item_id.toLowerCase();\n      const foundProposal = delegates.find( d => d.delegate.toLowerCase() === delegateId );\n      if (foundProposal){\n        selectedDelegate = foundProposal;\n      }\n    }\n\n    this.setState({\n      delegates,\n      selectedDelegate\n    });\n  }\n\n  render() {\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          this.state.selectedDelegate ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={1}\n                >\n                  <Breadcrumb\n                    {...this.props}\n                    text={'Governance'}\n                    pathLink={['leaderboard']}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => this.props.goToSection('') }\n                    path={['Leaderboard',this.state.selectedDelegate.delegate]}\n                  />\n                </Flex>\n              </Flex>\n              <DelegateDetails\n                {...this.props}\n                delegate={this.state.selectedDelegate}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Leaderboard']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('') }\n                />\n              </Flex>\n              <Title\n                mb={[3,4]}\n              >\n                Governance Leaderboard\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'leaderboard'}\n                flexDirection={'column'}\n              >\n                <DelegatesList\n                  {...this.props}\n                  delegates={this.state.delegates}\n                  cols={[\n                    {\n                      title: 'RANK',\n                      props:{\n                        width:[0.13,0.08]\n                      },\n                      fields:[\n                        {\n                          name:'rank'\n                        },\n                      ]\n                    },\n                    {\n                      title:'ADDRESS',\n                      props:{\n                        width:[0.60,0.50],\n                      },\n                      fields:[\n                        {\n                          mobile:false,\n                          name:'avatar',\n                          props:{\n                            mr:2\n                          }\n                        },\n                        {\n                          name:'delegate'\n                        }\n                      ]\n                    },\n                    {\n                      title:'VOTES',\n                      props:{\n                        width:[0.27,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTE WEIGHT',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'vote_weight',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'PROPOSALS VOTED',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'proposals',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Leaderboard;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Overview from './Overview';\nimport Delegate from './Delegate';\nimport Proposals from './Proposals';\nimport Leaderboard from './Leaderboard';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    votes:null,\n    balance:null,\n    baseRoute:null,\n    modalTitle:null,\n    activeModal:null,\n    blockNumber:null,\n    currentRoute:null,\n    modalContent:null,\n    pageComponent:null,\n    timelockDelay:null,\n    currentSection:null,\n    selectedSection:null,\n    currentDelegate:null,\n    proposalThreshold:null,\n    selectedSubsection:null,\n    proposalMaxOperations:null\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    window.governanceUtil = this.governanceUtil;\n    window.functionsUtil = this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async loadMenu() {\n    const menu = [];\n    const baseRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:true,\n        route:baseRoute,\n        icon:'Dashboard',\n        label:'Overview',\n        color:'dark-gray',\n        component:Overview,\n        bgColor:this.props.theme.colors.primary,\n      }\n    );\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Proposals',\n        bgColor:'#00acff',\n        color:'dark-gray',\n        icon:'LightbulbOutline',\n        component:Proposals,\n        route:`${baseRoute}/proposals`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        bgColor:'#ff0000',\n        color:'dark-gray',\n        label:'Leaderboard',\n        component:Leaderboard,\n        icon:'FormatListNumbered',\n        route:`${baseRoute}/leaderboard`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Delegate',\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        component:Delegate,\n        icon:'CompareArrows',\n        route:`${baseRoute}/delegate`,\n      }\n    );\n\n    // Add Forum\n    menu.push(\n      {\n        submenu:[],\n        icon:'Forum',\n        mobile:false,\n        label:'Forum',\n        selected:false,\n        component:null,\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        isExternalLink:true,\n        route:this.functionsUtil.getGlobalConfig(['forumURL'])\n      }\n    );\n\n    await this.setState({\n      menu,\n      baseRoute\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.state.baseRoute;\n    const currentRoute = window.location.hash.substr(1);\n\n    let pageComponent = null;\n    let currentSection = null;\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach( m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n\n    // const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    // if (!governanceEnabled){\n    //   this.goToSection('/',false);\n    // }\n\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    /*\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n    */\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  goToSection(section,isGovernance=true){\n\n    // Remove dashboard route\n    if (isGovernance){\n      section = section.replace(this.state.baseRoute+'/','');\n    }\n\n    const newRoute = (isGovernance ? this.state.baseRoute+(section.length>0 ? '/'+section : '') : section).replace(/[/]+$/,'');\n    window.location.hash = newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventLabel: newRoute,\n      eventAction: 'goToSection'\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const [\n        blockNumber,\n        timelockDelay,\n        {\n          proposalThreshold, proposalMaxOperations\n        },\n        votes,\n        balance,\n        currentDelegate\n      ] = await Promise.all([\n        this.functionsUtil.getBlockNumber(),\n        this.governanceUtil.getTimelockDelay(),\n        this.governanceUtil.getProposalParams(),\n        this.governanceUtil.getCurrentVotes(this.props.account),\n        this.governanceUtil.getTokensBalance(this.props.account),\n        this.governanceUtil.getCurrentDelegate(this.props.account)\n      ]);\n\n      this.setState({\n        votes,\n        balance,\n        blockNumber,\n        timelockDelay,\n        currentDelegate,\n        proposalThreshold,\n        proposalMaxOperations\n      });\n    }\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      votes={this.state.votes}\n                      balance={this.state.balance}\n                      urlParams={this.state.params}\n                      blockNumber={this.state.blockNumber}\n                      loadUserData={this.loadData.bind(this)}\n                      timelockDelay={this.state.timelockDelay}\n                      goToSection={this.goToSection.bind(this)}\n                      currentDelegate={this.state.currentDelegate}\n                      selectedSection={this.state.selectedSection}\n                      proposalThreshold={this.state.proposalThreshold}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      proposalMaxOperations={this.state.proposalMaxOperations}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:USDC,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            token:'cWBTC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:true,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            token:'aWBTC',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\nimport { ToastMessage } from \"rimble-ui\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = 'light';\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport React, { Component } from \"react\";\nimport Landing from \"../Landing/Landing\";\nimport { Web3Consumer } from 'web3-react';\nimport Dashboard from '../Dashboard/Dashboard';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport Governance from '../Governance/Governance';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    const params = props ? props.match.params : null;\n    const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n  }\n\n  clearCachedData = () => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadAvailableTokens();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    this.functionsUtil.clearStoredData();\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider theme={theme}>\n          <Web3Provider\n            connectors={connectors}\n            libraryName={'web3.js'}\n            web3Api={Web3}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => <Dashboard\n                                              {...props}\n                                              web3={web3}\n                                              theme={theme}\n                                              modals={modals}\n                                              network={network}\n                                              context={context}\n                                              account={account}\n                                              isDashboard={true}\n                                              initWeb3={initWeb3}\n                                              biconomy={biconomy}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initAccount={initAccount}\n                                              initSimpleID={initSimpleID}\n                                              initContract={initContract}\n                                              transactions={transactions}\n                                              buyToken={this.state.buyToken}\n                                              logout={this.logout.bind(this)}\n                                              accountBalance={accountBalance}\n                                              validateAccount={validateAccount}\n                                              connecting={this.state.connecting}\n                                              cachedData={this.state.cachedData}\n                                              setToken={this.setToken.bind(this)}\n                                              accountValidated={accountValidated}\n                                              getTokenDecimals={getTokenDecimals}\n                                              rejectValidation={rejectValidation}\n                                              tokenConfig={this.state.tokenConfig}\n                                              getAccountBalance={getAccountBalance}\n                                              accountBalanceLow={accountBalanceLow}\n                                              accountInizialized={accountInizialized}\n                                              selectedToken={this.state.selectedToken}\n                                              connectorName={this.state.connectorName}\n                                              setStrategy={this.setStrategy.bind(this)}\n                                              userRejectedConnect={userRejectedConnect}\n                                              accountBalanceToken={accountBalanceToken}\n                                              initializeContracts={initializeContracts}\n                                              walletProvider={this.state.walletProvider}\n                                              buyModalOpened={this.state.buyModalOpened}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              rejectAccountConnect={rejectAccountConnect}\n                                              handleMenuClick={this.selectTab.bind(this)}\n                                              setConnector={this.setConnector.bind(this)}\n                                              availableTokens={this.state.availableTokens}\n                                              closeBuyModal={this.closeBuyModal.bind(this)}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              selectedStrategy={this.state.selectedStrategy}\n                                              userRejectedValidation={userRejectedValidation}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              setStrategyToken={this.setStrategyToken.bind(this)}\n                                              accountValidationPending={accountValidationPending}\n                                              availableStrategies={this.state.availableStrategies}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              contractMethodSendWrapper={contractMethodSendWrapper}\n                                              setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            />\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) => <Governance\n                                                  {...props}\n                                                  web3={web3}\n                                                  theme={theme}\n                                                  modals={modals}\n                                                  network={network}\n                                                  context={context}\n                                                  account={account}\n                                                  initWeb3={initWeb3}\n                                                  biconomy={biconomy}\n                                                  isMobile={isMobile}\n                                                  simpleID={simpleID}\n                                                  isGovernance={true}\n                                                  contracts={contracts}\n                                                  initAccount={initAccount}\n                                                  initSimpleID={initSimpleID}\n                                                  initContract={initContract}\n                                                  transactions={transactions}\n                                                  buyToken={this.state.buyToken}\n                                                  logout={this.logout.bind(this)}\n                                                  accountBalance={accountBalance}\n                                                  validateAccount={validateAccount}\n                                                  connecting={this.state.connecting}\n                                                  cachedData={this.state.cachedData}\n                                                  setToken={this.setToken.bind(this)}\n                                                  accountValidated={accountValidated}\n                                                  getTokenDecimals={getTokenDecimals}\n                                                  rejectValidation={rejectValidation}\n                                                  tokenConfig={this.state.tokenConfig}\n                                                  getAccountBalance={getAccountBalance}\n                                                  accountBalanceLow={accountBalanceLow}\n                                                  accountInizialized={accountInizialized}\n                                                  selectedToken={this.state.selectedToken}\n                                                  connectorName={this.state.connectorName}\n                                                  setStrategy={this.setStrategy.bind(this)}\n                                                  userRejectedConnect={userRejectedConnect}\n                                                  accountBalanceToken={accountBalanceToken}\n                                                  initializeContracts={initializeContracts}\n                                                  walletProvider={this.state.walletProvider}\n                                                  buyModalOpened={this.state.buyModalOpened}\n                                                  contractsInitialized={contractsInitialized}\n                                                  openBuyModal={this.openBuyModal.bind(this)}\n                                                  rejectAccountConnect={rejectAccountConnect}\n                                                  handleMenuClick={this.selectTab.bind(this)}\n                                                  setConnector={this.setConnector.bind(this)}\n                                                  availableTokens={this.state.availableTokens}\n                                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                                  setCachedData={this.setCachedData.bind(this)}\n                                                  selectedStrategy={this.state.selectedStrategy}\n                                                  userRejectedValidation={userRejectedValidation}\n                                                  clearCachedData={this.clearCachedData.bind(this)}\n                                                  setStrategyToken={this.setStrategyToken.bind(this)}\n                                                  accountValidationPending={accountValidationPending}\n                                                  availableStrategies={this.state.availableStrategies}\n                                                  connectAndValidateAccount={connectAndValidateAccount}\n                                                  contractMethodSendWrapper={contractMethodSendWrapper}\n                                                  setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                                />\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <>\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          theme={theme}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil transactions={transactions} />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bell\":\"Notifications_bell__5m9tk\",\"active\":\"Notifications_active__2Mwzv\",\"ring\":\"Notifications_ring__1ir3w\",\"counter\":\"Notifications_counter__3EbuS\",\"list\":\"Notifications_list__2pkAk\",\"notification\":\"Notifications_notification__TMlFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bulletCard\":\"HowItWorks_bulletCard__2Ym_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainViewport\":\"Landing_mainViewport__foI3b\",\"headerContainer\":\"Landing_headerContainer__TvHkH\",\"bgContainer\":\"Landing_bgContainer__2WN2x\",\"button\":\"Landing_button__1Dxq1\",\"graySection\":\"Landing_graySection__2p8Tj\",\"whiteSection\":\"Landing_whiteSection__3bI3Y\",\"howItWork\":\"Landing_howItWork__1ukLM\",\"skewBg\":\"Landing_skewBg__gqJRL\",\"bgHeart\":\"Landing_bgHeart__NA46m\",\"platformLogo\":\"Landing_platformLogo__1hJaf\",\"bulletCard\":\"Landing_bulletCard__1JBcJ\",\"bulletCardFirst\":\"Landing_bulletCardFirst__HI7ri\",\"bulletCardActive\":\"Landing_bulletCardActive__AVHnI\",\"bulletPoint\":\"Landing_bulletPoint__uVUzZ\",\"bulletRight\":\"Landing_bulletRight__3vjg5\",\"bulletTop\":\"Landing_bulletTop__2qDPm\",\"bulletLeft\":\"Landing_bulletLeft__MYQV4\",\"bulletBottom\":\"Landing_bulletBottom__1vQq-\",\"bulletBottomLeft\":\"Landing_bulletBottomLeft__1bIB1\",\"bulletBottomBottom\":\"Landing_bulletBottomBottom__mqq0k\",\"bulletMobile\":\"Landing_bulletMobile__1dlqp\",\"carouselItem\":\"Landing_carouselItem__2leMl\",\"pos1\":\"Landing_pos1__tMo3K\",\"carouselItemMobile\":\"Landing_carouselItemMobile__2GqCc\",\"pos2\":\"Landing_pos2__2HmVh\",\"pos3\":\"Landing_pos3__28UmQ\",\"bentTube\":\"Landing_bentTube__2dNhi\",\"bounceArrow\":\"Landing_bounceArrow__3SKSY\",\"bounce\":\"Landing_bounce__z5RHk\",\"rebalanceCircle\":\"Landing_rebalanceCircle__2UwcI\",\"spin\":\"Landing_spin__1_Jg0\",\"carouselDesc\":\"Landing_carouselDesc__351uo\",\"selected\":\"Landing_selected__190kp\",\"carouselNav\":\"Landing_carouselNav__3oCdi\",\"footer\":\"Landing_footer__1wRkb\",\"socialIcon\":\"Landing_socialIcon__1nHuK\",\"gradientBackground\":\"Landing_gradientBackground__2DtpV\",\"bentTubeLeft\":\"Landing_bentTubeLeft__3844Y\",\"bentTubeRight\":\"Landing_bentTubeRight__2akHv\",\"bentTubeActive\":\"Landing_bentTubeActive__3rtbt\",\"bg1\":\"Landing_bg1__23mxk\"};"],"sourceRoot":""}