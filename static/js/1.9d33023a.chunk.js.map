{"version":3,"sources":["StatsCard/StatsCard.js","TableCellHeader/TableCellHeader.js","TableRow/TableRow.js","TableHeader/TableHeader.js","TableCellHeader/TableCellHeader.module.scss","Governance/ProposalField/ProposalField.js","Governance/ProposalListFilters/ProposalListFilters.js","Governance/ProposalsList/ProposalsList.js","Governance/ProposalListFilters/ProposalListFilters.module.scss"],"names":["StatsCard","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","cardProps","p","minHeight","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","width","alignItems","flexDirection","justifyContent","titleMinHeight","h4","mb","fontWeight","fontSize","textAlign","color","lineHeight","title","value","toString","length","Object","assign","valueProps","children","label","mt","labelTooltip","placement","message","ml","name","size","Component","TableCellHeader","_this","ColTitle","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","style","whiteSpace","desc","cursor","onClick","e","openTooltipModal","className","styles","tooltip","isMobile","TableRow","FieldComponent","fieldComponent","isInteractive","handleClick","react__WEBPACK_IMPORTED_MODULE_6___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","px","py","id","cardId","rowProps","token","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","rowId","cols","map","colInfo","colIndex","visible","mobile","key","concat","parentProps","fields","fieldInfo","fieldIndex","height","overflow","colProps","parentId","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","module","exports","ProposalField","state","icon","output","proposal","fieldProps","maxWidth","textOverflow","flexProps","keys","forEach","formattedDate","strToMoment","timestamp","format","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","align","forVotes","BNify","div","againstVotes","totalVotes","plus","formatMoney","toFixed","support","delegate","toLowerCase","vote","votes","find","v","voter","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","number","ProposalListFilters","minWidth","maxHeight","isOpened","activeFilters","status","assets","actions","setFilter","filter","setState","objectSpread","defineProperty","applyFilters","toggle","arguments","undefined","toggleOpened","resetFilter","resetFilters","_this2","react_default","index_es","top","zIndex","position","DashboardCard","transition","borderTop","theme","colors","divider","filters","filterCategory","filterValues","flexBasis","flex","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","Text","mainColor","values","filterName","mr","textTransform","hoverColor","ProposalsList","page","loading","rowsPerPage","totalRows","totalPages","pending","active","canceled","defeated","succeeded","queued","expired","executed","processedRows","lastBlockNumber","processList","proposals","sort","b","Math","ceil","i","push","preventDefault","max","min","pageChanged","proposalsChanged","JSON","stringify","filtersEnabled","hasActiveFilters","hasRows","m","FlexLoader","loaderProps","textProps","text","pt","Governance_ProposalListFilters_ProposalListFilters","bind","index","proposalId","goToSection","prevPage","nextPage","h3","fontFamily"],"mappings":"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","file":"static/js/1.9d33023a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={ fieldInfo.style ? fieldInfo.style : {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ProposalField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const proposal = Object.assign({},this.props.proposal);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n\n    switch (fieldInfo.name){\n      case 'date':\n        const formattedDate = this.functionsUtil.strToMoment(proposal.timestamp*1000).format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        const state = fieldInfo.state ? fieldInfo.state : proposal.state;\n        switch (state) {\n          case 'Pending':\n            icon = \"HourglassEmpty\";\n            color = '#a5a5a5';\n          break;\n          case 'Active':\n            icon = \"Adjust\";\n            color = '#a5a5a5';\n          break;\n          case 'Canceled':\n            icon = \"Cancel\";\n            color = '#fa0000';\n          break;\n          case 'Defeated':\n            icon = \"Block\";\n            color = '#fa0000';\n          break;\n          case 'Succeeded':\n            icon = \"Done\";\n            color = '#00b84a';\n          break;\n          case 'Queued':\n            icon = \"Timelapse\";\n            color = '#ff9900';\n          break;\n          case 'Expired':\n            icon = \"ErrorOutline\";\n            color = '#a5a5a5';\n          break;\n          case 'Executed':\n            icon = \"CheckCircle\";\n            color = '#00b84a';\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ fieldProps.size ? fieldProps.size : (this.props.isMobile ? '1em' : '1.8em') }\n            />\n          </Flex>\n        );\n      break;\n      case 'id':\n        output = (\n          <Text {...fieldProps}>{proposal.id}</Text>\n        );\n      break;\n      case 'title':\n        output = (\n          <Text {...fieldProps}>{proposal.title}</Text>\n        );\n      break;\n      case 'votes':\n        const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n        const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n        const totalVotes = forVotes.plus(againstVotes);\n        output = (\n          <Text {...fieldProps}>{this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}</Text>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{proposal.state}</Text>\n        );\n      break;\n      case 'support':\n        let support = null;\n        if (this.props.delegate){\n          const delegate = this.props.delegate.delegate.toLowerCase();\n          const vote = proposal.votes.find( v => (v.voter.toLowerCase() === delegate) );\n          if (vote){\n            support = vote.support;\n          }\n        }\n        output = (\n          <Text {...fieldProps}>{ support === null ? 'NONE' : (support ? 'FOR' : 'AGAINST') }</Text>\n        );\n      break;\n      case 'forVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.forVotes} />\n        );\n      break;\n      case 'againstVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.againstVotes} />\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default ProposalField;\n","import React, { Component } from 'react';\nimport styles from './ProposalListFilters.module.scss';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\nimport TableCellHeader from '../../TableCellHeader/TableCellHeader';\n\nclass ProposalListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalListFilters;","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ProposalField from '../ProposalField/ProposalField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport ProposalListFilters from '../ProposalListFilters/ProposalListFilters';\n\nclass ProposalsList extends Component {\n\n  state = {\n    page:1,\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n    },\n    filters:{\n      status:{\n        pending:'Pending',\n        active:'Active',\n        canceled:'Canceled',\n        defeated:'Defeated',\n        succeeded:'Succeeded',\n        queued:'Queued',\n        expired:'Expired',\n        executed:'Executed'\n      },\n    },\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const proposalsChanged = JSON.stringify(prevProps.proposals) !== JSON.stringify(this.props.proposals);\n    if (pageChanged || proposalsChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.proposals){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    const proposals = Object.values(this.props.proposals)\n                        .filter(p => (\n                          (this.state.activeFilters.status === null || p.state.toLowerCase() === this.state.activeFilters.status.toLowerCase())\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalRows = proposals.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    proposals.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const filtersEnabled = typeof this.props.filtersEnabled === 'undefined' || this.props.filtersEnabled;\n    const hasActiveFilters = filtersEnabled && Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n    const hasRows = processedRows && processedRows.length>0;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Proposals...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'proposals-list-container'}\n              pt={[0, (!filtersEnabled || !hasRows ? 0 : hasActiveFilters ? '116px' : 5) ] }\n            >\n              {\n                hasRows ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    {\n                      filtersEnabled &&\n                        <ProposalListFilters\n                          {...this.props}\n                          filters={this.state.filters}\n                          activeFilters={this.state.activeFilters}\n                          resetFilters={this.resetFilters.bind(this)}\n                          applyFilters={this.applyFilters.bind(this)}\n                        />\n                    }\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'proposals-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (proposal,index) => {\n                          const proposalId = proposal.id;\n                          const handleClick = (e) => {\n                            return (proposalId ? this.props.goToSection(`proposals/${proposalId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={proposalId}\n                              proposal={proposal}\n                              handleClick={handleClick}\n                              key={`proposal-${proposalId}`}\n                              fieldComponent={ProposalField}\n                              rowId={`proposal-col-${proposalId}`}\n                              cardId={`proposal-card-${proposalId}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'proposals-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no proposals\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"ProposalListFilters_radioBtn__2_8YL\"};"],"sourceRoot":""}