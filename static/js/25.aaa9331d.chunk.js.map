{"version":3,"sources":["RoundIconButton/RoundIconButton.js","Breadcrumb/Breadcrumb.js","ConnectBox/ConnectBox.js","Governance/DelegateVote/DelegateVote.js","Governance/Delegate.js"],"names":["RoundIconButton","buttonProps","Object","assign","p","boxShadow","width","height","mainColor","borderRadius","disabled","this","props","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","handleClick","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","color","name","iconName","size","iconSize","Component","Breadcrumb","_this","showPathMobile","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","id","alignItems","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_8__","text","length","ml","fontSize","fontWeight","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","ConnectBox","functionsUtil","setProps","FunctionsUtil","loadUtils","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_11__","cardProps","mt","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","flexDirection","textAlign","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_9__","connectAndValidateAccount","DelegateVote","state","newDelegate","processing","txHash","loading","governanceUtil","checkNewDelegate","checkAddress","toLowerCase","currentDelegate","changeDelegate","target","value","setState","GovernanceUtil","address","_this2","setDelegate","tx","error","eventData","eventCategory","eventAction","eventLabel","status","getTransactionError","sendGoogleAnalyticsEvent","loadUserData","transactionHash","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_this3","isUndelegated","parseInt","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_15__","justifyContent","account","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_13__","mb","py","px","position","isInteractive","canClose","top","zIndex","right","icononly","icon","closeFunc","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_14__","web3","waitText","hash","endMessage","cancelTransaction","bind","min","type","required","placeholder","onChange","border","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_11__","mx","redeem","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_10__","flexProps","minHeight","loaderProps","textProps","_ConnectBox_ConnectBox__WEBPACK_IMPORTED_MODULE_9__","Delegate","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","_Breadcrumb_Breadcrumb__WEBPACK_IMPORTED_MODULE_8__","_Title_Title__WEBPACK_IMPORTED_MODULE_5__","_DelegateVote_DelegateVote__WEBPACK_IMPORTED_MODULE_9__"],"mappings":"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","file":"static/js/25.aaa9331d.chunk.js","sourcesContent":["import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      boxShadow:1,\n      width:'40px',\n      height:'40px',\n      mainColor:'white',\n      borderRadius:'50%',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React, { Component } from 'react';\nimport ConnectBox from '../../ConnectBox/ConnectBox';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Input, Button, Box, EthAddress } from \"rimble-ui\";\n\nclass DelegateVote extends Component {\n\n  state = {\n    newDelegate:'',\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  checkNewDelegate = () => {\n    return this.functionsUtil.checkAddress(this.state.newDelegate) && this.state.newDelegate.toLowerCase() !== this.props.currentDelegate.toLowerCase();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  setDelegate(address){\n    const addressOk = this.functionsUtil.checkAddress(address);\n\n    if (addressOk){\n\n      const callback = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventCategory: 'Delegate',\n          eventAction: address,\n          eventLabel: tx.status\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        if (typeof this.props.loadUserData === 'function' && tx.status === 'success'){\n          this.props.loadUserData();\n        }\n\n        this.setState({\n          processing: {\n            txHash:null,\n            loading:false\n          }\n        });\n      };\n\n      const callbackReceipt = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.governanceUtil.setDelegate(address,callback,callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n    return null;\n  }\n\n  changeDelegate = (e) => {\n    const newDelegate = e.target.value;\n    this.setState({\n      newDelegate\n    });\n  }\n\n  render() {\n    const isUndelegated = parseInt(this.props.currentDelegate) === 0;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n        !this.props.account ? (\n          <Flex\n            width={[1,0.36]}\n            alignItems={'stretch'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <ConnectBox\n              {...this.props}\n            />\n          </Flex>\n        ) : this.props.currentDelegate ? (\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:[1,0.5],\n              position:'relative',\n            }}\n            isInteractive={false}\n          >\n            {\n              this.props.canClose &&\n                <Box\n                  top={'0'}\n                  zIndex={1}\n                  right={'0'}\n                  position={'absolute'}\n                >\n                  <Button.Text\n                    icononly\n                    icon={'Close'}\n                    size={'2.5em'}\n                    mainColor={'statValue'}\n                    onClick={this.props.closeFunc}\n                  />\n                </Box>\n            }\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                /*\n                <Text\n                  mb={2}\n                  fontWeight={3}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  You have {this.functionsUtil.fixTokenDecimals(this.props.balance,18).toFixed(4)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} available.\n                </Text>\n                */\n              }\n              <Text\n                mb={1}\n                fontWeight={3}\n                color={'statValue'}\n                textAlign={'center'}\n              >\n                Current Delegate:\n              </Text>\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                justifyContent={isUndelegated ? 'center' : 'stretch'}\n              >\n                {\n                  isUndelegated ? (\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'dark-gray'}\n                      textAlign={'center'}\n                    >\n                      Undelegated\n                    </Text>\n                  ) : (\n                    <EthAddress\n                      width={1}\n                      address={this.props.currentDelegate}\n                    />\n                  )\n                }\n              </Flex>\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Delegate estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing delegate request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mb={1}\n                      fontWeight={3}\n                      color={'statValue'}\n                      textAlign={'center'}\n                    >\n                      Set New Delegate:\n                    </Text>\n                    <Input\n                      min={0}\n                      type={'text'}\n                      width={'100%'}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      textAlign={'center'}\n                      boxShadow={'none !important'}\n                      value={this.state.newDelegate}\n                      placeholder={`Insert delegate address`}\n                      onChange={this.changeDelegate.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                    />\n                    <Flex\n                      mt={3}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          disabled:!this.checkNewDelegate()\n                        }}\n                        handleClick={ e => this.setDelegate(this.state.newDelegate) }\n                      >\n                        Delegate\n                      </RoundButton>\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          mainColor:this.props.theme.colors.redeem,\n                          disabled:this.props.currentDelegate.toLowerCase() === this.props.account.toLowerCase()\n                        }}\n                        handleClick={ e => this.setDelegate(this.props.account) }\n                      >\n                        Self-delegate\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        ) : (\n          <FlexLoader\n            flexProps={{\n              minHeight:'50vh',\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Loading Delegate...'}\n          />\n        )\n       } \n      </Flex>\n    );\n  }\n}\n\nexport default DelegateVote;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport DelegateVote from './DelegateVote/DelegateVote';\n\nclass Delegate extends Component {\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Breadcrumb\n            {...this.props}\n            text={'Governance'}\n            path={['Delegate votes']}\n            isMobile={this.props.isMobile}\n            handleClick={ e => this.props.goToSection('') }\n          />\n        </Flex>\n        <Box\n          width={1}\n        >\n          <Title\n            mb={[3,4]}\n          >\n            Delegate Votes\n          </Title>\n          <Flex\n            px={[0,3]}\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'delegate-container'}\n          >\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Delegate;\n"],"sourceRoot":""}